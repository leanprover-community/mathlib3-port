/-
Copyright (c) 2022 Oliver Nash. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Oliver Nash

! This file was ported from Lean 3 source module topology.instances.add_circle
! leanprover-community/mathlib commit 213b0cff7bc5ab6696ee07cceec80829ce42efec
! Please do not edit these lines, except to modify the commit id
! if you have ported upstream changes.
-/
import Mathbin.Data.Nat.Totient
import Mathbin.Algebra.Ring.AddAut
import Mathbin.GroupTheory.Divisible
import Mathbin.GroupTheory.OrderOfElement
import Mathbin.Algebra.Order.Floor
import Mathbin.Algebra.Order.ToIntervalMod
import Mathbin.Topology.Instances.Real

/-!
# The additive circle

We define the additive circle `add_circle p` as the quotient `𝕜 ⧸ (ℤ ∙ p)` for some period `p : 𝕜`.

See also `circle` and `real.angle`.  For the normed group structure on `add_circle`, see
`add_circle.normed_add_comm_group` in a later file.

## Main definitions and results:

 * `add_circle`: the additive circle `𝕜 ⧸ (ℤ ∙ p)` for some period `p : 𝕜`
 * `unit_add_circle`: the special case `ℝ ⧸ ℤ`
 * `add_circle.equiv_add_circle`: the rescaling equivalence `add_circle p ≃+ add_circle q`
 * `add_circle.equiv_Ico`: the natural equivalence `add_circle p ≃ Ico a (a + p)`
 * `add_circle.add_order_of_div_of_gcd_eq_one`: rational points have finite order
 * `add_circle.exists_gcd_eq_one_of_is_of_fin_add_order`: finite-order points are rational
 * `add_circle.homeo_Icc_quot`: the natural topological equivalence between `add_circle p` and
   `Icc a (a + p)` with its endpoints identified.
 * `add_circle.lift_Ico_continuous`: if `f : ℝ → B` is continuous, and `f a = f (a + p)` for
   some `a`, then there is a continuous function `add_circle p → B` which agrees with `f` on
   `Icc a (a + p)`.

## Implementation notes:

Although the most important case is `𝕜 = ℝ` we wish to support other types of scalars, such as
the rational circle `add_circle (1 : ℚ)`, and so we set things up more generally.

## TODO

 * Link with periodicity
 * Lie group structure
 * Exponential equivalence to `circle`

-/


noncomputable section

open AddCommGroup Set Function AddSubgroup TopologicalSpace

open Topology

variable {𝕜 B : Type _}

section Continuity

variable [LinearOrderedAddCommGroup 𝕜] [Archimedean 𝕜] [TopologicalSpace 𝕜] [OrderTopology 𝕜]
  {p : 𝕜} (hp : 0 < p) (a x : 𝕜)

/- warning: continuous_right_to_Ico_mod -> continuous_right_toIcoMod is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] [_inst_3 : TopologicalSpace.{u1} 𝕜] [_inst_4 : OrderTopology.{u1} 𝕜 _inst_3 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} (hp : LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) (a : 𝕜) (x : 𝕜), ContinuousWithinAt.{u1, u1} 𝕜 𝕜 _inst_3 _inst_3 (toIcoMod.{u1} 𝕜 _inst_1 _inst_2 p hp a) (Set.Ici.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) x) x
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))] [_inst_3 : TopologicalSpace.{u1} 𝕜] [_inst_4 : OrderTopology.{u1} 𝕜 _inst_3 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} (hp : LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) (a : 𝕜) (x : 𝕜), ContinuousWithinAt.{u1, u1} 𝕜 𝕜 _inst_3 _inst_3 (toIcoMod.{u1} 𝕜 _inst_1 _inst_2 p hp a) (Set.Ici.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) x) x
Case conversion may be inaccurate. Consider using '#align continuous_right_to_Ico_mod continuous_right_toIcoModₓ'. -/
theorem continuous_right_toIcoMod : ContinuousWithinAt (toIcoMod hp a) (Ici x) x :=
  by
  intro s h
  rw [Filter.mem_map, mem_nhdsWithin_iff_exists_mem_nhds_inter]
  haveI : Nontrivial 𝕜 := ⟨⟨0, p, hp.ne⟩⟩
  simp_rw [mem_nhds_iff_exists_Ioo_subset] at h⊢
  obtain ⟨l, u, hxI, hIs⟩ := h
  let d := toIcoDiv hp a x • p
  have hd := toIcoMod_mem_Ico hp a x
  simp_rw [subset_def, mem_inter_iff]
  refine' ⟨_, ⟨l + d, min (a + p) u + d, _, fun x => id⟩, fun y => _⟩ <;>
    simp_rw [← sub_mem_Ioo_iff_left, mem_Ioo, lt_min_iff]
  · exact ⟨hxI.1, hd.2, hxI.2⟩
  · rintro ⟨h, h'⟩
    apply hIs
    rw [← toIcoMod_sub_zsmul, (toIcoMod_eq_self _).2]
    exacts[⟨h.1, h.2.2⟩, ⟨hd.1.trans (sub_le_sub_right h' _), h.2.1⟩]
#align continuous_right_to_Ico_mod continuous_right_toIcoMod

/- warning: continuous_left_to_Ioc_mod -> continuous_left_toIocMod is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] [_inst_3 : TopologicalSpace.{u1} 𝕜] [_inst_4 : OrderTopology.{u1} 𝕜 _inst_3 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} (hp : LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) (a : 𝕜) (x : 𝕜), ContinuousWithinAt.{u1, u1} 𝕜 𝕜 _inst_3 _inst_3 (toIocMod.{u1} 𝕜 _inst_1 _inst_2 p hp a) (Set.Iic.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) x) x
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))] [_inst_3 : TopologicalSpace.{u1} 𝕜] [_inst_4 : OrderTopology.{u1} 𝕜 _inst_3 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} (hp : LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) (a : 𝕜) (x : 𝕜), ContinuousWithinAt.{u1, u1} 𝕜 𝕜 _inst_3 _inst_3 (toIocMod.{u1} 𝕜 _inst_1 _inst_2 p hp a) (Set.Iic.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) x) x
Case conversion may be inaccurate. Consider using '#align continuous_left_to_Ioc_mod continuous_left_toIocModₓ'. -/
theorem continuous_left_toIocMod : ContinuousWithinAt (toIocMod hp a) (Iic x) x :=
  by
  rw [(funext fun y => Eq.trans (by rw [neg_neg]) <| toIocMod_neg _ _ _ :
      toIocMod hp a = (fun x => p - x) ∘ toIcoMod hp (-a) ∘ Neg.neg)]
  exact
    (continuous_sub_left _).ContinuousAt.comp_continuousWithinAt <|
      (continuous_right_toIcoMod _ _ _).comp continuous_neg.continuous_within_at fun y => neg_le_neg
#align continuous_left_to_Ioc_mod continuous_left_toIocMod

variable {x} (hx : (x : 𝕜 ⧸ zmultiples p) ≠ a)

/- warning: to_Ico_mod_eventually_eq_to_Ioc_mod -> toIcoMod_eventuallyEq_toIocMod is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] [_inst_3 : TopologicalSpace.{u1} 𝕜] [_inst_4 : OrderTopology.{u1} 𝕜 _inst_3 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} (hp : LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) (a : 𝕜) {x : 𝕜}, (Ne.{succ u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (quotientAddGroup.HasQuotient.Quotient.hasCoeT.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)))) x) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (quotientAddGroup.HasQuotient.Quotient.hasCoeT.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)))) a)) -> (Filter.EventuallyEq.{u1, u1} 𝕜 𝕜 (nhds.{u1} 𝕜 _inst_3 x) (toIcoMod.{u1} 𝕜 _inst_1 _inst_2 p hp a) (toIocMod.{u1} 𝕜 _inst_1 _inst_2 p hp a))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))] [_inst_3 : TopologicalSpace.{u1} 𝕜] [_inst_4 : OrderTopology.{u1} 𝕜 _inst_3 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} (hp : LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) (a : 𝕜) {x : 𝕜}, (Ne.{succ u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p) x) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p) a)) -> (Filter.EventuallyEq.{u1, u1} 𝕜 𝕜 (nhds.{u1} 𝕜 _inst_3 x) (toIcoMod.{u1} 𝕜 _inst_1 _inst_2 p hp a) (toIocMod.{u1} 𝕜 _inst_1 _inst_2 p hp a))
Case conversion may be inaccurate. Consider using '#align to_Ico_mod_eventually_eq_to_Ioc_mod toIcoMod_eventuallyEq_toIocModₓ'. -/
theorem toIcoMod_eventuallyEq_toIocMod : toIcoMod hp a =ᶠ[𝓝 x] toIocMod hp a :=
  IsOpen.mem_nhds
      (by
        rw [Ico_eq_locus_Ioc_eq_iUnion_Ioo]
        exact isOpen_iUnion fun i => isOpen_Ioo) <|
    (not_modEq_iff_toIcoMod_eq_toIocMod hp).1 <| not_modEq_iff_ne_mod_zmultiples.2 hx
#align to_Ico_mod_eventually_eq_to_Ioc_mod toIcoMod_eventuallyEq_toIocMod

/- warning: continuous_at_to_Ico_mod -> continuousAt_toIcoMod is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] [_inst_3 : TopologicalSpace.{u1} 𝕜] [_inst_4 : OrderTopology.{u1} 𝕜 _inst_3 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} (hp : LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) (a : 𝕜) {x : 𝕜}, (Ne.{succ u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (quotientAddGroup.HasQuotient.Quotient.hasCoeT.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)))) x) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (quotientAddGroup.HasQuotient.Quotient.hasCoeT.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)))) a)) -> (ContinuousAt.{u1, u1} 𝕜 𝕜 _inst_3 _inst_3 (toIcoMod.{u1} 𝕜 _inst_1 _inst_2 p hp a) x)
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))] [_inst_3 : TopologicalSpace.{u1} 𝕜] [_inst_4 : OrderTopology.{u1} 𝕜 _inst_3 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} (hp : LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) (a : 𝕜) {x : 𝕜}, (Ne.{succ u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p) x) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p) a)) -> (ContinuousAt.{u1, u1} 𝕜 𝕜 _inst_3 _inst_3 (toIcoMod.{u1} 𝕜 _inst_1 _inst_2 p hp a) x)
Case conversion may be inaccurate. Consider using '#align continuous_at_to_Ico_mod continuousAt_toIcoModₓ'. -/
theorem continuousAt_toIcoMod : ContinuousAt (toIcoMod hp a) x :=
  let h := toIcoMod_eventuallyEq_toIocMod hp a hx
  continuousAt_iff_continuous_left_right.2 <|
    ⟨(continuous_left_toIocMod hp a x).congr_of_eventuallyEq (h.filter_mono nhdsWithin_le_nhds)
        h.eq_of_nhds,
      continuous_right_toIcoMod hp a x⟩
#align continuous_at_to_Ico_mod continuousAt_toIcoMod

/- warning: continuous_at_to_Ioc_mod -> continuousAt_toIocMod is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] [_inst_3 : TopologicalSpace.{u1} 𝕜] [_inst_4 : OrderTopology.{u1} 𝕜 _inst_3 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} (hp : LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) (a : 𝕜) {x : 𝕜}, (Ne.{succ u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (quotientAddGroup.HasQuotient.Quotient.hasCoeT.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)))) x) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (quotientAddGroup.HasQuotient.Quotient.hasCoeT.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)))) a)) -> (ContinuousAt.{u1, u1} 𝕜 𝕜 _inst_3 _inst_3 (toIocMod.{u1} 𝕜 _inst_1 _inst_2 p hp a) x)
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))] [_inst_3 : TopologicalSpace.{u1} 𝕜] [_inst_4 : OrderTopology.{u1} 𝕜 _inst_3 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} (hp : LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) (a : 𝕜) {x : 𝕜}, (Ne.{succ u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p) x) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p) a)) -> (ContinuousAt.{u1, u1} 𝕜 𝕜 _inst_3 _inst_3 (toIocMod.{u1} 𝕜 _inst_1 _inst_2 p hp a) x)
Case conversion may be inaccurate. Consider using '#align continuous_at_to_Ioc_mod continuousAt_toIocModₓ'. -/
theorem continuousAt_toIocMod : ContinuousAt (toIocMod hp a) x :=
  let h := toIcoMod_eventuallyEq_toIocMod hp a hx
  continuousAt_iff_continuous_left_right.2 <|
    ⟨continuous_left_toIocMod hp a x,
      (continuous_right_toIcoMod hp a x).congr_of_eventuallyEq
        (h.symm.filter_mono nhdsWithin_le_nhds) h.symm.eq_of_nhds⟩
#align continuous_at_to_Ioc_mod continuousAt_toIocMod

end Continuity

/- ./././Mathport/Syntax/Translate/Command.lean:42:9: unsupported derive handler has_coe_t[has_coe_t] 𝕜 -/
#print AddCircle /-
/-- The "additive circle": `𝕜 ⧸ (ℤ ∙ p)`. See also `circle` and `real.angle`. -/
@[nolint unused_arguments]
def AddCircle [LinearOrderedAddCommGroup 𝕜] [TopologicalSpace 𝕜] [OrderTopology 𝕜] (p : 𝕜) :=
  𝕜 ⧸ zmultiples p deriving AddCommGroup, TopologicalSpace, TopologicalAddGroup, Inhabited,
  «./././Mathport/Syntax/Translate/Command.lean:42:9: unsupported derive handler has_coe_t[has_coe_t] 𝕜»
#align add_circle AddCircle
-/

namespace AddCircle

section LinearOrderedAddCommGroup

variable [LinearOrderedAddCommGroup 𝕜] [TopologicalSpace 𝕜] [OrderTopology 𝕜] (p : 𝕜)

/- warning: add_circle.coe_nsmul -> AddCircle.coe_nsmul is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) {n : Nat} {x : 𝕜}, Eq.{succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) (SMul.smul.{0, u1} Nat 𝕜 (AddMonoid.SMul.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) n x)) (SMul.smul.{0, u1} Nat (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddMonoid.SMul.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))))) n ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) x))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] (_inst_2 : 𝕜) {_inst_3 : Nat} {p : 𝕜}, Eq.{succ u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) (HSMul.hSMul.{0, u1, u1} Nat 𝕜 𝕜 (instHSMul.{0, u1} Nat 𝕜 (AddMonoid.SMul.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))) _inst_3 p)) (HSMul.hSMul.{0, u1, u1} Nat (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (instHSMul.{0, u1} Nat (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (AddMonoid.SMul.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) (AddSubgroup.normal_of_comm.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2))))))) _inst_3 (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) p))
Case conversion may be inaccurate. Consider using '#align add_circle.coe_nsmul AddCircle.coe_nsmulₓ'. -/
theorem coe_nsmul {n : ℕ} {x : 𝕜} : (↑(n • x) : AddCircle p) = n • (x : AddCircle p) :=
  rfl
#align add_circle.coe_nsmul AddCircle.coe_nsmul

/- warning: add_circle.coe_zsmul -> AddCircle.coe_zsmul is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) {n : Int} {x : 𝕜}, Eq.{succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) (SMul.smul.{0, u1} Int 𝕜 (SubNegMonoid.SMulInt.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))) n x)) (SMul.smul.{0, u1} Int (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (SubNegMonoid.SMulInt.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)))) n ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) x))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] (_inst_2 : 𝕜) {_inst_3 : Int} {p : 𝕜}, Eq.{succ u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) (HSMul.hSMul.{0, u1, u1} Int 𝕜 𝕜 (instHSMul.{0, u1} Int 𝕜 (SubNegMonoid.SMulInt.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) _inst_3 p)) (HSMul.hSMul.{0, u1, u1} Int (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (instHSMul.{0, u1} Int (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (SubNegMonoid.SMulInt.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) (AddSubgroup.normal_of_comm.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)))))) _inst_3 (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) p))
Case conversion may be inaccurate. Consider using '#align add_circle.coe_zsmul AddCircle.coe_zsmulₓ'. -/
theorem coe_zsmul {n : ℤ} {x : 𝕜} : (↑(n • x) : AddCircle p) = n • (x : AddCircle p) :=
  rfl
#align add_circle.coe_zsmul AddCircle.coe_zsmul

/- warning: add_circle.coe_add -> AddCircle.coe_add is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) (x : 𝕜) (y : 𝕜), Eq.{succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) x y)) (HAdd.hAdd.{u1, u1, u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (instHAdd.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddZeroClass.toHasAdd.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))))))) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) x) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) y))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] (_inst_2 : 𝕜) (_inst_3 : 𝕜) (p : 𝕜), Eq.{succ u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) _inst_3 p)) (HAdd.hAdd.{u1, u1, u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (instHAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (AddZeroClass.toAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) (AddSubgroup.normal_of_comm.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)))))))) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) _inst_3) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) p))
Case conversion may be inaccurate. Consider using '#align add_circle.coe_add AddCircle.coe_addₓ'. -/
theorem coe_add (x y : 𝕜) : (↑(x + y) : AddCircle p) = (x : AddCircle p) + (y : AddCircle p) :=
  rfl
#align add_circle.coe_add AddCircle.coe_add

/- warning: add_circle.coe_sub -> AddCircle.coe_sub is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) (x : 𝕜) (y : 𝕜), Eq.{succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) (HSub.hSub.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHSub.{u1} 𝕜 (SubNegMonoid.toHasSub.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) x y)) (HSub.hSub.{u1, u1, u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (instHSub.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (SubNegMonoid.toHasSub.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))))) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) x) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) y))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] (_inst_2 : 𝕜) (_inst_3 : 𝕜) (p : 𝕜), Eq.{succ u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) (HSub.hSub.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHSub.{u1} 𝕜 (SubNegMonoid.toSub.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) _inst_3 p)) (HSub.hSub.{u1, u1, u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (instHSub.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (SubNegMonoid.toSub.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) (AddSubgroup.normal_of_comm.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)))))) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) _inst_3) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) p))
Case conversion may be inaccurate. Consider using '#align add_circle.coe_sub AddCircle.coe_subₓ'. -/
theorem coe_sub (x y : 𝕜) : (↑(x - y) : AddCircle p) = (x : AddCircle p) - (y : AddCircle p) :=
  rfl
#align add_circle.coe_sub AddCircle.coe_sub

/- warning: add_circle.coe_neg -> AddCircle.coe_neg is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) {x : 𝕜}, Eq.{succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) (Neg.neg.{u1} 𝕜 (SubNegMonoid.toHasNeg.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))) x)) (Neg.neg.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (SubNegMonoid.toHasNeg.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)))) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) x))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] (_inst_2 : 𝕜) {_inst_3 : 𝕜}, Eq.{succ u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) (Neg.neg.{u1} 𝕜 (NegZeroClass.toNeg.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))) _inst_3)) (Neg.neg.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (NegZeroClass.toNeg.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (SubNegZeroMonoid.toNegZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (SubtractionMonoid.toSubNegZeroMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (SubtractionCommMonoid.toSubtractionMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (AddCommGroup.toDivisionAddCommMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.Quotient.addCommGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2))))))) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) _inst_3))
Case conversion may be inaccurate. Consider using '#align add_circle.coe_neg AddCircle.coe_negₓ'. -/
theorem coe_neg {x : 𝕜} : (↑(-x) : AddCircle p) = -(x : AddCircle p) :=
  rfl
#align add_circle.coe_neg AddCircle.coe_neg

/- warning: add_circle.coe_eq_zero_iff -> AddCircle.coe_eq_zero_iff is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) {x : 𝕜}, Iff (Eq.{succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) x) (OfNat.ofNat.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) 0 (OfNat.mk.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) 0 (Zero.zero.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddZeroClass.toHasZero.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)))))))))) (Exists.{1} Int (fun (n : Int) => Eq.{succ u1} 𝕜 (SMul.smul.{0, u1} Int 𝕜 (SubNegMonoid.SMulInt.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))) n p) x))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] (_inst_2 : 𝕜) {_inst_3 : 𝕜}, Iff (Eq.{succ u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) _inst_3) (OfNat.ofNat.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) 0 (Zero.toOfNat0.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (NegZeroClass.toZero.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (SubNegZeroMonoid.toNegZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (SubtractionMonoid.toSubNegZeroMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (SubtractionCommMonoid.toSubtractionMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (AddCommGroup.toDivisionAddCommMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.Quotient.addCommGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)))))))))) (Exists.{1} Int (fun (n : Int) => Eq.{succ u1} 𝕜 (HSMul.hSMul.{0, u1, u1} Int 𝕜 𝕜 (instHSMul.{0, u1} Int 𝕜 (SubNegMonoid.SMulInt.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) n _inst_2) _inst_3))
Case conversion may be inaccurate. Consider using '#align add_circle.coe_eq_zero_iff AddCircle.coe_eq_zero_iffₓ'. -/
theorem coe_eq_zero_iff {x : 𝕜} : (x : AddCircle p) = 0 ↔ ∃ n : ℤ, n • p = x := by
  simp [AddSubgroup.mem_zmultiples_iff]
#align add_circle.coe_eq_zero_iff AddCircle.coe_eq_zero_iff

/- warning: add_circle.coe_eq_zero_of_pos_iff -> AddCircle.coe_eq_zero_of_pos_iff is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜), (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) -> (forall {x : 𝕜}, (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) x) -> (Iff (Eq.{succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) x) (OfNat.ofNat.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) 0 (OfNat.mk.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) 0 (Zero.zero.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddZeroClass.toHasZero.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)))))))))) (Exists.{1} Nat (fun (n : Nat) => Eq.{succ u1} 𝕜 (SMul.smul.{0, u1} Nat 𝕜 (AddMonoid.SMul.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) n p) x))))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] (_inst_2 : 𝕜), (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) _inst_2) -> (forall {p : 𝕜}, (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) -> (Iff (Eq.{succ u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) p) (OfNat.ofNat.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) 0 (Zero.toOfNat0.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (NegZeroClass.toZero.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (SubNegZeroMonoid.toNegZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (SubtractionMonoid.toSubNegZeroMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (SubtractionCommMonoid.toSubtractionMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (AddCommGroup.toDivisionAddCommMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.Quotient.addCommGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)))))))))) (Exists.{1} Nat (fun (n : Nat) => Eq.{succ u1} 𝕜 (HSMul.hSMul.{0, u1, u1} Nat 𝕜 𝕜 (instHSMul.{0, u1} Nat 𝕜 (AddMonoid.SMul.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))) n _inst_2) p))))
Case conversion may be inaccurate. Consider using '#align add_circle.coe_eq_zero_of_pos_iff AddCircle.coe_eq_zero_of_pos_iffₓ'. -/
theorem coe_eq_zero_of_pos_iff (hp : 0 < p) {x : 𝕜} (hx : 0 < x) :
    (x : AddCircle p) = 0 ↔ ∃ n : ℕ, n • p = x :=
  by
  rw [coe_eq_zero_iff]
  constructor <;> rintro ⟨n, rfl⟩
  · replace hx : 0 < n
    · contrapose! hx
      simpa only [← neg_nonneg, ← zsmul_neg, zsmul_neg'] using zsmul_nonneg hp.le (neg_nonneg.2 hx)
    exact ⟨n.to_nat, by rw [← coe_nat_zsmul, Int.toNat_of_nonneg hx.le]⟩
  · exact ⟨(n : ℤ), by simp⟩
#align add_circle.coe_eq_zero_of_pos_iff AddCircle.coe_eq_zero_of_pos_iff

/- warning: add_circle.coe_period -> AddCircle.coe_period is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜), Eq.{succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) p) (OfNat.ofNat.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) 0 (OfNat.mk.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) 0 (Zero.zero.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddZeroClass.toHasZero.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)))))))))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] (_inst_2 : 𝕜), Eq.{succ u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) _inst_2) (OfNat.ofNat.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) 0 (Zero.toOfNat0.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (NegZeroClass.toZero.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (SubNegZeroMonoid.toNegZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (SubtractionMonoid.toSubNegZeroMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (SubtractionCommMonoid.toSubtractionMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (AddCommGroup.toDivisionAddCommMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.Quotient.addCommGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)))))))))
Case conversion may be inaccurate. Consider using '#align add_circle.coe_period AddCircle.coe_periodₓ'. -/
theorem coe_period : (p : AddCircle p) = 0 :=
  (QuotientAddGroup.eq_zero_iff p).2 <| mem_zmultiples p
#align add_circle.coe_period AddCircle.coe_period

/- warning: add_circle.coe_add_period -> AddCircle.coe_add_period is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) (x : 𝕜), Eq.{succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) x p)) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) x)
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] (_inst_2 : 𝕜) (_inst_3 : 𝕜), Eq.{succ u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) _inst_3 _inst_2)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2) _inst_3)
Case conversion may be inaccurate. Consider using '#align add_circle.coe_add_period AddCircle.coe_add_periodₓ'. -/
@[simp]
theorem coe_add_period (x : 𝕜) : ((x + p : 𝕜) : AddCircle p) = x := by
  rw [coe_add, ← eq_sub_iff_add_eq', sub_self, coe_period]
#align add_circle.coe_add_period AddCircle.coe_add_period

/- warning: add_circle.continuous_mk' -> AddCircle.continuous_mk' is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜), Continuous.{u1, u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) _inst_2 (QuotientAddGroup.Quotient.topologicalSpace.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2 (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (coeFn.{succ u1, succ u1} (AddMonoidHom.{u1, u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p) (AddSubgroup.normal_of_comm.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p))))))) (fun (_x : AddMonoidHom.{u1, u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p) (AddSubgroup.normal_of_comm.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p))))))) => 𝕜 -> (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p))) (AddMonoidHom.hasCoeToFun.{u1, u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p) (AddSubgroup.normal_of_comm.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p))))))) (QuotientAddGroup.mk'.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p) (AddSubgroup.normal_of_comm.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p))))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] (_inst_3 : 𝕜), Continuous.{u1, u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) _inst_2 (QuotientAddGroup.Quotient.topologicalSpace.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_2 (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (FunLike.coe.{succ u1, succ u1, succ u1} (AddMonoidHom.{u1, u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3) (AddSubgroup.normal_of_comm.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3))))))) 𝕜 (fun (a : 𝕜) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : 𝕜) => HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) a) (AddHomClass.toFunLike.{u1, u1, u1} (AddMonoidHom.{u1, u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3) (AddSubgroup.normal_of_comm.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3))))))) 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))) (AddZeroClass.toAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3) (AddSubgroup.normal_of_comm.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3))))))) (AddMonoidHomClass.toAddHomClass.{u1, u1, u1} (AddMonoidHom.{u1, u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3) (AddSubgroup.normal_of_comm.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3))))))) 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3) (AddSubgroup.normal_of_comm.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)))))) (AddMonoidHom.addMonoidHomClass.{u1, u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3) (AddSubgroup.normal_of_comm.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3))))))))) (QuotientAddGroup.mk'.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3) (AddSubgroup.normal_of_comm.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3))))
Case conversion may be inaccurate. Consider using '#align add_circle.continuous_mk' AddCircle.continuous_mk'ₓ'. -/
@[continuity, nolint unused_arguments]
protected theorem continuous_mk' :
    Continuous (QuotientAddGroup.mk' (zmultiples p) : 𝕜 → AddCircle p) :=
  continuous_coinduced_rng
#align add_circle.continuous_mk' AddCircle.continuous_mk'

variable [hp : Fact (0 < p)]

include hp

variable (a : 𝕜) [Archimedean 𝕜]

instance : CircularOrder (AddCircle p) :=
  QuotientAddGroup.circularOrder

/- warning: add_circle.equiv_Ico -> AddCircle.equivIco is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))], Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))], Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Set.Elem.{u1} 𝕜 (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)))
Case conversion may be inaccurate. Consider using '#align add_circle.equiv_Ico AddCircle.equivIcoₓ'. -/
/-- The equivalence between `add_circle p` and the half-open interval `[a, a + p)`, whose inverse
is the natural quotient map. -/
def equivIco : AddCircle p ≃ Ico a (a + p) :=
  QuotientAddGroup.equivIcoMod hp.out a
#align add_circle.equiv_Ico AddCircle.equivIco

/- warning: add_circle.equiv_Ioc -> AddCircle.equivIoc is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))], Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))], Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Set.Elem.{u1} 𝕜 (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)))
Case conversion may be inaccurate. Consider using '#align add_circle.equiv_Ioc AddCircle.equivIocₓ'. -/
/-- The equivalence between `add_circle p` and the half-open interval `(a, a + p]`, whose inverse
is the natural quotient map. -/
def equivIoc : AddCircle p ≃ Ioc a (a + p) :=
  QuotientAddGroup.equivIocMod hp.out a
#align add_circle.equiv_Ioc AddCircle.equivIoc

/- warning: add_circle.lift_Ico -> AddCircle.liftIco is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} {B : Type.{u2}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)], 𝕜 -> (forall [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))], (𝕜 -> B) -> (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) -> B)
but is expected to have type
  forall {𝕜 : Type.{u1}} {B : Type.{u2}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)], 𝕜 -> (forall [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))], (𝕜 -> B) -> (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) -> B)
Case conversion may be inaccurate. Consider using '#align add_circle.lift_Ico AddCircle.liftIcoₓ'. -/
/-- Given a function on `𝕜`, return the unique function on `add_circle p` agreeing with `f` on
`[a, a + p)`. -/
def liftIco (f : 𝕜 → B) : AddCircle p → B :=
  restrict _ f ∘ AddCircle.equivIco p a
#align add_circle.lift_Ico AddCircle.liftIco

/- warning: add_circle.lift_Ioc -> AddCircle.liftIoc is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} {B : Type.{u2}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)], 𝕜 -> (forall [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))], (𝕜 -> B) -> (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) -> B)
but is expected to have type
  forall {𝕜 : Type.{u1}} {B : Type.{u2}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)], 𝕜 -> (forall [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))], (𝕜 -> B) -> (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) -> B)
Case conversion may be inaccurate. Consider using '#align add_circle.lift_Ioc AddCircle.liftIocₓ'. -/
/-- Given a function on `𝕜`, return the unique function on `add_circle p` agreeing with `f` on
`(a, a + p]`. -/
def liftIoc (f : 𝕜 → B) : AddCircle p → B :=
  restrict _ f ∘ AddCircle.equivIoc p a
#align add_circle.lift_Ioc AddCircle.liftIoc

variable {p a}

/- warning: add_circle.coe_eq_coe_iff_of_mem_Ico -> AddCircle.coe_eq_coe_iff_of_mem_Ico is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] {a : 𝕜} [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {x : 𝕜} {y : 𝕜}, (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) -> (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) y (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) -> (Iff (Eq.{succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) x) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) y)) (Eq.{succ u1} 𝕜 x y))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] {a : 𝕜} [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))] {x : 𝕜} {y : 𝕜}, (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) -> (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) y (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) -> (Iff (Eq.{succ u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p) x) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p) y)) (Eq.{succ u1} 𝕜 x y))
Case conversion may be inaccurate. Consider using '#align add_circle.coe_eq_coe_iff_of_mem_Ico AddCircle.coe_eq_coe_iff_of_mem_Icoₓ'. -/
theorem coe_eq_coe_iff_of_mem_Ico {x y : 𝕜} (hx : x ∈ Ico a (a + p)) (hy : y ∈ Ico a (a + p)) :
    (x : AddCircle p) = y ↔ x = y :=
  by
  refine' ⟨fun h => _, by tauto⟩
  suffices (⟨x, hx⟩ : Ico a (a + p)) = ⟨y, hy⟩ by exact Subtype.mk.inj this
  apply_fun equiv_Ico p a  at h
  rw [← (equiv_Ico p a).right_inv ⟨x, hx⟩, ← (equiv_Ico p a).right_inv ⟨y, hy⟩]
  exact h
#align add_circle.coe_eq_coe_iff_of_mem_Ico AddCircle.coe_eq_coe_iff_of_mem_Ico

/- warning: add_circle.lift_Ico_coe_apply -> AddCircle.liftIco_coe_apply is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} {B : Type.{u2}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] {a : 𝕜} [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {f : 𝕜 -> B} {x : 𝕜}, (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) -> (Eq.{succ u2} B (AddCircle.liftIco.{u1, u2} 𝕜 B _inst_1 _inst_2 _inst_3 p hp a _inst_4 f ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) x)) (f x))
but is expected to have type
  forall {𝕜 : Type.{u2}} {B : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u2} 𝕜] [_inst_2 : TopologicalSpace.{u2} 𝕜] [_inst_3 : OrderTopology.{u2} 𝕜 _inst_2 (PartialOrder.toPreorder.{u2} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1)))] {p : 𝕜} [hp : Fact (LT.lt.{u2} 𝕜 (Preorder.toLT.{u2} 𝕜 (PartialOrder.toPreorder.{u2} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1)))) (OfNat.ofNat.{u2} 𝕜 0 (Zero.toOfNat0.{u2} 𝕜 (NegZeroClass.toZero.{u2} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u2} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u2} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u2} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u2} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1))))))))) p)] {a : 𝕜} [_inst_4 : Archimedean.{u2} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u2} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u2} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u2} 𝕜 _inst_1)))] {f : 𝕜 -> B} {x : 𝕜}, (Membership.mem.{u2, u2} 𝕜 (Set.{u2} 𝕜) (Set.instMembershipSet.{u2} 𝕜) x (Set.Ico.{u2} 𝕜 (PartialOrder.toPreorder.{u2} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1))) a (HAdd.hAdd.{u2, u2, u2} 𝕜 𝕜 𝕜 (instHAdd.{u2} 𝕜 (AddZeroClass.toAdd.{u2} 𝕜 (AddMonoid.toAddZeroClass.{u2} 𝕜 (SubNegMonoid.toAddMonoid.{u2} 𝕜 (AddGroup.toSubNegMonoid.{u2} 𝕜 (AddCommGroup.toAddGroup.{u2} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1)))))))) a p))) -> (Eq.{succ u1} B (AddCircle.liftIco.{u2, u1} 𝕜 B _inst_1 _inst_2 _inst_3 p hp a _inst_4 f (QuotientAddGroup.mk.{u2} 𝕜 (AddCommGroup.toAddGroup.{u2} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u2} 𝕜 (AddCommGroup.toAddGroup.{u2} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1))) p) x)) (f x))
Case conversion may be inaccurate. Consider using '#align add_circle.lift_Ico_coe_apply AddCircle.liftIco_coe_applyₓ'. -/
theorem liftIco_coe_apply {f : 𝕜 → B} {x : 𝕜} (hx : x ∈ Ico a (a + p)) : liftIco p a f ↑x = f x :=
  by
  have : (equiv_Ico p a) x = ⟨x, hx⟩ :=
    by
    rw [Equiv.apply_eq_iff_eq_symm_apply]
    rfl
  rw [lift_Ico, comp_apply, this]
  rfl
#align add_circle.lift_Ico_coe_apply AddCircle.liftIco_coe_apply

/- warning: add_circle.lift_Ioc_coe_apply -> AddCircle.liftIoc_coe_apply is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} {B : Type.{u2}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] {a : 𝕜} [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {f : 𝕜 -> B} {x : 𝕜}, (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) -> (Eq.{succ u2} B (AddCircle.liftIoc.{u1, u2} 𝕜 B _inst_1 _inst_2 _inst_3 p hp a _inst_4 f ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) x)) (f x))
but is expected to have type
  forall {𝕜 : Type.{u2}} {B : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u2} 𝕜] [_inst_2 : TopologicalSpace.{u2} 𝕜] [_inst_3 : OrderTopology.{u2} 𝕜 _inst_2 (PartialOrder.toPreorder.{u2} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1)))] {p : 𝕜} [hp : Fact (LT.lt.{u2} 𝕜 (Preorder.toLT.{u2} 𝕜 (PartialOrder.toPreorder.{u2} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1)))) (OfNat.ofNat.{u2} 𝕜 0 (Zero.toOfNat0.{u2} 𝕜 (NegZeroClass.toZero.{u2} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u2} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u2} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u2} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u2} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1))))))))) p)] {a : 𝕜} [_inst_4 : Archimedean.{u2} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u2} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u2} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u2} 𝕜 _inst_1)))] {f : 𝕜 -> B} {x : 𝕜}, (Membership.mem.{u2, u2} 𝕜 (Set.{u2} 𝕜) (Set.instMembershipSet.{u2} 𝕜) x (Set.Ioc.{u2} 𝕜 (PartialOrder.toPreorder.{u2} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1))) a (HAdd.hAdd.{u2, u2, u2} 𝕜 𝕜 𝕜 (instHAdd.{u2} 𝕜 (AddZeroClass.toAdd.{u2} 𝕜 (AddMonoid.toAddZeroClass.{u2} 𝕜 (SubNegMonoid.toAddMonoid.{u2} 𝕜 (AddGroup.toSubNegMonoid.{u2} 𝕜 (AddCommGroup.toAddGroup.{u2} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1)))))))) a p))) -> (Eq.{succ u1} B (AddCircle.liftIoc.{u2, u1} 𝕜 B _inst_1 _inst_2 _inst_3 p hp a _inst_4 f (QuotientAddGroup.mk.{u2} 𝕜 (AddCommGroup.toAddGroup.{u2} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u2} 𝕜 (AddCommGroup.toAddGroup.{u2} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1))) p) x)) (f x))
Case conversion may be inaccurate. Consider using '#align add_circle.lift_Ioc_coe_apply AddCircle.liftIoc_coe_applyₓ'. -/
theorem liftIoc_coe_apply {f : 𝕜 → B} {x : 𝕜} (hx : x ∈ Ioc a (a + p)) : liftIoc p a f ↑x = f x :=
  by
  have : (equiv_Ioc p a) x = ⟨x, hx⟩ :=
    by
    rw [Equiv.apply_eq_iff_eq_symm_apply]
    rfl
  rw [lift_Ioc, comp_apply, this]
  rfl
#align add_circle.lift_Ioc_coe_apply AddCircle.liftIoc_coe_apply

variable (p a)

section Continuity

/- warning: add_circle.continuous_equiv_Ico_symm -> AddCircle.continuous_equivIco_symm is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))], Continuous.{u1, u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Subtype.topologicalSpace.{u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) _inst_2) (AddCircle.topologicalSpace.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (coeFn.{succ u1, succ u1} (Equiv.{succ u1, succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)) (fun (_x : Equiv.{succ u1, succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)) => (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) -> (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)) (Equiv.hasCoeToFun.{succ u1, succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)) (Equiv.symm.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.equivIco.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p hp a _inst_4)))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))], Continuous.{u1, u1} (Set.Elem.{u1} 𝕜 (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (instTopologicalSpaceSubtype.{u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) _inst_2) (instTopologicalSpaceAddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (FunLike.coe.{succ u1, succ u1, succ u1} (Equiv.{succ u1, succ u1} (Set.Elem.{u1} 𝕜 (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)) (Set.Elem.{u1} 𝕜 (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (fun (_x : Set.Elem.{u1} 𝕜 (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) => (fun (x._@.Mathlib.Logic.Equiv.Defs._hyg.808 : Set.Elem.{u1} 𝕜 (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) => AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) _x) (Equiv.instFunLikeEquiv.{succ u1, succ u1} (Set.Elem.{u1} 𝕜 (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)) (Equiv.symm.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Set.Elem.{u1} 𝕜 (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.equivIco.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p hp a _inst_4)))
Case conversion may be inaccurate. Consider using '#align add_circle.continuous_equiv_Ico_symm AddCircle.continuous_equivIco_symmₓ'. -/
@[continuity]
theorem continuous_equivIco_symm : Continuous (equivIco p a).symm :=
  continuous_quotient_mk'.comp continuous_subtype_val
#align add_circle.continuous_equiv_Ico_symm AddCircle.continuous_equivIco_symm

/- warning: add_circle.continuous_equiv_Ioc_symm -> AddCircle.continuous_equivIoc_symm is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))], Continuous.{u1, u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Subtype.topologicalSpace.{u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) _inst_2) (AddCircle.topologicalSpace.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (coeFn.{succ u1, succ u1} (Equiv.{succ u1, succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)) (fun (_x : Equiv.{succ u1, succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)) => (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) -> (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)) (Equiv.hasCoeToFun.{succ u1, succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)) (Equiv.symm.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.equivIoc.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p hp a _inst_4)))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))], Continuous.{u1, u1} (Set.Elem.{u1} 𝕜 (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (instTopologicalSpaceSubtype.{u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) _inst_2) (instTopologicalSpaceAddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (FunLike.coe.{succ u1, succ u1, succ u1} (Equiv.{succ u1, succ u1} (Set.Elem.{u1} 𝕜 (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)) (Set.Elem.{u1} 𝕜 (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (fun (_x : Set.Elem.{u1} 𝕜 (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) => (fun (x._@.Mathlib.Logic.Equiv.Defs._hyg.808 : Set.Elem.{u1} 𝕜 (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) => AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) _x) (Equiv.instFunLikeEquiv.{succ u1, succ u1} (Set.Elem.{u1} 𝕜 (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)) (Equiv.symm.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Set.Elem.{u1} 𝕜 (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.equivIoc.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p hp a _inst_4)))
Case conversion may be inaccurate. Consider using '#align add_circle.continuous_equiv_Ioc_symm AddCircle.continuous_equivIoc_symmₓ'. -/
@[continuity]
theorem continuous_equivIoc_symm : Continuous (equivIoc p a).symm :=
  continuous_quotient_mk'.comp continuous_subtype_val
#align add_circle.continuous_equiv_Ioc_symm AddCircle.continuous_equivIoc_symm

variable {x : AddCircle p} (hx : x ≠ a)

include hx

/- warning: add_circle.continuous_at_equiv_Ico -> AddCircle.continuousAt_equivIco is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {x : AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p}, (Ne.{succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) x ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) a)) -> (ContinuousAt.{u1, u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.topologicalSpace.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Subtype.topologicalSpace.{u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) _inst_2) (coeFn.{succ u1, succ u1} (Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)))) (fun (_x : Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)))) => (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) -> (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)))) (Equiv.hasCoeToFun.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)))) (AddCircle.equivIco.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p hp a _inst_4)) x)
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))] {x : AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p}, (Ne.{succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) x (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p) a)) -> (ContinuousAt.{u1, u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Set.Elem.{u1} 𝕜 (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (instTopologicalSpaceAddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (instTopologicalSpaceSubtype.{u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) _inst_2) (FunLike.coe.{succ u1, succ u1, succ u1} (Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Set.Elem.{u1} 𝕜 (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (fun (_x : AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) => (fun (x._@.Mathlib.Logic.Equiv.Defs._hyg.808 : AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) => Set.Elem.{u1} 𝕜 (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) _x) (Equiv.instFunLikeEquiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Set.Elem.{u1} 𝕜 (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)))) (AddCircle.equivIco.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p hp a _inst_4)) x)
Case conversion may be inaccurate. Consider using '#align add_circle.continuous_at_equiv_Ico AddCircle.continuousAt_equivIcoₓ'. -/
theorem continuousAt_equivIco : ContinuousAt (equivIco p a) x :=
  by
  induction x using QuotientAddGroup.induction_on'
  rw [ContinuousAt, Filter.Tendsto, QuotientAddGroup.nhds_eq, Filter.map_map]
  exact (continuousAt_toIcoMod hp.out a hx).codRestrict _
#align add_circle.continuous_at_equiv_Ico AddCircle.continuousAt_equivIco

/- warning: add_circle.continuous_at_equiv_Ioc -> AddCircle.continuousAt_equivIoc is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {x : AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p}, (Ne.{succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) x ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) a)) -> (ContinuousAt.{u1, u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.topologicalSpace.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Subtype.topologicalSpace.{u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) _inst_2) (coeFn.{succ u1, succ u1} (Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)))) (fun (_x : Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)))) => (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) -> (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)))) (Equiv.hasCoeToFun.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)))) (AddCircle.equivIoc.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p hp a _inst_4)) x)
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))] {x : AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p}, (Ne.{succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) x (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p) a)) -> (ContinuousAt.{u1, u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Set.Elem.{u1} 𝕜 (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (instTopologicalSpaceAddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (instTopologicalSpaceSubtype.{u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) _inst_2) (FunLike.coe.{succ u1, succ u1, succ u1} (Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Set.Elem.{u1} 𝕜 (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (fun (_x : AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) => (fun (x._@.Mathlib.Logic.Equiv.Defs._hyg.808 : AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) => Set.Elem.{u1} 𝕜 (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) _x) (Equiv.instFunLikeEquiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Set.Elem.{u1} 𝕜 (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)))) (AddCircle.equivIoc.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p hp a _inst_4)) x)
Case conversion may be inaccurate. Consider using '#align add_circle.continuous_at_equiv_Ioc AddCircle.continuousAt_equivIocₓ'. -/
theorem continuousAt_equivIoc : ContinuousAt (equivIoc p a) x :=
  by
  induction x using QuotientAddGroup.induction_on'
  rw [ContinuousAt, Filter.Tendsto, QuotientAddGroup.nhds_eq, Filter.map_map]
  exact (continuousAt_toIocMod hp.out a hx).codRestrict _
#align add_circle.continuous_at_equiv_Ioc AddCircle.continuousAt_equivIoc

end Continuity

/- warning: add_circle.coe_image_Ico_eq -> AddCircle.coe_image_Ico_eq is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))], Eq.{succ u1} (Set.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)) (Set.image.{u1, u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)))) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (Set.univ.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))], Eq.{succ u1} (Set.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p))) (Set.image.{u1, u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (Set.univ.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)))
Case conversion may be inaccurate. Consider using '#align add_circle.coe_image_Ico_eq AddCircle.coe_image_Ico_eqₓ'. -/
/-- The image of the closed-open interval `[a, a + p)` under the quotient map `𝕜 → add_circle p` is
the entire space. -/
@[simp]
theorem coe_image_Ico_eq : (coe : 𝕜 → AddCircle p) '' Ico a (a + p) = univ :=
  by
  rw [image_eq_range]
  exact (equiv_Ico p a).symm.range_eq_univ
#align add_circle.coe_image_Ico_eq AddCircle.coe_image_Ico_eq

/- warning: add_circle.coe_image_Ioc_eq -> AddCircle.coe_image_Ioc_eq is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))], Eq.{succ u1} (Set.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)) (Set.image.{u1, u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)))) (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (Set.univ.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))], Eq.{succ u1} (Set.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p))) (Set.image.{u1, u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (Set.Ioc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (Set.univ.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)))
Case conversion may be inaccurate. Consider using '#align add_circle.coe_image_Ioc_eq AddCircle.coe_image_Ioc_eqₓ'. -/
/-- The image of the closed-open interval `[a, a + p)` under the quotient map `𝕜 → add_circle p` is
the entire space. -/
@[simp]
theorem coe_image_Ioc_eq : (coe : 𝕜 → AddCircle p) '' Ioc a (a + p) = univ :=
  by
  rw [image_eq_range]
  exact (equiv_Ioc p a).symm.range_eq_univ
#align add_circle.coe_image_Ioc_eq AddCircle.coe_image_Ioc_eq

/- warning: add_circle.coe_image_Icc_eq -> AddCircle.coe_image_Icc_eq is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))], Eq.{succ u1} (Set.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)) (Set.image.{u1, u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p)))) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (Set.univ.{u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] (a : 𝕜) [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))], Eq.{succ u1} (Set.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p))) (Set.image.{u1, u1} 𝕜 (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (Set.univ.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)))
Case conversion may be inaccurate. Consider using '#align add_circle.coe_image_Icc_eq AddCircle.coe_image_Icc_eqₓ'. -/
/-- The image of the closed interval `[0, p]` under the quotient map `𝕜 → add_circle p` is the
entire space. -/
@[simp]
theorem coe_image_Icc_eq : (coe : 𝕜 → AddCircle p) '' Icc a (a + p) = univ :=
  eq_top_mono (image_subset _ Ico_subset_Icc_self) <| coe_image_Ico_eq _ _
#align add_circle.coe_image_Icc_eq AddCircle.coe_image_Icc_eq

end LinearOrderedAddCommGroup

section LinearOrderedField

variable [LinearOrderedField 𝕜] [TopologicalSpace 𝕜] [OrderTopology 𝕜] (p q : 𝕜)

/- warning: add_circle.equiv_add_circle -> AddCircle.equivAddCircle is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))] (p : 𝕜) (q : 𝕜), (Ne.{succ u1} 𝕜 p (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))))))))) -> (Ne.{succ u1} 𝕜 q (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))))))))) -> (AddEquiv.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddZeroClass.toHasAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p) (AddCircle.equivAddCircle._proof_1.{u1} 𝕜 _inst_1 p)))))) (AddZeroClass.toHasAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q) (AddCircle.equivAddCircle._proof_2.{u1} 𝕜 _inst_1 q)))))))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))] (p : 𝕜) (q : 𝕜), (Ne.{succ u1} 𝕜 p (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1)))))))) -> (Ne.{succ u1} 𝕜 q (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1)))))))) -> (AddEquiv.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))))) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q)))))))
Case conversion may be inaccurate. Consider using '#align add_circle.equiv_add_circle AddCircle.equivAddCircleₓ'. -/
/-- The rescaling equivalence between additive circles with different periods. -/
def equivAddCircle (hp : p ≠ 0) (hq : q ≠ 0) : AddCircle p ≃+ AddCircle q :=
  QuotientAddGroup.congr _ _ (AddAut.mulRight <| (Units.mk0 p hp)⁻¹ * Units.mk0 q hq) <| by
    rw [AddMonoidHom.map_zmultiples, AddMonoidHom.coe_coe, AddAut.mulRight_apply, Units.val_mul,
      Units.val_mk0, Units.val_inv_eq_inv_val, Units.val_mk0, mul_inv_cancel_left₀ hp]
#align add_circle.equiv_add_circle AddCircle.equivAddCircle

/- warning: add_circle.equiv_add_circle_apply_mk -> AddCircle.equivAddCircle_apply_mk is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))] (p : 𝕜) (q : 𝕜) (hp : Ne.{succ u1} 𝕜 p (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))))))))) (hq : Ne.{succ u1} 𝕜 q (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))))))))) (x : 𝕜), Eq.{succ u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (coeFn.{succ u1, succ u1} (AddEquiv.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddZeroClass.toHasAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p) (AddCircle.equivAddCircle._proof_1.{u1} 𝕜 _inst_1 p)))))) (AddZeroClass.toHasAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q) (AddCircle.equivAddCircle._proof_2.{u1} 𝕜 _inst_1 q))))))) (fun (_x : AddEquiv.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddZeroClass.toHasAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p) (AddCircle.equivAddCircle._proof_1.{u1} 𝕜 _inst_1 p)))))) (AddZeroClass.toHasAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q) (AddCircle.equivAddCircle._proof_2.{u1} 𝕜 _inst_1 q))))))) => (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) -> (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q)) (AddEquiv.hasCoeToFun.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddZeroClass.toHasAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p) (AddCircle.equivAddCircle._proof_1.{u1} 𝕜 _inst_1 p)))))) (AddZeroClass.toHasAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q) (AddCircle.equivAddCircle._proof_2.{u1} 𝕜 _inst_1 q))))))) (AddCircle.equivAddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p q hp hq) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p))) x)) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCircle.hasCoeT.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q))) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (Distrib.toHasMul.{u1} 𝕜 (Ring.toDistrib.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))) x (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (Distrib.toHasMul.{u1} 𝕜 (Ring.toDistrib.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))) (Inv.inv.{u1} 𝕜 (DivInvMonoid.toHasInv.{u1} 𝕜 (DivisionRing.toDivInvMonoid.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))) p) q)))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))] (p : 𝕜) (q : 𝕜) (hp : Ne.{succ u1} 𝕜 p (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1)))))))) (hq : Ne.{succ u1} 𝕜 q (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1)))))))) (x : 𝕜), Eq.{succ u1} ((fun (x._@.Mathlib.Data.FunLike.Embedding._hyg.19 : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) => AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p) x)) (FunLike.coe.{succ u1, succ u1, succ u1} (AddEquiv.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))))) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q))))))) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (fun (_x : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) => (fun (x._@.Mathlib.Data.FunLike.Embedding._hyg.19 : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) => AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) _x) (EmbeddingLike.toFunLike.{succ u1, succ u1, succ u1} (AddEquiv.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))))) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q))))))) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (EquivLike.toEmbeddingLike.{succ u1, succ u1, succ u1} (AddEquiv.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))))) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q))))))) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddEquivClass.toEquivLike.{u1, u1, u1} (AddEquiv.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))))) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q))))))) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))))) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q)))))) (AddEquiv.instAddEquivClassAddEquiv.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))))) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q)))))))))) (AddCircle.equivAddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p q hp hq) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p) x)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (NonUnitalNonAssocRing.toMul.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))) x (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (NonUnitalNonAssocRing.toMul.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))) (Inv.inv.{u1} 𝕜 (LinearOrderedField.toInv.{u1} 𝕜 _inst_1) p) q)))
Case conversion may be inaccurate. Consider using '#align add_circle.equiv_add_circle_apply_mk AddCircle.equivAddCircle_apply_mkₓ'. -/
@[simp]
theorem equivAddCircle_apply_mk (hp : p ≠ 0) (hq : q ≠ 0) (x : 𝕜) :
    equivAddCircle p q hp hq (x : 𝕜) = (x * (p⁻¹ * q) : 𝕜) :=
  rfl
#align add_circle.equiv_add_circle_apply_mk AddCircle.equivAddCircle_apply_mk

/- warning: add_circle.equiv_add_circle_symm_apply_mk -> AddCircle.equivAddCircle_symm_apply_mk is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))] (p : 𝕜) (q : 𝕜) (hp : Ne.{succ u1} 𝕜 p (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))))))))) (hq : Ne.{succ u1} 𝕜 q (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))))))))) (x : 𝕜), Eq.{succ u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (coeFn.{succ u1, succ u1} (AddEquiv.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddZeroClass.toHasAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q) (AddCircle.equivAddCircle._proof_2.{u1} 𝕜 _inst_1 q)))))) (AddZeroClass.toHasAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p) (AddCircle.equivAddCircle._proof_1.{u1} 𝕜 _inst_1 p))))))) (fun (_x : AddEquiv.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddZeroClass.toHasAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q) (AddCircle.equivAddCircle._proof_2.{u1} 𝕜 _inst_1 q)))))) (AddZeroClass.toHasAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p) (AddCircle.equivAddCircle._proof_1.{u1} 𝕜 _inst_1 p))))))) => (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) -> (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)) (AddEquiv.hasCoeToFun.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddZeroClass.toHasAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q) (AddCircle.equivAddCircle._proof_2.{u1} 𝕜 _inst_1 q)))))) (AddZeroClass.toHasAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p) (AddCircle.equivAddCircle._proof_1.{u1} 𝕜 _inst_1 p))))))) (AddEquiv.symm.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddZeroClass.toHasAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p) (AddCircle.equivAddCircle._proof_1.{u1} 𝕜 _inst_1 p)))))) (AddZeroClass.toHasAdd.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (AddMonoid.toAddZeroClass.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (quotientAddGroup.Subgroup.hasQuotient.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q) (AddCircle.equivAddCircle._proof_2.{u1} 𝕜 _inst_1 q)))))) (AddCircle.equivAddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p q hp hq)) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCircle.hasCoeT.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q))) x)) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p))) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (Distrib.toHasMul.{u1} 𝕜 (Ring.toDistrib.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))) x (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (Distrib.toHasMul.{u1} 𝕜 (Ring.toDistrib.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))) (Inv.inv.{u1} 𝕜 (DivInvMonoid.toHasInv.{u1} 𝕜 (DivisionRing.toDivInvMonoid.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))) q) p)))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))] (p : 𝕜) (q : 𝕜) (hp : Ne.{succ u1} 𝕜 p (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1)))))))) (hq : Ne.{succ u1} 𝕜 q (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1)))))))) (x : 𝕜), Eq.{succ u1} ((fun (x._@.Mathlib.Data.FunLike.Embedding._hyg.19 : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) => AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q) x)) (FunLike.coe.{succ u1, succ u1, succ u1} (AddEquiv.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q)))))) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p))))))) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (fun (_x : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) => (fun (x._@.Mathlib.Data.FunLike.Embedding._hyg.19 : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) => AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) _x) (EmbeddingLike.toFunLike.{succ u1, succ u1, succ u1} (AddEquiv.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q)))))) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p))))))) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (EquivLike.toEmbeddingLike.{succ u1, succ u1, succ u1} (AddEquiv.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q)))))) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p))))))) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddEquivClass.toEquivLike.{u1, u1, u1} (AddEquiv.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q)))))) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p))))))) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q)))))) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))))) (AddEquiv.instAddEquivClassAddEquiv.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q)))))) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))))))))) (AddEquiv.symm.{u1, u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))))) (AddZeroClass.toAdd.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddMonoid.toAddZeroClass.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 q)))))) (AddCircle.equivAddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p q hp hq)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) q) x)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (NonUnitalNonAssocRing.toMul.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))) x (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (NonUnitalNonAssocRing.toMul.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))) (Inv.inv.{u1} 𝕜 (LinearOrderedField.toInv.{u1} 𝕜 _inst_1) q) p)))
Case conversion may be inaccurate. Consider using '#align add_circle.equiv_add_circle_symm_apply_mk AddCircle.equivAddCircle_symm_apply_mkₓ'. -/
@[simp]
theorem equivAddCircle_symm_apply_mk (hp : p ≠ 0) (hq : q ≠ 0) (x : 𝕜) :
    (equivAddCircle p q hp hq).symm (x : 𝕜) = (x * (q⁻¹ * p) : 𝕜) :=
  rfl
#align add_circle.equiv_add_circle_symm_apply_mk AddCircle.equivAddCircle_symm_apply_mk

variable [hp : Fact (0 < p)]

include hp

section FloorRing

variable [FloorRing 𝕜]

/- warning: add_circle.coe_equiv_Ico_mk_apply -> AddCircle.coe_equivIco_mk_apply is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p)] [_inst_4 : FloorRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))] (x : 𝕜), Eq.{succ u1} 𝕜 ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p))) 𝕜 (HasLiftT.mk.{succ u1, succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p))) 𝕜 (CoeTCₓ.coe.{succ u1, succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p))) 𝕜 (coeBase.{succ u1, succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p))) 𝕜 (coeSubtype.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p))))))) (coeFn.{succ u1, succ u1} (Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p)))) (fun (_x : Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p)))) => (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) -> (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p)))) (Equiv.hasCoeToFun.{succ u1, succ u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p)))) (AddCircle.equivIco.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p hp (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) (FloorRing.archimedean.{u1} 𝕜 _inst_1 _inst_4)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p) x))) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (Distrib.toHasMul.{u1} 𝕜 (Ring.toDistrib.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))) (Int.fract.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)) _inst_4 (HDiv.hDiv.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHDiv.{u1} 𝕜 (DivInvMonoid.toHasDiv.{u1} 𝕜 (DivisionRing.toDivInvMonoid.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))) x p)) p)
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) p)] [_inst_4 : FloorRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))] (x : 𝕜), Eq.{succ u1} 𝕜 (Subtype.val.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) p))) (FunLike.coe.{succ u1, succ u1, succ u1} (Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (Set.Elem.{u1} 𝕜 (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) p)))) (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (fun (_x : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) => (fun (x._@.Mathlib.Logic.Equiv.Defs._hyg.808 : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) => Set.Elem.{u1} 𝕜 (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) p))) _x) (Equiv.instFunLikeEquiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (Set.Elem.{u1} 𝕜 (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) p)))) (AddCircle.equivIco.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p hp (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) (FloorRing.archimedean.{u1} 𝕜 _inst_1 _inst_4)) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p) x))) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (NonUnitalNonAssocRing.toMul.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))) (Int.fract.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)) _inst_4 (HDiv.hDiv.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHDiv.{u1} 𝕜 (LinearOrderedField.toDiv.{u1} 𝕜 _inst_1)) x p)) p)
Case conversion may be inaccurate. Consider using '#align add_circle.coe_equiv_Ico_mk_apply AddCircle.coe_equivIco_mk_applyₓ'. -/
@[simp]
theorem coe_equivIco_mk_apply (x : 𝕜) :
    (equivIco p 0 <| QuotientAddGroup.mk x : 𝕜) = Int.fract (x / p) * p :=
  toIcoMod_eq_fract_mul _ x
#align add_circle.coe_equiv_Ico_mk_apply AddCircle.coe_equivIco_mk_apply

instance : DivisibleBy (AddCircle p) ℤ
    where
  div x n := (↑((n : 𝕜)⁻¹ * (equivIco p 0 x : 𝕜)) : AddCircle p)
  div_zero x := by
    simp only [algebraMap.coe_zero, QuotientAddGroup.mk_zero, inv_zero, MulZeroClass.zero_mul]
  div_cancel n x hn := by
    replace hn : (n : 𝕜) ≠ 0;
    · norm_cast
      assumption
    change n • QuotientAddGroup.mk' _ ((n : 𝕜)⁻¹ * ↑(equiv_Ico p 0 x)) = x
    rw [← map_zsmul, ← smul_mul_assoc, zsmul_eq_mul, mul_inv_cancel hn, one_mul]
    exact (equiv_Ico p 0).symm_apply_apply x

end FloorRing

section FiniteOrderPoints

variable {p}

/- warning: add_circle.add_order_of_period_div -> AddCircle.addOrderOf_period_div is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))] {p : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p)] {n : Nat}, (LT.lt.{0} Nat Nat.hasLt (OfNat.ofNat.{0} Nat 0 (OfNat.mk.{0} Nat 0 (Zero.zero.{0} Nat Nat.hasZero))) n) -> (Eq.{1} Nat (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p))) (HDiv.hDiv.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHDiv.{u1} 𝕜 (DivInvMonoid.toHasDiv.{u1} 𝕜 (DivisionRing.toDivInvMonoid.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))) p ((fun (a : Type) (b : Type.{u1}) [self : HasLiftT.{1, succ u1} a b] => self.0) Nat 𝕜 (HasLiftT.mk.{1, succ u1} Nat 𝕜 (CoeTCₓ.coe.{1, succ u1} Nat 𝕜 (Nat.castCoe.{u1} 𝕜 (AddMonoidWithOne.toNatCast.{u1} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u1} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u1} 𝕜 (Ring.toAddCommGroupWithOne.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))))))) n)))) n)
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] {_inst_2 : 𝕜} [_inst_3 : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) _inst_2)] {p : Nat}, (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) p) -> (Eq.{1} Nat (addOrderOf.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2) (AddSubgroup.normal_of_comm.{u1} 𝕜 (Ring.toAddCommGroup.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2))))) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2) (HDiv.hDiv.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHDiv.{u1} 𝕜 (LinearOrderedField.toDiv.{u1} 𝕜 _inst_1)) _inst_2 (Nat.cast.{u1} 𝕜 (Semiring.toNatCast.{u1} 𝕜 (DivisionSemiring.toSemiring.{u1} 𝕜 (Semifield.toDivisionSemiring.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))) p)))) p)
Case conversion may be inaccurate. Consider using '#align add_circle.add_order_of_period_div AddCircle.addOrderOf_period_divₓ'. -/
theorem addOrderOf_period_div {n : ℕ} (h : 0 < n) : addOrderOf ((p / n : 𝕜) : AddCircle p) = n :=
  by
  rw [addOrderOf_eq_iff h]
  replace h : 0 < (n : 𝕜) := Nat.cast_pos.2 h
  refine' ⟨_, fun m hn h0 => _⟩ <;> simp only [Ne, ← coe_nsmul, nsmul_eq_mul]
  · rw [mul_div_cancel' _ h.ne', coe_period]
  rw [coe_eq_zero_of_pos_iff p hp.out (mul_pos (Nat.cast_pos.2 h0) <| div_pos hp.out h)]
  rintro ⟨k, hk⟩
  rw [mul_div, eq_div_iff h.ne', nsmul_eq_mul, mul_right_comm, ← Nat.cast_mul,
    (mul_left_injective₀ hp.out.ne').eq_iff, Nat.cast_inj, mul_comm] at hk
  exact (Nat.le_of_dvd h0 ⟨_, hk.symm⟩).not_lt hn
#align add_circle.add_order_of_period_div AddCircle.addOrderOf_period_div

variable (p)

/- warning: add_circle.gcd_mul_add_order_of_div_eq -> AddCircle.gcd_mul_addOrderOf_div_eq is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p)] {n : Nat} (m : Nat), (LT.lt.{0} Nat Nat.hasLt (OfNat.ofNat.{0} Nat 0 (OfNat.mk.{0} Nat 0 (Zero.zero.{0} Nat Nat.hasZero))) n) -> (Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat Nat.hasMul) (Nat.gcd m n) (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p))) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (Distrib.toHasMul.{u1} 𝕜 (Ring.toDistrib.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))) (HDiv.hDiv.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHDiv.{u1} 𝕜 (DivInvMonoid.toHasDiv.{u1} 𝕜 (DivisionRing.toDivInvMonoid.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))) ((fun (a : Type) (b : Type.{u1}) [self : HasLiftT.{1, succ u1} a b] => self.0) Nat 𝕜 (HasLiftT.mk.{1, succ u1} Nat 𝕜 (CoeTCₓ.coe.{1, succ u1} Nat 𝕜 (Nat.castCoe.{u1} 𝕜 (AddMonoidWithOne.toNatCast.{u1} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u1} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u1} 𝕜 (Ring.toAddCommGroupWithOne.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))))))) m) ((fun (a : Type) (b : Type.{u1}) [self : HasLiftT.{1, succ u1} a b] => self.0) Nat 𝕜 (HasLiftT.mk.{1, succ u1} Nat 𝕜 (CoeTCₓ.coe.{1, succ u1} Nat 𝕜 (Nat.castCoe.{u1} 𝕜 (AddMonoidWithOne.toNatCast.{u1} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u1} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u1} 𝕜 (Ring.toAddCommGroupWithOne.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))))))) n)) p)))) n)
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] (_inst_2 : 𝕜) [_inst_3 : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) _inst_2)] {p : Nat} (hp : Nat), (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) p) -> (Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.gcd hp p) (addOrderOf.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2) (AddSubgroup.normal_of_comm.{u1} 𝕜 (Ring.toAddCommGroup.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2))))) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (NonUnitalNonAssocRing.toMul.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))) (HDiv.hDiv.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHDiv.{u1} 𝕜 (LinearOrderedField.toDiv.{u1} 𝕜 _inst_1)) (Nat.cast.{u1} 𝕜 (Semiring.toNatCast.{u1} 𝕜 (DivisionSemiring.toSemiring.{u1} 𝕜 (Semifield.toDivisionSemiring.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))) hp) (Nat.cast.{u1} 𝕜 (Semiring.toNatCast.{u1} 𝕜 (DivisionSemiring.toSemiring.{u1} 𝕜 (Semifield.toDivisionSemiring.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))) p)) _inst_2)))) p)
Case conversion may be inaccurate. Consider using '#align add_circle.gcd_mul_add_order_of_div_eq AddCircle.gcd_mul_addOrderOf_div_eqₓ'. -/
theorem gcd_mul_addOrderOf_div_eq {n : ℕ} (m : ℕ) (hn : 0 < n) :
    m.gcd n * addOrderOf (↑(↑m / ↑n * p) : AddCircle p) = n :=
  by
  rw [mul_comm_div, ← nsmul_eq_mul, coe_nsmul, addOrderOf_nsmul'']
  · rw [add_order_of_period_div hn, Nat.gcd_comm, Nat.mul_div_cancel']
    exacts[n.gcd_dvd_left m, hp]
  · rw [← addOrderOf_pos_iff, add_order_of_period_div hn]
    exacts[hn, hp]
#align add_circle.gcd_mul_add_order_of_div_eq AddCircle.gcd_mul_addOrderOf_div_eq

variable {p}

/- warning: add_circle.add_order_of_div_of_gcd_eq_one -> AddCircle.addOrderOf_div_of_gcd_eq_one is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))] {p : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p)] {m : Nat} {n : Nat}, (LT.lt.{0} Nat Nat.hasLt (OfNat.ofNat.{0} Nat 0 (OfNat.mk.{0} Nat 0 (Zero.zero.{0} Nat Nat.hasZero))) n) -> (Eq.{1} Nat (Nat.gcd m n) (OfNat.ofNat.{0} Nat 1 (OfNat.mk.{0} Nat 1 (One.one.{0} Nat Nat.hasOne)))) -> (Eq.{1} Nat (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p))) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (Distrib.toHasMul.{u1} 𝕜 (Ring.toDistrib.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))) (HDiv.hDiv.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHDiv.{u1} 𝕜 (DivInvMonoid.toHasDiv.{u1} 𝕜 (DivisionRing.toDivInvMonoid.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))) ((fun (a : Type) (b : Type.{u1}) [self : HasLiftT.{1, succ u1} a b] => self.0) Nat 𝕜 (HasLiftT.mk.{1, succ u1} Nat 𝕜 (CoeTCₓ.coe.{1, succ u1} Nat 𝕜 (Nat.castCoe.{u1} 𝕜 (AddMonoidWithOne.toNatCast.{u1} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u1} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u1} 𝕜 (Ring.toAddCommGroupWithOne.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))))))) m) ((fun (a : Type) (b : Type.{u1}) [self : HasLiftT.{1, succ u1} a b] => self.0) Nat 𝕜 (HasLiftT.mk.{1, succ u1} Nat 𝕜 (CoeTCₓ.coe.{1, succ u1} Nat 𝕜 (Nat.castCoe.{u1} 𝕜 (AddMonoidWithOne.toNatCast.{u1} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u1} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u1} 𝕜 (Ring.toAddCommGroupWithOne.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))))))) n)) p))) n)
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] {_inst_2 : 𝕜} [_inst_3 : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) _inst_2)] {p : Nat} {hp : Nat}, (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) hp) -> (Eq.{1} Nat (Nat.gcd p hp) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) -> (Eq.{1} Nat (addOrderOf.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2) (AddSubgroup.normal_of_comm.{u1} 𝕜 (Ring.toAddCommGroup.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2))))) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (NonUnitalNonAssocRing.toMul.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))) (HDiv.hDiv.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHDiv.{u1} 𝕜 (LinearOrderedField.toDiv.{u1} 𝕜 _inst_1)) (Nat.cast.{u1} 𝕜 (Semiring.toNatCast.{u1} 𝕜 (DivisionSemiring.toSemiring.{u1} 𝕜 (Semifield.toDivisionSemiring.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))) p) (Nat.cast.{u1} 𝕜 (Semiring.toNatCast.{u1} 𝕜 (DivisionSemiring.toSemiring.{u1} 𝕜 (Semifield.toDivisionSemiring.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))) hp)) _inst_2))) hp)
Case conversion may be inaccurate. Consider using '#align add_circle.add_order_of_div_of_gcd_eq_one AddCircle.addOrderOf_div_of_gcd_eq_oneₓ'. -/
theorem addOrderOf_div_of_gcd_eq_one {m n : ℕ} (hn : 0 < n) (h : m.gcd n = 1) :
    addOrderOf (↑(↑m / ↑n * p) : AddCircle p) = n :=
  by
  convert gcd_mul_add_order_of_div_eq p m hn
  rw [h, one_mul]
#align add_circle.add_order_of_div_of_gcd_eq_one AddCircle.addOrderOf_div_of_gcd_eq_one

/- warning: add_circle.add_order_of_div_of_gcd_eq_one' -> AddCircle.addOrderOf_div_of_gcd_eq_one' is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))] {p : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p)] {m : Int} {n : Nat}, (LT.lt.{0} Nat Nat.hasLt (OfNat.ofNat.{0} Nat 0 (OfNat.mk.{0} Nat 0 (Zero.zero.{0} Nat Nat.hasZero))) n) -> (Eq.{1} Nat (Nat.gcd (Int.natAbs m) n) (OfNat.ofNat.{0} Nat 1 (OfNat.mk.{0} Nat 1 (One.one.{0} Nat Nat.hasOne)))) -> (Eq.{1} Nat (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p))) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (Distrib.toHasMul.{u1} 𝕜 (Ring.toDistrib.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))) (HDiv.hDiv.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHDiv.{u1} 𝕜 (DivInvMonoid.toHasDiv.{u1} 𝕜 (DivisionRing.toDivInvMonoid.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))) ((fun (a : Type) (b : Type.{u1}) [self : HasLiftT.{1, succ u1} a b] => self.0) Int 𝕜 (HasLiftT.mk.{1, succ u1} Int 𝕜 (CoeTCₓ.coe.{1, succ u1} Int 𝕜 (Int.castCoe.{u1} 𝕜 (AddGroupWithOne.toHasIntCast.{u1} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u1} 𝕜 (Ring.toAddCommGroupWithOne.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))) m) ((fun (a : Type) (b : Type.{u1}) [self : HasLiftT.{1, succ u1} a b] => self.0) Nat 𝕜 (HasLiftT.mk.{1, succ u1} Nat 𝕜 (CoeTCₓ.coe.{1, succ u1} Nat 𝕜 (Nat.castCoe.{u1} 𝕜 (AddMonoidWithOne.toNatCast.{u1} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u1} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u1} 𝕜 (Ring.toAddCommGroupWithOne.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))))))) n)) p))) n)
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] {_inst_2 : 𝕜} [_inst_3 : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) _inst_2)] {p : Int} {hp : Nat}, (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) hp) -> (Eq.{1} Nat (Nat.gcd (Int.natAbs p) hp) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) -> (Eq.{1} Nat (addOrderOf.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2) (AddSubgroup.normal_of_comm.{u1} 𝕜 (Ring.toAddCommGroup.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2))))) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (NonUnitalNonAssocRing.toMul.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))) (HDiv.hDiv.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHDiv.{u1} 𝕜 (LinearOrderedField.toDiv.{u1} 𝕜 _inst_1)) (Int.cast.{u1} 𝕜 (Ring.toIntCast.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))) p) (Nat.cast.{u1} 𝕜 (Semiring.toNatCast.{u1} 𝕜 (DivisionSemiring.toSemiring.{u1} 𝕜 (Semifield.toDivisionSemiring.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))) hp)) _inst_2))) hp)
Case conversion may be inaccurate. Consider using '#align add_circle.add_order_of_div_of_gcd_eq_one' AddCircle.addOrderOf_div_of_gcd_eq_one'ₓ'. -/
theorem addOrderOf_div_of_gcd_eq_one' {m : ℤ} {n : ℕ} (hn : 0 < n) (h : m.natAbs.gcd n = 1) :
    addOrderOf (↑(↑m / ↑n * p) : AddCircle p) = n :=
  by
  induction m
  · simp only [Int.ofNat_eq_coe, Int.cast_ofNat, Int.natAbs_ofNat] at h⊢
    exact add_order_of_div_of_gcd_eq_one hn h
  · simp only [Int.cast_negSucc, neg_div, neg_mul, coe_neg, addOrderOf_neg]
    exact add_order_of_div_of_gcd_eq_one hn h
#align add_circle.add_order_of_div_of_gcd_eq_one' AddCircle.addOrderOf_div_of_gcd_eq_one'

/- warning: add_circle.add_order_of_coe_rat -> AddCircle.addOrderOf_coe_rat is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))] {p : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p)] {q : Rat}, Eq.{1} Nat (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p))) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (Distrib.toHasMul.{u1} 𝕜 (Ring.toDistrib.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))) ((fun (a : Type) (b : Type.{u1}) [self : HasLiftT.{1, succ u1} a b] => self.0) Rat 𝕜 (HasLiftT.mk.{1, succ u1} Rat 𝕜 (CoeTCₓ.coe.{1, succ u1} Rat 𝕜 (Rat.castCoe.{u1} 𝕜 (DivisionRing.toHasRatCast.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))) q) p))) (Rat.den q)
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] {_inst_2 : 𝕜} [_inst_3 : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) _inst_2)] {p : Rat}, Eq.{1} Nat (addOrderOf.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2)) (SubNegMonoid.toAddMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2)) (AddGroup.toSubNegMonoid.{u1} (HasQuotient.Quotient.{u1, u1} 𝕜 (AddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (QuotientAddGroup.instHasQuotientAddSubgroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2)) (QuotientAddGroup.Quotient.addGroup.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2) (AddSubgroup.normal_of_comm.{u1} 𝕜 (Ring.toAddCommGroup.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2))))) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (NonUnitalNonAssocRing.toMul.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))) (Rat.cast.{u1} 𝕜 (LinearOrderedField.toRatCast.{u1} 𝕜 _inst_1) p) _inst_2))) (Rat.den p)
Case conversion may be inaccurate. Consider using '#align add_circle.add_order_of_coe_rat AddCircle.addOrderOf_coe_ratₓ'. -/
theorem addOrderOf_coe_rat {q : ℚ} : addOrderOf (↑(↑q * p) : AddCircle p) = q.den :=
  by
  have : (↑(q.denom : ℤ) : 𝕜) ≠ 0 := by
    norm_cast
    exact q.pos.ne.symm
  rw [← @Rat.num_den q, Rat.cast_mk_of_ne_zero _ _ this, Int.cast_ofNat, Rat.num_den,
    add_order_of_div_of_gcd_eq_one' q.pos q.cop]
  infer_instance
#align add_circle.add_order_of_coe_rat AddCircle.addOrderOf_coe_rat

/- warning: add_circle.add_order_of_eq_pos_iff -> AddCircle.addOrderOf_eq_pos_iff is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))] {p : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p)] {u : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p} {n : Nat}, (LT.lt.{0} Nat Nat.hasLt (OfNat.ofNat.{0} Nat 0 (OfNat.mk.{0} Nat 0 (Zero.zero.{0} Nat Nat.hasZero))) n) -> (Iff (Eq.{1} Nat (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) u) n) (Exists.{1} Nat (fun (m : Nat) => Exists.{0} (LT.lt.{0} Nat Nat.hasLt m n) (fun (H : LT.lt.{0} Nat Nat.hasLt m n) => And (Eq.{1} Nat (Nat.gcd m n) (OfNat.ofNat.{0} Nat 1 (OfNat.mk.{0} Nat 1 (One.one.{0} Nat Nat.hasOne)))) (Eq.{succ u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p))) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (Distrib.toHasMul.{u1} 𝕜 (Ring.toDistrib.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))) (HDiv.hDiv.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHDiv.{u1} 𝕜 (DivInvMonoid.toHasDiv.{u1} 𝕜 (DivisionRing.toDivInvMonoid.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))) ((fun (a : Type) (b : Type.{u1}) [self : HasLiftT.{1, succ u1} a b] => self.0) Nat 𝕜 (HasLiftT.mk.{1, succ u1} Nat 𝕜 (CoeTCₓ.coe.{1, succ u1} Nat 𝕜 (Nat.castCoe.{u1} 𝕜 (AddMonoidWithOne.toNatCast.{u1} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u1} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u1} 𝕜 (Ring.toAddCommGroupWithOne.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))))))) m) ((fun (a : Type) (b : Type.{u1}) [self : HasLiftT.{1, succ u1} a b] => self.0) Nat 𝕜 (HasLiftT.mk.{1, succ u1} Nat 𝕜 (CoeTCₓ.coe.{1, succ u1} Nat 𝕜 (Nat.castCoe.{u1} 𝕜 (AddMonoidWithOne.toNatCast.{u1} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u1} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u1} 𝕜 (Ring.toAddCommGroupWithOne.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))))))) n)) p)) u)))))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))] {p : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) p)] {u : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p} {n : Nat}, (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) n) -> (Iff (Eq.{1} Nat (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) u) n) (Exists.{1} Nat (fun (m : Nat) => And (LT.lt.{0} Nat instLTNat m n) (And (Eq.{1} Nat (Nat.gcd m n) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (Eq.{succ u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (NonUnitalNonAssocRing.toMul.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))) (HDiv.hDiv.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHDiv.{u1} 𝕜 (LinearOrderedField.toDiv.{u1} 𝕜 _inst_1)) (Nat.cast.{u1} 𝕜 (Semiring.toNatCast.{u1} 𝕜 (DivisionSemiring.toSemiring.{u1} 𝕜 (Semifield.toDivisionSemiring.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))) m) (Nat.cast.{u1} 𝕜 (Semiring.toNatCast.{u1} 𝕜 (DivisionSemiring.toSemiring.{u1} 𝕜 (Semifield.toDivisionSemiring.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))) n)) p)) u)))))
Case conversion may be inaccurate. Consider using '#align add_circle.add_order_of_eq_pos_iff AddCircle.addOrderOf_eq_pos_iffₓ'. -/
theorem addOrderOf_eq_pos_iff {u : AddCircle p} {n : ℕ} (h : 0 < n) :
    addOrderOf u = n ↔ ∃ m < n, m.gcd n = 1 ∧ ↑(↑m / ↑n * p) = u :=
  by
  refine' ⟨QuotientAddGroup.induction_on' u fun k hk => _, _⟩; swap
  · rintro ⟨m, h₀, h₁, rfl⟩
    exact add_order_of_div_of_gcd_eq_one h h₁
  have h0 := addOrderOf_nsmul_eq_zero (k : AddCircle p)
  rw [hk, ← coe_nsmul, coe_eq_zero_iff] at h0
  obtain ⟨a, ha⟩ := h0
  have h0 : (_ : 𝕜) ≠ 0 := Nat.cast_ne_zero.2 h.ne'
  rw [nsmul_eq_mul, mul_comm, ← div_eq_iff h0, ← a.div_add_mod' n, add_smul, add_div, zsmul_eq_mul,
    Int.cast_mul, Int.cast_ofNat, mul_assoc, ← mul_div, mul_comm _ p, mul_div_cancel p h0] at ha
  have han : _ = a % n := Int.toNat_of_nonneg (Int.emod_nonneg _ <| by exact_mod_cast h.ne')
  have he := _; refine' ⟨(a % n).toNat, _, _, he⟩
  · rw [← Int.ofNat_lt, han]
    exact Int.emod_lt_of_pos _ (Int.ofNat_lt.2 h)
  · have := (gcd_mul_add_order_of_div_eq p _ h).trans ((congr_arg addOrderOf he).trans hk).symm
    rw [he, Nat.mul_left_eq_self_iff] at this
    · exact this
    · rwa [hk]
  convert congr_arg coe ha using 1
  rw [coe_add, ← Int.cast_ofNat, han, zsmul_eq_mul, mul_div_right_comm, eq_comm, add_left_eq_self, ←
    zsmul_eq_mul, coe_zsmul, coe_period, smul_zero]
#align add_circle.add_order_of_eq_pos_iff AddCircle.addOrderOf_eq_pos_iff

/- warning: add_circle.exists_gcd_eq_one_of_is_of_fin_add_order -> AddCircle.exists_gcd_eq_one_of_isOfFinAddOrder is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))] {p : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p)] {u : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p}, (IsOfFinAddOrder.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) u) -> (Exists.{1} Nat (fun (m : Nat) => And (Eq.{1} Nat (Nat.gcd m (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) u)) (OfNat.ofNat.{0} Nat 1 (OfNat.mk.{0} Nat 1 (One.one.{0} Nat Nat.hasOne)))) (And (LT.lt.{0} Nat Nat.hasLt m (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) u)) (Eq.{succ u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p))) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (Distrib.toHasMul.{u1} 𝕜 (Ring.toDistrib.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))) (HDiv.hDiv.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHDiv.{u1} 𝕜 (DivInvMonoid.toHasDiv.{u1} 𝕜 (DivisionRing.toDivInvMonoid.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))) ((fun (a : Type) (b : Type.{u1}) [self : HasLiftT.{1, succ u1} a b] => self.0) Nat 𝕜 (HasLiftT.mk.{1, succ u1} Nat 𝕜 (CoeTCₓ.coe.{1, succ u1} Nat 𝕜 (Nat.castCoe.{u1} 𝕜 (AddMonoidWithOne.toNatCast.{u1} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u1} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u1} 𝕜 (Ring.toAddCommGroupWithOne.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))))))) m) ((fun (a : Type) (b : Type.{u1}) [self : HasLiftT.{1, succ u1} a b] => self.0) Nat 𝕜 (HasLiftT.mk.{1, succ u1} Nat 𝕜 (CoeTCₓ.coe.{1, succ u1} Nat 𝕜 (Nat.castCoe.{u1} 𝕜 (AddMonoidWithOne.toNatCast.{u1} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u1} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u1} 𝕜 (Ring.toAddCommGroupWithOne.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1)))))))))) (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) u))) p)) u))))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))] {p : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) p)] {u : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p}, (IsOfFinAddOrder.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) u) -> (Exists.{1} Nat (fun (m : Nat) => And (Eq.{1} Nat (Nat.gcd m (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) u)) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (And (LT.lt.{0} Nat instLTNat m (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) u)) (Eq.{succ u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (QuotientAddGroup.mk.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) p) (HMul.hMul.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHMul.{u1} 𝕜 (NonUnitalNonAssocRing.toMul.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))) (HDiv.hDiv.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHDiv.{u1} 𝕜 (LinearOrderedField.toDiv.{u1} 𝕜 _inst_1)) (Nat.cast.{u1} 𝕜 (Semiring.toNatCast.{u1} 𝕜 (DivisionSemiring.toSemiring.{u1} 𝕜 (Semifield.toDivisionSemiring.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))) m) (Nat.cast.{u1} 𝕜 (Semiring.toNatCast.{u1} 𝕜 (DivisionSemiring.toSemiring.{u1} 𝕜 (Semifield.toDivisionSemiring.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))) (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) u))) p)) u))))
Case conversion may be inaccurate. Consider using '#align add_circle.exists_gcd_eq_one_of_is_of_fin_add_order AddCircle.exists_gcd_eq_one_of_isOfFinAddOrderₓ'. -/
theorem exists_gcd_eq_one_of_isOfFinAddOrder {u : AddCircle p} (h : IsOfFinAddOrder u) :
    ∃ m : ℕ, m.gcd (addOrderOf u) = 1 ∧ m < addOrderOf u ∧ ↑((m : 𝕜) / addOrderOf u * p) = u :=
  let ⟨m, hl, hg, he⟩ := (addOrderOf_eq_pos_iff <| addOrderOf_pos' h).1 rfl
  ⟨m, hg, hl, he⟩
#align add_circle.exists_gcd_eq_one_of_is_of_fin_add_order AddCircle.exists_gcd_eq_one_of_isOfFinAddOrder

variable (p)

/- warning: add_circle.set_add_order_of_equiv -> AddCircle.setAddOrderOfEquiv is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p)] {n : Nat}, (LT.lt.{0} Nat Nat.hasLt (OfNat.ofNat.{0} Nat 0 (OfNat.mk.{0} Nat 0 (Zero.zero.{0} Nat Nat.hasZero))) n) -> (Equiv.{succ u1, 1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)) Type.{u1} (Set.hasCoeToSort.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)) (setOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (fun (u : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) => Eq.{1} Nat (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) u) n))) (coeSort.{1, 2} (Set.{0} Nat) Type (Set.hasCoeToSort.{0} Nat) (setOf.{0} Nat (fun (m : Nat) => And (LT.lt.{0} Nat Nat.hasLt m n) (Eq.{1} Nat (Nat.gcd m n) (OfNat.ofNat.{0} Nat 1 (OfNat.mk.{0} Nat 1 (One.one.{0} Nat Nat.hasOne))))))))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) p)] {n : Nat}, (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) n) -> (Equiv.{succ u1, 1} (Set.Elem.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (setOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (fun (u : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) => Eq.{1} Nat (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) u) n))) (Set.Elem.{0} Nat (setOf.{0} Nat (fun (m : Nat) => And (LT.lt.{0} Nat instLTNat m n) (Eq.{1} Nat (Nat.gcd m n) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))))))
Case conversion may be inaccurate. Consider using '#align add_circle.set_add_order_of_equiv AddCircle.setAddOrderOfEquivₓ'. -/
/-- The natural bijection between points of order `n` and natural numbers less than and coprime to
`n`. The inverse of the map sends `m ↦ (m/n * p : add_circle p)` where `m` is coprime to `n` and
satisfies `0 ≤ m < n`. -/
def setAddOrderOfEquiv {n : ℕ} (hn : 0 < n) :
    { u : AddCircle p | addOrderOf u = n } ≃ { m | m < n ∧ m.gcd n = 1 } :=
  Equiv.symm <|
    Equiv.ofBijective (fun m => ⟨↑((m : 𝕜) / n * p), addOrderOf_div_of_gcd_eq_one hn m.Prop.2⟩)
      (by
        refine' ⟨fun m₁ m₂ h => Subtype.ext _, fun u => _⟩
        · simp_rw [Subtype.ext_iff, Subtype.coe_mk] at h
          rw [← sub_eq_zero, ← coe_sub, ← sub_mul, ← sub_div, coe_coe, coe_coe, ← Int.cast_ofNat m₁,
            ← Int.cast_ofNat m₂, ← Int.cast_sub, coe_eq_zero_iff] at h
          obtain ⟨m, hm⟩ := h
          rw [← mul_div_right_comm, eq_div_iff, mul_comm, ← zsmul_eq_mul, mul_smul_comm, ←
            nsmul_eq_mul, ← coe_nat_zsmul, smul_smul,
            (zsmul_strictMono_left hp.out).Injective.eq_iff, mul_comm] at hm
          swap
          · exact Nat.cast_ne_zero.2 hn.ne'
          rw [← @Nat.cast_inj ℤ, ← sub_eq_zero]
          refine' Int.eq_zero_of_abs_lt_dvd ⟨_, hm.symm⟩ (abs_sub_lt_iff.2 ⟨_, _⟩) <;>
            apply (Int.sub_le_self _ <| Nat.cast_nonneg _).trans_lt (Nat.cast_lt.2 _)
          exacts[m₁.2.1, m₂.2.1]
        obtain ⟨m, hmn, hg, he⟩ := (add_order_of_eq_pos_iff hn).mp u.2
        exact ⟨⟨m, hmn, hg⟩, Subtype.ext he⟩)
#align add_circle.set_add_order_of_equiv AddCircle.setAddOrderOfEquiv

/- warning: add_circle.card_add_order_of_eq_totient -> AddCircle.card_addOrderOf_eq_totient is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p)] {n : Nat}, Eq.{1} Nat (Nat.card.{u1} (Subtype.{succ u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (fun (u : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) => Eq.{1} Nat (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) u) n))) (Nat.totient n)
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) p)] {n : Nat}, Eq.{1} Nat (Nat.card.{u1} (Subtype.{succ u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (fun (u : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) => Eq.{1} Nat (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) u) n))) (Nat.totient n)
Case conversion may be inaccurate. Consider using '#align add_circle.card_add_order_of_eq_totient AddCircle.card_addOrderOf_eq_totientₓ'. -/
@[simp]
theorem card_addOrderOf_eq_totient {n : ℕ} :
    Nat.card { u : AddCircle p // addOrderOf u = n } = n.totient :=
  by
  rcases n.eq_zero_or_pos with (rfl | hn)
  · simp only [Nat.totient_zero, addOrderOf_eq_zero_iff]
    rcases em (∃ u : AddCircle p, ¬IsOfFinAddOrder u) with (⟨u, hu⟩ | h)
    · have : Infinite { u : AddCircle p // ¬IsOfFinAddOrder u } :=
        by
        erw [infinite_coe_iff]
        exact infinite_not_isOfFinAddOrder hu
      exact Nat.card_eq_zero_of_infinite
    · have : IsEmpty { u : AddCircle p // ¬IsOfFinAddOrder u } := by simpa using h
      exact Nat.card_of_isEmpty
  · rw [← coe_set_of, Nat.card_congr (set_add_order_of_equiv p hn),
      n.totient_eq_card_lt_and_coprime]
    simp only [Nat.gcd_comm]
#align add_circle.card_add_order_of_eq_totient AddCircle.card_addOrderOf_eq_totient

/- warning: add_circle.finite_set_of_add_order_eq -> AddCircle.finite_setOf_add_order_eq is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (StrictOrderedRing.toOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))))))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (MulZeroClass.toHasZero.{u1} 𝕜 (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (DivisionRing.toRing.{u1} 𝕜 (Field.toDivisionRing.{u1} 𝕜 (LinearOrderedField.toField.{u1} 𝕜 _inst_1))))))))))) p)] {n : Nat}, (LT.lt.{0} Nat Nat.hasLt (OfNat.ofNat.{0} Nat 0 (OfNat.mk.{0} Nat 0 (Zero.zero.{0} Nat Nat.hasZero))) n) -> (Set.Finite.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (setOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (fun (u : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) => Eq.{1} Nat (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCircle.addCommGroup.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) u) n)))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedField.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))] (p : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (StrictOrderedRing.toPartialOrder.{u1} 𝕜 (LinearOrderedRing.toStrictOrderedRing.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1)))))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (CommMonoidWithZero.toZero.{u1} 𝕜 (CommGroupWithZero.toCommMonoidWithZero.{u1} 𝕜 (Semifield.toCommGroupWithZero.{u1} 𝕜 (LinearOrderedSemifield.toSemifield.{u1} 𝕜 (LinearOrderedField.toLinearOrderedSemifield.{u1} 𝕜 _inst_1))))))) p)] {n : Nat}, (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) n) -> (Set.Finite.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (setOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (fun (u : AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) => Eq.{1} Nat (addOrderOf.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (SubNegMonoid.toAddMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddGroup.toSubNegMonoid.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (AddCommGroup.toAddGroup.{u1} (AddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p) (instAddCommGroupAddCircle.{u1} 𝕜 (LinearOrderedRing.toLinearOrderedAddCommGroup.{u1} 𝕜 (LinearOrderedCommRing.toLinearOrderedRing.{u1} 𝕜 (LinearOrderedField.toLinearOrderedCommRing.{u1} 𝕜 _inst_1))) _inst_2 _inst_3 p)))) u) n)))
Case conversion may be inaccurate. Consider using '#align add_circle.finite_set_of_add_order_eq AddCircle.finite_setOf_add_order_eqₓ'. -/
theorem finite_setOf_add_order_eq {n : ℕ} (hn : 0 < n) :
    { u : AddCircle p | addOrderOf u = n }.Finite :=
  finite_coe_iff.mp <|
    Nat.finite_of_card_ne_zero <| by
      simpa only [coe_set_of, card_add_order_of_eq_totient p] using (Nat.totient_pos hn).ne'
#align add_circle.finite_set_of_add_order_eq AddCircle.finite_setOf_add_order_eq

end FiniteOrderPoints

end LinearOrderedField

variable (p : ℝ)

/- warning: add_circle.compact_space -> AddCircle.compactSpace is a dubious translation:
lean 3 declaration is
  forall (p : Real) [_inst_1 : Fact (LT.lt.{0} Real Real.hasLt (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))) p)], CompactSpace.{0} (AddCircle.{0} Real Real.linearOrderedAddCommGroup (UniformSpace.toTopologicalSpace.{0} Real (PseudoMetricSpace.toUniformSpace.{0} Real Real.pseudoMetricSpace)) Real.orderTopology p) (AddCircle.topologicalSpace.{0} Real Real.linearOrderedAddCommGroup (UniformSpace.toTopologicalSpace.{0} Real (PseudoMetricSpace.toUniformSpace.{0} Real Real.pseudoMetricSpace)) Real.orderTopology p)
but is expected to have type
  forall (p : Real) [_inst_1 : Fact (LT.lt.{0} Real Real.instLTReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)) p)], CompactSpace.{0} (AddCircle.{0} Real Real.instLinearOrderedAddCommGroupReal (UniformSpace.toTopologicalSpace.{0} Real (PseudoMetricSpace.toUniformSpace.{0} Real Real.pseudoMetricSpace)) instOrderTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstPreorderReal p) (instTopologicalSpaceAddCircle.{0} Real Real.instLinearOrderedAddCommGroupReal (UniformSpace.toTopologicalSpace.{0} Real (PseudoMetricSpace.toUniformSpace.{0} Real Real.pseudoMetricSpace)) instOrderTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstPreorderReal p)
Case conversion may be inaccurate. Consider using '#align add_circle.compact_space AddCircle.compactSpaceₓ'. -/
/-- The "additive circle" `ℝ ⧸ (ℤ ∙ p)` is compact. -/
instance compactSpace [Fact (0 < p)] : CompactSpace <| AddCircle p :=
  by
  rw [← isCompact_univ_iff, ← coe_image_Icc_eq p 0]
  exact is_compact_Icc.image (AddCircle.continuous_mk' p)
#align add_circle.compact_space AddCircle.compactSpace

/-- The action on `ℝ` by right multiplication of its the subgroup `zmultiples p` (the multiples of
`p:ℝ`) is properly discontinuous. -/
instance : ProperlyDiscontinuousVAdd (zmultiples p).opposite ℝ :=
  (zmultiples p).properlyDiscontinuousVAdd_opposite_of_tendsto_cofinite
    (AddSubgroup.tendsto_zmultiples_subtype_cofinite p)

/-- The "additive circle" `ℝ ⧸ (ℤ ∙ p)` is Hausdorff. -/
instance : T2Space (AddCircle p) :=
  t2Space_of_properlyDiscontinuousVAdd_of_t2Space

/-- The "additive circle" `ℝ ⧸ (ℤ ∙ p)` is normal. -/
instance [Fact (0 < p)] : NormalSpace (AddCircle p) :=
  normalOfCompactT2

/-- The "additive circle" `ℝ ⧸ (ℤ ∙ p)` is second-countable. -/
instance : SecondCountableTopology (AddCircle p) :=
  QuotientAddGroup.secondCountableTopology

end AddCircle

attribute [local instance] Real.fact_zero_lt_one

/- ./././Mathport/Syntax/Translate/Command.lean:328:31: unsupported: @[derive] abbrev -/
#print UnitAddCircle /-
/-- The unit circle `ℝ ⧸ ℤ`. -/
abbrev UnitAddCircle :=
  AddCircle (1 : ℝ)
#align unit_add_circle UnitAddCircle
-/

section IdentifyIccEnds

/-! This section proves that for any `a`, the natural map from `[a, a + p] ⊂ 𝕜` to `add_circle p`
gives an identification of `add_circle p`, as a topological space, with the quotient of `[a, a + p]`
by the equivalence relation identifying the endpoints. -/


namespace AddCircle

variable [LinearOrderedAddCommGroup 𝕜] [TopologicalSpace 𝕜] [OrderTopology 𝕜] (p a : 𝕜)
  [hp : Fact (0 < p)]

include hp

-- mathport name: expr𝕋
local notation "𝕋" => AddCircle p

/- warning: add_circle.endpoint_ident -> AddCircle.EndpointIdent is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) (a : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)], (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) -> (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) -> Prop
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] (_inst_2 : 𝕜) (_inst_3 : 𝕜) [p : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) _inst_2)], (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3 (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) _inst_3 _inst_2))) -> (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) _inst_3 (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) _inst_3 _inst_2))) -> Prop
Case conversion may be inaccurate. Consider using '#align add_circle.endpoint_ident AddCircle.EndpointIdentₓ'. -/
/-- The relation identifying the endpoints of `Icc a (a + p)`. -/
inductive EndpointIdent : Icc a (a + p) → Icc a (a + p) → Prop
  |
  mk :
    endpoint_ident ⟨a, left_mem_Icc.mpr <| le_add_of_nonneg_right hp.out.le⟩
      ⟨a + p, right_mem_Icc.mpr <| le_add_of_nonneg_right hp.out.le⟩
#align add_circle.endpoint_ident AddCircle.EndpointIdent

variable [Archimedean 𝕜]

/- warning: add_circle.equiv_Icc_quot -> AddCircle.equivIccQuot is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) (a : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))], Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) (a : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))], Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp))
Case conversion may be inaccurate. Consider using '#align add_circle.equiv_Icc_quot AddCircle.equivIccQuotₓ'. -/
/-- The equivalence between `add_circle p` and the quotient of `[a, a + p]` by the relation
identifying the endpoints. -/
def equivIccQuot : 𝕋 ≃ Quot (EndpointIdent p a)
    where
  toFun x := Quot.mk _ <| inclusion Ico_subset_Icc_self (equivIco _ _ x)
  invFun x :=
    Quot.liftOn x coe <| by
      rintro _ _ ⟨_⟩
      exact (coe_add_period p a).symm
  left_inv := (equivIco p a).symm_apply_apply
  right_inv :=
    Quot.ind <| by
      rintro ⟨x, hx⟩
      have := _
      rcases ne_or_eq x (a + p) with (h | rfl)
      · revert x
        exact this
      · rw [← Quot.sound endpoint_ident.mk]
        exact this _ _ (lt_add_of_pos_right a hp.out).Ne
      intro x hx h
      congr
      ext1
      apply congr_arg Subtype.val ((equiv_Ico p a).right_inv ⟨x, hx.1, hx.2.lt_of_ne h⟩)
#align add_circle.equiv_Icc_quot AddCircle.equivIccQuot

/- warning: add_circle.equiv_Icc_quot_comp_mk_eq_to_Ico_mod -> AddCircle.equivIccQuot_comp_mk_eq_toIcoMod is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) (a : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))], Eq.{succ u1} (𝕜 -> (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp))) (Function.comp.{succ u1, succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp)) (coeFn.{succ u1, succ u1} (Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp))) (fun (_x : Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp))) => (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) -> (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp))) (Equiv.hasCoeToFun.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp))) (AddCircle.equivIccQuot.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp _inst_4)) (Quotient.mk''.{succ u1} 𝕜 (QuotientAddGroup.leftRel.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)))) (fun (x : 𝕜) => Quot.mk.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (toIcoMod.{u1} 𝕜 _inst_1 _inst_4 p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp) a x) (Set.Ico_subset_Icc_self.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (toIcoMod.{u1} 𝕜 _inst_1 _inst_4 p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp) a x) (toIcoMod_mem_Ico.{u1} 𝕜 _inst_1 _inst_4 p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp) a x))))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) (a : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))], Eq.{succ u1} (𝕜 -> (Quot.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp))) (Function.comp.{succ u1, succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp)) (FunLike.coe.{succ u1, succ u1, succ u1} (Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (fun (_x : AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) => (fun (x._@.Mathlib.Logic.Equiv.Defs._hyg.808 : AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) => Quot.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp)) _x) (Equiv.instFunLikeEquiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp))) (AddCircle.equivIccQuot.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp _inst_4)) (Quotient.mk''.{succ u1} 𝕜 (QuotientAddGroup.leftRel.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)))) (fun (x : 𝕜) => Quot.mk.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (toIcoMod.{u1} 𝕜 _inst_1 _inst_4 p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp) a x) (Set.Ico_subset_Icc_self.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (toIcoMod.{u1} 𝕜 _inst_1 _inst_4 p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp) a x) (toIcoMod_mem_Ico.{u1} 𝕜 _inst_1 _inst_4 p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp) a x))))
Case conversion may be inaccurate. Consider using '#align add_circle.equiv_Icc_quot_comp_mk_eq_to_Ico_mod AddCircle.equivIccQuot_comp_mk_eq_toIcoModₓ'. -/
theorem equivIccQuot_comp_mk_eq_toIcoMod :
    equivIccQuot p a ∘ Quotient.mk'' = fun x =>
      Quot.mk _ ⟨toIcoMod hp.out a x, Ico_subset_Icc_self <| toIcoMod_mem_Ico _ _ x⟩ :=
  rfl
#align add_circle.equiv_Icc_quot_comp_mk_eq_to_Ico_mod AddCircle.equivIccQuot_comp_mk_eq_toIcoMod

/- warning: add_circle.equiv_Icc_quot_comp_mk_eq_to_Ioc_mod -> AddCircle.equivIccQuot_comp_mk_eq_toIocMod is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) (a : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))], Eq.{succ u1} (𝕜 -> (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp))) (Function.comp.{succ u1, succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp)) (coeFn.{succ u1, succ u1} (Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp))) (fun (_x : Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp))) => (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) -> (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp))) (Equiv.hasCoeToFun.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp))) (AddCircle.equivIccQuot.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp _inst_4)) (Quotient.mk''.{succ u1} 𝕜 (QuotientAddGroup.leftRel.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)))) (fun (x : 𝕜) => Quot.mk.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (toIocMod.{u1} 𝕜 _inst_1 _inst_4 p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp) a x) (Set.Ioc_subset_Icc_self.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (toIocMod.{u1} 𝕜 _inst_1 _inst_4 p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp) a x) (toIocMod_mem_Ioc.{u1} 𝕜 _inst_1 _inst_4 p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp) a x))))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) (a : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))], Eq.{succ u1} (𝕜 -> (Quot.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp))) (Function.comp.{succ u1, succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp)) (FunLike.coe.{succ u1, succ u1, succ u1} (Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (fun (_x : AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) => (fun (x._@.Mathlib.Logic.Equiv.Defs._hyg.808 : AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) => Quot.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp)) _x) (Equiv.instFunLikeEquiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp))) (AddCircle.equivIccQuot.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp _inst_4)) (Quotient.mk''.{succ u1} 𝕜 (QuotientAddGroup.leftRel.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) p)))) (fun (x : 𝕜) => Quot.mk.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (toIocMod.{u1} 𝕜 _inst_1 _inst_4 p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp) a x) (Set.Ioc_subset_Icc_self.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (toIocMod.{u1} 𝕜 _inst_1 _inst_4 p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp) a x) (toIocMod_mem_Ioc.{u1} 𝕜 _inst_1 _inst_4 p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp) a x))))
Case conversion may be inaccurate. Consider using '#align add_circle.equiv_Icc_quot_comp_mk_eq_to_Ioc_mod AddCircle.equivIccQuot_comp_mk_eq_toIocModₓ'. -/
theorem equivIccQuot_comp_mk_eq_toIocMod :
    equivIccQuot p a ∘ Quotient.mk'' = fun x =>
      Quot.mk _ ⟨toIocMod hp.out a x, Ioc_subset_Icc_self <| toIocMod_mem_Ioc _ _ x⟩ :=
  by
  rw [equiv_Icc_quot_comp_mk_eq_to_Ico_mod]; funext
  by_cases a ≡ x [PMOD p]
  · simp_rw [(modeq_iff_to_Ico_mod_eq_left hp.out).1 h, (modeq_iff_to_Ioc_mod_eq_right hp.out).1 h]
    exact Quot.sound endpoint_ident.mk
  · simp_rw [(not_modeq_iff_to_Ico_mod_eq_to_Ioc_mod hp.out).1 h]
#align add_circle.equiv_Icc_quot_comp_mk_eq_to_Ioc_mod AddCircle.equivIccQuot_comp_mk_eq_toIocMod

/- warning: add_circle.homeo_Icc_quot -> AddCircle.homeoIccQuot is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) (a : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))], Homeomorph.{u1, u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp)) (AddCircle.topologicalSpace.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.topologicalSpace.{u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp) (Subtype.topologicalSpace.{u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) _inst_2))
but is expected to have type
  forall {𝕜 : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] (p : 𝕜) (a : 𝕜) [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))], Homeomorph.{u1, u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp)) (instTopologicalSpaceAddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (instTopologicalSpaceQuot.{u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp) (instTopologicalSpaceSubtype.{u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) _inst_2))
Case conversion may be inaccurate. Consider using '#align add_circle.homeo_Icc_quot AddCircle.homeoIccQuotₓ'. -/
/-- The natural map from `[a, a + p] ⊂ 𝕜` with endpoints identified to `𝕜 / ℤ • p`, as a
homeomorphism of topological spaces. -/
def homeoIccQuot : 𝕋 ≃ₜ Quot (EndpointIdent p a)
    where
  toEquiv := equivIccQuot p a
  continuous_toFun :=
    by
    simp_rw [quotient_map_quotient_mk.continuous_iff, continuous_iff_continuousAt,
      continuousAt_iff_continuous_left_right]
    intro x; constructor
    on_goal 1 => erw [equiv_Icc_quot_comp_mk_eq_to_Ioc_mod]
    on_goal 2 => erw [equiv_Icc_quot_comp_mk_eq_to_Ico_mod]
    all_goals
      apply continuous_quot_mk.continuous_at.comp_continuous_within_at
      rw [inducing_coe.continuous_within_at_iff]
    · apply continuous_left_toIocMod
    · apply continuous_right_toIcoMod
  continuous_invFun :=
    continuous_quot_lift _ ((AddCircle.continuous_mk' p).comp continuous_subtype_val)
#align add_circle.homeo_Icc_quot AddCircle.homeoIccQuot

/-! We now show that a continuous function on `[a, a + p]` satisfying `f a = f (a + p)` is the
pullback of a continuous function on `add_circle p`. -/


variable {p a}

/- warning: add_circle.lift_Ico_eq_lift_Icc -> AddCircle.liftIco_eq_lift_Icc is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} {B : Type.{u2}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} {a : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {f : 𝕜 -> B} (h : Eq.{succ u2} B (f a) (f (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))), Eq.{max (succ u1) (succ u2)} ((AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) -> B) (AddCircle.liftIco.{u1, u2} 𝕜 B _inst_1 _inst_2 _inst_3 p hp a _inst_4 f) (Function.comp.{succ u1, succ u1, succ u2} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp)) B (Quot.lift.{succ u1, succ u2} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp) B (Set.restrict.{u1, u2} 𝕜 (fun (ᾰ : 𝕜) => B) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) f) (fun (a_1 : coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (b : coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (a_2 : AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp a_1 b) => AddCircle.EndpointIdent.dcasesOn.{0, u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp (fun (t_1 : coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (t_2 : coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (a_2_1 : AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp t_1 t_2) => (Eq.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a_1 t_1) -> (Eq.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) b t_2) -> (HEq.{0} (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp a_1 b) a_2 (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp t_1 t_2) a_2_1) -> (Eq.{succ u2} B (Set.restrict.{u1, u2} 𝕜 (fun (ᾰ : 𝕜) => B) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) f a_1) (Set.restrict.{u1, u2} 𝕜 (fun (ᾰ : 𝕜) => B) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) f b))) a_1 b a_2 (fun (H_1 : Eq.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a_1 (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp)))))) => Eq.ndrec.{0, succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp))))) (fun (a_1 : coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) => forall (a_2 : AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp a_1 b), (Eq.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) b (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp)))))) -> (HEq.{0} (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp a_1 b) a_2 (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp))))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp)))))) (AddCircle.EndpointIdent.mk.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp)) -> (Eq.{succ u2} B (Set.restrict.{u1, u2} 𝕜 (fun (ᾰ : 𝕜) => B) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) f a_1) (Set.restrict.{u1, u2} 𝕜 (fun (ᾰ : 𝕜) => B) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) f b))) (fun (a_2 : AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp))))) b) (H_2 : Eq.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) b (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp)))))) => Eq.ndrec.{0, succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp))))) (fun (b : coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) => forall (a_2 : AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp))))) b), (HEq.{0} (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp))))) b) a_2 (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp))))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp)))))) (AddCircle.EndpointIdent.mk.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp)) -> (Eq.{succ u2} B (Set.restrict.{u1, u2} 𝕜 (fun (ᾰ : 𝕜) => B) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) f (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp)))))) (Set.restrict.{u1, u2} 𝕜 (fun (ᾰ : 𝕜) => B) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) f b))) (fun (a_2 : AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp))))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp)))))) (H_3 : HEq.{0} (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp))))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp)))))) a_2 (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp))))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp)))))) (AddCircle.EndpointIdent.mk.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp)) => h) b (Eq.symm.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) b (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp))))) H_2) a_2) a_1 (Eq.symm.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a_1 (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p) hp))))) H_1) a_2) (rfl.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a_1) (rfl.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) b) (HEq.refl.{0} (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp a_1 b) a_2))) (coeFn.{succ u1, succ u1} (Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp))) (fun (_x : Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp))) => (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) -> (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp))) (Equiv.hasCoeToFun.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (coeSort.{succ u1, succ (succ u1)} (Set.{u1} 𝕜) Type.{u1} (Set.hasCoeToSort.{u1} 𝕜) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp))) (AddCircle.equivIccQuot.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp _inst_4)))
but is expected to have type
  forall {𝕜 : Type.{u1}} {B : Type.{u2}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} {a : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))] {f : 𝕜 -> B} (h : Eq.{succ u2} B (f a) (f (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))), Eq.{max (succ u1) (succ u2)} ((AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) -> B) (AddCircle.liftIco.{u1, u2} 𝕜 B _inst_1 _inst_2 _inst_3 p hp a _inst_4 f) (Function.comp.{succ u1, succ u1, succ u2} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp)) B (Quot.lift.{succ u1, succ u2} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp) B (Set.restrict.{u1, u2} 𝕜 (fun (ᾰ : 𝕜) => B) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) f) (fun (a_1 : Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (b : Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (a_2 : AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp a_1 b) => AddCircle.EndpointIdent.casesOn.{0, u1} 𝕜 _inst_1 p a hp (fun (t_1 : Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (t_2 : Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (a_2_1 : AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp t_1 t_2) => (Eq.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a_1 t_1) -> (Eq.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) b t_2) -> (HEq.{0} (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp a_1 b) a_2 (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp t_1 t_2) a_2_1) -> (Eq.{succ u2} B (Set.restrict.{u1, u2} 𝕜 (fun (ᾰ : 𝕜) => B) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) f a_1) (Set.restrict.{u1, u2} 𝕜 (fun (ᾰ : 𝕜) => B) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) f b))) a_1 b a_2 (fun (H_1 : Eq.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a_1 (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp)))))) => Eq.ndrec.{0, succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))) (fun (a_1 : Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) => forall (a_2 : AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp a_1 b), (Eq.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) b (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp)))))) -> (HEq.{0} (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp a_1 b) a_2 (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp)))))) (AddCircle.EndpointIdent.mk.{u1} 𝕜 _inst_1 p a hp)) -> (Eq.{succ u2} B (Set.restrict.{u1, u2} 𝕜 (fun (ᾰ : 𝕜) => B) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) f a_1) (Set.restrict.{u1, u2} 𝕜 (fun (ᾰ : 𝕜) => B) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) f b))) (fun (a_2 : AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))) b) (H_2 : Eq.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) b (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp)))))) => Eq.ndrec.{0, succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))) (fun (b : Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) => forall (a_2 : AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))) b), (HEq.{0} (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))) b) a_2 (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp)))))) (AddCircle.EndpointIdent.mk.{u1} 𝕜 _inst_1 p a hp)) -> (Eq.{succ u2} B (Set.restrict.{u1, u2} 𝕜 (fun (ᾰ : 𝕜) => B) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) f (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp)))))) (Set.restrict.{u1, u2} 𝕜 (fun (ᾰ : 𝕜) => B) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) f b))) (fun (a_2 : AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp)))))) (H_3 : HEq.{0} (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp)))))) a_2 (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp)))))) (AddCircle.EndpointIdent.mk.{u1} 𝕜 _inst_1 p a hp)) => Eq.ndrec.{0, 0} (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp)))))) (AddCircle.EndpointIdent.mk.{u1} 𝕜 _inst_1 p a hp) (fun (a._@.Mathlib.Topology.Instances.AddCircle._hyg.7672 : AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp)))))) => Eq.{succ u2} B (Set.restrict.{u1, u2} 𝕜 (fun (a : 𝕜) => B) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) f (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp)))))) (Set.restrict.{u1, u2} 𝕜 (fun (a : 𝕜) => B) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) f (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))))) h a_2 (Eq.symm.{0} (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp)))))) a_2 (AddCircle.EndpointIdent.mk.{u1} 𝕜 _inst_1 p a hp) (eq_of_heq.{0} (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))) (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp)))))) a_2 (AddCircle.EndpointIdent.mk.{u1} 𝕜 _inst_1 p a hp) H_3))) b (Eq.symm.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) b (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p) (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.right_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))) H_2) a_2) a_1 (Eq.symm.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a_1 (Subtype.mk.{succ u1} 𝕜 (fun (x : 𝕜) => Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) x (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a (Iff.mpr (Membership.mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.instMembershipSet.{u1} 𝕜) a (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (LE.le.{u1} 𝕜 (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (Set.left_mem_Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p)) (le_add_of_nonneg_right.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))) (Preorder.toLE.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OrderedAddCommGroup.to_covariantClass_left_le.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)) a p (LT.lt.le.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p (Fact.out (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p) hp))))) H_1) a_2) (Eq.refl.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) a_1) (Eq.refl.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) b) (HEq.refl.{0} (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp a_1 b) a_2))) (FunLike.coe.{succ u1, succ u1, succ u1} (Equiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp))) (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (fun (_x : AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) => (fun (x._@.Mathlib.Logic.Equiv.Defs._hyg.808 : AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) => Quot.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp)) _x) (Equiv.instFunLikeEquiv.{succ u1, succ u1} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (Quot.{succ u1} (Set.Elem.{u1} 𝕜 (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) (AddCircle.EndpointIdent.{u1} 𝕜 _inst_1 p a hp))) (AddCircle.equivIccQuot.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p a hp _inst_4)))
Case conversion may be inaccurate. Consider using '#align add_circle.lift_Ico_eq_lift_Icc AddCircle.liftIco_eq_lift_Iccₓ'. -/
theorem liftIco_eq_lift_Icc {f : 𝕜 → B} (h : f a = f (a + p)) :
    liftIco p a f =
      Quot.lift (restrict (Icc a <| a + p) f)
          (by
            rintro _ _ ⟨_⟩
            exact h) ∘
        equivIccQuot p a :=
  rfl
#align add_circle.lift_Ico_eq_lift_Icc AddCircle.liftIco_eq_lift_Icc

/- warning: add_circle.lift_Ico_continuous -> AddCircle.liftIco_continuous is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} {B : Type.{u2}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} {a : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] [_inst_5 : TopologicalSpace.{u2} B] {f : 𝕜 -> B}, (Eq.{succ u2} B (f a) (f (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) -> (ContinuousOn.{u1, u2} 𝕜 B _inst_2 _inst_5 f (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toHasAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) -> (Continuous.{u1, u2} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) B (AddCircle.topologicalSpace.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) _inst_5 (AddCircle.liftIco.{u1, u2} 𝕜 B _inst_1 _inst_2 _inst_3 p hp a _inst_4 f))
but is expected to have type
  forall {𝕜 : Type.{u1}} {B : Type.{u2}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} {a : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))] [_inst_5 : TopologicalSpace.{u2} B] {f : 𝕜 -> B}, (Eq.{succ u2} B (f a) (f (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) -> (ContinuousOn.{u1, u2} 𝕜 B _inst_2 _inst_5 f (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) a (HAdd.hAdd.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHAdd.{u1} 𝕜 (AddZeroClass.toAdd.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))) a p))) -> (Continuous.{u1, u2} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) B (instTopologicalSpaceAddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) _inst_5 (AddCircle.liftIco.{u1, u2} 𝕜 B _inst_1 _inst_2 _inst_3 p hp a _inst_4 f))
Case conversion may be inaccurate. Consider using '#align add_circle.lift_Ico_continuous AddCircle.liftIco_continuousₓ'. -/
theorem liftIco_continuous [TopologicalSpace B] {f : 𝕜 → B} (hf : f a = f (a + p))
    (hc : ContinuousOn f <| Icc a (a + p)) : Continuous (liftIco p a f) :=
  by
  rw [lift_Ico_eq_lift_Icc hf]
  refine' Continuous.comp _ (homeo_Icc_quot p a).continuous_toFun
  exact continuous_coinduced_dom.mpr (continuous_on_iff_continuous_restrict.mp hc)
#align add_circle.lift_Ico_continuous AddCircle.liftIco_continuous

section ZeroBased

/- warning: add_circle.lift_Ico_zero_coe_apply -> AddCircle.liftIco_zero_coe_apply is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} {B : Type.{u2}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {f : 𝕜 -> B} {x : 𝕜}, (Membership.Mem.{u1, u1} 𝕜 (Set.{u1} 𝕜) (Set.hasMem.{u1} 𝕜) x (Set.Ico.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)) -> (Eq.{succ u2} B (AddCircle.liftIco.{u1, u2} 𝕜 B _inst_1 _inst_2 _inst_3 p hp (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) _inst_4 f ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (HasLiftT.mk.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (CoeTCₓ.coe.{succ u1, succ u1} 𝕜 (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) (AddCircle.hasCoeT.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p))) x)) (f x))
but is expected to have type
  forall {𝕜 : Type.{u2}} {B : Type.{u1}} [_inst_1 : LinearOrderedAddCommGroup.{u2} 𝕜] [_inst_2 : TopologicalSpace.{u2} 𝕜] [_inst_3 : OrderTopology.{u2} 𝕜 _inst_2 (PartialOrder.toPreorder.{u2} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1)))] {p : 𝕜} [hp : Fact (LT.lt.{u2} 𝕜 (Preorder.toLT.{u2} 𝕜 (PartialOrder.toPreorder.{u2} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1)))) (OfNat.ofNat.{u2} 𝕜 0 (Zero.toOfNat0.{u2} 𝕜 (NegZeroClass.toZero.{u2} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u2} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u2} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u2} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u2} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1))))))))) p)] [_inst_4 : Archimedean.{u2} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u2} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u2} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u2} 𝕜 _inst_1)))] {f : 𝕜 -> B} {x : 𝕜}, (Membership.mem.{u2, u2} 𝕜 (Set.{u2} 𝕜) (Set.instMembershipSet.{u2} 𝕜) x (Set.Ico.{u2} 𝕜 (PartialOrder.toPreorder.{u2} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1))) (OfNat.ofNat.{u2} 𝕜 0 (Zero.toOfNat0.{u2} 𝕜 (NegZeroClass.toZero.{u2} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u2} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u2} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u2} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u2} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1))))))))) p)) -> (Eq.{succ u1} B (AddCircle.liftIco.{u2, u1} 𝕜 B _inst_1 _inst_2 _inst_3 p hp (OfNat.ofNat.{u2} 𝕜 0 (Zero.toOfNat0.{u2} 𝕜 (NegZeroClass.toZero.{u2} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u2} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u2} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u2} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u2} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1))))))))) _inst_4 f (QuotientAddGroup.mk.{u2} 𝕜 (AddCommGroup.toAddGroup.{u2} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1))) (AddSubgroup.zmultiples.{u2} 𝕜 (AddCommGroup.toAddGroup.{u2} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u2} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u2} 𝕜 _inst_1))) p) x)) (f x))
Case conversion may be inaccurate. Consider using '#align add_circle.lift_Ico_zero_coe_apply AddCircle.liftIco_zero_coe_applyₓ'. -/
theorem liftIco_zero_coe_apply {f : 𝕜 → B} {x : 𝕜} (hx : x ∈ Ico 0 p) : liftIco p 0 f ↑x = f x :=
  liftIco_coe_apply (by rwa [zero_add])
#align add_circle.lift_Ico_zero_coe_apply AddCircle.liftIco_zero_coe_apply

/- warning: add_circle.lift_Ico_zero_continuous -> AddCircle.liftIco_zero_continuous is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} {B : Type.{u2}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)] [_inst_4 : Archimedean.{u1} 𝕜 (OrderedCancelAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toOrderedCancelAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] [_inst_5 : TopologicalSpace.{u2} B] {f : 𝕜 -> B}, (Eq.{succ u2} B (f (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))))) (f p)) -> (ContinuousOn.{u1, u2} 𝕜 B _inst_2 _inst_5 f (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) p)) -> (Continuous.{u1, u2} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) B (AddCircle.topologicalSpace.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) _inst_5 (AddCircle.liftIco.{u1, u2} 𝕜 B _inst_1 _inst_2 _inst_3 p hp (OfNat.ofNat.{u1} 𝕜 0 (OfNat.mk.{u1} 𝕜 0 (Zero.zero.{u1} 𝕜 (AddZeroClass.toHasZero.{u1} 𝕜 (AddMonoid.toAddZeroClass.{u1} 𝕜 (SubNegMonoid.toAddMonoid.{u1} 𝕜 (AddGroup.toSubNegMonoid.{u1} 𝕜 (AddCommGroup.toAddGroup.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) _inst_4 f))
but is expected to have type
  forall {𝕜 : Type.{u1}} {B : Type.{u2}} [_inst_1 : LinearOrderedAddCommGroup.{u1} 𝕜] [_inst_2 : TopologicalSpace.{u1} 𝕜] [_inst_3 : OrderTopology.{u1} 𝕜 _inst_2 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))] {p : 𝕜} [hp : Fact (LT.lt.{u1} 𝕜 (Preorder.toLT.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)] [_inst_4 : Archimedean.{u1} 𝕜 (LinearOrderedAddCommMonoid.toOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedCancelAddCommMonoid.toLinearOrderedAddCommMonoid.{u1} 𝕜 (LinearOrderedAddCommGroup.toLinearOrderedAddCancelCommMonoid.{u1} 𝕜 _inst_1)))] [_inst_5 : TopologicalSpace.{u2} B] {f : 𝕜 -> B}, (Eq.{succ u2} B (f (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1)))))))))) (f p)) -> (ContinuousOn.{u1, u2} 𝕜 B _inst_2 _inst_5 f (Set.Icc.{u1} 𝕜 (PartialOrder.toPreorder.{u1} 𝕜 (OrderedAddCommGroup.toPartialOrder.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))) (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) p)) -> (Continuous.{u1, u2} (AddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) B (instTopologicalSpaceAddCircle.{u1} 𝕜 _inst_1 _inst_2 _inst_3 p) _inst_5 (AddCircle.liftIco.{u1, u2} 𝕜 B _inst_1 _inst_2 _inst_3 p hp (OfNat.ofNat.{u1} 𝕜 0 (Zero.toOfNat0.{u1} 𝕜 (NegZeroClass.toZero.{u1} 𝕜 (SubNegZeroMonoid.toNegZeroClass.{u1} 𝕜 (SubtractionMonoid.toSubNegZeroMonoid.{u1} 𝕜 (SubtractionCommMonoid.toSubtractionMonoid.{u1} 𝕜 (AddCommGroup.toDivisionAddCommMonoid.{u1} 𝕜 (OrderedAddCommGroup.toAddCommGroup.{u1} 𝕜 (LinearOrderedAddCommGroup.toOrderedAddCommGroup.{u1} 𝕜 _inst_1))))))))) _inst_4 f))
Case conversion may be inaccurate. Consider using '#align add_circle.lift_Ico_zero_continuous AddCircle.liftIco_zero_continuousₓ'. -/
theorem liftIco_zero_continuous [TopologicalSpace B] {f : 𝕜 → B} (hf : f 0 = f p)
    (hc : ContinuousOn f <| Icc 0 p) : Continuous (liftIco p 0 f) :=
  liftIco_continuous (by rwa [zero_add] : f 0 = f (0 + p)) (by rwa [zero_add])
#align add_circle.lift_Ico_zero_continuous AddCircle.liftIco_zero_continuous

end ZeroBased

end AddCircle

end IdentifyIccEnds

