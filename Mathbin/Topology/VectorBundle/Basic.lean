/-
Copyright © 2020 Nicolò Cavalleri. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Nicolò Cavalleri, Sebastien Gouezel, Heather Macbeth, Patrick Massot, Floris van Doorn

! This file was ported from Lean 3 source module topology.vector_bundle.basic
! leanprover-community/mathlib commit 38df578a6450a8c5142b3727e3ae894c2300cae0
! Please do not edit these lines, except to modify the commit id
! if you have ported upstream changes.
-/
import Mathbin.Analysis.NormedSpace.BoundedLinearMaps
import Mathbin.Topology.FiberBundle.Basic

/-!
# Vector bundles

> THIS FILE IS SYNCHRONIZED WITH MATHLIB4.
> Any changes to this file require a corresponding PR to mathlib4.

In this file we define (topological) vector bundles.

Let `B` be the base space, let `F` be a normed space over a normed field `R`, and let
`E : B → Type*` be a `fiber_bundle` with fiber `F`, in which, for each `x`, the fiber `E x` is a
topological vector space over `R`.

To have a vector bundle structure on `bundle.total_space E`, one should additionally have the
following properties:

* The bundle trivializations in the trivialization atlas should be continuous linear equivs in the
fibers;
* For any two trivializations `e`, `e'` in the atlas the transition function considered as a map
from `B` into `F →L[R] F` is continuous on `e.base_set ∩ e'.base_set` with respect to the operator
norm topology on `F →L[R] F`.

If these conditions are satisfied, we register the typeclass `vector_bundle R F E`.

We define constructions on vector bundles like pullbacks and direct sums in other files.

## Main Definitions

* `trivialization.is_linear`: a class stating that a trivialization is fiberwise linear on its base
  set.
* `trivialization.linear_equiv_at` and `trivialization.continuous_linear_map_at` are the
  (continuous) linear fiberwise equivalences a trivialization induces.
* They have forward maps `trivialization.linear_map_at` / `trivialization.continuous_linear_map_at`
  and inverses `trivialization.symmₗ` / `trivialization.symmL`. Note that these are all defined
  everywhere, since they are extended using the zero function.
* `trivialization.coord_changeL` is the coordinate change induced by two trivializations. It only
  makes sense on the intersection of their base sets, but is extended outside it using the identity.
* Given a continuous (semi)linear map between `E x` and `E' y` where `E` and `E'` are bundles over
  possibly different base sets, `continuous_linear_map.in_coordinates` turns this into a continuous
  (semi)linear map between the chosen fibers of those bundles.

## Implementation notes

The implementation choices in the vector bundle definition are discussed in the "Implementation
notes" section of `topology.fiber_bundle.basic`.

## Tags
Vector bundle
-/


noncomputable section

open Bundle Set

open Classical Bundle

variable (R : Type _) {B : Type _} (F : Type _) (E : B → Type _)

section TopologicalVectorSpace

variable {B F E} [Semiring R] [TopologicalSpace F] [TopologicalSpace B]

#print Pretrivialization.IsLinear /-
/-- A mixin class for `pretrivialization`, stating that a pretrivialization is fiberwise linear with
respect to given module structures on its fibers and the model fiber. -/
protected class Pretrivialization.IsLinear [AddCommMonoid F] [Module R F] [∀ x, AddCommMonoid (E x)]
  [∀ x, Module R (E x)] (e : Pretrivialization F (π E)) : Prop where
  linear : ∀ b ∈ e.baseSet, IsLinearMap R fun x : E b => (e (totalSpaceMk b x)).2
#align pretrivialization.is_linear Pretrivialization.IsLinear
-/

namespace Pretrivialization

variable {F E} (e : Pretrivialization F (π E)) {x : TotalSpace E} {b : B} {y : E b}

/- warning: pretrivialization.linear -> Pretrivialization.linear is a dubious translation:
lean 3 declaration is
  forall (R : Type.{u1}) {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] (e : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_7 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_6 x)] [_inst_8 : Pretrivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) -> (IsLinearMap.{u1, u4, u3} R (E b) F _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (fun (x : E b) => Prod.snd.{u2, u3} B F (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Pretrivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) e (Bundle.totalSpaceMk.{u2, u4} B E b x))))
but is expected to have type
  forall (R : Type.{u3}) {B : Type.{u1}} {F : Type.{u4}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u3} R] [_inst_2 : TopologicalSpace.{u4} F] [_inst_3 : TopologicalSpace.{u1} B] (e : Pretrivialization.{u1, u4, max u1 u2} B F (Bundle.TotalSpace.{u1, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u1, u2} B E)) [_inst_4 : AddCommMonoid.{u4} F] [_inst_5 : Module.{u3, u4} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_7 : forall (x : B), Module.{u3, u2} R (E x) _inst_1 (_inst_6 x)] [_inst_8 : Pretrivialization.IsLinear.{u3, u1, u4, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] {b : B}, (Membership.mem.{u1, u1} B (Set.{u1} B) (Set.instMembershipSet.{u1} B) b (Pretrivialization.baseSet.{u1, u4, max u1 u2} B F (Bundle.TotalSpace.{u1, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u1, u2} B E) e)) -> (IsLinearMap.{u3, u2, u4} R (E b) F _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (fun (x : E b) => Prod.snd.{u1, u4} B F (Pretrivialization.toFun'.{u1, u4, max u1 u2} B F (Bundle.TotalSpace.{u1, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u1, u2} B E) e (Bundle.totalSpaceMk.{u1, u2} B E b x))))
Case conversion may be inaccurate. Consider using '#align pretrivialization.linear Pretrivialization.linearₓ'. -/
theorem linear [AddCommMonoid F] [Module R F] [∀ x, AddCommMonoid (E x)] [∀ x, Module R (E x)]
    [e.isLinear R] {b : B} (hb : b ∈ e.baseSet) :
    IsLinearMap R fun x : E b => (e (totalSpaceMk b x)).2 :=
  Pretrivialization.IsLinear.linear b hb
#align pretrivialization.linear Pretrivialization.linear

variable [AddCommMonoid F] [Module R F] [∀ x, AddCommMonoid (E x)] [∀ x, Module R (E x)]

#print Pretrivialization.symmₗ /-
/-- A fiberwise linear inverse to `e`. -/
@[simps]
protected def symmₗ (e : Pretrivialization F (π E)) [e.isLinear R] (b : B) : F →ₗ[R] E b :=
  by
  refine' IsLinearMap.mk' (e.symm b) _
  by_cases hb : b ∈ e.base_set
  ·
    exact
      (((e.linear R hb).mk' _).inverse (e.symm b) (e.symm_apply_apply_mk hb) fun v =>
          congr_arg Prod.snd <| e.apply_mk_symm hb v).isLinear
  · rw [e.coe_symm_of_not_mem hb]
    exact (0 : F →ₗ[R] E b).isLinear
#align pretrivialization.symmₗ Pretrivialization.symmₗ
-/

#print Pretrivialization.linearEquivAt /-
/-- A pretrivialization for a vector bundle defines linear equivalences between the
fibers and the model space. -/
@[simps (config := { fullyApplied := false })]
def linearEquivAt (e : Pretrivialization F (π E)) [e.isLinear R] (b : B) (hb : b ∈ e.baseSet) :
    E b ≃ₗ[R] F where
  toFun y := (e (totalSpaceMk b y)).2
  invFun := e.symm b
  left_inv := e.symm_apply_apply_mk hb
  right_inv v := by simp_rw [e.apply_mk_symm hb v]
  map_add' v w := (e.linear R hb).map_add v w
  map_smul' c v := (e.linear R hb).map_smul c v
#align pretrivialization.linear_equiv_at Pretrivialization.linearEquivAt
-/

#print Pretrivialization.linearMapAt /-
/-- A fiberwise linear map equal to `e` on `e.base_set`. -/
protected def linearMapAt (e : Pretrivialization F (π E)) [e.isLinear R] (b : B) : E b →ₗ[R] F :=
  if hb : b ∈ e.baseSet then e.linearEquivAt R b hb else 0
#align pretrivialization.linear_map_at Pretrivialization.linearMapAt
-/

variable {R}

/- warning: pretrivialization.coe_linear_map_at -> Pretrivialization.coe_linearMapAt is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_7 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_6 x)] (e : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_8 : Pretrivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] (b : B), Eq.{max (succ u4) (succ u3)} ((E b) -> F) (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (fun (_x : LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) => (E b) -> F) (LinearMap.hasCoeToFun.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Pretrivialization.linearMapAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b)) (fun (y : E b) => ite.{succ u3} F (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (Classical.propDecidable (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) e))) (Prod.snd.{u2, u3} B F (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Pretrivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) e (Bundle.totalSpaceMk.{u2, u4} B E b y))) (OfNat.ofNat.{u3} F 0 (OfNat.mk.{u3} F 0 (Zero.zero.{u3} F (AddZeroClass.toHasZero.{u3} F (AddMonoid.toAddZeroClass.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_4)))))))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_7 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_6 x)] (e : Pretrivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_8 : Pretrivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] (b : B), Eq.{max (succ u3) (succ u2)} (forall (ᾰ : E b), (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) ᾰ) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (E b) (fun (_x : E b) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Pretrivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b)) (fun (y : E b) => ite.{succ u3} F (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Pretrivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (Classical.propDecidable (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Pretrivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) e))) (Prod.snd.{u4, u3} B F (Pretrivialization.toFun'.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) e (Bundle.totalSpaceMk.{u4, u2} B E b y))) (OfNat.ofNat.{u3} F 0 (Zero.toOfNat0.{u3} F (AddMonoid.toZero.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_4)))))
Case conversion may be inaccurate. Consider using '#align pretrivialization.coe_linear_map_at Pretrivialization.coe_linearMapAtₓ'. -/
theorem coe_linearMapAt (e : Pretrivialization F (π E)) [e.isLinear R] (b : B) :
    ⇑(e.linearMapAt R b) = fun y => if b ∈ e.baseSet then (e (totalSpaceMk b y)).2 else 0 :=
  by
  rw [Pretrivialization.linearMapAt]
  split_ifs <;> rfl
#align pretrivialization.coe_linear_map_at Pretrivialization.coe_linearMapAt

/- warning: pretrivialization.coe_linear_map_at_of_mem -> Pretrivialization.coe_linearMapAt_of_mem is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_7 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_6 x)] (e : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_8 : Pretrivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) -> (Eq.{max (succ u4) (succ u3)} ((E b) -> F) (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (fun (_x : LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) => (E b) -> F) (LinearMap.hasCoeToFun.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Pretrivialization.linearMapAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b)) (fun (y : E b) => Prod.snd.{u2, u3} B F (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Pretrivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) e (Bundle.totalSpaceMk.{u2, u4} B E b y))))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_7 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_6 x)] (e : Pretrivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_8 : Pretrivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Pretrivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) -> (Eq.{max (succ u3) (succ u2)} (forall (ᾰ : E b), (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) ᾰ) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (E b) (fun (_x : E b) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Pretrivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b)) (fun (y : E b) => Prod.snd.{u4, u3} B F (Pretrivialization.toFun'.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) e (Bundle.totalSpaceMk.{u4, u2} B E b y))))
Case conversion may be inaccurate. Consider using '#align pretrivialization.coe_linear_map_at_of_mem Pretrivialization.coe_linearMapAt_of_memₓ'. -/
theorem coe_linearMapAt_of_mem (e : Pretrivialization F (π E)) [e.isLinear R] {b : B}
    (hb : b ∈ e.baseSet) : ⇑(e.linearMapAt R b) = fun y => (e (totalSpaceMk b y)).2 := by
  simp_rw [coe_linear_map_at, if_pos hb]
#align pretrivialization.coe_linear_map_at_of_mem Pretrivialization.coe_linearMapAt_of_mem

/- warning: pretrivialization.linear_map_at_apply -> Pretrivialization.linearMapAt_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_7 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_6 x)] (e : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_8 : Pretrivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] {b : B} (y : E b), Eq.{succ u3} F (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (fun (_x : LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) => (E b) -> F) (LinearMap.hasCoeToFun.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Pretrivialization.linearMapAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) y) (ite.{succ u3} F (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (Classical.propDecidable (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) e))) (Prod.snd.{u2, u3} B F (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Pretrivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) e (Bundle.totalSpaceMk.{u2, u4} B E b y))) (OfNat.ofNat.{u3} F 0 (OfNat.mk.{u3} F 0 (Zero.zero.{u3} F (AddZeroClass.toHasZero.{u3} F (AddMonoid.toAddZeroClass.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_4)))))))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_7 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_6 x)] (e : Pretrivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_8 : Pretrivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] {b : B} (y : E b), Eq.{succ u3} ((fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) y) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (E b) (fun (_x : E b) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Pretrivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) y) (ite.{succ u3} F (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Pretrivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (Classical.propDecidable (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Pretrivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) e))) (Prod.snd.{u4, u3} B F (Pretrivialization.toFun'.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) e (Bundle.totalSpaceMk.{u4, u2} B E b y))) (OfNat.ofNat.{u3} F 0 (Zero.toOfNat0.{u3} F (AddMonoid.toZero.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_4)))))
Case conversion may be inaccurate. Consider using '#align pretrivialization.linear_map_at_apply Pretrivialization.linearMapAt_applyₓ'. -/
theorem linearMapAt_apply (e : Pretrivialization F (π E)) [e.isLinear R] {b : B} (y : E b) :
    e.linearMapAt R b y = if b ∈ e.baseSet then (e (totalSpaceMk b y)).2 else 0 := by
  rw [coe_linear_map_at]
#align pretrivialization.linear_map_at_apply Pretrivialization.linearMapAt_apply

/- warning: pretrivialization.linear_map_at_def_of_mem -> Pretrivialization.linearMapAt_def_of_mem is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_7 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_6 x)] (e : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_8 : Pretrivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] {b : B} (hb : Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) e)), Eq.{max (succ u4) (succ u3)} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (Pretrivialization.linearMapAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) ((fun (a : Sort.{max (succ u4) (succ u3)}) (b : Sort.{max (succ u4) (succ u3)}) [self : HasLiftT.{max (succ u4) (succ u3), max (succ u4) (succ u3)} a b] => self.0) (LinearEquiv.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (HasLiftT.mk.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearEquiv.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (CoeTCₓ.coe.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearEquiv.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (coeBase.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearEquiv.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (LinearEquiv.LinearMap.hasCoe.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1))))) (Pretrivialization.linearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b hb))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_7 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_6 x)] (e : Pretrivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_8 : Pretrivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] {b : B} (hb : Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Pretrivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) e)), Eq.{max (succ u3) (succ u2)} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (Pretrivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) (LinearEquiv.toLinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (Pretrivialization.linearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b hb))
Case conversion may be inaccurate. Consider using '#align pretrivialization.linear_map_at_def_of_mem Pretrivialization.linearMapAt_def_of_memₓ'. -/
theorem linearMapAt_def_of_mem (e : Pretrivialization F (π E)) [e.isLinear R] {b : B}
    (hb : b ∈ e.baseSet) : e.linearMapAt R b = e.linearEquivAt R b hb :=
  dif_pos hb
#align pretrivialization.linear_map_at_def_of_mem Pretrivialization.linearMapAt_def_of_mem

/- warning: pretrivialization.linear_map_at_def_of_not_mem -> Pretrivialization.linearMapAt_def_of_not_mem is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_7 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_6 x)] (e : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_8 : Pretrivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] {b : B}, (Not (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) e))) -> (Eq.{max (succ u4) (succ u3)} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (Pretrivialization.linearMapAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) (OfNat.ofNat.{max u4 u3} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) 0 (OfNat.mk.{max u4 u3} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) 0 (Zero.zero.{max u4 u3} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (LinearMap.hasZero.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)))))))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_7 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_6 x)] (e : Pretrivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_8 : Pretrivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] {b : B}, (Not (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Pretrivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) e))) -> (Eq.{max (succ u3) (succ u2)} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (Pretrivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) (OfNat.ofNat.{max u3 u2} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) 0 (Zero.toOfNat0.{max u3 u2} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (LinearMap.instZeroLinearMap.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))))))
Case conversion may be inaccurate. Consider using '#align pretrivialization.linear_map_at_def_of_not_mem Pretrivialization.linearMapAt_def_of_not_memₓ'. -/
theorem linearMapAt_def_of_not_mem (e : Pretrivialization F (π E)) [e.isLinear R] {b : B}
    (hb : b ∉ e.baseSet) : e.linearMapAt R b = 0 :=
  dif_neg hb
#align pretrivialization.linear_map_at_def_of_not_mem Pretrivialization.linearMapAt_def_of_not_mem

/- warning: pretrivialization.linear_map_at_eq_zero -> Pretrivialization.linearMapAt_eq_zero is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_7 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_6 x)] (e : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_8 : Pretrivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] {b : B}, (Not (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) e))) -> (Eq.{max (succ u4) (succ u3)} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (Pretrivialization.linearMapAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) (OfNat.ofNat.{max u4 u3} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) 0 (OfNat.mk.{max u4 u3} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) 0 (Zero.zero.{max u4 u3} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (LinearMap.hasZero.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)))))))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_7 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_6 x)] (e : Pretrivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_8 : Pretrivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] {b : B}, (Not (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Pretrivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) e))) -> (Eq.{max (succ u3) (succ u2)} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (Pretrivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) (OfNat.ofNat.{max u3 u2} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) 0 (Zero.toOfNat0.{max u3 u2} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (LinearMap.instZeroLinearMap.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))))))
Case conversion may be inaccurate. Consider using '#align pretrivialization.linear_map_at_eq_zero Pretrivialization.linearMapAt_eq_zeroₓ'. -/
theorem linearMapAt_eq_zero (e : Pretrivialization F (π E)) [e.isLinear R] {b : B}
    (hb : b ∉ e.baseSet) : e.linearMapAt R b = 0 :=
  dif_neg hb
#align pretrivialization.linear_map_at_eq_zero Pretrivialization.linearMapAt_eq_zero

/- warning: pretrivialization.symmₗ_linear_map_at -> Pretrivialization.symmₗ_linearMapAt is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_7 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_6 x)] (e : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_8 : Pretrivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) -> (forall (y : E b), Eq.{succ u4} (E b) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_4 (_inst_6 b) _inst_5 (_inst_7 b)) (fun (_x : LinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_4 (_inst_6 b) _inst_5 (_inst_7 b)) => F -> (E b)) (LinearMap.hasCoeToFun.{u1, u1, u3, u4} R R F (E b) _inst_1 _inst_1 _inst_4 (_inst_6 b) _inst_5 (_inst_7 b) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Pretrivialization.symmₗ.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (fun (_x : LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) => (E b) -> F) (LinearMap.hasCoeToFun.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Pretrivialization.linearMapAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) y)) y)
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_7 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_6 x)] (e : Pretrivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_8 : Pretrivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Pretrivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) -> (forall (y : E b), Eq.{succ u2} ((fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : F) => E b) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (E b) (fun (a : E b) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) a) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Pretrivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) y)) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (LinearMap.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_4 (_inst_6 b) _inst_5 (_inst_7 b)) F (fun (_x : F) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : F) => E b) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u3, u2} R R F (E b) _inst_1 _inst_1 _inst_4 (_inst_6 b) _inst_5 (_inst_7 b) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Pretrivialization.symmₗ.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (E b) (fun (_x : E b) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Pretrivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) y)) y)
Case conversion may be inaccurate. Consider using '#align pretrivialization.symmₗ_linear_map_at Pretrivialization.symmₗ_linearMapAtₓ'. -/
theorem symmₗ_linearMapAt (e : Pretrivialization F (π E)) [e.isLinear R] {b : B}
    (hb : b ∈ e.baseSet) (y : E b) : e.symmₗ R b (e.linearMapAt R b y) = y :=
  by
  rw [e.linear_map_at_def_of_mem hb]
  exact (e.linear_equiv_at R b hb).left_inv y
#align pretrivialization.symmₗ_linear_map_at Pretrivialization.symmₗ_linearMapAt

/- warning: pretrivialization.linear_map_at_symmₗ -> Pretrivialization.linearMapAt_symmₗ is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_7 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_6 x)] (e : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_8 : Pretrivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) -> (forall (y : F), Eq.{succ u3} F (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (fun (_x : LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) => (E b) -> F) (LinearMap.hasCoeToFun.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Pretrivialization.linearMapAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_4 (_inst_6 b) _inst_5 (_inst_7 b)) (fun (_x : LinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_4 (_inst_6 b) _inst_5 (_inst_7 b)) => F -> (E b)) (LinearMap.hasCoeToFun.{u1, u1, u3, u4} R R F (E b) _inst_1 _inst_1 _inst_4 (_inst_6 b) _inst_5 (_inst_7 b) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Pretrivialization.symmₗ.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) y)) y)
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : AddCommMonoid.{u3} F] [_inst_5 : Module.{u1, u3} R F _inst_1 _inst_4] [_inst_6 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_7 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_6 x)] (e : Pretrivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_8 : Pretrivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e] {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Pretrivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) -> (forall (y : F), Eq.{succ u3} ((fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (LinearMap.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_4 (_inst_6 b) _inst_5 (_inst_7 b)) F (fun (a : F) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : F) => E b) a) (LinearMap.instFunLikeLinearMap.{u1, u1, u3, u2} R R F (E b) _inst_1 _inst_1 _inst_4 (_inst_6 b) _inst_5 (_inst_7 b) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Pretrivialization.symmₗ.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) y)) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_6 b) _inst_4 (_inst_7 b) _inst_5) (E b) (fun (_x : E b) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_6 b) _inst_4 (_inst_7 b) _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Pretrivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (LinearMap.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_4 (_inst_6 b) _inst_5 (_inst_7 b)) F (fun (_x : F) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : F) => E b) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u3, u2} R R F (E b) _inst_1 _inst_1 _inst_4 (_inst_6 b) _inst_5 (_inst_7 b) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Pretrivialization.symmₗ.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (fun (x : B) => _inst_6 x) (fun (x : B) => _inst_7 x) e _inst_8 b) y)) y)
Case conversion may be inaccurate. Consider using '#align pretrivialization.linear_map_at_symmₗ Pretrivialization.linearMapAt_symmₗₓ'. -/
theorem linearMapAt_symmₗ (e : Pretrivialization F (π E)) [e.isLinear R] {b : B}
    (hb : b ∈ e.baseSet) (y : F) : e.linearMapAt R b (e.symmₗ R b y) = y :=
  by
  rw [e.linear_map_at_def_of_mem hb]
  exact (e.linear_equiv_at R b hb).right_inv y
#align pretrivialization.linear_map_at_symmₗ Pretrivialization.linearMapAt_symmₗ

end Pretrivialization

variable (R) [TopologicalSpace (TotalSpace E)]

#print Trivialization.IsLinear /-
/-- A mixin class for `trivialization`, stating that a trivialization is fiberwise linear with
respect to given module structures on its fibers and the model fiber. -/
protected class Trivialization.IsLinear [AddCommMonoid F] [Module R F] [∀ x, AddCommMonoid (E x)]
  [∀ x, Module R (E x)] (e : Trivialization F (π E)) : Prop where
  linear : ∀ b ∈ e.baseSet, IsLinearMap R fun x : E b => (e (totalSpaceMk b x)).2
#align trivialization.is_linear Trivialization.IsLinear
-/

namespace Trivialization

variable (e : Trivialization F (π E)) {x : TotalSpace E} {b : B} {y : E b}

/- warning: trivialization.linear -> Trivialization.linear is a dubious translation:
lean 3 declaration is
  forall (R : Type.{u1}) {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) -> (IsLinearMap.{u1, u4, u3} R (E b) F _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (fun (y : E b) => Prod.snd.{u2, u3} B F (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Trivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) _inst_4) e (Bundle.totalSpaceMk.{u2, u4} B E b y))))
but is expected to have type
  forall (R : Type.{u3}) {B : Type.{u1}} {F : Type.{u4}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u3} R] [_inst_2 : TopologicalSpace.{u4} F] [_inst_3 : TopologicalSpace.{u1} B] [_inst_4 : TopologicalSpace.{max u2 u1} (Bundle.TotalSpace.{u1, u2} B E)] (e : Trivialization.{u1, u4, max u1 u2} B F (Bundle.TotalSpace.{u1, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u1, u2} B E)) [_inst_5 : AddCommMonoid.{u4} F] [_inst_6 : Module.{u3, u4} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u3, u2} R (E x) _inst_1 (_inst_7 x)] [_inst_9 : Trivialization.IsLinear.{u3, u1, u4, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] {b : B}, (Membership.mem.{u1, u1} B (Set.{u1} B) (Set.instMembershipSet.{u1} B) b (Trivialization.baseSet.{u1, u4, max u1 u2} B F (Bundle.TotalSpace.{u1, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u1, u2} B E) e)) -> (IsLinearMap.{u3, u2, u4} R (E b) F _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (fun (y : E b) => Prod.snd.{u1, u4} B F (Trivialization.toFun'.{u1, u4, max u1 u2} B F (Bundle.TotalSpace.{u1, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u1, u2} B E) _inst_4 e (Bundle.totalSpaceMk.{u1, u2} B E b y))))
Case conversion may be inaccurate. Consider using '#align trivialization.linear Trivialization.linearₓ'. -/
protected theorem linear [AddCommMonoid F] [Module R F] [∀ x, AddCommMonoid (E x)]
    [∀ x, Module R (E x)] [e.isLinear R] {b : B} (hb : b ∈ e.baseSet) :
    IsLinearMap R fun y : E b => (e (totalSpaceMk b y)).2 :=
  Trivialization.IsLinear.linear b hb
#align trivialization.linear Trivialization.linear

#print Trivialization.toPretrivialization.isLinear /-
instance toPretrivialization.isLinear [AddCommMonoid F] [Module R F] [∀ x, AddCommMonoid (E x)]
    [∀ x, Module R (E x)] [e.isLinear R] : e.toPretrivialization.isLinear R :=
  { (‹_› : e.isLinear R) with }
#align trivialization.to_pretrivialization.is_linear Trivialization.toPretrivialization.isLinear
-/

variable [AddCommMonoid F] [Module R F] [∀ x, AddCommMonoid (E x)] [∀ x, Module R (E x)]

#print Trivialization.linearEquivAt /-
/-- A trivialization for a vector bundle defines linear equivalences between the
fibers and the model space. -/
def linearEquivAt (e : Trivialization F (π E)) [e.isLinear R] (b : B) (hb : b ∈ e.baseSet) :
    E b ≃ₗ[R] F :=
  e.toPretrivialization.linearEquivAt R b hb
#align trivialization.linear_equiv_at Trivialization.linearEquivAt
-/

variable {R}

/- warning: trivialization.linear_equiv_at_apply -> Trivialization.linearEquivAt_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] (b : B) (hb : Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (v : E b), Eq.{succ u3} F (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearEquiv.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (fun (_x : LinearEquiv.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) => (E b) -> F) (LinearEquiv.hasCoeToFun.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1)) (Trivialization.linearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b hb) v) (Prod.snd.{u2, u3} B F (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Trivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) _inst_4) e (Bundle.totalSpaceMk.{u2, u4} B E b v)))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] (b : B) (hb : Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (v : E b), Eq.{succ u3} ((fun (x._@.Mathlib.Algebra.Hom.GroupAction._hyg.2186 : E b) => F) v) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (LinearEquiv.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (E b) (fun (_x : E b) => (fun (x._@.Mathlib.Algebra.Hom.GroupAction._hyg.2186 : E b) => F) _x) (SMulHomClass.toFunLike.{max u3 u2, u1, u2, u3} (LinearEquiv.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) R (E b) F (SMulZeroClass.toSMul.{u1, u2} R (E b) (AddMonoid.toZero.{u2} (E b) (AddCommMonoid.toAddMonoid.{u2} (E b) (_inst_7 b))) (DistribSMul.toSMulZeroClass.{u1, u2} R (E b) (AddMonoid.toAddZeroClass.{u2} (E b) (AddCommMonoid.toAddMonoid.{u2} (E b) (_inst_7 b))) (DistribMulAction.toDistribSMul.{u1, u2} R (E b) (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddCommMonoid.toAddMonoid.{u2} (E b) (_inst_7 b)) (Module.toDistribMulAction.{u1, u2} R (E b) _inst_1 (_inst_7 b) (_inst_8 b))))) (SMulZeroClass.toSMul.{u1, u3} R F (AddMonoid.toZero.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_5)) (DistribSMul.toSMulZeroClass.{u1, u3} R F (AddMonoid.toAddZeroClass.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_5)) (DistribMulAction.toDistribSMul.{u1, u3} R F (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddCommMonoid.toAddMonoid.{u3} F _inst_5) (Module.toDistribMulAction.{u1, u3} R F _inst_1 _inst_5 _inst_6)))) (DistribMulActionHomClass.toSMulHomClass.{max u3 u2, u1, u2, u3} (LinearEquiv.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) R (E b) F (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddCommMonoid.toAddMonoid.{u2} (E b) (_inst_7 b)) (AddCommMonoid.toAddMonoid.{u3} F _inst_5) (Module.toDistribMulAction.{u1, u2} R (E b) _inst_1 (_inst_7 b) (_inst_8 b)) (Module.toDistribMulAction.{u1, u3} R F _inst_1 _inst_5 _inst_6) (SemilinearMapClass.distribMulActionHomClass.{u1, u2, u3, max u3 u2} R (E b) F (LinearEquiv.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (SemilinearEquivClass.instSemilinearMapClass.{u1, u1, u2, u3, max u3 u2} R R (E b) F (LinearEquiv.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (LinearEquiv.instSemilinearEquivClassLinearEquiv.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1)))))) (Trivialization.linearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b hb) v) (Prod.snd.{u4, u3} B F (Trivialization.toFun'.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) _inst_4 e (Bundle.totalSpaceMk.{u4, u2} B E b v)))
Case conversion may be inaccurate. Consider using '#align trivialization.linear_equiv_at_apply Trivialization.linearEquivAt_applyₓ'. -/
@[simp]
theorem linearEquivAt_apply (e : Trivialization F (π E)) [e.isLinear R] (b : B) (hb : b ∈ e.baseSet)
    (v : E b) : e.linearEquivAt R b hb v = (e (totalSpaceMk b v)).2 :=
  rfl
#align trivialization.linear_equiv_at_apply Trivialization.linearEquivAt_apply

/- warning: trivialization.linear_equiv_at_symm_apply -> Trivialization.linearEquivAt_symm_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] (b : B) (hb : Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (v : F), Eq.{succ u4} (E b) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearEquiv.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) (fun (_x : LinearEquiv.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) => F -> (E b)) (LinearEquiv.hasCoeToFun.{u1, u1, u3, u4} R R F (E b) _inst_1 _inst_1 _inst_5 (_inst_7 b) _inst_6 (_inst_8 b) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1)) (LinearEquiv.symm.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Trivialization.linearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (b : B) => _inst_7 b) (fun (x : B) => _inst_8 x) e _inst_9 b hb)) v) (Trivialization.symm.{u2, u3, u4} B F E _inst_3 _inst_2 _inst_4 (fun (x : B) => AddZeroClass.toHasZero.{u4} (E x) (AddMonoid.toAddZeroClass.{u4} (E x) (AddCommMonoid.toAddMonoid.{u4} (E x) (_inst_7 x)))) e b v)
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] (b : B) (hb : Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (v : F), Eq.{succ u2} ((fun (x._@.Mathlib.Algebra.Hom.GroupAction._hyg.2186 : F) => E b) v) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (LinearEquiv.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) F (fun (_x : F) => (fun (x._@.Mathlib.Algebra.Hom.GroupAction._hyg.2186 : F) => E b) _x) (SMulHomClass.toFunLike.{max u3 u2, u1, u3, u2} (LinearEquiv.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) R F (E b) (SMulZeroClass.toSMul.{u1, u3} R F (AddMonoid.toZero.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_5)) (DistribSMul.toSMulZeroClass.{u1, u3} R F (AddMonoid.toAddZeroClass.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_5)) (DistribMulAction.toDistribSMul.{u1, u3} R F (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddCommMonoid.toAddMonoid.{u3} F _inst_5) (Module.toDistribMulAction.{u1, u3} R F _inst_1 _inst_5 _inst_6)))) (SMulZeroClass.toSMul.{u1, u2} R (E b) (AddMonoid.toZero.{u2} (E b) (AddCommMonoid.toAddMonoid.{u2} (E b) (_inst_7 b))) (DistribSMul.toSMulZeroClass.{u1, u2} R (E b) (AddMonoid.toAddZeroClass.{u2} (E b) (AddCommMonoid.toAddMonoid.{u2} (E b) (_inst_7 b))) (DistribMulAction.toDistribSMul.{u1, u2} R (E b) (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddCommMonoid.toAddMonoid.{u2} (E b) (_inst_7 b)) (Module.toDistribMulAction.{u1, u2} R (E b) _inst_1 (_inst_7 b) (_inst_8 b))))) (DistribMulActionHomClass.toSMulHomClass.{max u3 u2, u1, u3, u2} (LinearEquiv.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) R F (E b) (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddCommMonoid.toAddMonoid.{u3} F _inst_5) (AddCommMonoid.toAddMonoid.{u2} (E b) (_inst_7 b)) (Module.toDistribMulAction.{u1, u3} R F _inst_1 _inst_5 _inst_6) (Module.toDistribMulAction.{u1, u2} R (E b) _inst_1 (_inst_7 b) (_inst_8 b)) (SemilinearMapClass.distribMulActionHomClass.{u1, u3, u2, max u3 u2} R F (E b) (LinearEquiv.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) _inst_1 _inst_5 (_inst_7 b) _inst_6 (_inst_8 b) (SemilinearEquivClass.instSemilinearMapClass.{u1, u1, u3, u2, max u3 u2} R R F (E b) (LinearEquiv.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) _inst_1 _inst_1 _inst_5 (_inst_7 b) _inst_6 (_inst_8 b) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (LinearEquiv.instSemilinearEquivClassLinearEquiv.{u1, u1, u3, u2} R R F (E b) _inst_1 _inst_1 _inst_5 (_inst_7 b) _inst_6 (_inst_8 b) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1)))))) (LinearEquiv.symm.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Trivialization.linearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (b : B) => _inst_7 b) (fun (x : B) => _inst_8 x) e _inst_9 b hb)) v) (Trivialization.symm.{u4, u3, u2} B F E _inst_3 _inst_2 _inst_4 (fun (x : B) => AddMonoid.toZero.{u2} (E x) (AddCommMonoid.toAddMonoid.{u2} (E x) (_inst_7 x))) e b v)
Case conversion may be inaccurate. Consider using '#align trivialization.linear_equiv_at_symm_apply Trivialization.linearEquivAt_symm_applyₓ'. -/
@[simp]
theorem linearEquivAt_symm_apply (e : Trivialization F (π E)) [e.isLinear R] (b : B)
    (hb : b ∈ e.baseSet) (v : F) : (e.linearEquivAt R b hb).symm v = e.symm b v :=
  rfl
#align trivialization.linear_equiv_at_symm_apply Trivialization.linearEquivAt_symm_apply

variable (R)

#print Trivialization.symmₗ /-
/-- A fiberwise linear inverse to `e`. -/
protected def symmₗ (e : Trivialization F (π E)) [e.isLinear R] (b : B) : F →ₗ[R] E b :=
  e.toPretrivialization.symmₗ R b
#align trivialization.symmₗ Trivialization.symmₗ
-/

variable {R}

/- warning: trivialization.coe_symmₗ -> Trivialization.coe_symmₗ is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] (b : B), Eq.{max (succ u3) (succ u4)} (F -> (E b)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) (fun (_x : LinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) => F -> (E b)) (LinearMap.hasCoeToFun.{u1, u1, u3, u4} R R F (E b) _inst_1 _inst_1 _inst_5 (_inst_7 b) _inst_6 (_inst_8 b) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.symmₗ.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b)) (Trivialization.symm.{u2, u3, u4} B F E _inst_3 _inst_2 _inst_4 (fun (x : B) => AddZeroClass.toHasZero.{u4} (E x) (AddMonoid.toAddZeroClass.{u4} (E x) (AddCommMonoid.toAddMonoid.{u4} (E x) (_inst_7 x)))) e b)
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] (b : B), Eq.{max (succ u3) (succ u2)} (forall (ᾰ : F), (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : F) => E b) ᾰ) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (LinearMap.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) F (fun (_x : F) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : F) => E b) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u3, u2} R R F (E b) _inst_1 _inst_1 _inst_5 (_inst_7 b) _inst_6 (_inst_8 b) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.symmₗ.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b)) (Trivialization.symm.{u4, u3, u2} B F E _inst_3 _inst_2 _inst_4 (fun (x : B) => AddMonoid.toZero.{u2} (E x) (AddCommMonoid.toAddMonoid.{u2} (E x) (_inst_7 x))) e b)
Case conversion may be inaccurate. Consider using '#align trivialization.coe_symmₗ Trivialization.coe_symmₗₓ'. -/
theorem coe_symmₗ (e : Trivialization F (π E)) [e.isLinear R] (b : B) : ⇑(e.symmₗ R b) = e.symm b :=
  rfl
#align trivialization.coe_symmₗ Trivialization.coe_symmₗ

variable (R)

#print Trivialization.linearMapAt /-
/-- A fiberwise linear map equal to `e` on `e.base_set`. -/
protected def linearMapAt (e : Trivialization F (π E)) [e.isLinear R] (b : B) : E b →ₗ[R] F :=
  e.toPretrivialization.linearMapAt R b
#align trivialization.linear_map_at Trivialization.linearMapAt
-/

variable {R}

/- warning: trivialization.coe_linear_map_at -> Trivialization.coe_linearMapAt is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] (b : B), Eq.{max (succ u4) (succ u3)} ((E b) -> F) (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (fun (_x : LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) => (E b) -> F) (LinearMap.hasCoeToFun.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.linearMapAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b)) (fun (y : E b) => ite.{succ u3} F (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (Classical.propDecidable (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e))) (Prod.snd.{u2, u3} B F (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Trivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) _inst_4) e (Bundle.totalSpaceMk.{u2, u4} B E b y))) (OfNat.ofNat.{u3} F 0 (OfNat.mk.{u3} F 0 (Zero.zero.{u3} F (AddZeroClass.toHasZero.{u3} F (AddMonoid.toAddZeroClass.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_5)))))))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] (b : B), Eq.{max (succ u3) (succ u2)} (forall (ᾰ : E b), (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) ᾰ) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (E b) (fun (_x : E b) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b)) (fun (y : E b) => ite.{succ u3} F (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (Classical.propDecidable (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e))) (Prod.snd.{u4, u3} B F (Trivialization.toFun'.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) _inst_4 e (Bundle.totalSpaceMk.{u4, u2} B E b y))) (OfNat.ofNat.{u3} F 0 (Zero.toOfNat0.{u3} F (AddMonoid.toZero.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_5)))))
Case conversion may be inaccurate. Consider using '#align trivialization.coe_linear_map_at Trivialization.coe_linearMapAtₓ'. -/
theorem coe_linearMapAt (e : Trivialization F (π E)) [e.isLinear R] (b : B) :
    ⇑(e.linearMapAt R b) = fun y => if b ∈ e.baseSet then (e (totalSpaceMk b y)).2 else 0 :=
  e.toPretrivialization.coe_linearMapAt b
#align trivialization.coe_linear_map_at Trivialization.coe_linearMapAt

/- warning: trivialization.coe_linear_map_at_of_mem -> Trivialization.coe_linearMapAt_of_mem is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) -> (Eq.{max (succ u4) (succ u3)} ((E b) -> F) (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (fun (_x : LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) => (E b) -> F) (LinearMap.hasCoeToFun.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.linearMapAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b)) (fun (y : E b) => Prod.snd.{u2, u3} B F (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Trivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) _inst_4) e (Bundle.totalSpaceMk.{u2, u4} B E b y))))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) -> (Eq.{max (succ u3) (succ u2)} (forall (ᾰ : E b), (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) ᾰ) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (E b) (fun (_x : E b) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b)) (fun (y : E b) => Prod.snd.{u4, u3} B F (Trivialization.toFun'.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) _inst_4 e (Bundle.totalSpaceMk.{u4, u2} B E b y))))
Case conversion may be inaccurate. Consider using '#align trivialization.coe_linear_map_at_of_mem Trivialization.coe_linearMapAt_of_memₓ'. -/
theorem coe_linearMapAt_of_mem (e : Trivialization F (π E)) [e.isLinear R] {b : B}
    (hb : b ∈ e.baseSet) : ⇑(e.linearMapAt R b) = fun y => (e (totalSpaceMk b y)).2 := by
  simp_rw [coe_linear_map_at, if_pos hb]
#align trivialization.coe_linear_map_at_of_mem Trivialization.coe_linearMapAt_of_mem

/- warning: trivialization.linear_map_at_apply -> Trivialization.linearMapAt_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] {b : B} (y : E b), Eq.{succ u3} F (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (fun (_x : LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) => (E b) -> F) (LinearMap.hasCoeToFun.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.linearMapAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b) y) (ite.{succ u3} F (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (Classical.propDecidable (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e))) (Prod.snd.{u2, u3} B F (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Trivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) _inst_4) e (Bundle.totalSpaceMk.{u2, u4} B E b y))) (OfNat.ofNat.{u3} F 0 (OfNat.mk.{u3} F 0 (Zero.zero.{u3} F (AddZeroClass.toHasZero.{u3} F (AddMonoid.toAddZeroClass.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_5)))))))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] {b : B} (y : E b), Eq.{succ u3} ((fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) y) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (E b) (fun (_x : E b) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b) y) (ite.{succ u3} F (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (Classical.propDecidable (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e))) (Prod.snd.{u4, u3} B F (Trivialization.toFun'.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) _inst_4 e (Bundle.totalSpaceMk.{u4, u2} B E b y))) (OfNat.ofNat.{u3} F 0 (Zero.toOfNat0.{u3} F (AddMonoid.toZero.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_5)))))
Case conversion may be inaccurate. Consider using '#align trivialization.linear_map_at_apply Trivialization.linearMapAt_applyₓ'. -/
theorem linearMapAt_apply (e : Trivialization F (π E)) [e.isLinear R] {b : B} (y : E b) :
    e.linearMapAt R b y = if b ∈ e.baseSet then (e (totalSpaceMk b y)).2 else 0 := by
  rw [coe_linear_map_at]
#align trivialization.linear_map_at_apply Trivialization.linearMapAt_apply

/- warning: trivialization.linear_map_at_def_of_mem -> Trivialization.linearMapAt_def_of_mem is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] {b : B} (hb : Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)), Eq.{max (succ u4) (succ u3)} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (Trivialization.linearMapAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b) ((fun (a : Sort.{max (succ u4) (succ u3)}) (b : Sort.{max (succ u4) (succ u3)}) [self : HasLiftT.{max (succ u4) (succ u3), max (succ u4) (succ u3)} a b] => self.0) (LinearEquiv.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (HasLiftT.mk.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearEquiv.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (CoeTCₓ.coe.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearEquiv.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (coeBase.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearEquiv.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (LinearEquiv.LinearMap.hasCoe.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1))))) (Trivialization.linearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b hb))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] {b : B} (hb : Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e)), Eq.{max (succ u3) (succ u2)} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (Trivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b) (LinearEquiv.toLinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (Trivialization.linearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b hb))
Case conversion may be inaccurate. Consider using '#align trivialization.linear_map_at_def_of_mem Trivialization.linearMapAt_def_of_memₓ'. -/
theorem linearMapAt_def_of_mem (e : Trivialization F (π E)) [e.isLinear R] {b : B}
    (hb : b ∈ e.baseSet) : e.linearMapAt R b = e.linearEquivAt R b hb :=
  dif_pos hb
#align trivialization.linear_map_at_def_of_mem Trivialization.linearMapAt_def_of_mem

/- warning: trivialization.linear_map_at_def_of_not_mem -> Trivialization.linearMapAt_def_of_not_mem is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] {b : B}, (Not (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e))) -> (Eq.{max (succ u4) (succ u3)} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (Trivialization.linearMapAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b) (OfNat.ofNat.{max u4 u3} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) 0 (OfNat.mk.{max u4 u3} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) 0 (Zero.zero.{max u4 u3} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (LinearMap.hasZero.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)))))))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] {b : B}, (Not (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e))) -> (Eq.{max (succ u3) (succ u2)} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (Trivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b) (OfNat.ofNat.{max u3 u2} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) 0 (Zero.toOfNat0.{max u3 u2} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (LinearMap.instZeroLinearMap.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))))))
Case conversion may be inaccurate. Consider using '#align trivialization.linear_map_at_def_of_not_mem Trivialization.linearMapAt_def_of_not_memₓ'. -/
theorem linearMapAt_def_of_not_mem (e : Trivialization F (π E)) [e.isLinear R] {b : B}
    (hb : b ∉ e.baseSet) : e.linearMapAt R b = 0 :=
  dif_neg hb
#align trivialization.linear_map_at_def_of_not_mem Trivialization.linearMapAt_def_of_not_mem

/- warning: trivialization.symmₗ_linear_map_at -> Trivialization.symmₗ_linearMapAt is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) -> (forall (y : E b), Eq.{succ u4} (E b) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) (fun (_x : LinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) => F -> (E b)) (LinearMap.hasCoeToFun.{u1, u1, u3, u4} R R F (E b) _inst_1 _inst_1 _inst_5 (_inst_7 b) _inst_6 (_inst_8 b) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.symmₗ.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b) (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (fun (_x : LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) => (E b) -> F) (LinearMap.hasCoeToFun.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.linearMapAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b) y)) y)
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) -> (forall (y : E b), Eq.{succ u2} ((fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : F) => E b) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (E b) (fun (a : E b) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) a) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b) y)) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (LinearMap.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) F (fun (_x : F) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : F) => E b) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u3, u2} R R F (E b) _inst_1 _inst_1 _inst_5 (_inst_7 b) _inst_6 (_inst_8 b) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.symmₗ.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (E b) (fun (_x : E b) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b) y)) y)
Case conversion may be inaccurate. Consider using '#align trivialization.symmₗ_linear_map_at Trivialization.symmₗ_linearMapAtₓ'. -/
theorem symmₗ_linearMapAt (e : Trivialization F (π E)) [e.isLinear R] {b : B} (hb : b ∈ e.baseSet)
    (y : E b) : e.symmₗ R b (e.linearMapAt R b y) = y :=
  e.toPretrivialization.symmₗ_linearMapAt hb y
#align trivialization.symmₗ_linear_map_at Trivialization.symmₗ_linearMapAt

/- warning: trivialization.linear_map_at_symmₗ -> Trivialization.linearMapAt_symmₗ is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) -> (forall (y : F), Eq.{succ u3} F (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (fun (_x : LinearMap.{u1, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) => (E b) -> F) (LinearMap.hasCoeToFun.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.linearMapAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) (fun (_x : LinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) => F -> (E b)) (LinearMap.hasCoeToFun.{u1, u1, u3, u4} R R F (E b) _inst_1 _inst_1 _inst_5 (_inst_7 b) _inst_6 (_inst_8 b) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.symmₗ.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b) y)) y)
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) -> (forall (y : F), Eq.{succ u3} ((fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (LinearMap.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) F (fun (a : F) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : F) => E b) a) (LinearMap.instFunLikeLinearMap.{u1, u1, u3, u2} R R F (E b) _inst_1 _inst_1 _inst_5 (_inst_7 b) _inst_6 (_inst_8 b) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.symmₗ.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b) y)) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (E b) F (_inst_7 b) _inst_5 (_inst_8 b) _inst_6) (E b) (fun (_x : E b) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : E b) => F) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.linearMapAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (LinearMap.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F (E b) _inst_5 (_inst_7 b) _inst_6 (_inst_8 b)) F (fun (_x : F) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : F) => E b) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u3, u2} R R F (E b) _inst_1 _inst_1 _inst_5 (_inst_7 b) _inst_6 (_inst_8 b) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (Trivialization.symmₗ.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b) y)) y)
Case conversion may be inaccurate. Consider using '#align trivialization.linear_map_at_symmₗ Trivialization.linearMapAt_symmₗₓ'. -/
theorem linearMapAt_symmₗ (e : Trivialization F (π E)) [e.isLinear R] {b : B} (hb : b ∈ e.baseSet)
    (y : F) : e.linearMapAt R b (e.symmₗ R b y) = y :=
  e.toPretrivialization.linearMapAt_symmₗ hb y
#align trivialization.linear_map_at_symmₗ Trivialization.linearMapAt_symmₗ

variable (R)

#print Trivialization.coordChangeL /-
/-- A coordinate change function between two trivializations, as a continuous linear equivalence.
  Defined to be the identity when `b` does not lie in the base set of both trivializations. -/
def coordChangeL (e e' : Trivialization F (π E)) [e.isLinear R] [e'.isLinear R] (b : B) :
    F ≃L[R] F :=
  {
    if hb : b ∈ e.baseSet ∩ e'.baseSet then
      (e.linearEquivAt R b (hb.1 : _)).symm.trans (e'.linearEquivAt R b hb.2)
    else
      LinearEquiv.refl R
        F with
    continuous_toFun := by
      by_cases hb : b ∈ e.base_set ∩ e'.base_set
      · simp_rw [dif_pos hb]
        refine' (e'.continuous_on.comp_continuous _ _).snd
        exact
          e.continuous_on_symm.comp_continuous (Continuous.Prod.mk b) fun y =>
            mk_mem_prod hb.1 (mem_univ y)
        exact fun y => e'.mem_source.mpr hb.2
      · rw [dif_neg hb]
        exact continuous_id
    continuous_invFun := by
      by_cases hb : b ∈ e.base_set ∩ e'.base_set
      · simp_rw [dif_pos hb]
        refine' (e.continuous_on.comp_continuous _ _).snd
        exact
          e'.continuous_on_symm.comp_continuous (Continuous.Prod.mk b) fun y =>
            mk_mem_prod hb.2 (mem_univ y)
        exact fun y => e.mem_source.mpr hb.1
      · rw [dif_neg hb]
        exact continuous_id }
#align trivialization.coord_changeL Trivialization.coordChangeL
-/

variable {R}

/- warning: trivialization.coe_coord_changeL -> Trivialization.coe_coordChangeL is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (e' : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e'] {b : B} (hb : Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e'))), Eq.{succ u3} (F -> F) (coeFn.{succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) (fun (_x : ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) => F -> F) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) (Trivialization.coordChangeL.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e e' _inst_9 _inst_10 b)) (coeFn.{succ u3, succ u3} (LinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F F _inst_5 _inst_5 _inst_6 _inst_6) (fun (_x : LinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F F _inst_5 _inst_5 _inst_6 _inst_6) => F -> F) (LinearEquiv.hasCoeToFun.{u1, u1, u3, u3} R R F F _inst_1 _inst_1 _inst_5 _inst_5 _inst_6 _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1)) (LinearEquiv.trans.{u1, u1, u1, u3, u4, u3} R R R F (E b) F _inst_1 _inst_1 _inst_1 _inst_5 (_inst_7 b) _inst_5 _inst_6 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (LinearEquiv.symm.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Trivialization.linearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b (And.left (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e')) hb))) (Trivialization.linearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e' _inst_10 b (And.right (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e')) hb))))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) (e' : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e'] {b : B} (hb : Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Inter.inter.{u4} (Set.{u4} B) (Set.instInterSet.{u4} B) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e'))), Eq.{succ u3} (forall (ᾰ : F), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) ᾰ) (FunLike.coe.{succ u3, succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) _x) (ContinuousMapClass.toFunLike.{u3, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) F F _inst_2 _inst_2 (ContinuousSemilinearMapClass.toContinuousMapClass.{u3, u1, u1, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{u3, u1, u1, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6)))) (Trivialization.coordChangeL.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e e' _inst_9 _inst_10 b)) (FunLike.coe.{succ u3, succ u3, succ u3} (LinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F F _inst_5 _inst_5 _inst_6 _inst_6) F (fun (_x : F) => (fun (x._@.Mathlib.Algebra.Hom.GroupAction._hyg.2186 : F) => F) _x) (SMulHomClass.toFunLike.{u3, u1, u3, u3} (LinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F F _inst_5 _inst_5 _inst_6 _inst_6) R F F (SMulZeroClass.toSMul.{u1, u3} R F (AddMonoid.toZero.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_5)) (DistribSMul.toSMulZeroClass.{u1, u3} R F (AddMonoid.toAddZeroClass.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_5)) (DistribMulAction.toDistribSMul.{u1, u3} R F (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddCommMonoid.toAddMonoid.{u3} F _inst_5) (Module.toDistribMulAction.{u1, u3} R F _inst_1 _inst_5 _inst_6)))) (SMulZeroClass.toSMul.{u1, u3} R F (AddMonoid.toZero.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_5)) (DistribSMul.toSMulZeroClass.{u1, u3} R F (AddMonoid.toAddZeroClass.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_5)) (DistribMulAction.toDistribSMul.{u1, u3} R F (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddCommMonoid.toAddMonoid.{u3} F _inst_5) (Module.toDistribMulAction.{u1, u3} R F _inst_1 _inst_5 _inst_6)))) (DistribMulActionHomClass.toSMulHomClass.{u3, u1, u3, u3} (LinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F F _inst_5 _inst_5 _inst_6 _inst_6) R F F (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddCommMonoid.toAddMonoid.{u3} F _inst_5) (AddCommMonoid.toAddMonoid.{u3} F _inst_5) (Module.toDistribMulAction.{u1, u3} R F _inst_1 _inst_5 _inst_6) (Module.toDistribMulAction.{u1, u3} R F _inst_1 _inst_5 _inst_6) (SemilinearMapClass.distribMulActionHomClass.{u1, u3, u3, u3} R F F (LinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F F _inst_5 _inst_5 _inst_6 _inst_6) _inst_1 _inst_5 _inst_5 _inst_6 _inst_6 (SemilinearEquivClass.instSemilinearMapClass.{u1, u1, u3, u3, u3} R R F F (LinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F F _inst_5 _inst_5 _inst_6 _inst_6) _inst_1 _inst_1 _inst_5 _inst_5 _inst_6 _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (LinearEquiv.instSemilinearEquivClassLinearEquiv.{u1, u1, u3, u3} R R F F _inst_1 _inst_1 _inst_5 _inst_5 _inst_6 _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1)))))) (LinearEquiv.trans.{u1, u1, u1, u3, u2, u3} R R R F (E b) F _inst_1 _inst_1 _inst_1 _inst_5 (_inst_7 b) _inst_5 _inst_6 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomCompTriple.ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (RingHomCompTriple.ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (LinearEquiv.symm.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Trivialization.linearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b (And.left (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e')) hb))) (Trivialization.linearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e' _inst_10 b (And.right (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e')) hb))))
Case conversion may be inaccurate. Consider using '#align trivialization.coe_coord_changeL Trivialization.coe_coordChangeLₓ'. -/
theorem coe_coordChangeL (e e' : Trivialization F (π E)) [e.isLinear R] [e'.isLinear R] {b : B}
    (hb : b ∈ e.baseSet ∩ e'.baseSet) :
    ⇑(coordChangeL R e e' b) = (e.linearEquivAt R b hb.1).symm.trans (e'.linearEquivAt R b hb.2) :=
  congr_arg LinearEquiv.toFun (dif_pos hb)
#align trivialization.coe_coord_changeL Trivialization.coe_coordChangeL

/- warning: trivialization.coe_coord_changeL' -> Trivialization.coe_coordChangeL' is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (e' : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e'] {b : B} (hb : Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e'))), Eq.{succ u3} (LinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F F _inst_5 _inst_5 _inst_6 _inst_6) (ContinuousLinearEquiv.toLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (Trivialization.coordChangeL.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e e' _inst_9 _inst_10 b)) (LinearEquiv.trans.{u1, u1, u1, u3, u4, u3} R R R F (E b) F _inst_1 _inst_1 _inst_1 _inst_5 (_inst_7 b) _inst_5 _inst_6 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (LinearEquiv.symm.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Trivialization.linearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun {b : B} => _inst_7 b) (fun (x : B) => _inst_8 x) e _inst_9 b (And.left (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e')) hb))) (Trivialization.linearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun {b : B} => _inst_7 b) (fun (x : B) => _inst_8 x) e' _inst_10 b (And.right (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e')) hb)))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) (e' : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e'] {b : B} (hb : Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Inter.inter.{u4} (Set.{u4} B) (Set.instInterSet.{u4} B) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e'))), Eq.{succ u3} (LinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F F _inst_5 _inst_5 _inst_6 _inst_6) (ContinuousLinearEquiv.toLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (Trivialization.coordChangeL.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e e' _inst_9 _inst_10 b)) (LinearEquiv.trans.{u1, u1, u1, u3, u2, u3} R R R F (E b) F _inst_1 _inst_1 _inst_1 _inst_5 (_inst_7 b) _inst_5 _inst_6 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomCompTriple.ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (RingHomCompTriple.ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (LinearEquiv.symm.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Trivialization.linearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (b : B) => _inst_7 b) (fun (x : B) => _inst_8 x) e _inst_9 b (And.left (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e')) hb))) (Trivialization.linearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (b : B) => _inst_7 b) (fun (x : B) => _inst_8 x) e' _inst_10 b (And.right (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e')) hb)))
Case conversion may be inaccurate. Consider using '#align trivialization.coe_coord_changeL' Trivialization.coe_coordChangeL'ₓ'. -/
theorem coe_coordChangeL' (e e' : Trivialization F (π E)) [e.isLinear R] [e'.isLinear R] {b : B}
    (hb : b ∈ e.baseSet ∩ e'.baseSet) :
    (coordChangeL R e e' b).toLinearEquiv =
      (e.linearEquivAt R b hb.1).symm.trans (e'.linearEquivAt R b hb.2) :=
  LinearEquiv.coe_injective (coe_coordChangeL _ _ _)
#align trivialization.coe_coord_changeL' Trivialization.coe_coordChangeL'

/- warning: trivialization.symm_coord_changeL -> Trivialization.symm_coordChangeL is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (e' : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e'] {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e') (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e))) -> (Eq.{succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) (ContinuousLinearEquiv.symm.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (Trivialization.coordChangeL.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e e' _inst_9 _inst_10 b)) (Trivialization.coordChangeL.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e' e _inst_10 _inst_9 b))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) (e' : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e'] {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Inter.inter.{u4} (Set.{u4} B) (Set.instInterSet.{u4} B) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e') (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e))) -> (Eq.{succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) (ContinuousLinearEquiv.symm.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (Trivialization.coordChangeL.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e e' _inst_9 _inst_10 b)) (Trivialization.coordChangeL.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e' e _inst_10 _inst_9 b))
Case conversion may be inaccurate. Consider using '#align trivialization.symm_coord_changeL Trivialization.symm_coordChangeLₓ'. -/
theorem symm_coordChangeL (e e' : Trivialization F (π E)) [e.isLinear R] [e'.isLinear R] {b : B}
    (hb : b ∈ e'.baseSet ∩ e.baseSet) : (e.coordChangeL R e' b).symm = e'.coordChangeL R e b :=
  by
  apply ContinuousLinearEquiv.toLinearEquiv_injective
  rw [coe_coord_changeL' e' e hb, (coord_changeL R e e' b).symm_toLinearEquiv,
    coe_coord_changeL' e e' hb.symm, LinearEquiv.trans_symm, LinearEquiv.symm_symm]
#align trivialization.symm_coord_changeL Trivialization.symm_coordChangeL

/- warning: trivialization.coord_changeL_apply -> Trivialization.coordChangeL_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (e' : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e'] {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e'))) -> (forall (y : F), Eq.{succ u3} F (coeFn.{succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) (fun (_x : ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) => F -> F) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) (Trivialization.coordChangeL.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e e' _inst_9 _inst_10 b) y) (Prod.snd.{u2, u3} B F (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Trivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) _inst_4) e' (Bundle.totalSpaceMk.{u2, u4} B E b (Trivialization.symm.{u2, u3, u4} B F E _inst_3 _inst_2 _inst_4 (fun (x : B) => AddZeroClass.toHasZero.{u4} (E x) (AddMonoid.toAddZeroClass.{u4} (E x) (AddCommMonoid.toAddMonoid.{u4} (E x) (_inst_7 x)))) e b y)))))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) (e' : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e'] {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Inter.inter.{u4} (Set.{u4} B) (Set.instInterSet.{u4} B) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e'))) -> (forall (y : F), Eq.{succ u3} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) y) (FunLike.coe.{succ u3, succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) _x) (ContinuousMapClass.toFunLike.{u3, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) F F _inst_2 _inst_2 (ContinuousSemilinearMapClass.toContinuousMapClass.{u3, u1, u1, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{u3, u1, u1, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6)))) (Trivialization.coordChangeL.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e e' _inst_9 _inst_10 b) y) (Prod.snd.{u4, u3} B F (Trivialization.toFun'.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) _inst_4 e' (Bundle.totalSpaceMk.{u4, u2} B E b (Trivialization.symm.{u4, u3, u2} B F E _inst_3 _inst_2 _inst_4 (fun (x : B) => AddMonoid.toZero.{u2} (E x) (AddCommMonoid.toAddMonoid.{u2} (E x) (_inst_7 x))) e b y)))))
Case conversion may be inaccurate. Consider using '#align trivialization.coord_changeL_apply Trivialization.coordChangeL_applyₓ'. -/
theorem coordChangeL_apply (e e' : Trivialization F (π E)) [e.isLinear R] [e'.isLinear R] {b : B}
    (hb : b ∈ e.baseSet ∩ e'.baseSet) (y : F) :
    coordChangeL R e e' b y = (e' (totalSpaceMk b (e.symm b y))).2 :=
  congr_arg (fun f => LinearEquiv.toFun f y) (dif_pos hb)
#align trivialization.coord_changeL_apply Trivialization.coordChangeL_apply

/- warning: trivialization.mk_coord_changeL -> Trivialization.mk_coordChangeL is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (e' : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e'] {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e'))) -> (forall (y : F), Eq.{max (succ u2) (succ u3)} (Prod.{u2, u3} B F) (Prod.mk.{u2, u3} B F b (coeFn.{succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) (fun (_x : ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) => F -> F) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) (Trivialization.coordChangeL.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e e' _inst_9 _inst_10 b) y)) (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Trivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) _inst_4) e' (Bundle.totalSpaceMk.{u2, u4} B E b (Trivialization.symm.{u2, u3, u4} B F E _inst_3 _inst_2 _inst_4 (fun (x : B) => AddZeroClass.toHasZero.{u4} (E x) (AddMonoid.toAddZeroClass.{u4} (E x) (AddCommMonoid.toAddMonoid.{u4} (E x) (_inst_7 x)))) e b y))))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) (e' : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e'] {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Inter.inter.{u4} (Set.{u4} B) (Set.instInterSet.{u4} B) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e'))) -> (forall (y : F), Eq.{max (succ u4) (succ u3)} (Prod.{u4, u3} B ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) y)) (Prod.mk.{u4, u3} B ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) y) b (FunLike.coe.{succ u3, succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) _x) (ContinuousMapClass.toFunLike.{u3, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) F F _inst_2 _inst_2 (ContinuousSemilinearMapClass.toContinuousMapClass.{u3, u1, u1, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{u3, u1, u1, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6)))) (Trivialization.coordChangeL.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e e' _inst_9 _inst_10 b) y)) (Trivialization.toFun'.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) _inst_4 e' (Bundle.totalSpaceMk.{u4, u2} B E b (Trivialization.symm.{u4, u3, u2} B F E _inst_3 _inst_2 _inst_4 (fun (x : B) => AddMonoid.toZero.{u2} (E x) (AddCommMonoid.toAddMonoid.{u2} (E x) (_inst_7 x))) e b y))))
Case conversion may be inaccurate. Consider using '#align trivialization.mk_coord_changeL Trivialization.mk_coordChangeLₓ'. -/
theorem mk_coordChangeL (e e' : Trivialization F (π E)) [e.isLinear R] [e'.isLinear R] {b : B}
    (hb : b ∈ e.baseSet ∩ e'.baseSet) (y : F) :
    (b, coordChangeL R e e' b y) = e' (totalSpaceMk b (e.symm b y)) :=
  by
  ext
  · rw [e.mk_symm hb.1 y, e'.coe_fst', e.proj_symm_apply' hb.1]
    rw [e.proj_symm_apply' hb.1]
    exact hb.2
  · exact e.coord_changeL_apply e' hb y
#align trivialization.mk_coord_changeL Trivialization.mk_coordChangeL

/- warning: trivialization.apply_symm_apply_eq_coord_changeL -> Trivialization.apply_symm_apply_eq_coordChangeL is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (e' : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e'] {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e'))) -> (forall (v : F), Eq.{max (succ u2) (succ u3)} (Prod.{u2, u3} B F) (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Trivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) _inst_4) e' (coeFn.{max (succ (max u2 u3)) (succ (max u2 u4)), max (succ (max u2 u3)) (succ (max u2 u4))} (LocalHomeomorph.{max u2 u3, max u2 u4} (Prod.{u2, u3} B F) (Bundle.TotalSpace.{u2, u4} B E) (Prod.topologicalSpace.{u2, u3} B F _inst_3 _inst_2) _inst_4) (fun (_x : LocalHomeomorph.{max u2 u3, max u2 u4} (Prod.{u2, u3} B F) (Bundle.TotalSpace.{u2, u4} B E) (Prod.topologicalSpace.{u2, u3} B F _inst_3 _inst_2) _inst_4) => (Prod.{u2, u3} B F) -> (Bundle.TotalSpace.{u2, u4} B E)) (LocalHomeomorph.hasCoeToFun.{max u2 u3, max u2 u4} (Prod.{u2, u3} B F) (Bundle.TotalSpace.{u2, u4} B E) (Prod.topologicalSpace.{u2, u3} B F _inst_3 _inst_2) _inst_4) (LocalHomeomorph.symm.{max u2 u4, max u2 u3} (Bundle.TotalSpace.{u2, u4} B E) (Prod.{u2, u3} B F) _inst_4 (Prod.topologicalSpace.{u2, u3} B F _inst_3 _inst_2) (Trivialization.toLocalHomeomorph.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (Prod.mk.{u2, u3} B F b v))) (Prod.mk.{u2, u3} B F b (coeFn.{succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) (fun (_x : ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) => F -> F) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) (Trivialization.coordChangeL.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e e' _inst_9 _inst_10 b) v)))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) (e' : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e'] {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Inter.inter.{u4} (Set.{u4} B) (Set.instInterSet.{u4} B) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e'))) -> (forall (v : F), Eq.{max (succ u4) (succ u3)} (Prod.{u4, u3} B F) (Trivialization.toFun'.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) _inst_4 e' (LocalHomeomorph.toFun'.{max u4 u3, max u4 u2} (Prod.{u4, u3} B F) (Bundle.TotalSpace.{u4, u2} B E) (instTopologicalSpaceProd.{u4, u3} B F _inst_3 _inst_2) _inst_4 (LocalHomeomorph.symm.{max u4 u2, max u4 u3} (Bundle.TotalSpace.{u4, u2} B E) (Prod.{u4, u3} B F) _inst_4 (instTopologicalSpaceProd.{u4, u3} B F _inst_3 _inst_2) (Trivialization.toLocalHomeomorph.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (Prod.mk.{u4, u3} B F b v))) (Prod.mk.{u4, u3} B ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) v) b (FunLike.coe.{succ u3, succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) _x) (ContinuousMapClass.toFunLike.{u3, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) F F _inst_2 _inst_2 (ContinuousSemilinearMapClass.toContinuousMapClass.{u3, u1, u1, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{u3, u1, u1, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6)))) (Trivialization.coordChangeL.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e e' _inst_9 _inst_10 b) v)))
Case conversion may be inaccurate. Consider using '#align trivialization.apply_symm_apply_eq_coord_changeL Trivialization.apply_symm_apply_eq_coordChangeLₓ'. -/
theorem apply_symm_apply_eq_coordChangeL (e e' : Trivialization F (π E)) [e.isLinear R]
    [e'.isLinear R] {b : B} (hb : b ∈ e.baseSet ∩ e'.baseSet) (v : F) :
    e' (e.toLocalHomeomorph.symm (b, v)) = (b, e.coordChangeL R e' b v) := by
  rw [e.mk_coord_changeL e' hb, e.mk_symm hb.1]
#align trivialization.apply_symm_apply_eq_coord_changeL Trivialization.apply_symm_apply_eq_coordChangeL

/- warning: trivialization.coord_changeL_apply' -> Trivialization.coordChangeL_apply' is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (e' : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e'] {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e'))) -> (forall (y : F), Eq.{succ u3} F (coeFn.{succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) (fun (_x : ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) => F -> F) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) (Trivialization.coordChangeL.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e e' _inst_9 _inst_10 b) y) (Prod.snd.{u2, u3} B F (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Trivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E) _inst_4) e' (coeFn.{max (succ (max u2 u3)) (succ (max u2 u4)), max (succ (max u2 u3)) (succ (max u2 u4))} (LocalHomeomorph.{max u2 u3, max u2 u4} (Prod.{u2, u3} B F) (Bundle.TotalSpace.{u2, u4} B E) (Prod.topologicalSpace.{u2, u3} B F _inst_3 _inst_2) _inst_4) (fun (_x : LocalHomeomorph.{max u2 u3, max u2 u4} (Prod.{u2, u3} B F) (Bundle.TotalSpace.{u2, u4} B E) (Prod.topologicalSpace.{u2, u3} B F _inst_3 _inst_2) _inst_4) => (Prod.{u2, u3} B F) -> (Bundle.TotalSpace.{u2, u4} B E)) (LocalHomeomorph.hasCoeToFun.{max u2 u3, max u2 u4} (Prod.{u2, u3} B F) (Bundle.TotalSpace.{u2, u4} B E) (Prod.topologicalSpace.{u2, u3} B F _inst_3 _inst_2) _inst_4) (LocalHomeomorph.symm.{max u2 u4, max u2 u3} (Bundle.TotalSpace.{u2, u4} B E) (Prod.{u2, u3} B F) _inst_4 (Prod.topologicalSpace.{u2, u3} B F _inst_3 _inst_2) (Trivialization.toLocalHomeomorph.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (Prod.mk.{u2, u3} B F b y)))))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) (e' : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e'] {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Inter.inter.{u4} (Set.{u4} B) (Set.instInterSet.{u4} B) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e'))) -> (forall (y : F), Eq.{succ u3} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) y) (FunLike.coe.{succ u3, succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) _x) (ContinuousMapClass.toFunLike.{u3, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) F F _inst_2 _inst_2 (ContinuousSemilinearMapClass.toContinuousMapClass.{u3, u1, u1, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{u3, u1, u1, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6)))) (Trivialization.coordChangeL.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e e' _inst_9 _inst_10 b) y) (Prod.snd.{u4, u3} B F (Trivialization.toFun'.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E) _inst_4 e' (LocalHomeomorph.toFun'.{max u4 u3, max u4 u2} (Prod.{u4, u3} B F) (Bundle.TotalSpace.{u4, u2} B E) (instTopologicalSpaceProd.{u4, u3} B F _inst_3 _inst_2) _inst_4 (LocalHomeomorph.symm.{max u4 u2, max u4 u3} (Bundle.TotalSpace.{u4, u2} B E) (Prod.{u4, u3} B F) _inst_4 (instTopologicalSpaceProd.{u4, u3} B F _inst_3 _inst_2) (Trivialization.toLocalHomeomorph.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (Prod.mk.{u4, u3} B F b y)))))
Case conversion may be inaccurate. Consider using '#align trivialization.coord_changeL_apply' Trivialization.coordChangeL_apply'ₓ'. -/
/-- A version of `coord_change_apply` that fully unfolds `coord_change`. The right-hand side is
ugly, but has good definitional properties for specifically defined trivializations. -/
theorem coordChangeL_apply' (e e' : Trivialization F (π E)) [e.isLinear R] [e'.isLinear R] {b : B}
    (hb : b ∈ e.baseSet ∩ e'.baseSet) (y : F) :
    coordChangeL R e e' b y = (e' (e.toLocalHomeomorph.symm (b, y))).2 := by
  rw [e.coord_changeL_apply e' hb, e.mk_symm hb.1]
#align trivialization.coord_changeL_apply' Trivialization.coordChangeL_apply'

/- warning: trivialization.coord_changeL_symm_apply -> Trivialization.coordChangeL_symm_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u2} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_8 : forall (x : B), Module.{u1, u4} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) (e' : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e'] {b : B} (hb : Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e'))), Eq.{succ u3} (F -> F) (coeFn.{succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) (fun (_x : ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) => F -> F) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) (ContinuousLinearEquiv.symm.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (Trivialization.coordChangeL.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e e' _inst_9 _inst_10 b))) (coeFn.{succ u3, succ u3} (LinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F F _inst_5 _inst_5 _inst_6 _inst_6) (fun (_x : LinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F F _inst_5 _inst_5 _inst_6 _inst_6) => F -> F) (LinearEquiv.hasCoeToFun.{u1, u1, u3, u3} R R F F _inst_1 _inst_1 _inst_5 _inst_5 _inst_6 _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1)) (LinearEquiv.trans.{u1, u1, u1, u3, u4, u3} R R R F (E b) F _inst_1 _inst_1 _inst_1 _inst_5 (_inst_7 b) _inst_5 _inst_6 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (LinearEquiv.symm.{u1, u1, u4, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Trivialization.linearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e' _inst_10 b (And.right (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e')) hb))) (Trivialization.linearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b (And.left (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u2, u4} B E) e')) hb))))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u3} F] [_inst_3 : TopologicalSpace.{u4} B] [_inst_4 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_5 : AddCommMonoid.{u3} F] [_inst_6 : Module.{u1, u3} R F _inst_1 _inst_5] [_inst_7 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_8 : forall (x : B), Module.{u1, u2} R (E x) _inst_1 (_inst_7 x)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) (e' : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_9 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e] [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e'] {b : B} (hb : Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Inter.inter.{u4} (Set.{u4} B) (Set.instInterSet.{u4} B) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e'))), Eq.{succ u3} (forall (ᾰ : F), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) ᾰ) (FunLike.coe.{succ u3, succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) _x) (ContinuousMapClass.toFunLike.{u3, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) F F _inst_2 _inst_2 (ContinuousSemilinearMapClass.toContinuousMapClass.{u3, u1, u1, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{u3, u1, u1, u3, u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6)))) (ContinuousLinearEquiv.symm.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F _inst_2 _inst_5 F _inst_2 _inst_5 _inst_6 _inst_6 (Trivialization.coordChangeL.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e e' _inst_9 _inst_10 b))) (FunLike.coe.{succ u3, succ u3, succ u3} (LinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F F _inst_5 _inst_5 _inst_6 _inst_6) F (fun (_x : F) => (fun (x._@.Mathlib.Algebra.Hom.GroupAction._hyg.2186 : F) => F) _x) (SMulHomClass.toFunLike.{u3, u1, u3, u3} (LinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F F _inst_5 _inst_5 _inst_6 _inst_6) R F F (SMulZeroClass.toSMul.{u1, u3} R F (AddMonoid.toZero.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_5)) (DistribSMul.toSMulZeroClass.{u1, u3} R F (AddMonoid.toAddZeroClass.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_5)) (DistribMulAction.toDistribSMul.{u1, u3} R F (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddCommMonoid.toAddMonoid.{u3} F _inst_5) (Module.toDistribMulAction.{u1, u3} R F _inst_1 _inst_5 _inst_6)))) (SMulZeroClass.toSMul.{u1, u3} R F (AddMonoid.toZero.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_5)) (DistribSMul.toSMulZeroClass.{u1, u3} R F (AddMonoid.toAddZeroClass.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_5)) (DistribMulAction.toDistribSMul.{u1, u3} R F (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddCommMonoid.toAddMonoid.{u3} F _inst_5) (Module.toDistribMulAction.{u1, u3} R F _inst_1 _inst_5 _inst_6)))) (DistribMulActionHomClass.toSMulHomClass.{u3, u1, u3, u3} (LinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F F _inst_5 _inst_5 _inst_6 _inst_6) R F F (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddCommMonoid.toAddMonoid.{u3} F _inst_5) (AddCommMonoid.toAddMonoid.{u3} F _inst_5) (Module.toDistribMulAction.{u1, u3} R F _inst_1 _inst_5 _inst_6) (Module.toDistribMulAction.{u1, u3} R F _inst_1 _inst_5 _inst_6) (SemilinearMapClass.distribMulActionHomClass.{u1, u3, u3, u3} R F F (LinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F F _inst_5 _inst_5 _inst_6 _inst_6) _inst_1 _inst_5 _inst_5 _inst_6 _inst_6 (SemilinearEquivClass.instSemilinearMapClass.{u1, u1, u3, u3, u3} R R F F (LinearEquiv.{u1, u1, u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) F F _inst_5 _inst_5 _inst_6 _inst_6) _inst_1 _inst_1 _inst_5 _inst_5 _inst_6 _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (LinearEquiv.instSemilinearEquivClassLinearEquiv.{u1, u1, u3, u3} R R F F _inst_1 _inst_1 _inst_5 _inst_5 _inst_6 _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1)))))) (LinearEquiv.trans.{u1, u1, u1, u3, u2, u3} R R R F (E b) F _inst_1 _inst_1 _inst_1 _inst_5 (_inst_7 b) _inst_5 _inst_6 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomCompTriple.ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (RingHomCompTriple.ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (LinearEquiv.symm.{u1, u1, u2, u3} R R (E b) F _inst_1 _inst_1 (_inst_7 b) _inst_5 (_inst_8 b) _inst_6 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Trivialization.linearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e' _inst_10 b (And.right (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e')) hb))) (Trivialization.linearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 (fun (x : B) => _inst_7 x) (fun (x : B) => _inst_8 x) e _inst_9 b (And.left (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_3 _inst_2 _inst_4 (Bundle.TotalSpace.proj.{u4, u2} B E) e')) hb))))
Case conversion may be inaccurate. Consider using '#align trivialization.coord_changeL_symm_apply Trivialization.coordChangeL_symm_applyₓ'. -/
theorem coordChangeL_symm_apply (e e' : Trivialization F (π E)) [e.isLinear R] [e'.isLinear R]
    {b : B} (hb : b ∈ e.baseSet ∩ e'.baseSet) :
    ⇑(coordChangeL R e e' b).symm =
      (e'.linearEquivAt R b hb.2).symm.trans (e.linearEquivAt R b hb.1) :=
  congr_arg LinearEquiv.invFun (dif_pos hb)
#align trivialization.coord_changeL_symm_apply Trivialization.coordChangeL_symm_apply

end Trivialization

end TopologicalVectorSpace

section

namespace Bundle

#print Bundle.zeroSection /-
/-- The zero section of a vector bundle -/
def zeroSection [∀ x, Zero (E x)] : B → TotalSpace E := fun x => totalSpaceMk x 0
#align bundle.zero_section Bundle.zeroSection
-/

#print Bundle.zeroSection_proj /-
@[simp, mfld_simps]
theorem zeroSection_proj [∀ x, Zero (E x)] (x : B) : (zeroSection E x).proj = x :=
  rfl
#align bundle.zero_section_proj Bundle.zeroSection_proj
-/

#print Bundle.zeroSection_snd /-
@[simp, mfld_simps]
theorem zeroSection_snd [∀ x, Zero (E x)] (x : B) : (zeroSection E x).2 = 0 :=
  rfl
#align bundle.zero_section_snd Bundle.zeroSection_snd
-/

end Bundle

open Bundle

variable [NontriviallyNormedField R] [∀ x, AddCommMonoid (E x)] [∀ x, Module R (E x)]
  [NormedAddCommGroup F] [NormedSpace R F] [TopologicalSpace B] [TopologicalSpace (TotalSpace E)]
  [∀ x, TopologicalSpace (E x)] [FiberBundle F E]

#print VectorBundle /-
/- ./././Mathport/Syntax/Translate/Command.lean:393:30: infer kinds are unsupported in Lean 4: #[`continuousOn_coord_change'] [] -/
/-- The space `total_space E` (for `E : B → Type*` such that each `E x` is a topological vector
space) has a topological vector space structure with fiber `F` (denoted with
`vector_bundle R F E`) if around every point there is a fiber bundle trivialization
which is linear in the fibers. -/
class VectorBundle : Prop where
  trivialization_linear' : ∀ (e : Trivialization F (π E)) [MemTrivializationAtlas e], e.isLinear R
  continuousOn_coord_change' :
    ∀ (e e' : Trivialization F (π E)) [MemTrivializationAtlas e] [MemTrivializationAtlas e'],
      ContinuousOn (fun b => Trivialization.coordChangeL R e e' b : B → F →L[R] F)
        (e.baseSet ∩ e'.baseSet)
#align vector_bundle VectorBundle
-/

variable {F E}

#print trivialization_linear /-
instance (priority := 100) trivialization_linear [VectorBundle R F E] (e : Trivialization F (π E))
    [MemTrivializationAtlas e] : e.isLinear R :=
  VectorBundle.trivialization_linear' e
#align trivialization_linear trivialization_linear
-/

/- warning: continuous_on_coord_change -> continuousOn_coordChange is a dubious translation:
lean 3 declaration is
  forall (R : Type.{u1}) {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u4} (E x)] [_inst_9 : FiberBundle.{u2, u3, u4} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] [_inst_10 : VectorBundle.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) (e' : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) [he : MemTrivializationAtlas.{u2, u3, u4} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b) _inst_9 e] [he' : MemTrivializationAtlas.{u2, u3, u4} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b) _inst_9 e'], ContinuousOn.{u2, u3} B (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) _inst_6 (ContinuousLinearMap.topologicalSpace.{u1, u1, u3, u3} R R (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (SeminormedAddCommGroup.to_topologicalAddGroup.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))) (fun (b : B) => (fun (a : Type.{u3}) (b : Type.{u3}) [self : HasLiftT.{succ u3, succ u3} a b] => self.0) (ContinuousLinearEquiv.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (HasLiftT.mk.{succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (CoeTCₓ.coe.{succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (coeBase.{succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5))))) (Trivialization.coordChangeL.{u1, u2, u3, u4} R B F E (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e e' (trivialization_linear.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (b : B) => _inst_8 b) _inst_9 _inst_10 e he) (trivialization_linear.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (b : B) => _inst_8 b) _inst_9 _inst_10 e' he') b)) (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e'))
but is expected to have type
  forall (R : Type.{u4}) {B : Type.{u3}} {F : Type.{u2}} {E : B -> Type.{u1}} [_inst_1 : NontriviallyNormedField.{u4} R] [_inst_2 : forall (x : B), AddCommMonoid.{u1} (E x)] [_inst_3 : forall (x : B), Module.{u4, u1} R (E x) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u3} B] [_inst_7 : TopologicalSpace.{max u1 u3} (Bundle.TotalSpace.{u3, u1} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u1} (E x)] [_inst_9 : FiberBundle.{u3, u2, u1} B F _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] [_inst_10 : VectorBundle.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9] (e : Trivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u3, u1} B E)) (e' : Trivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u3, u1} B E)) [he : MemTrivializationAtlas.{u3, u2, u1} B F _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b) _inst_9 e] [he' : MemTrivializationAtlas.{u3, u2, u1} B F _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b) _inst_9 e'], ContinuousOn.{u3, u2} B (ContinuousLinearMap.{u4, u4, u2, u2} R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) _inst_6 (ContinuousLinearMap.topologicalSpace.{u4, u4, u2, u2} R R (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F F (SeminormedAddCommGroup.toAddCommGroup.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (SeminormedAddCommGroup.toAddCommGroup.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (SeminormedAddCommGroup.to_topologicalAddGroup.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4))) (fun (b : B) => ContinuousLinearEquiv.toContinuousLinearMap.{u4, u4, u2, u2} R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) (RingHomInvPair.ids.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1)))))) (RingHomInvPair.ids.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (Trivialization.coordChangeL.{u4, u3, u2, u1} R B F E (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e e' (trivialization_linear.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (b : B) => _inst_8 b) _inst_9 _inst_10 e he) (trivialization_linear.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (b : B) => _inst_8 b) _inst_9 _inst_10 e' he') b)) (Inter.inter.{u3} (Set.{u3} B) (Set.instInterSet.{u3} B) (Trivialization.baseSet.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u3, u1} B E) e) (Trivialization.baseSet.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u3, u1} B E) e'))
Case conversion may be inaccurate. Consider using '#align continuous_on_coord_change continuousOn_coordChangeₓ'. -/
theorem continuousOn_coordChange [VectorBundle R F E] (e e' : Trivialization F (π E))
    [he : MemTrivializationAtlas e] [he' : MemTrivializationAtlas e'] :
    ContinuousOn (fun b => Trivialization.coordChangeL R e e' b : B → F →L[R] F)
      (e.baseSet ∩ e'.baseSet) :=
  VectorBundle.continuousOn_coord_change' R e e'
#align continuous_on_coord_change continuousOn_coordChange

namespace Trivialization

#print Trivialization.continuousLinearMapAt /-
/-- Forward map of `continuous_linear_equiv_at` (only propositionally equal),
  defined everywhere (`0` outside domain). -/
@[simps (config := { fullyApplied := false }) apply]
def continuousLinearMapAt (e : Trivialization F (π E)) [e.isLinear R] (b : B) : E b →L[R] F :=
  {-- given explicitly to help `simps`
        e.linearMapAt
      R b with
    toFun := e.linearMapAt R b
    cont := by
      dsimp
      rw [e.coe_linear_map_at b]
      refine' continuous_if_const _ (fun hb => _) fun _ => continuous_zero
      exact
        continuous_snd.comp
          (e.continuous_on.comp_continuous (FiberBundle.totalSpaceMk_inducing F E b).Continuous
            fun x => e.mem_source.mpr hb) }
#align trivialization.continuous_linear_map_at Trivialization.continuousLinearMapAt
-/

#print Trivialization.symmL /-
/-- Backwards map of `continuous_linear_equiv_at`, defined everywhere. -/
@[simps (config := { fullyApplied := false }) apply]
def symmL (e : Trivialization F (π E)) [e.isLinear R] (b : B) : F →L[R] E b :=
  {-- given explicitly to help `simps`
        e.symmₗ
      R b with
    toFun := e.symm b
    cont := by
      by_cases hb : b ∈ e.base_set
      · rw [(FiberBundle.totalSpaceMk_inducing F E b).continuous_iff]
        exact
          e.continuous_on_symm.comp_continuous (continuous_const.prod_mk continuous_id) fun x =>
            mk_mem_prod hb (mem_univ x)
      · refine' continuous_zero.congr fun x => (e.symm_apply_of_not_mem hb x).symm }
#align trivialization.symmL Trivialization.symmL
-/

variable {R}

/- warning: trivialization.symmL_continuous_linear_map_at -> Trivialization.symmL_continuousLinearMapAt is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u4} (E x)] [_inst_9 : FiberBundle.{u2, u3, u4} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) -> (forall (y : E b), Eq.{succ u4} (E b) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) => F -> (E b)) (ContinuousLinearMap.toFun.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) (Trivialization.symmL.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b) (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearMap.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (fun (_x : ContinuousLinearMap.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => (E b) -> F) (ContinuousLinearMap.toFun.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (Trivialization.continuousLinearMapAt.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b) y)) y)
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_3 : forall (x : B), Module.{u1, u2} R (E x) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u2} (E x)] [_inst_9 : FiberBundle.{u4, u3, u2} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) -> (forall (y : E b), Eq.{succ u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => E b) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (E b) (fun (a : E b) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E b) => F) a) (ContinuousMapClass.toFunLike.{max u3 u2, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (E b) F (_inst_8 b) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)))) (Trivialization.continuousLinearMapAt.{u1, u4, u3, u2} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b) y)) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => E b) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) F (E b) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (_inst_8 b) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u1, u1, u3, u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)))) (Trivialization.symmL.{u1, u4, u3, u2} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (E b) (fun (_x : E b) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E b) => F) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (E b) F (_inst_8 b) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)))) (Trivialization.continuousLinearMapAt.{u1, u4, u3, u2} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b) y)) y)
Case conversion may be inaccurate. Consider using '#align trivialization.symmL_continuous_linear_map_at Trivialization.symmL_continuousLinearMapAtₓ'. -/
theorem symmL_continuousLinearMapAt (e : Trivialization F (π E)) [e.isLinear R] {b : B}
    (hb : b ∈ e.baseSet) (y : E b) : e.symmL R b (e.continuousLinearMapAt R b y) = y :=
  e.symmₗ_linearMapAt hb y
#align trivialization.symmL_continuous_linear_map_at Trivialization.symmL_continuousLinearMapAt

/- warning: trivialization.continuous_linear_map_at_symmL -> Trivialization.continuousLinearMapAt_symmL is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u4} (E x)] [_inst_9 : FiberBundle.{u2, u3, u4} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) -> (forall (y : F), Eq.{succ u3} F (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearMap.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (fun (_x : ContinuousLinearMap.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => (E b) -> F) (ContinuousLinearMap.toFun.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (Trivialization.continuousLinearMapAt.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) => F -> (E b)) (ContinuousLinearMap.toFun.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) (Trivialization.symmL.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b) y)) y)
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_3 : forall (x : B), Module.{u1, u2} R (E x) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u2} (E x)] [_inst_9 : FiberBundle.{u4, u3, u2} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) -> (forall (y : F), Eq.{succ u3} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E b) => F) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) F (fun (a : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => E b) a) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) F (E b) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (_inst_8 b) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u1, u1, u3, u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)))) (Trivialization.symmL.{u1, u4, u3, u2} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b) y)) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (E b) (fun (_x : E b) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E b) => F) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (E b) F (_inst_8 b) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)))) (Trivialization.continuousLinearMapAt.{u1, u4, u3, u2} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => E b) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) F (E b) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (_inst_8 b) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u1, u1, u3, u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)))) (Trivialization.symmL.{u1, u4, u3, u2} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b) y)) y)
Case conversion may be inaccurate. Consider using '#align trivialization.continuous_linear_map_at_symmL Trivialization.continuousLinearMapAt_symmLₓ'. -/
theorem continuousLinearMapAt_symmL (e : Trivialization F (π E)) [e.isLinear R] {b : B}
    (hb : b ∈ e.baseSet) (y : F) : e.continuousLinearMapAt R b (e.symmL R b y) = y :=
  e.linearMapAt_symmₗ hb y
#align trivialization.continuous_linear_map_at_symmL Trivialization.continuousLinearMapAt_symmL

variable (R)

#print Trivialization.continuousLinearEquivAt /-
/-- In a vector bundle, a trivialization in the fiber (which is a priori only linear)
is in fact a continuous linear equiv between the fibers and the model fiber. -/
@[simps (config := { fullyApplied := false }) apply symm_apply]
def continuousLinearEquivAt (e : Trivialization F (π E)) [e.isLinear R] (b : B)
    (hb : b ∈ e.baseSet) : E b ≃L[R] F :=
  {-- given explicitly to help `simps`
          -- given explicitly to help `simps`
          e.toPretrivialization.linearEquivAt
      R b hb with
    toFun := fun y => (e (totalSpaceMk b y)).2
    invFun := e.symm b
    continuous_toFun :=
      continuous_snd.comp
        (e.ContinuousOn.comp_continuous (FiberBundle.totalSpaceMk_inducing F E b).Continuous
          fun x => e.mem_source.mpr hb)
    continuous_invFun := (e.symmL R b).Continuous }
#align trivialization.continuous_linear_equiv_at Trivialization.continuousLinearEquivAt
-/

variable {R}

/- warning: trivialization.coe_continuous_linear_equiv_at_eq -> Trivialization.coe_continuousLinearEquivAt_eq is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u4} (E x)] [_inst_9 : FiberBundle.{u2, u3, u4} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] {b : B} (hb : Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e)), Eq.{max (succ u4) (succ u3)} ((fun (_x : ContinuousLinearEquiv.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (E b) ((fun (x : B) => _inst_8 x) b) ((fun (x : B) => _inst_2 x) b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) ((fun (x : B) => _inst_3 x) b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => (E b) -> F) (Trivialization.continuousLinearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b hb)) (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (E b) ((fun (x : B) => _inst_8 x) b) ((fun (x : B) => _inst_2 x) b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) ((fun (x : B) => _inst_3 x) b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (fun (_x : ContinuousLinearEquiv.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (E b) ((fun (x : B) => _inst_8 x) b) ((fun (x : B) => _inst_2 x) b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) ((fun (x : B) => _inst_3 x) b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => (E b) -> F) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (E b) ((fun (x : B) => _inst_8 x) b) ((fun (x : B) => _inst_2 x) b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) ((fun (x : B) => _inst_3 x) b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (Trivialization.continuousLinearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b hb)) (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearMap.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) ((fun (x : B) => _inst_8 x) b) ((fun (x : B) => _inst_2 x) b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) ((fun (x : B) => _inst_3 x) b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (fun (_x : ContinuousLinearMap.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) ((fun (x : B) => _inst_8 x) b) ((fun (x : B) => _inst_2 x) b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) ((fun (x : B) => _inst_3 x) b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => (E b) -> F) (ContinuousLinearMap.toFun.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) ((fun (x : B) => _inst_8 x) b) ((fun (x : B) => _inst_2 x) b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) ((fun (x : B) => _inst_3 x) b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (Trivialization.continuousLinearMapAt.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_3 : forall (x : B), Module.{u1, u2} R (E x) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u2} (E x)] [_inst_9 : FiberBundle.{u4, u3, u2} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] {b : B} (hb : Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e)), Eq.{max (succ u3) (succ u2)} (forall (a : E b), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E b) => F) a) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (E b) (fun (_x : E b) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E b) => F) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u2, u3} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (E b) F (_inst_8 b) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u1, u1, u2, u3} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u3 u2, u1, u1, u2, u3} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5))))) (Trivialization.continuousLinearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b hb)) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (E b) (fun (_x : E b) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E b) => F) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (E b) F (_inst_8 b) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)))) (Trivialization.continuousLinearMapAt.{u1, u4, u3, u2} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b))
Case conversion may be inaccurate. Consider using '#align trivialization.coe_continuous_linear_equiv_at_eq Trivialization.coe_continuousLinearEquivAt_eqₓ'. -/
theorem coe_continuousLinearEquivAt_eq (e : Trivialization F (π E)) [e.isLinear R] {b : B}
    (hb : b ∈ e.baseSet) :
    (e.continuousLinearEquivAt R b hb : E b → F) = e.continuousLinearMapAt R b :=
  (e.coe_linearMapAt_of_mem hb).symm
#align trivialization.coe_continuous_linear_equiv_at_eq Trivialization.coe_continuousLinearEquivAt_eq

/- warning: trivialization.symm_continuous_linear_equiv_at_eq -> Trivialization.symm_continuousLinearEquivAt_eq is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u4} (E x)] [_inst_9 : FiberBundle.{u2, u3, u4} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] {b : B} (hb : Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e)), Eq.{max (succ u3) (succ u4)} ((fun (_x : ContinuousLinearEquiv.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) => F -> (E b)) (ContinuousLinearEquiv.symm.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (Trivialization.continuousLinearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 (fun {b : B} => _inst_2 b) (fun {b : B} => _inst_3 b) _inst_4 _inst_5 _inst_6 _inst_7 (fun {b : B} => _inst_8 b) _inst_9 e _inst_10 b hb))) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) (fun (_x : ContinuousLinearEquiv.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) => F -> (E b)) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) (ContinuousLinearEquiv.symm.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (Trivialization.continuousLinearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 (fun {b : B} => _inst_2 b) (fun {b : B} => _inst_3 b) _inst_4 _inst_5 _inst_6 _inst_7 (fun {b : B} => _inst_8 b) _inst_9 e _inst_10 b hb))) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) ((fun (x : B) => _inst_8 x) b) ((fun (x : B) => _inst_2 x) b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) ((fun (x : B) => _inst_3 x) b)) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) ((fun (x : B) => _inst_8 x) b) ((fun (x : B) => _inst_2 x) b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) ((fun (x : B) => _inst_3 x) b)) => F -> (E b)) (ContinuousLinearMap.toFun.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) ((fun (x : B) => _inst_8 x) b) ((fun (x : B) => _inst_2 x) b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) ((fun (x : B) => _inst_3 x) b)) (Trivialization.symmL.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_3 : forall (x : B), Module.{u1, u2} R (E x) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u2} (E x)] [_inst_9 : FiberBundle.{u4, u3, u2} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] {b : B} (hb : Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e)), Eq.{max (succ u3) (succ u2)} (forall (a : F), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => E b) a) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => E b) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) F (E b) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (_inst_8 b) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u1, u1, u3, u2} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b) (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u3 u2, u1, u1, u3, u2} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b) (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b))))) (ContinuousLinearEquiv.symm.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (Trivialization.continuousLinearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 (fun (b : B) => _inst_2 b) (fun (b : B) => _inst_3 b) _inst_4 _inst_5 _inst_6 _inst_7 (fun (b : B) => _inst_8 b) _inst_9 e _inst_10 b hb))) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => E b) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) F (E b) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (_inst_8 b) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u1, u1, u3, u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)))) (Trivialization.symmL.{u1, u4, u3, u2} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b))
Case conversion may be inaccurate. Consider using '#align trivialization.symm_continuous_linear_equiv_at_eq Trivialization.symm_continuousLinearEquivAt_eqₓ'. -/
theorem symm_continuousLinearEquivAt_eq (e : Trivialization F (π E)) [e.isLinear R] {b : B}
    (hb : b ∈ e.baseSet) : ((e.continuousLinearEquivAt R b hb).symm : F → E b) = e.symmL R b :=
  rfl
#align trivialization.symm_continuous_linear_equiv_at_eq Trivialization.symm_continuousLinearEquivAt_eq

/- warning: trivialization.continuous_linear_equiv_at_apply' -> Trivialization.continuousLinearEquivAt_apply' is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u4} (E x)] [_inst_9 : FiberBundle.{u2, u3, u4} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] (x : Bundle.TotalSpace.{u2, u4} B E) (hx : Membership.Mem.{max u2 u4, max u2 u4} (Bundle.TotalSpace.{u2, u4} B E) (Set.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)) (Set.hasMem.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)) x (LocalEquiv.source.{max u2 u4, max u2 u3} (Bundle.TotalSpace.{u2, u4} B E) (Prod.{u2, u3} B F) (LocalHomeomorph.toLocalEquiv.{max u2 u4, max u2 u3} (Bundle.TotalSpace.{u2, u4} B E) (Prod.{u2, u3} B F) _inst_7 (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (Trivialization.toLocalHomeomorph.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e)))), Eq.{succ u3} F (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (E (Bundle.TotalSpace.proj.{u2, u4} B E x)) (_inst_8 (Bundle.TotalSpace.proj.{u2, u4} B E x)) (_inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E x)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 (Bundle.TotalSpace.proj.{u2, u4} B E x)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (fun (_x : ContinuousLinearEquiv.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (E (Bundle.TotalSpace.proj.{u2, u4} B E x)) (_inst_8 (Bundle.TotalSpace.proj.{u2, u4} B E x)) (_inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E x)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 (Bundle.TotalSpace.proj.{u2, u4} B E x)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => (E (Bundle.TotalSpace.proj.{u2, u4} B E x)) -> F) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (E (Bundle.TotalSpace.proj.{u2, u4} B E x)) (_inst_8 (Bundle.TotalSpace.proj.{u2, u4} B E x)) (_inst_2 (Bundle.TotalSpace.proj.{u2, u4} B E x)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 (Bundle.TotalSpace.proj.{u2, u4} B E x)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (Trivialization.continuousLinearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 (Bundle.TotalSpace.proj.{u2, u4} B E x) (Iff.mp (Membership.Mem.{max u2 u4, max u2 u4} (Bundle.TotalSpace.{u2, u4} B E) (Set.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)) (Set.hasMem.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)) x (LocalEquiv.source.{max u2 u4, max u2 u3} (Bundle.TotalSpace.{u2, u4} B E) (Prod.{u2, u3} B F) (LocalHomeomorph.toLocalEquiv.{max u2 u4, max u2 u3} (Bundle.TotalSpace.{u2, u4} B E) (Prod.{u2, u3} B F) _inst_7 (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (Trivialization.toLocalHomeomorph.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e)))) (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) (Bundle.TotalSpace.proj.{u2, u4} B E x) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (Trivialization.mem_source.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E) _inst_7 e x) hx)) (Sigma.snd.{u2, u4} B (fun (x : B) => E x) x)) (Prod.snd.{u2, u3} B F (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Trivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E) _inst_7) e x))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_3 : forall (x : B), Module.{u1, u2} R (E x) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u2} (E x)] [_inst_9 : FiberBundle.{u4, u3, u2} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] (x : Bundle.TotalSpace.{u4, u2} B E) (hx : Membership.mem.{max u4 u2, max u4 u2} (Bundle.TotalSpace.{u4, u2} B E) (Set.{max u4 u2} (Bundle.TotalSpace.{u4, u2} B E)) (Set.instMembershipSet.{max u4 u2} (Bundle.TotalSpace.{u4, u2} B E)) x (LocalEquiv.source.{max u4 u2, max u4 u3} (Bundle.TotalSpace.{u4, u2} B E) (Prod.{u4, u3} B F) (LocalHomeomorph.toLocalEquiv.{max u4 u2, max u4 u3} (Bundle.TotalSpace.{u4, u2} B E) (Prod.{u4, u3} B F) _inst_7 (instTopologicalSpaceProd.{u4, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (Trivialization.toLocalHomeomorph.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e)))), Eq.{succ u3} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E (Bundle.TotalSpace.proj.{u4, u2} B E x)) => F) (Sigma.snd.{u4, u2} B (fun (x : B) => E x) x)) (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E (Bundle.TotalSpace.proj.{u4, u2} B E x)) (_inst_8 (Bundle.TotalSpace.proj.{u4, u2} B E x)) (_inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E x)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 (Bundle.TotalSpace.proj.{u4, u2} B E x)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (E (Bundle.TotalSpace.proj.{u4, u2} B E x)) (fun (_x : E (Bundle.TotalSpace.proj.{u4, u2} B E x)) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E (Bundle.TotalSpace.proj.{u4, u2} B E x)) => F) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u2, u3} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E (Bundle.TotalSpace.proj.{u4, u2} B E x)) (_inst_8 (Bundle.TotalSpace.proj.{u4, u2} B E x)) (_inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E x)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 (Bundle.TotalSpace.proj.{u4, u2} B E x)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (E (Bundle.TotalSpace.proj.{u4, u2} B E x)) F (_inst_8 (Bundle.TotalSpace.proj.{u4, u2} B E x)) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u1, u1, u2, u3} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E (Bundle.TotalSpace.proj.{u4, u2} B E x)) (_inst_8 (Bundle.TotalSpace.proj.{u4, u2} B E x)) (_inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E x)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 (Bundle.TotalSpace.proj.{u4, u2} B E x)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E (Bundle.TotalSpace.proj.{u4, u2} B E x)) (_inst_8 (Bundle.TotalSpace.proj.{u4, u2} B E x)) (_inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E x)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 (Bundle.TotalSpace.proj.{u4, u2} B E x)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u3 u2, u1, u1, u2, u3} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E (Bundle.TotalSpace.proj.{u4, u2} B E x)) (_inst_8 (Bundle.TotalSpace.proj.{u4, u2} B E x)) (_inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E x)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 (Bundle.TotalSpace.proj.{u4, u2} B E x)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E (Bundle.TotalSpace.proj.{u4, u2} B E x)) (_inst_8 (Bundle.TotalSpace.proj.{u4, u2} B E x)) (_inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E x)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 (Bundle.TotalSpace.proj.{u4, u2} B E x)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E (Bundle.TotalSpace.proj.{u4, u2} B E x)) (_inst_8 (Bundle.TotalSpace.proj.{u4, u2} B E x)) (_inst_2 (Bundle.TotalSpace.proj.{u4, u2} B E x)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 (Bundle.TotalSpace.proj.{u4, u2} B E x)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5))))) (Trivialization.continuousLinearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 (Bundle.TotalSpace.proj.{u4, u2} B E x) (Iff.mp (Membership.mem.{max u4 u2, max u4 u2} (Bundle.TotalSpace.{u4, u2} B E) (Set.{max u4 u2} (Bundle.TotalSpace.{u4, u2} B E)) (Set.instMembershipSet.{max u4 u2} (Bundle.TotalSpace.{u4, u2} B E)) x (LocalEquiv.source.{max u4 u2, max u4 u3} (Bundle.TotalSpace.{u4, u2} B E) (Prod.{u4, u3} B F) (LocalHomeomorph.toLocalEquiv.{max u4 u2, max u4 u3} (Bundle.TotalSpace.{u4, u2} B E) (Prod.{u4, u3} B F) _inst_7 (instTopologicalSpaceProd.{u4, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (Trivialization.toLocalHomeomorph.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e)))) (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) (Bundle.TotalSpace.proj.{u4, u2} B E x) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (Trivialization.mem_source.{u3, u4, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u4, u2} B E) _inst_7 e x) hx)) (Sigma.snd.{u4, u2} B (fun (x : B) => E x) x)) (Prod.snd.{u4, u3} B F (Trivialization.toFun'.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u4, u2} B E) _inst_7 e x))
Case conversion may be inaccurate. Consider using '#align trivialization.continuous_linear_equiv_at_apply' Trivialization.continuousLinearEquivAt_apply'ₓ'. -/
@[simp]
theorem continuousLinearEquivAt_apply' (e : Trivialization F (π E)) [e.isLinear R]
    (x : TotalSpace E) (hx : x ∈ e.source) :
    e.continuousLinearEquivAt R x.proj (e.mem_source.1 hx) x.2 = (e x).2 :=
  by
  cases x
  rfl
#align trivialization.continuous_linear_equiv_at_apply' Trivialization.continuousLinearEquivAt_apply'

variable (R)

/- warning: trivialization.apply_eq_prod_continuous_linear_equiv_at -> Trivialization.apply_eq_prod_continuousLinearEquivAt is a dubious translation:
lean 3 declaration is
  forall (R : Type.{u1}) {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u4} (E x)] [_inst_9 : FiberBundle.{u2, u3, u4} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] (b : B) (hb : Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (z : E b), Eq.{max (succ u2) (succ u3)} (Prod.{u2, u3} B F) (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Trivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E) _inst_7) e (Sigma.mk.{u2, u4} B (fun (x : B) => E x) b z)) (Prod.mk.{u2, u3} B F b (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (fun (_x : ContinuousLinearEquiv.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => (E b) -> F) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (Trivialization.continuousLinearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b hb) z))
but is expected to have type
  forall (R : Type.{u1}) {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_3 : forall (x : B), Module.{u1, u2} R (E x) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u2} (E x)] [_inst_9 : FiberBundle.{u4, u3, u2} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] (b : B) (hb : Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (z : E b), Eq.{max (succ u4) (succ u3)} (Prod.{u4, u3} B F) (Trivialization.toFun'.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u4, u2} B E) _inst_7 e (Sigma.mk.{u4, u2} B (fun (x : B) => E x) b z)) (Prod.mk.{u4, u3} B ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E b) => F) z) b (FunLike.coe.{max (succ u3) (succ u2), succ u2, succ u3} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (E b) (fun (_x : E b) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E b) => F) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u2, u3} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (E b) F (_inst_8 b) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u1, u1, u2, u3} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u3 u2, u1, u1, u2, u3} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5))))) (Trivialization.continuousLinearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 _inst_7 (fun (x : B) => _inst_8 x) _inst_9 e _inst_10 b hb) z))
Case conversion may be inaccurate. Consider using '#align trivialization.apply_eq_prod_continuous_linear_equiv_at Trivialization.apply_eq_prod_continuousLinearEquivAtₓ'. -/
theorem apply_eq_prod_continuousLinearEquivAt (e : Trivialization F (π E)) [e.isLinear R] (b : B)
    (hb : b ∈ e.baseSet) (z : E b) : e ⟨b, z⟩ = (b, e.continuousLinearEquivAt R b hb z) :=
  by
  ext
  · refine' e.coe_fst _
    rw [e.source_eq]
    exact hb
  · simp only [coe_coe, continuous_linear_equiv_at_apply]
#align trivialization.apply_eq_prod_continuous_linear_equiv_at Trivialization.apply_eq_prod_continuousLinearEquivAt

/- warning: trivialization.zero_section -> Trivialization.zeroSection is a dubious translation:
lean 3 declaration is
  forall (R : Type.{u1}) {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u4} (E x)] [_inst_9 : FiberBundle.{u2, u3, u4} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] {x : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) x (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) -> (Eq.{max (succ u2) (succ u3)} (Prod.{u2, u3} B F) (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Trivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E) _inst_7) e (Bundle.zeroSection.{u2, u4} B E (fun (x : B) => AddZeroClass.toHasZero.{u4} (E x) (AddMonoid.toAddZeroClass.{u4} (E x) (AddCommMonoid.toAddMonoid.{u4} (E x) (_inst_2 x)))) x)) (Prod.mk.{u2, u3} B F x (OfNat.ofNat.{u3} F 0 (OfNat.mk.{u3} F 0 (Zero.zero.{u3} F (AddZeroClass.toHasZero.{u3} F (AddMonoid.toAddZeroClass.{u3} F (SubNegMonoid.toAddMonoid.{u3} F (AddGroup.toSubNegMonoid.{u3} F (NormedAddGroup.toAddGroup.{u3} F (NormedAddCommGroup.toNormedAddGroup.{u3} F _inst_4)))))))))))
but is expected to have type
  forall (R : Type.{u1}) {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_3 : forall (x : B), Module.{u1, u2} R (E x) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u2} (E x)] [_inst_9 : FiberBundle.{u4, u3, u2} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] {x : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) x (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) -> (Eq.{max (succ u4) (succ u3)} (Prod.{u4, u3} B F) (Trivialization.toFun'.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u4, u2} B E) _inst_7 e (Bundle.zeroSection.{u4, u2} B E (fun (x : B) => AddMonoid.toZero.{u2} (E x) (AddCommMonoid.toAddMonoid.{u2} (E x) (_inst_2 x))) x)) (Prod.mk.{u4, u3} B F x (OfNat.ofNat.{u3} F 0 (Zero.toOfNat0.{u3} F (NegZeroClass.toZero.{u3} F (SubNegZeroMonoid.toNegZeroClass.{u3} F (SubtractionMonoid.toSubNegZeroMonoid.{u3} F (SubtractionCommMonoid.toSubtractionMonoid.{u3} F (AddCommGroup.toDivisionAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4))))))))))
Case conversion may be inaccurate. Consider using '#align trivialization.zero_section Trivialization.zeroSectionₓ'. -/
protected theorem zeroSection (e : Trivialization F (π E)) [e.isLinear R] {x : B}
    (hx : x ∈ e.baseSet) : e (zeroSection E x) = (x, 0) := by
  simp_rw [zero_section, total_space_mk, e.apply_eq_prod_continuous_linear_equiv_at R x hx 0,
    map_zero]
#align trivialization.zero_section Trivialization.zeroSection

variable {R}

/- warning: trivialization.symm_apply_eq_mk_continuous_linear_equiv_at_symm -> Trivialization.symm_apply_eq_mk_continuousLinearEquivAt_symm is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u4} (E x)] [_inst_9 : FiberBundle.{u2, u3, u4} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] (b : B) (hb : Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (z : F), Eq.{max (succ u2) (succ u4)} (Bundle.TotalSpace.{u2, u4} B E) (coeFn.{max (succ (max u2 u3)) (succ (max u2 u4)), max (succ (max u2 u3)) (succ (max u2 u4))} (LocalHomeomorph.{max u2 u3, max u2 u4} (Prod.{u2, u3} B F) (Bundle.TotalSpace.{u2, u4} B E) (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) _inst_7) (fun (_x : LocalHomeomorph.{max u2 u3, max u2 u4} (Prod.{u2, u3} B F) (Bundle.TotalSpace.{u2, u4} B E) (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) _inst_7) => (Prod.{u2, u3} B F) -> (Bundle.TotalSpace.{u2, u4} B E)) (LocalHomeomorph.hasCoeToFun.{max u2 u3, max u2 u4} (Prod.{u2, u3} B F) (Bundle.TotalSpace.{u2, u4} B E) (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) _inst_7) (LocalHomeomorph.symm.{max u2 u4, max u2 u3} (Bundle.TotalSpace.{u2, u4} B E) (Prod.{u2, u3} B F) _inst_7 (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (Trivialization.toLocalHomeomorph.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (Prod.mk.{u2, u3} B F b z)) (Bundle.totalSpaceMk.{u2, u4} B E b (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) (fun (_x : ContinuousLinearEquiv.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) => F -> (E b)) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) (ContinuousLinearEquiv.symm.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (Trivialization.continuousLinearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 (fun (b : B) => _inst_2 b) (fun (b : B) => _inst_3 b) _inst_4 _inst_5 _inst_6 _inst_7 (fun (b : B) => _inst_8 b) _inst_9 e _inst_10 b hb)) z))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_3 : forall (x : B), Module.{u1, u2} R (E x) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u2} (E x)] [_inst_9 : FiberBundle.{u4, u3, u2} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] (b : B) (hb : Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (z : F), Eq.{max (succ u4) (succ u2)} (Bundle.TotalSpace.{u4, u2} B E) (LocalHomeomorph.toFun'.{max u4 u3, max u4 u2} (Prod.{u4, u3} B F) (Bundle.TotalSpace.{u4, u2} B E) (instTopologicalSpaceProd.{u4, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) _inst_7 (LocalHomeomorph.symm.{max u4 u2, max u4 u3} (Bundle.TotalSpace.{u4, u2} B E) (Prod.{u4, u3} B F) _inst_7 (instTopologicalSpaceProd.{u4, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (Trivialization.toLocalHomeomorph.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (Prod.mk.{u4, u3} B F b z)) (Bundle.totalSpaceMk.{u4, u2} B E b (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => E b) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) F (E b) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (_inst_8 b) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u1, u1, u3, u2} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b) (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u3 u2, u1, u1, u3, u2} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b) (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, u3, u2} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b))))) (ContinuousLinearEquiv.symm.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (Trivialization.continuousLinearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 (fun (b : B) => _inst_2 b) (fun (b : B) => _inst_3 b) _inst_4 _inst_5 _inst_6 _inst_7 (fun (b : B) => _inst_8 b) _inst_9 e _inst_10 b hb)) z))
Case conversion may be inaccurate. Consider using '#align trivialization.symm_apply_eq_mk_continuous_linear_equiv_at_symm Trivialization.symm_apply_eq_mk_continuousLinearEquivAt_symmₓ'. -/
theorem symm_apply_eq_mk_continuousLinearEquivAt_symm (e : Trivialization F (π E)) [e.isLinear R]
    (b : B) (hb : b ∈ e.baseSet) (z : F) :
    e.toLocalHomeomorph.symm ⟨b, z⟩ = totalSpaceMk b ((e.continuousLinearEquivAt R b hb).symm z) :=
  by
  have h : (b, z) ∈ e.target := by
    rw [e.target_eq]
    exact ⟨hb, mem_univ _⟩
  apply e.inj_on (e.map_target h)
  · simp only [e.source_eq, hb, mem_preimage]
  simp_rw [e.right_inv h, coe_coe, e.apply_eq_prod_continuous_linear_equiv_at R b hb,
    ContinuousLinearEquiv.apply_symm_apply]
#align trivialization.symm_apply_eq_mk_continuous_linear_equiv_at_symm Trivialization.symm_apply_eq_mk_continuousLinearEquivAt_symm

/- warning: trivialization.comp_continuous_linear_equiv_at_eq_coord_change -> Trivialization.comp_continuousLinearEquivAt_eq_coord_change is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u4} (E x)] [_inst_9 : FiberBundle.{u2, u3, u4} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) (e' : Trivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] [_inst_11 : Trivialization.IsLinear.{u1, u2, u3, u4} R B F E (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e'] {b : B} (hb : Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e) (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e'))), Eq.{succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (ContinuousLinearEquiv.trans.{u1, u1, u1, u3, u4, u3} R R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomCompTriple.right_ids.{u1, u1} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))))) (RingHomCompTriple.right_ids.{u1, u1} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (ContinuousLinearEquiv.symm.{u1, u1, u4, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u1} R _inst_1) (Trivialization.continuousLinearEquivAt._proof_2.{u1} R _inst_1) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (Trivialization.continuousLinearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 (fun {b : B} => _inst_2 b) (fun {b : B} => _inst_3 b) _inst_4 _inst_5 _inst_6 _inst_7 (fun {b : B} => _inst_8 b) _inst_9 e _inst_10 b (And.left (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e')) hb))) (Trivialization.continuousLinearEquivAt.{u1, u2, u3, u4} R B F E _inst_1 (fun {b : B} => _inst_2 b) (fun {b : B} => _inst_3 b) _inst_4 _inst_5 _inst_6 _inst_7 (fun {b : B} => _inst_8 b) _inst_9 e' _inst_11 b (And.right (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e)) (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u2, u4} B E) e')) hb))) (Trivialization.coordChangeL.{u1, u2, u3, u4} R B F E (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e e' _inst_10 _inst_11 b)
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u4}} {F : Type.{u3}} {E : B -> Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u2} (E x)] [_inst_3 : forall (x : B), Module.{u1, u2} R (E x) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] [_inst_7 : TopologicalSpace.{max u2 u4} (Bundle.TotalSpace.{u4, u2} B E)] [_inst_8 : forall (x : B), TopologicalSpace.{u2} (E x)] [_inst_9 : FiberBundle.{u4, u3, u2} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_7 (fun (b : B) => _inst_8 b)] (e : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E)) (e' : Trivialization.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E)) [_inst_10 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e] [_inst_11 : Trivialization.IsLinear.{u1, u4, u3, u2} R B F E (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e'] {b : B} (hb : Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Inter.inter.{u4} (Set.{u4} B) (Set.instInterSet.{u4} B) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e) (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e'))), Eq.{succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (ContinuousLinearEquiv.trans.{u1, u1, u1, u3, u2, u3} R R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomCompTriple.ids.{u1, u1} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))))) (RingHomCompTriple.ids.{u1, u1} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (ContinuousLinearEquiv.symm.{u1, u1, u2, u3} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (E b) (_inst_8 b) (_inst_2 b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_3 b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (Trivialization.continuousLinearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 (fun (b : B) => _inst_2 b) (fun (b : B) => _inst_3 b) _inst_4 _inst_5 _inst_6 _inst_7 (fun (b : B) => _inst_8 b) _inst_9 e _inst_10 b (And.left (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e')) hb))) (Trivialization.continuousLinearEquivAt.{u1, u4, u3, u2} R B F E _inst_1 (fun (b : B) => _inst_2 b) (fun (b : B) => _inst_3 b) _inst_4 _inst_5 _inst_6 _inst_7 (fun (b : B) => _inst_8 b) _inst_9 e' _inst_11 b (And.right (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e)) (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_7 (Bundle.TotalSpace.proj.{u4, u2} B E) e')) hb))) (Trivialization.coordChangeL.{u1, u4, u3, u2} R B F E (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 _inst_7 (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) e e' _inst_10 _inst_11 b)
Case conversion may be inaccurate. Consider using '#align trivialization.comp_continuous_linear_equiv_at_eq_coord_change Trivialization.comp_continuousLinearEquivAt_eq_coord_changeₓ'. -/
theorem comp_continuousLinearEquivAt_eq_coord_change (e e' : Trivialization F (π E)) [e.isLinear R]
    [e'.isLinear R] {b : B} (hb : b ∈ e.baseSet ∩ e'.baseSet) :
    (e.continuousLinearEquivAt R b hb.1).symm.trans (e'.continuousLinearEquivAt R b hb.2) =
      coordChangeL R e e' b :=
  by
  ext v
  rw [coord_changeL_apply e e' hb]
  rfl
#align trivialization.comp_continuous_linear_equiv_at_eq_coord_change Trivialization.comp_continuousLinearEquivAt_eq_coord_change

end Trivialization

include R F

/-! ### Constructing vector bundles -/


variable (R B F)

#print VectorBundleCore /-
/-- Analogous construction of `fiber_bundle_core` for vector bundles. This
construction gives a way to construct vector bundles from a structure registering how
trivialization changes act on fibers. -/
structure VectorBundleCore (ι : Type _) where
  baseSet : ι → Set B
  isOpen_baseSet : ∀ i, IsOpen (base_set i)
  indexAt : B → ι
  mem_baseSet_at : ∀ x, x ∈ base_set (index_at x)
  coordChange : ι → ι → B → F →L[R] F
  coordChange_self : ∀ i, ∀ x ∈ base_set i, ∀ v, coord_change i i x v = v
  continuousOn_coordChange : ∀ i j, ContinuousOn (coord_change i j) (base_set i ∩ base_set j)
  coordChange_comp :
    ∀ i j k,
      ∀ x ∈ base_set i ∩ base_set j ∩ base_set k,
        ∀ v, (coord_change j k x) (coord_change i j x v) = coord_change i k x v
#align vector_bundle_core VectorBundleCore
-/

#print trivialVectorBundleCore /-
/-- The trivial vector bundle core, in which all the changes of coordinates are the
identity. -/
def trivialVectorBundleCore (ι : Type _) [Inhabited ι] : VectorBundleCore R B F ι
    where
  baseSet ι := univ
  isOpen_baseSet i := isOpen_univ
  indexAt := default
  mem_baseSet_at x := mem_univ x
  coordChange i j x := ContinuousLinearMap.id R F
  coordChange_self i x hx v := rfl
  coordChange_comp i j k x hx v := rfl
  continuousOn_coordChange i j := continuousOn_const
#align trivial_vector_bundle_core trivialVectorBundleCore
-/

instance (ι : Type _) [Inhabited ι] : Inhabited (VectorBundleCore R B F ι) :=
  ⟨trivialVectorBundleCore R B F ι⟩

namespace VectorBundleCore

variable {R B F} {ι : Type _} (Z : VectorBundleCore R B F ι)

#print VectorBundleCore.toFiberBundleCore /-
/-- Natural identification to a `fiber_bundle_core`. -/
@[simps (config := mfld_cfg)]
def toFiberBundleCore : FiberBundleCore ι B F :=
  { Z with
    coordChange := fun i j b => Z.coordChange i j b
    continuousOn_coordChange := fun i j =>
      isBoundedBilinearMapApply.Continuous.comp_continuousOn
        ((Z.continuousOn_coordChange i j).Prod_map continuousOn_id) }
#align vector_bundle_core.to_fiber_bundle_core VectorBundleCore.toFiberBundleCore
-/

instance toFiberBundleCoreCoe : Coe (VectorBundleCore R B F ι) (FiberBundleCore ι B F) :=
  ⟨toFiberBundleCore⟩
#align vector_bundle_core.to_fiber_bundle_core_coe VectorBundleCore.toFiberBundleCoreCoe

include Z

/- warning: vector_bundle_core.coord_change_linear_comp -> VectorBundleCore.coordChange_linear_comp is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι) (j : ι) (k : ι) (x : B), (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) x (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (VectorBundleCore.baseSet.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) (VectorBundleCore.baseSet.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z j)) (VectorBundleCore.baseSet.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z k))) -> (Eq.{succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (ContinuousLinearMap.comp.{u1, u1, u1, u3, u3, u3} R R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (RingHomCompTriple.right_ids.{u1, u1} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))))) (VectorBundleCore.coordChange.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z j k x) (VectorBundleCore.coordChange.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i j x)) (VectorBundleCore.coordChange.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i k x))
but is expected to have type
  forall {R : Type.{u3}} {B : Type.{u4}} {F : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u3} R] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι) (j : ι) (k : ι) (x : B), (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) x (Inter.inter.{u4} (Set.{u4} B) (Set.instInterSet.{u4} B) (Inter.inter.{u4} (Set.{u4} B) (Set.instInterSet.{u4} B) (VectorBundleCore.baseSet.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) (VectorBundleCore.baseSet.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z j)) (VectorBundleCore.baseSet.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z k))) -> (Eq.{succ u2} (ContinuousLinearMap.{u3, u3, u2, u2} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) (ContinuousLinearMap.comp.{u3, u3, u3, u2, u2, u2} R R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (RingHomCompTriple.ids.{u3, u3} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1)))))))) (VectorBundleCore.coordChange.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z j k x) (VectorBundleCore.coordChange.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i j x)) (VectorBundleCore.coordChange.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i k x))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.coord_change_linear_comp VectorBundleCore.coordChange_linear_compₓ'. -/
theorem coordChange_linear_comp (i j k : ι) :
    ∀ x ∈ Z.baseSet i ∩ Z.baseSet j ∩ Z.baseSet k,
      (Z.coordChange j k x).comp (Z.coordChange i j x) = Z.coordChange i k x :=
  fun x hx => by
  ext v
  exact Z.coord_change_comp i j k x hx v
#align vector_bundle_core.coord_change_linear_comp VectorBundleCore.coordChange_linear_comp

/- warning: vector_bundle_core.index -> VectorBundleCore.Index is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u_1}} {B : Type.{u_2}} {F : Type.{u_3}} [_inst_1 : NontriviallyNormedField.{u_1} R] [_inst_4 : NormedAddCommGroup.{u_3} F] [_inst_5 : NormedSpace.{u_1, u_3} R F (NontriviallyNormedField.toNormedField.{u_1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u_3} F _inst_4)] [_inst_6 : TopologicalSpace.{u_2} B] {ι : Type.{u_5}}, (VectorBundleCore.{u_1, u_2, u_3, u_5} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) -> Type.{u_5}
but is expected to have type
  forall {R : Type.{u_1}}, Type.{u_1}
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.index VectorBundleCore.Indexₓ'. -/
/-- The index set of a vector bundle core, as a convenience function for dot notation -/
@[nolint unused_arguments has_nonempty_instance]
def Index :=
  ι
#align vector_bundle_core.index VectorBundleCore.Index

/- warning: vector_bundle_core.base -> VectorBundleCore.Base is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u_1}} {B : Type.{u_2}} {F : Type.{u_3}} [_inst_1 : NontriviallyNormedField.{u_1} R] [_inst_4 : NormedAddCommGroup.{u_3} F] [_inst_5 : NormedSpace.{u_1, u_3} R F (NontriviallyNormedField.toNormedField.{u_1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u_3} F _inst_4)] [_inst_6 : TopologicalSpace.{u_2} B] {ι : Type.{u_5}}, (VectorBundleCore.{u_1, u_2, u_3, u_5} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) -> Type.{u_2}
but is expected to have type
  forall {R : Type.{u_1}}, Type.{u_1}
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.base VectorBundleCore.Baseₓ'. -/
/-- The base space of a vector bundle core, as a convenience function for dot notation-/
@[nolint unused_arguments, reducible]
def Base :=
  B
#align vector_bundle_core.base VectorBundleCore.Base

#print VectorBundleCore.Fiber /-
/-- The fiber of a vector bundle core, as a convenience function for dot notation and
typeclass inference -/
@[nolint unused_arguments has_nonempty_instance]
def Fiber : B → Type _ :=
  Z.toFiberBundleCore.Fiber
#align vector_bundle_core.fiber VectorBundleCore.Fiber
-/

#print VectorBundleCore.topologicalSpaceFiber /-
instance topologicalSpaceFiber (x : B) : TopologicalSpace (Z.Fiber x) := by
  delta_instance vector_bundle_core.fiber
#align vector_bundle_core.topological_space_fiber VectorBundleCore.topologicalSpaceFiber
-/

instance addCommMonoidFiber : ∀ x : B, AddCommMonoid (Z.Fiber x) := by
  dsimp [VectorBundleCore.Fiber] <;> delta_instance fiber_bundle_core.fiber
#align vector_bundle_core.add_comm_monoid_fiber VectorBundleCore.addCommMonoidFiber

#print VectorBundleCore.moduleFiber /-
instance moduleFiber : ∀ x : B, Module R (Z.Fiber x) := by
  dsimp [VectorBundleCore.Fiber] <;> delta_instance fiber_bundle_core.fiber
#align vector_bundle_core.module_fiber VectorBundleCore.moduleFiber
-/

/- warning: vector_bundle_core.add_comm_group_fiber -> VectorBundleCore.addCommGroupFiber is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) [_inst_10 : AddCommGroup.{u3} F] (x : B), AddCommGroup.{u3} (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x)
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (_inst_10 : B), AddCommGroup.{u3} (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z _inst_10)
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.add_comm_group_fiber VectorBundleCore.addCommGroupFiberₓ'. -/
instance addCommGroupFiber [AddCommGroup F] : ∀ x : B, AddCommGroup (Z.Fiber x) := by
  dsimp [VectorBundleCore.Fiber] <;> delta_instance fiber_bundle_core.fiber
#align vector_bundle_core.add_comm_group_fiber VectorBundleCore.addCommGroupFiber

#print VectorBundleCore.proj /-
/-- The projection from the total space of a fiber bundle core, on its base. -/
@[reducible, simp, mfld_simps]
protected def proj : TotalSpace Z.Fiber → B :=
  TotalSpace.proj
#align vector_bundle_core.proj VectorBundleCore.proj
-/

#print VectorBundleCore.TotalSpace /-
/-- The total space of the vector bundle, as a convenience function for dot notation.
It is by definition equal to `bundle.total_space Z.fiber`, a.k.a. `Σ x, Z.fiber x` but with a
different name for typeclass inference. -/
@[nolint unused_arguments, reducible]
protected def TotalSpace :=
  Bundle.TotalSpace Z.Fiber
#align vector_bundle_core.total_space VectorBundleCore.TotalSpace
-/

/- warning: vector_bundle_core.triv_change -> VectorBundleCore.trivChange is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}}, (VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) -> ι -> ι -> (LocalHomeomorph.{max u2 u3, max u2 u3} (Prod.{u2, u3} B F) (Prod.{u2, u3} B F) (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}}, (VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) -> ι -> ι -> (LocalHomeomorph.{max u3 u2, max u3 u2} (Prod.{u2, u3} B F) (Prod.{u2, u3} B F) (instTopologicalSpaceProd.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (instTopologicalSpaceProd.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.triv_change VectorBundleCore.trivChangeₓ'. -/
/-- Local homeomorphism version of the trivialization change. -/
def trivChange (i j : ι) : LocalHomeomorph (B × F) (B × F) :=
  FiberBundleCore.trivChange (↑Z) i j
#align vector_bundle_core.triv_change VectorBundleCore.trivChange

/- warning: vector_bundle_core.mem_triv_change_source -> VectorBundleCore.mem_trivChange_source is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι) (j : ι) (p : Prod.{u2, u3} B F), Iff (Membership.Mem.{max u2 u3, max u2 u3} (Prod.{u2, u3} B F) (Set.{max u2 u3} (Prod.{u2, u3} B F)) (Set.hasMem.{max u2 u3} (Prod.{u2, u3} B F)) p (LocalEquiv.source.{max u2 u3, max u2 u3} (Prod.{u2, u3} B F) (Prod.{u2, u3} B F) (LocalHomeomorph.toLocalEquiv.{max u2 u3, max u2 u3} (Prod.{u2, u3} B F) (Prod.{u2, u3} B F) (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (VectorBundleCore.trivChange.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i j)))) (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) (Prod.fst.{u2, u3} B F p) (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (VectorBundleCore.baseSet.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) (VectorBundleCore.baseSet.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z j)))
but is expected to have type
  forall {R : Type.{u2}} {B : Type.{u4}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u2} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι) (j : ι) (p : Prod.{u4, u3} B F), Iff (Membership.mem.{max u4 u3, max u4 u3} (Prod.{u4, u3} B F) (Set.{max u4 u3} (Prod.{u4, u3} B F)) (Set.instMembershipSet.{max u4 u3} (Prod.{u4, u3} B F)) p (LocalEquiv.source.{max u4 u3, max u4 u3} (Prod.{u4, u3} B F) (Prod.{u4, u3} B F) (LocalHomeomorph.toLocalEquiv.{max u4 u3, max u4 u3} (Prod.{u4, u3} B F) (Prod.{u4, u3} B F) (instTopologicalSpaceProd.{u4, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (instTopologicalSpaceProd.{u4, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (VectorBundleCore.trivChange.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i j)))) (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) (Prod.fst.{u4, u3} B F p) (Inter.inter.{u4} (Set.{u4} B) (Set.instInterSet.{u4} B) (VectorBundleCore.baseSet.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) (VectorBundleCore.baseSet.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z j)))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.mem_triv_change_source VectorBundleCore.mem_trivChange_sourceₓ'. -/
@[simp, mfld_simps]
theorem mem_trivChange_source (i j : ι) (p : B × F) :
    p ∈ (Z.trivChange i j).source ↔ p.1 ∈ Z.baseSet i ∩ Z.baseSet j :=
  FiberBundleCore.mem_trivChange_source (↑Z) i j p
#align vector_bundle_core.mem_triv_change_source VectorBundleCore.mem_trivChange_source

#print VectorBundleCore.toTopologicalSpace /-
/-- Topological structure on the total space of a vector bundle created from core, designed so
that all the local trivialization are continuous. -/
instance toTopologicalSpace : TopologicalSpace Z.TotalSpace :=
  Z.toFiberBundleCore.toTopologicalSpace
#align vector_bundle_core.to_topological_space VectorBundleCore.toTopologicalSpace
-/

variable (b : B) (a : F)

/- warning: vector_bundle_core.coe_coord_change -> VectorBundleCore.coe_coordChange is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (b : B) (i : ι) (j : ι), Eq.{succ u3} (F -> F) (FiberBundleCore.coordChange.{u4, u2, u3} ι B _inst_6 F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toFiberBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) i j b) (coeFn.{succ u3, succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => F -> F) (ContinuousLinearMap.toFun.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (VectorBundleCore.coordChange.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i j b))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u4} F] [_inst_5 : NormedSpace.{u1, u4} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u3}} (Z : VectorBundleCore.{u1, u2, u4, u3} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (b : B) (i : ι) (j : ι), Eq.{succ u4} (F -> F) (FiberBundleCore.coordChange.{u3, u2, u4} ι B _inst_6 F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (VectorBundleCore.toFiberBundleCore.{u1, u2, u4, u3} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) i j b) (FunLike.coe.{succ u4, succ u4, succ u4} (ContinuousLinearMap.{u1, u1, u4, u4} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u4} F (NormedAddCommGroup.toAddCommGroup.{u4} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u4} F (NormedAddCommGroup.toAddCommGroup.{u4} F _inst_4)) (NormedSpace.toModule.{u1, u4} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u4} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4) _inst_5)) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) _x) (ContinuousMapClass.toFunLike.{u4, u4, u4} (ContinuousLinearMap.{u1, u1, u4, u4} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u4} F (NormedAddCommGroup.toAddCommGroup.{u4} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u4} F (NormedAddCommGroup.toAddCommGroup.{u4} F _inst_4)) (NormedSpace.toModule.{u1, u4} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u4} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4) _inst_5)) F F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{u4, u1, u1, u4, u4} (ContinuousLinearMap.{u1, u1, u4, u4} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u4} F (NormedAddCommGroup.toAddCommGroup.{u4} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u4} F (NormedAddCommGroup.toAddCommGroup.{u4} F _inst_4)) (NormedSpace.toModule.{u1, u4} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u4} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u4} F (NormedAddCommGroup.toAddCommGroup.{u4} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u4} F (NormedAddCommGroup.toAddCommGroup.{u4} F _inst_4)) (NormedSpace.toModule.{u1, u4} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u4} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4) _inst_5) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u4, u4} R R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u4} F (NormedAddCommGroup.toAddCommGroup.{u4} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u4} F (NormedAddCommGroup.toAddCommGroup.{u4} F _inst_4)) (NormedSpace.toModule.{u1, u4} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u4} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4) _inst_5)))) (VectorBundleCore.coordChange.{u1, u2, u4, u3} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i j b))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.coe_coord_change VectorBundleCore.coe_coordChangeₓ'. -/
@[simp, mfld_simps]
theorem coe_coordChange (i j : ι) : Z.toFiberBundleCore.coordChange i j b = Z.coordChange i j b :=
  rfl
#align vector_bundle_core.coe_coord_change VectorBundleCore.coe_coordChange

#print VectorBundleCore.localTriv /-
/-- One of the standard local trivializations of a vector bundle constructed from core, taken by
considering this in particular as a fiber bundle constructed from core. -/
def localTriv (i : ι) : Trivialization F (π Z.Fiber) := by
  dsimp [VectorBundleCore.TotalSpace, VectorBundleCore.Fiber] <;>
    exact Z.to_fiber_bundle_core.local_triv i
#align vector_bundle_core.local_triv VectorBundleCore.localTriv
-/

#print VectorBundleCore.localTriv.isLinear /-
/-- The standard local trivializations of a vector bundle constructed from core are linear. -/
instance localTriv.isLinear (i : ι) : (Z.localTriv i).isLinear R
    where linear x hx := by
    dsimp [VectorBundleCore.localTriv] <;>
      exact
        { map_add := fun v w => by simp only [ContinuousLinearMap.map_add, mfld_simps]
          map_smul := fun r v => by simp only [ContinuousLinearMap.map_smul, mfld_simps] }
#align vector_bundle_core.local_triv.is_linear VectorBundleCore.localTriv.isLinear
-/

variable (i j : ι)

/- warning: vector_bundle_core.mem_local_triv_source -> VectorBundleCore.mem_localTriv_source is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι) (p : VectorBundleCore.TotalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z), Iff (Membership.Mem.{max u2 u3, max u2 u3} (VectorBundleCore.TotalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Set.{max u2 u3} (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) (Set.hasMem.{max u2 u3} (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) p (LocalEquiv.source.{max u2 u3, max u2 u3} (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.{u2, u3} B F) (LocalHomeomorph.toLocalEquiv.{max u2 u3, max u2 u3} (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.{u2, u3} B F) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (Trivialization.toLocalHomeomorph.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTriv.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i))))) (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) (Sigma.fst.{u2, u3} B (fun (x : B) => VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) p) (VectorBundleCore.baseSet.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i))
but is expected to have type
  forall {R : Type.{u4}} {B : Type.{u3}} {F : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u4} R] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u3} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι) (p : VectorBundleCore.TotalSpace.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z), Iff (Membership.mem.{max u3 u2, max u3 u2} (VectorBundleCore.TotalSpace.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Set.{max u3 u2} (Bundle.TotalSpace.{u3, u2} B (VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) (Set.instMembershipSet.{max u3 u2} (Bundle.TotalSpace.{u3, u2} B (VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) p (LocalEquiv.source.{max u3 u2, max u3 u2} (Bundle.TotalSpace.{u3, u2} B (VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.{u3, u2} B F) (LocalHomeomorph.toLocalEquiv.{max u3 u2, max u3 u2} (Bundle.TotalSpace.{u3, u2} B (VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.{u3, u2} B F) (VectorBundleCore.toTopologicalSpace.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (instTopologicalSpaceProd.{u3, u2} B F _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4))))) (Trivialization.toLocalHomeomorph.{u3, u2, max u3 u2} B F (Bundle.TotalSpace.{u3, u2} B (VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u3, u2} B (VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTriv.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i))))) (Membership.mem.{u3, u3} B (Set.{u3} B) (Set.instMembershipSet.{u3} B) (Sigma.fst.{u3, u2} B (fun (x : B) => VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) p) (VectorBundleCore.baseSet.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.mem_local_triv_source VectorBundleCore.mem_localTriv_sourceₓ'. -/
@[simp, mfld_simps]
theorem mem_localTriv_source (p : Z.TotalSpace) : p ∈ (Z.localTriv i).source ↔ p.1 ∈ Z.baseSet i :=
  by dsimp [VectorBundleCore.Fiber] <;> exact Iff.rfl
#align vector_bundle_core.mem_local_triv_source VectorBundleCore.mem_localTriv_source

/- warning: vector_bundle_core.base_set_at -> VectorBundleCore.baseSet_at is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι), Eq.{succ u2} (Set.{u2} B) (VectorBundleCore.baseSet.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) (Trivialization.baseSet.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTriv.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i))
but is expected to have type
  forall {R : Type.{u3}} {B : Type.{u4}} {F : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u3} R] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι), Eq.{succ u4} (Set.{u4} B) (VectorBundleCore.baseSet.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) (Trivialization.baseSet.{u4, u2, max u4 u2} B F (Bundle.TotalSpace.{u4, u2} B (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u4, u2} B (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTriv.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.base_set_at VectorBundleCore.baseSet_atₓ'. -/
@[simp, mfld_simps]
theorem baseSet_at : Z.baseSet i = (Z.localTriv i).baseSet :=
  rfl
#align vector_bundle_core.base_set_at VectorBundleCore.baseSet_at

/- warning: vector_bundle_core.local_triv_apply -> VectorBundleCore.localTriv_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι) (p : VectorBundleCore.TotalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z), Eq.{max (succ u2) (succ u3)} (Prod.{u2, u3} B F) (coeFn.{max (succ u2) (succ u3) (succ (max u2 u3)), max (succ (max u2 u3)) (succ u2) (succ u3)} (Trivialization.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) (fun (_x : Trivialization.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) => (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) -> (Prod.{u2, u3} B F)) (Trivialization.hasCoeToFun.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTriv.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) p) (Prod.mk.{u2, u3} B F (Sigma.fst.{u2, u3} B (fun (x : B) => VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) p) (coeFn.{succ u3, succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => F -> F) (ContinuousLinearMap.toFun.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (VectorBundleCore.coordChange.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (VectorBundleCore.indexAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (Sigma.fst.{u2, u3} B (fun (x : B) => VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) p)) i (Sigma.fst.{u2, u3} B (fun (x : B) => VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) p)) (Sigma.snd.{u2, u3} B (fun (x : B) => VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) p)))
but is expected to have type
  forall {R : Type.{u4}} {B : Type.{u3}} {F : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u4} R] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u3} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) {i : ι} (p : VectorBundleCore.TotalSpace.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z), Eq.{max (succ u3) (succ u2)} (Prod.{u3, u2} B F) (Trivialization.toFun'.{u3, u2, max u3 u2} B F (Bundle.TotalSpace.{u3, u2} B (VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u2} B (VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.toTopologicalSpace.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.localTriv.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) p) (Prod.mk.{u3, u2} B F (Sigma.fst.{u3, u2} B (fun (x : B) => VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) p) (FunLike.coe.{succ u2, succ u2, succ u2} (ContinuousLinearMap.{u4, u4, u2, u2} R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) _x) (ContinuousMapClass.toFunLike.{u2, u2, u2} (ContinuousLinearMap.{u4, u4, u2, u2} R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) F F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{u2, u4, u4, u2, u2} (ContinuousLinearMap.{u4, u4, u2, u2} R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u2, u2} R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)))) (VectorBundleCore.coordChange.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (VectorBundleCore.indexAt.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (Sigma.fst.{u3, u2} B (fun (x : B) => VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) p)) i (Sigma.fst.{u3, u2} B (fun (x : B) => VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) p)) (Sigma.snd.{u3, u2} B (fun (x : B) => VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) p)))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.local_triv_apply VectorBundleCore.localTriv_applyₓ'. -/
@[simp, mfld_simps]
theorem localTriv_apply (p : Z.TotalSpace) :
    (Z.localTriv i) p = ⟨p.1, Z.coordChange (Z.indexAt p.1) i p.1 p.2⟩ :=
  rfl
#align vector_bundle_core.local_triv_apply VectorBundleCore.localTriv_apply

/- warning: vector_bundle_core.mem_local_triv_target -> VectorBundleCore.mem_localTriv_target is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι) (p : Prod.{u2, u3} B F), Iff (Membership.Mem.{max u2 u3, max u2 u3} (Prod.{u2, u3} B F) (Set.{max u2 u3} (Prod.{u2, u3} B F)) (Set.hasMem.{max u2 u3} (Prod.{u2, u3} B F)) p (LocalEquiv.target.{max u2 u3, max u2 u3} (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.{u2, u3} B F) (LocalHomeomorph.toLocalEquiv.{max u2 u3, max u2 u3} (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.{u2, u3} B F) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (Trivialization.toLocalHomeomorph.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTriv.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i))))) (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) (Prod.fst.{u2, u3} B F p) (Trivialization.baseSet.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTriv.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i)))
but is expected to have type
  forall {R : Type.{u2}} {B : Type.{u4}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u2} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι) (p : Prod.{u4, u3} B F), Iff (Membership.mem.{max u4 u3, max u4 u3} (Prod.{u4, u3} B F) (Set.{max u4 u3} (Prod.{u4, u3} B F)) (Set.instMembershipSet.{max u4 u3} (Prod.{u4, u3} B F)) p (LocalEquiv.target.{max u4 u3, max u4 u3} (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.{u4, u3} B F) (LocalHomeomorph.toLocalEquiv.{max u4 u3, max u4 u3} (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.{u4, u3} B F) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (instTopologicalSpaceProd.{u4, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (Trivialization.toLocalHomeomorph.{u4, u3, max u4 u3} B F (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTriv.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i))))) (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) (Prod.fst.{u4, u3} B F p) (Trivialization.baseSet.{u4, u3, max u4 u3} B F (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTriv.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i)))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.mem_local_triv_target VectorBundleCore.mem_localTriv_targetₓ'. -/
@[simp, mfld_simps]
theorem mem_localTriv_target (p : B × F) :
    p ∈ (Z.localTriv i).target ↔ p.1 ∈ (Z.localTriv i).baseSet :=
  Z.toFiberBundleCore.mem_localTriv_target i p
#align vector_bundle_core.mem_local_triv_target VectorBundleCore.mem_localTriv_target

/- warning: vector_bundle_core.local_triv_symm_fst -> VectorBundleCore.localTriv_symm_fst is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι) (p : Prod.{u2, u3} B F), Eq.{max (succ u2) (succ u3)} (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (coeFn.{succ (max u2 u3), succ (max u2 u3)} (LocalHomeomorph.{max u2 u3, max u2 u3} (Prod.{u2, u3} B F) (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (fun (_x : LocalHomeomorph.{max u2 u3, max u2 u3} (Prod.{u2, u3} B F) (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) => (Prod.{u2, u3} B F) -> (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) (LocalHomeomorph.hasCoeToFun.{max u2 u3, max u2 u3} (Prod.{u2, u3} B F) (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (LocalHomeomorph.symm.{max u2 u3, max u2 u3} (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.{u2, u3} B F) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (Trivialization.toLocalHomeomorph.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTriv.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i))) p) (Sigma.mk.{u2, u3} B (fun (x : B) => VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (Prod.fst.{u2, u3} B F p) (coeFn.{succ u3, succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => F -> F) (ContinuousLinearMap.toFun.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (VectorBundleCore.coordChange.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i (VectorBundleCore.indexAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (Prod.fst.{u2, u3} B F p)) (Prod.fst.{u2, u3} B F p)) (Prod.snd.{u2, u3} B F p)))
but is expected to have type
  forall {R : Type.{u2}} {B : Type.{u4}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u2} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι) (p : Prod.{u4, u3} B F), Eq.{max (succ u4) (succ u3)} (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (LocalHomeomorph.toFun'.{max u4 u3, max u4 u3} (Prod.{u4, u3} B F) (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (instTopologicalSpaceProd.{u4, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (LocalHomeomorph.symm.{max u4 u3, max u4 u3} (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.{u4, u3} B F) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (instTopologicalSpaceProd.{u4, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (Trivialization.toLocalHomeomorph.{u4, u3, max u4 u3} B F (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTriv.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i))) p) (Sigma.mk.{u4, u3} B (fun (x : B) => VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (Prod.fst.{u4, u3} B F p) (FunLike.coe.{succ u3, succ u3, succ u3} (ContinuousLinearMap.{u2, u2, u3, u3} R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) _x) (ContinuousMapClass.toFunLike.{u3, u3, u3} (ContinuousLinearMap.{u2, u2, u3, u3} R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) F F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{u3, u2, u2, u3, u3} (ContinuousLinearMap.{u2, u2, u3, u3} R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u3, u3} R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)))) (VectorBundleCore.coordChange.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i (VectorBundleCore.indexAt.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (Prod.fst.{u4, u3} B F p)) (Prod.fst.{u4, u3} B F p)) (Prod.snd.{u4, u3} B F p)))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.local_triv_symm_fst VectorBundleCore.localTriv_symm_fstₓ'. -/
@[simp, mfld_simps]
theorem localTriv_symm_fst (p : B × F) :
    (Z.localTriv i).toLocalHomeomorph.symm p = ⟨p.1, Z.coordChange i (Z.indexAt p.1) p.1 p.2⟩ :=
  rfl
#align vector_bundle_core.local_triv_symm_fst VectorBundleCore.localTriv_symm_fst

/- warning: vector_bundle_core.local_triv_symm_apply -> VectorBundleCore.localTriv_symm_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι) {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (VectorBundleCore.baseSet.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i)) -> (forall (v : F), Eq.{succ u3} (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (Trivialization.symm.{u2, u3, u3} B F (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (x : B) => AddZeroClass.toHasZero.{u3} (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (AddMonoid.toAddZeroClass.{u3} (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (SubNegMonoid.toAddMonoid.{u3} (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (AddGroup.toSubNegMonoid.{u3} (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (AddCommGroup.toAddGroup.{u3} (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.addCommGroupFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4) x)))))) (VectorBundleCore.localTriv.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) b v) (coeFn.{succ u3, succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => F -> F) (ContinuousLinearMap.toFun.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (VectorBundleCore.coordChange.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i (VectorBundleCore.indexAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) b) v))
but is expected to have type
  forall {R : Type.{u3}} {B : Type.{u4}} {F : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u3} R] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι) {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (VectorBundleCore.baseSet.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i)) -> (forall (v : F), Eq.{succ u2} (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (Trivialization.symm.{u4, u2, u2} B F (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (x : B) => NegZeroClass.toZero.{u2} (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (SubNegZeroMonoid.toNegZeroClass.{u2} (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (SubtractionMonoid.toSubNegZeroMonoid.{u2} (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (SubtractionCommMonoid.toSubtractionMonoid.{u2} (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (AddCommGroup.toDivisionAddCommMonoid.{u2} (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.addCommGroupFiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x)))))) (VectorBundleCore.localTriv.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) b v) (FunLike.coe.{succ u2, succ u2, succ u2} (ContinuousLinearMap.{u3, u3, u2, u2} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) _x) (ContinuousMapClass.toFunLike.{u2, u2, u2} (ContinuousLinearMap.{u3, u3, u2, u2} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) F F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{u2, u3, u3, u2, u2} (ContinuousLinearMap.{u3, u3, u2, u2} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u2} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)))) (VectorBundleCore.coordChange.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i (VectorBundleCore.indexAt.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) b) v))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.local_triv_symm_apply VectorBundleCore.localTriv_symm_applyₓ'. -/
@[simp, mfld_simps]
theorem localTriv_symm_apply {b : B} (hb : b ∈ Z.baseSet i) (v : F) :
    (Z.localTriv i).symm b v = Z.coordChange i (Z.indexAt b) b v := by
  apply (Z.local_triv i).symm_apply hb v
#align vector_bundle_core.local_triv_symm_apply VectorBundleCore.localTriv_symm_apply

/- warning: vector_bundle_core.local_triv_coord_change_eq -> VectorBundleCore.localTriv_coordChange_eq is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι) (j : ι) {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (VectorBundleCore.baseSet.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) (VectorBundleCore.baseSet.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z j))) -> (forall (v : F), Eq.{succ u3} F (coeFn.{succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (fun (_x : ContinuousLinearEquiv.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => F -> F) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (Trivialization.coordChangeL.{u1, u2, u3, u3} R B F (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => VectorBundleCore.addCommMonoidFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (fun (x : B) => VectorBundleCore.moduleFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.localTriv.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) (VectorBundleCore.localTriv.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z j) (VectorBundleCore.localTriv.isLinear.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) (VectorBundleCore.localTriv.isLinear.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z j) b) v) (coeFn.{succ u3, succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => F -> F) (ContinuousLinearMap.toFun.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (VectorBundleCore.coordChange.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i j b) v))
but is expected to have type
  forall {R : Type.{u3}} {B : Type.{u4}} {F : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u3} R] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (i : ι) (j : ι) {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Inter.inter.{u4} (Set.{u4} B) (Set.instInterSet.{u4} B) (VectorBundleCore.baseSet.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) (VectorBundleCore.baseSet.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z j))) -> (forall (v : F), Eq.{succ u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) v) (FunLike.coe.{succ u2, succ u2, succ u2} (ContinuousLinearEquiv.{u3, u3, u2, u2} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) (RingHomInvPair.ids.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1)))))) (RingHomInvPair.ids.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) _x) (ContinuousMapClass.toFunLike.{u2, u2, u2} (ContinuousLinearEquiv.{u3, u3, u2, u2} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) (RingHomInvPair.ids.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1)))))) (RingHomInvPair.ids.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) F F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{u2, u3, u3, u2, u2} (ContinuousLinearEquiv.{u3, u3, u2, u2} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) (RingHomInvPair.ids.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1)))))) (RingHomInvPair.ids.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{u2, u3, u3, u2, u2} (ContinuousLinearEquiv.{u3, u3, u2, u2} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) (RingHomInvPair.ids.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1)))))) (RingHomInvPair.ids.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) (RingHomInvPair.ids.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1)))))) (RingHomInvPair.ids.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u3, u2, u2} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) (RingHomInvPair.ids.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1)))))) (RingHomInvPair.ids.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5))))) (Trivialization.coordChangeL.{u3, u4, u2, u2} R B F (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) _inst_6 (VectorBundleCore.toTopologicalSpace.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (fun (x : B) => AddCommGroup.toAddCommMonoid.{u2} (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.addCommGroupFiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x)) (fun (x : B) => VectorBundleCore.moduleFiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.localTriv.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) (VectorBundleCore.localTriv.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z j) (VectorBundleCore.localTriv.isLinear.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) (VectorBundleCore.localTriv.isLinear.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z j) b) v) (FunLike.coe.{succ u2, succ u2, succ u2} (ContinuousLinearMap.{u3, u3, u2, u2} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) _x) (ContinuousMapClass.toFunLike.{u2, u2, u2} (ContinuousLinearMap.{u3, u3, u2, u2} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) F F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{u2, u3, u3, u2, u2} (ContinuousLinearMap.{u3, u3, u2, u2} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u2} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)))) (VectorBundleCore.coordChange.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i j b) v))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.local_triv_coord_change_eq VectorBundleCore.localTriv_coordChange_eqₓ'. -/
@[simp, mfld_simps]
theorem localTriv_coordChange_eq {b : B} (hb : b ∈ Z.baseSet i ∩ Z.baseSet j) (v : F) :
    (Z.localTriv i).coordChangeL R (Z.localTriv j) b v = Z.coordChange i j b v :=
  by
  rw [Trivialization.coordChangeL_apply', local_triv_symm_fst, local_triv_apply, coord_change_comp]
  exacts[⟨⟨hb.1, Z.mem_base_set_at b⟩, hb.2⟩, hb]
#align vector_bundle_core.local_triv_coord_change_eq VectorBundleCore.localTriv_coordChange_eq

#print VectorBundleCore.localTrivAt /-
/-- Preferred local trivialization of a vector bundle constructed from core, at a given point, as
a bundle trivialization -/
def localTrivAt (b : B) : Trivialization F (π Z.Fiber) :=
  Z.localTriv (Z.indexAt b)
#align vector_bundle_core.local_triv_at VectorBundleCore.localTrivAt
-/

/- warning: vector_bundle_core.local_triv_at_def -> VectorBundleCore.localTrivAt_def is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (b : B), Eq.{max (succ u2) (succ u3) (succ (max u2 u3))} (Trivialization.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) (VectorBundleCore.localTriv.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (VectorBundleCore.indexAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b)) (VectorBundleCore.localTrivAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b)
but is expected to have type
  forall {R : Type.{u2}} {B : Type.{u4}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u2} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (b : B), Eq.{max (succ u4) (succ u3)} (Trivialization.{u4, u3, max u4 u3} B F (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) (VectorBundleCore.localTriv.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (VectorBundleCore.indexAt.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b)) (VectorBundleCore.localTrivAt.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b)
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.local_triv_at_def VectorBundleCore.localTrivAt_defₓ'. -/
@[simp, mfld_simps]
theorem localTrivAt_def : Z.localTriv (Z.indexAt b) = Z.localTrivAt b :=
  rfl
#align vector_bundle_core.local_triv_at_def VectorBundleCore.localTrivAt_def

/- warning: vector_bundle_core.mem_source_at -> VectorBundleCore.mem_source_at is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (b : B) (a : F), Membership.Mem.{max u2 u3, max u2 u3} (Sigma.{u2, u3} B (fun (x : B) => VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x)) (Set.{max u2 u3} (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) (Set.hasMem.{max u2 u3} (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) (Sigma.mk.{u2, u3} B (fun (x : B) => VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) b a) (LocalEquiv.source.{max u2 u3, max u2 u3} (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.{u2, u3} B F) (LocalHomeomorph.toLocalEquiv.{max u2 u3, max u2 u3} (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.{u2, u3} B F) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Prod.topologicalSpace.{u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (Trivialization.toLocalHomeomorph.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTrivAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b))))
but is expected to have type
  forall {R : Type.{u2}} {B : Type.{u4}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u2} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (b : B) (a : F), Membership.mem.{max u4 u3, max u4 u3} (Sigma.{u4, u3} B (fun (x : B) => VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x)) (Set.{max u4 u3} (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) (Set.instMembershipSet.{max u4 u3} (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) (Sigma.mk.{u4, u3} B (fun (x : B) => VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) b a) (LocalEquiv.source.{max u4 u3, max u4 u3} (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.{u4, u3} B F) (LocalHomeomorph.toLocalEquiv.{max u4 u3, max u4 u3} (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (Prod.{u4, u3} B F) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (instTopologicalSpaceProd.{u4, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))))) (Trivialization.toLocalHomeomorph.{u4, u3, max u4 u3} B F (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTrivAt.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b))))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.mem_source_at VectorBundleCore.mem_source_atₓ'. -/
@[simp, mfld_simps]
theorem mem_source_at : (⟨b, a⟩ : Z.TotalSpace) ∈ (Z.localTrivAt b).source :=
  by
  rw [local_triv_at, mem_local_triv_source]
  exact Z.mem_base_set_at b
#align vector_bundle_core.mem_source_at VectorBundleCore.mem_source_at

/- warning: vector_bundle_core.local_triv_at_apply -> VectorBundleCore.localTrivAt_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (p : VectorBundleCore.TotalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z), Eq.{max (succ u2) (succ u3)} (Prod.{u2, u3} B F) (coeFn.{max (succ u2) (succ u3) (succ (max u2 u3)), max (succ (max u2 u3)) (succ u2) (succ u3)} (Trivialization.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) (fun (_x : Trivialization.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) => (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) -> (Prod.{u2, u3} B F)) (Trivialization.hasCoeToFun.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTrivAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (Sigma.fst.{u2, u3} B (fun (x : B) => VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) p)) p) (Prod.mk.{u2, u3} B F (Sigma.fst.{u2, u3} B (fun (x : B) => VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) p) (Sigma.snd.{u2, u3} B (fun (x : B) => VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) p))
but is expected to have type
  forall {R : Type.{u4}} {B : Type.{u3}} {F : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u4} R] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u3} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (p : VectorBundleCore.TotalSpace.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z), Eq.{max (succ u3) (succ u2)} (Prod.{u3, u2} B F) (Trivialization.toFun'.{u3, u2, max u3 u2} B F (Bundle.TotalSpace.{u3, u2} B (VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u2} B (VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.toTopologicalSpace.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.localTrivAt.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (Sigma.fst.{u3, u2} B (fun (x : B) => VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) p)) p) (Prod.mk.{u3, u2} B F (Sigma.fst.{u3, u2} B (fun (x : B) => VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) p) (Sigma.snd.{u3, u2} B (fun (x : B) => VectorBundleCore.Fiber.{u4, u3, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) p))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.local_triv_at_apply VectorBundleCore.localTrivAt_applyₓ'. -/
@[simp, mfld_simps]
theorem localTrivAt_apply (p : Z.TotalSpace) : (Z.localTrivAt p.1) p = ⟨p.1, p.2⟩ :=
  FiberBundleCore.localTrivAt_apply Z p
#align vector_bundle_core.local_triv_at_apply VectorBundleCore.localTrivAt_apply

/- warning: vector_bundle_core.local_triv_at_apply_mk -> VectorBundleCore.localTrivAt_apply_mk is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (b : B) (a : F), Eq.{max (succ u2) (succ u3)} (Prod.{u2, u3} B F) (coeFn.{max (succ u2) (succ u3) (succ (max u2 u3)), max (succ (max u2 u3)) (succ u2) (succ u3)} (Trivialization.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) (fun (_x : Trivialization.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z))) => (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) -> (Prod.{u2, u3} B F)) (Trivialization.hasCoeToFun.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTrivAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (Sigma.mk.{u2, u3} B (fun (x : B) => VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) b a)) (Prod.mk.{u2, u3} B F b a)
but is expected to have type
  forall {R : Type.{u2}} {B : Type.{u4}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u2} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (b : B) (a : F), Eq.{max (succ u4) (succ u3)} (Prod.{u4, u3} B F) (Trivialization.toFun'.{u4, u3, max u4 u3} B F (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.localTrivAt.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (Sigma.mk.{u4, u3} B (fun (x : B) => VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) b a)) (Prod.mk.{u4, u3} B F b a)
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.local_triv_at_apply_mk VectorBundleCore.localTrivAt_apply_mkₓ'. -/
@[simp, mfld_simps]
theorem localTrivAt_apply_mk (b : B) (a : F) : (Z.localTrivAt b) ⟨b, a⟩ = ⟨b, a⟩ :=
  Z.localTrivAt_apply _
#align vector_bundle_core.local_triv_at_apply_mk VectorBundleCore.localTrivAt_apply_mk

/- warning: vector_bundle_core.mem_local_triv_at_base_set -> VectorBundleCore.mem_localTrivAt_baseSet is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (b : B), Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTrivAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b))
but is expected to have type
  forall {R : Type.{u2}} {B : Type.{u4}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u2} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) (b : B), Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u3} B F (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (VectorBundleCore.localTrivAt.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.mem_local_triv_at_base_set VectorBundleCore.mem_localTrivAt_baseSetₓ'. -/
@[simp, mfld_simps]
theorem mem_localTrivAt_baseSet : b ∈ (Z.localTrivAt b).baseSet :=
  FiberBundleCore.mem_localTrivAt_baseSet Z b
#align vector_bundle_core.mem_local_triv_at_base_set VectorBundleCore.mem_localTrivAt_baseSet

#print VectorBundleCore.fiberBundle /-
instance fiberBundle : FiberBundle F Z.Fiber :=
  Z.toFiberBundleCore.FiberBundle
#align vector_bundle_core.fiber_bundle VectorBundleCore.fiberBundle
-/

#print VectorBundleCore.vectorBundle /-
instance vectorBundle : VectorBundle R F Z.Fiber
    where
  trivialization_linear' := by
    rintro _ ⟨i, rfl⟩
    apply local_triv.is_linear
  continuousOn_coord_change' := by
    rintro _ _ ⟨i, rfl⟩ ⟨i', rfl⟩
    refine' (Z.continuous_on_coord_change i i').congr fun b hb => _
    ext v
    exact Z.local_triv_coord_change_eq i i' hb v
#align vector_bundle_core.vector_bundle VectorBundleCore.vectorBundle
-/

/- warning: vector_bundle_core.continuous_proj -> VectorBundleCore.continuous_proj is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι), Continuous.{max u2 u3, u2} (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) B (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_6 (VectorBundleCore.proj.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)
but is expected to have type
  forall {R : Type.{u2}} {B : Type.{u4}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u2} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι), Continuous.{max u4 u3, u4} (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) B (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_6 (VectorBundleCore.proj.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.continuous_proj VectorBundleCore.continuous_projₓ'. -/
/-- The projection on the base of a vector bundle created from core is continuous -/
@[continuity]
theorem continuous_proj : Continuous Z.proj :=
  FiberBundleCore.continuous_proj Z
#align vector_bundle_core.continuous_proj VectorBundleCore.continuous_proj

/- warning: vector_bundle_core.is_open_map_proj -> VectorBundleCore.isOpenMap_proj is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι), IsOpenMap.{max u2 u3, u2} (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) B (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_6 (VectorBundleCore.proj.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)
but is expected to have type
  forall {R : Type.{u2}} {B : Type.{u4}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u2} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι), IsOpenMap.{max u4 u3, u4} (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) B (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_6 (VectorBundleCore.proj.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.is_open_map_proj VectorBundleCore.isOpenMap_projₓ'. -/
/-- The projection on the base of a vector bundle created from core is an open map -/
theorem isOpenMap_proj : IsOpenMap Z.proj :=
  FiberBundleCore.isOpenMap_proj Z
#align vector_bundle_core.is_open_map_proj VectorBundleCore.isOpenMap_proj

variable {i j}

/- warning: vector_bundle_core.local_triv_continuous_linear_map_at -> VectorBundleCore.localTriv_continuousLinearMapAt is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) {i : ι} {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (VectorBundleCore.baseSet.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i)) -> (Eq.{succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.addCommMonoidFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (VectorBundleCore.moduleFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (Trivialization.continuousLinearMapAt.{u1, u2, u3, u3} R B F (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_1 (fun (x : B) => VectorBundleCore.addCommMonoidFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (fun (x : B) => VectorBundleCore.moduleFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) _inst_4 _inst_5 _inst_6 (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (x : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.localTriv.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) (VectorBundleCore.localTriv.isLinear.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) b) (VectorBundleCore.coordChange.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (VectorBundleCore.indexAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) i b))
but is expected to have type
  forall {R : Type.{u3}} {B : Type.{u4}} {F : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u3} R] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) {i : ι} {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (VectorBundleCore.baseSet.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i)) -> (Eq.{succ u2} (ContinuousLinearMap.{u3, u3, u2, u2} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.topologicalSpaceFiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (AddCommGroup.toAddCommMonoid.{u2} (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.addCommGroupFiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (VectorBundleCore.moduleFiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) (Trivialization.continuousLinearMapAt.{u3, u4, u2, u2} R B F (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_1 (fun (x : B) => AddCommGroup.toAddCommMonoid.{u2} (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.addCommGroupFiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x)) (fun (x : B) => VectorBundleCore.moduleFiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) _inst_4 _inst_5 _inst_6 (VectorBundleCore.toTopologicalSpace.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (x : B) => VectorBundleCore.topologicalSpaceFiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.fiberBundle.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.localTriv.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) (VectorBundleCore.localTriv.isLinear.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) b) (VectorBundleCore.coordChange.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (VectorBundleCore.indexAt.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) i b))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.local_triv_continuous_linear_map_at VectorBundleCore.localTriv_continuousLinearMapAtₓ'. -/
@[simp, mfld_simps]
theorem localTriv_continuousLinearMapAt {b : B} (hb : b ∈ Z.baseSet i) :
    (Z.localTriv i).continuousLinearMapAt R b = Z.coordChange (Z.indexAt b) i b :=
  by
  ext1 v
  rw [(Z.local_triv i).continuousLinearMapAt_apply R, (Z.local_triv i).coe_linearMapAt_of_mem]
  exacts[rfl, hb]
#align vector_bundle_core.local_triv_continuous_linear_map_at VectorBundleCore.localTriv_continuousLinearMapAt

/- warning: vector_bundle_core.trivialization_at_continuous_linear_map_at -> VectorBundleCore.trivializationAt_continuousLinearMapAt is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) {b₀ : B} {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (FiberBundle.trivializationAt.{u2, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀))) -> (Eq.{succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.addCommMonoidFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (VectorBundleCore.moduleFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (Trivialization.continuousLinearMapAt.{u1, u2, u3, u3} R B F (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_1 (fun (x : B) => VectorBundleCore.addCommMonoidFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (fun (x : B) => VectorBundleCore.moduleFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) _inst_4 _inst_5 _inst_6 (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (FiberBundle.trivializationAt.{u2, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀) (trivialization_linear.{u1, u2, u3, u3} R B F (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_1 (fun (x : B) => VectorBundleCore.addCommMonoidFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (fun (x : B) => VectorBundleCore.moduleFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) _inst_4 _inst_5 _inst_6 (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.vectorBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (FiberBundle.trivializationAt.{u2, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀) (FiberBundle.trivializationAt.memTrivializationAtlas.{u2, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀)) b) (VectorBundleCore.coordChange.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (VectorBundleCore.indexAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.indexAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b₀) b))
but is expected to have type
  forall {R : Type.{u2}} {B : Type.{u4}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u2} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) {b₀ : B} {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u3} B F (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (FiberBundle.trivializationAt.{u4, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀))) -> (Eq.{succ u3} (ContinuousLinearMap.{u2, u2, u3, u3} R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (AddCommGroup.toAddCommMonoid.{u3} (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.addCommGroupFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (VectorBundleCore.moduleFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (Trivialization.continuousLinearMapAt.{u2, u4, u3, u3} R B F (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_1 (fun (x : B) => AddCommGroup.toAddCommMonoid.{u3} (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.addCommGroupFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x)) (fun (x : B) => VectorBundleCore.moduleFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) _inst_4 _inst_5 _inst_6 (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (FiberBundle.trivializationAt.{u4, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀) (trivialization_linear.{u2, u4, u3, u3} R B F (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_1 (fun (x : B) => AddCommGroup.toAddCommMonoid.{u3} (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.addCommGroupFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x)) (fun (x : B) => VectorBundleCore.moduleFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) _inst_4 _inst_5 _inst_6 (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.vectorBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (FiberBundle.trivializationAt.{u4, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀) (instMemTrivializationAtlasTrivializationAt.{u4, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀)) b) (VectorBundleCore.coordChange.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (VectorBundleCore.indexAt.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.indexAt.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b₀) b))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.trivialization_at_continuous_linear_map_at VectorBundleCore.trivializationAt_continuousLinearMapAtₓ'. -/
@[simp, mfld_simps]
theorem trivializationAt_continuousLinearMapAt {b₀ b : B}
    (hb : b ∈ (trivializationAt F Z.Fiber b₀).baseSet) :
    (trivializationAt F Z.Fiber b₀).continuousLinearMapAt R b =
      Z.coordChange (Z.indexAt b) (Z.indexAt b₀) b :=
  Z.localTriv_continuousLinearMapAt hb
#align vector_bundle_core.trivialization_at_continuous_linear_map_at VectorBundleCore.trivializationAt_continuousLinearMapAt

/- warning: vector_bundle_core.local_triv_symmL -> VectorBundleCore.localTriv_symmL is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) {i : ι} {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (VectorBundleCore.baseSet.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i)) -> (Eq.{succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.addCommMonoidFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (VectorBundleCore.moduleFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b)) (Trivialization.symmL.{u1, u2, u3, u3} R B F (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_1 (fun (x : B) => VectorBundleCore.addCommMonoidFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (fun (x : B) => VectorBundleCore.moduleFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) _inst_4 _inst_5 _inst_6 (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (x : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.localTriv.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) (VectorBundleCore.localTriv.isLinear.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) b) (VectorBundleCore.coordChange.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i (VectorBundleCore.indexAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) b))
but is expected to have type
  forall {R : Type.{u3}} {B : Type.{u4}} {F : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u3} R] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) {i : ι} {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (VectorBundleCore.baseSet.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i)) -> (Eq.{succ u2} (ContinuousLinearMap.{u3, u3, u2, u2} R R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (DivisionSemiring.toSemiring.{u3} R (Semifield.toDivisionSemiring.{u3} R (Field.toSemifield.{u3} R (NormedField.toField.{u3} R (NontriviallyNormedField.toNormedField.{u3} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.topologicalSpaceFiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (AddCommGroup.toAddCommMonoid.{u2} (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.addCommGroupFiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b)) (NormedSpace.toModule.{u3, u2} R F (NontriviallyNormedField.toNormedField.{u3} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (VectorBundleCore.moduleFiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b)) (Trivialization.symmL.{u3, u4, u2, u2} R B F (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_1 (fun (x : B) => AddCommGroup.toAddCommMonoid.{u2} (VectorBundleCore.Fiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.addCommGroupFiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x)) (fun (x : B) => VectorBundleCore.moduleFiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) _inst_4 _inst_5 _inst_6 (VectorBundleCore.toTopologicalSpace.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (x : B) => VectorBundleCore.topologicalSpaceFiber.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.fiberBundle.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.localTriv.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) (VectorBundleCore.localTriv.isLinear.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i) b) (VectorBundleCore.coordChange.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z i (VectorBundleCore.indexAt.{u3, u4, u2, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) b))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.local_triv_symmL VectorBundleCore.localTriv_symmLₓ'. -/
@[simp, mfld_simps]
theorem localTriv_symmL {b : B} (hb : b ∈ Z.baseSet i) :
    (Z.localTriv i).symmL R b = Z.coordChange i (Z.indexAt b) b :=
  by
  ext1 v
  rw [(Z.local_triv i).symmL_apply R, (Z.local_triv i).symm_apply]
  exacts[rfl, hb]
#align vector_bundle_core.local_triv_symmL VectorBundleCore.localTriv_symmL

/- warning: vector_bundle_core.trivialization_at_symmL -> VectorBundleCore.trivializationAt_symmL is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) {b₀ : B} {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Trivialization.baseSet.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (FiberBundle.trivializationAt.{u2, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀))) -> (Eq.{succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.addCommMonoidFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (VectorBundleCore.moduleFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b)) (Trivialization.symmL.{u1, u2, u3, u3} R B F (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_1 (fun (x : B) => VectorBundleCore.addCommMonoidFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (fun (x : B) => VectorBundleCore.moduleFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) _inst_4 _inst_5 _inst_6 (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (FiberBundle.trivializationAt.{u2, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀) (trivialization_linear.{u1, u2, u3, u3} R B F (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_1 (fun (x : B) => VectorBundleCore.addCommMonoidFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (fun (x : B) => VectorBundleCore.moduleFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) _inst_4 _inst_5 _inst_6 (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.vectorBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (FiberBundle.trivializationAt.{u2, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀) (FiberBundle.trivializationAt.memTrivializationAtlas.{u2, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀)) b) (VectorBundleCore.coordChange.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (VectorBundleCore.indexAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b₀) (VectorBundleCore.indexAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) b))
but is expected to have type
  forall {R : Type.{u2}} {B : Type.{u4}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u2} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) {b₀ : B} {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Trivialization.baseSet.{u4, u3, max u4 u3} B F (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (FiberBundle.trivializationAt.{u4, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀))) -> (Eq.{succ u3} (ContinuousLinearMap.{u2, u2, u3, u3} R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (AddCommGroup.toAddCommMonoid.{u3} (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.addCommGroupFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (VectorBundleCore.moduleFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b)) (Trivialization.symmL.{u2, u4, u3, u3} R B F (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_1 (fun (x : B) => AddCommGroup.toAddCommMonoid.{u3} (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.addCommGroupFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x)) (fun (x : B) => VectorBundleCore.moduleFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) _inst_4 _inst_5 _inst_6 (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (FiberBundle.trivializationAt.{u4, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀) (trivialization_linear.{u2, u4, u3, u3} R B F (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_1 (fun (x : B) => AddCommGroup.toAddCommMonoid.{u3} (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.addCommGroupFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x)) (fun (x : B) => VectorBundleCore.moduleFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) _inst_4 _inst_5 _inst_6 (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.vectorBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (FiberBundle.trivializationAt.{u4, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀) (instMemTrivializationAtlasTrivializationAt.{u4, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀)) b) (VectorBundleCore.coordChange.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (VectorBundleCore.indexAt.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b₀) (VectorBundleCore.indexAt.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) b))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.trivialization_at_symmL VectorBundleCore.trivializationAt_symmLₓ'. -/
@[simp, mfld_simps]
theorem trivializationAt_symmL {b₀ b : B} (hb : b ∈ (trivializationAt F Z.Fiber b₀).baseSet) :
    (trivializationAt F Z.Fiber b₀).symmL R b = Z.coordChange (Z.indexAt b₀) (Z.indexAt b) b :=
  Z.localTriv_symmL hb
#align vector_bundle_core.trivialization_at_symmL VectorBundleCore.trivializationAt_symmL

/- warning: vector_bundle_core.trivialization_at_coord_change_eq -> VectorBundleCore.trivializationAt_coordChange_eq is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] {ι : Type.{u4}} (Z : VectorBundleCore.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) {b₀ : B} {b₁ : B} {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (Trivialization.baseSet.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (FiberBundle.trivializationAt.{u2, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀)) (Trivialization.baseSet.{u2, u3, max u2 u3} B F (Bundle.TotalSpace.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u2, u3} B (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (FiberBundle.trivializationAt.{u2, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₁)))) -> (forall (v : F), Eq.{succ u3} F (coeFn.{succ u3, succ u3} (ContinuousLinearEquiv.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (fun (_x : ContinuousLinearEquiv.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => F -> F) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (Trivialization.coordChangeL.{u1, u2, u3, u3} R B F (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => VectorBundleCore.addCommMonoidFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (fun (x : B) => VectorBundleCore.moduleFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (FiberBundle.trivializationAt.{u2, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀) (FiberBundle.trivializationAt.{u2, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₁) (trivialization_linear.{u1, u2, u3, u3} R B F (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_1 (fun (x : B) => VectorBundleCore.addCommMonoidFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (fun (x : B) => VectorBundleCore.moduleFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) _inst_4 _inst_5 _inst_6 (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.vectorBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (FiberBundle.trivializationAt.{u2, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀) (FiberBundle.trivializationAt.memTrivializationAtlas.{u2, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀)) (trivialization_linear.{u1, u2, u3, u3} R B F (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_1 (fun (x : B) => VectorBundleCore.addCommMonoidFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (fun (x : B) => VectorBundleCore.moduleFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) _inst_4 _inst_5 _inst_6 (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.vectorBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (FiberBundle.trivializationAt.{u2, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₁) (FiberBundle.trivializationAt.memTrivializationAtlas.{u2, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₁)) b) v) (coeFn.{succ u3, succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => F -> F) (ContinuousLinearMap.toFun.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (VectorBundleCore.coordChange.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (VectorBundleCore.indexAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b₀) (VectorBundleCore.indexAt.{u1, u2, u3, u4} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b₁) b) v))
but is expected to have type
  forall {R : Type.{u2}} {B : Type.{u4}} {F : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u2} R] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u4} B] {ι : Type.{u1}} (Z : VectorBundleCore.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι) {b₀ : B} {b₁ : B} {b : B}, (Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) b (Inter.inter.{u4} (Set.{u4} B) (Set.instInterSet.{u4} B) (Trivialization.baseSet.{u4, u3, max u4 u3} B F (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (FiberBundle.trivializationAt.{u4, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀)) (Trivialization.baseSet.{u4, u3, max u4 u3} B F (Bundle.TotalSpace.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (Bundle.TotalSpace.proj.{u4, u3} B (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z)) (FiberBundle.trivializationAt.{u4, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₁)))) -> (forall (v : F), Eq.{succ u3} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) v) (FunLike.coe.{succ u3, succ u3, succ u3} (ContinuousLinearEquiv.{u2, u2, u3, u3} R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) (RingHomInvPair.ids.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1)))))) (RingHomInvPair.ids.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) _x) (ContinuousMapClass.toFunLike.{u3, u3, u3} (ContinuousLinearEquiv.{u2, u2, u3, u3} R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) (RingHomInvPair.ids.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1)))))) (RingHomInvPair.ids.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) F F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{u3, u2, u2, u3, u3} (ContinuousLinearEquiv.{u2, u2, u3, u3} R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) (RingHomInvPair.ids.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1)))))) (RingHomInvPair.ids.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{u3, u2, u2, u3, u3} (ContinuousLinearEquiv.{u2, u2, u3, u3} R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) (RingHomInvPair.ids.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1)))))) (RingHomInvPair.ids.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) (RingHomInvPair.ids.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1)))))) (RingHomInvPair.ids.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u2, u2, u3, u3} R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) (RingHomInvPair.ids.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1)))))) (RingHomInvPair.ids.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5))))) (Trivialization.coordChangeL.{u2, u4, u3, u3} R B F (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => AddCommGroup.toAddCommMonoid.{u3} (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.addCommGroupFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x)) (fun (x : B) => VectorBundleCore.moduleFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (FiberBundle.trivializationAt.{u4, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀) (FiberBundle.trivializationAt.{u4, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₁) (trivialization_linear.{u2, u4, u3, u3} R B F (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_1 (fun (x : B) => AddCommGroup.toAddCommMonoid.{u3} (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.addCommGroupFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x)) (fun (x : B) => VectorBundleCore.moduleFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) _inst_4 _inst_5 _inst_6 (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.vectorBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (FiberBundle.trivializationAt.{u4, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀) (instMemTrivializationAtlasTrivializationAt.{u4, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₀)) (trivialization_linear.{u2, u4, u3, u3} R B F (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) _inst_1 (fun (x : B) => AddCommGroup.toAddCommMonoid.{u3} (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) (VectorBundleCore.addCommGroupFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x)) (fun (x : B) => VectorBundleCore.moduleFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z x) _inst_4 _inst_5 _inst_6 (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.vectorBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (FiberBundle.trivializationAt.{u4, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₁) (instMemTrivializationAtlasTrivializationAt.{u4, u3, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (VectorBundleCore.Fiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (VectorBundleCore.toTopologicalSpace.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) (fun (b : B) => VectorBundleCore.topologicalSpaceFiber.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b) (VectorBundleCore.fiberBundle.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z) b₁)) b) v) (FunLike.coe.{succ u3, succ u3, succ u3} (ContinuousLinearMap.{u2, u2, u3, u3} R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) _x) (ContinuousMapClass.toFunLike.{u3, u3, u3} (ContinuousLinearMap.{u2, u2, u3, u3} R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) F F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{u3, u2, u2, u3, u3} (ContinuousLinearMap.{u2, u2, u3, u3} R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u3, u3} R R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u2, u3} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)))) (VectorBundleCore.coordChange.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z (VectorBundleCore.indexAt.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b₀) (VectorBundleCore.indexAt.{u2, u4, u3, u1} R B F _inst_1 _inst_4 _inst_5 _inst_6 ι Z b₁) b) v))
Case conversion may be inaccurate. Consider using '#align vector_bundle_core.trivialization_at_coord_change_eq VectorBundleCore.trivializationAt_coordChange_eqₓ'. -/
@[simp, mfld_simps]
theorem trivializationAt_coordChange_eq {b₀ b₁ b : B}
    (hb : b ∈ (trivializationAt F Z.Fiber b₀).baseSet ∩ (trivializationAt F Z.Fiber b₁).baseSet)
    (v : F) :
    (trivializationAt F Z.Fiber b₀).coordChangeL R (trivializationAt F Z.Fiber b₁) b v =
      Z.coordChange (Z.indexAt b₀) (Z.indexAt b₁) b v :=
  Z.localTriv_coordChange_eq _ _ hb v
#align vector_bundle_core.trivialization_at_coord_change_eq VectorBundleCore.trivializationAt_coordChange_eq

end VectorBundleCore

end

/-! ### Vector prebundle -/


section

variable [NontriviallyNormedField R] [∀ x, AddCommMonoid (E x)] [∀ x, Module R (E x)]
  [NormedAddCommGroup F] [NormedSpace R F] [TopologicalSpace B]

open TopologicalSpace

open VectorBundle

#print VectorPrebundle /-
/- ./././Mathport/Syntax/Translate/Basic.lean:635:2: warning: expanding binder collection (e e' «expr ∈ » pretrivialization_atlas) -/
/-- This structure permits to define a vector bundle when trivializations are given as local
equivalences but there is not yet a topology on the total space or the fibers.
The total space is hence given a topology in such a way that there is a fiber bundle structure for
which the local equivalences are also local homeomorphisms and hence vector bundle trivializations.
The topology on the fibers is induced from the one on the total space.

The field `exists_coord_change` is stated as an existential statement (instead of 3 separate
fields), since it depends on propositional information (namely `e e' ∈ pretrivialization_atlas`).
This makes it inconvenient to explicitly define a `coord_change` function when constructing a
`vector_prebundle`. -/
@[nolint has_nonempty_instance]
structure VectorPrebundle where
  pretrivializationAtlas : Set (Pretrivialization F (π E))
  pretrivialization_linear' :
    ∀ (e : Pretrivialization F (π E)) (he : e ∈ pretrivialization_atlas), e.isLinear R
  pretrivializationAt : B → Pretrivialization F (π E)
  mem_base_pretrivializationAt : ∀ x : B, x ∈ (pretrivialization_at x).baseSet
  pretrivialization_mem_atlas : ∀ x : B, pretrivialization_at x ∈ pretrivialization_atlas
  exists_coord_change :
    ∀ (e) (_ : e ∈ pretrivialization_atlas) (e') (_ : e' ∈ pretrivialization_atlas),
      ∃ f : B → F →L[R] F,
        ContinuousOn f (e.baseSet ∩ e'.baseSet) ∧
          ∀ (b : B) (hb : b ∈ e.baseSet ∩ e'.baseSet) (v : F),
            f b v = (e' (totalSpaceMk b (e.symm b v))).2
#align vector_prebundle VectorPrebundle
-/

namespace VectorPrebundle

variable {R E F}

#print VectorPrebundle.coordChange /-
/-- A randomly chosen coordinate change on a `vector_prebundle`, given by
  the field `exists_coord_change`. -/
def coordChange (a : VectorPrebundle R F E) {e e' : Pretrivialization F (π E)}
    (he : e ∈ a.pretrivializationAtlas) (he' : e' ∈ a.pretrivializationAtlas) (b : B) : F →L[R] F :=
  Classical.choose (a.exists_coord_change e he e' he') b
#align vector_prebundle.coord_change VectorPrebundle.coordChange
-/

/- warning: vector_prebundle.continuous_on_coord_change -> VectorPrebundle.continuousOn_coordChange is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] (a : VectorPrebundle.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6) {e : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)} {e' : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)} (he : Membership.Mem.{max u2 u3 u2 u4, max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)) (Set.{max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E))) (Set.hasMem.{max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E))) e (VectorPrebundle.pretrivializationAtlas.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a)) (he' : Membership.Mem.{max u2 u3 u2 u4, max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)) (Set.{max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E))) (Set.hasMem.{max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E))) e' (VectorPrebundle.pretrivializationAtlas.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a)), ContinuousOn.{u2, u3} B (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) _inst_6 (ContinuousLinearMap.topologicalSpace.{u1, u1, u3, u3} R R (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (SeminormedAddCommGroup.to_topologicalAddGroup.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4))) (VectorPrebundle.coordChange.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a e e' he he') (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E) e) (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E) e'))
but is expected to have type
  forall {R : Type.{u4}} {B : Type.{u3}} {F : Type.{u2}} {E : B -> Type.{u1}} [_inst_1 : NontriviallyNormedField.{u4} R] [_inst_2 : forall (x : B), AddCommMonoid.{u1} (E x)] [_inst_3 : forall (x : B), Module.{u4, u1} R (E x) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u3} B] (a : VectorPrebundle.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6) {e : Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E)} {e' : Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E)} (he : Membership.mem.{max (max u3 u2) u1, max (max u3 u2) u1} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E)) (Set.{max (max (max u3 u1) u2) u3} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E))) (Set.instMembershipSet.{max (max u3 u2) u1} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E))) e (VectorPrebundle.pretrivializationAtlas.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a)) (he' : Membership.mem.{max (max u3 u2) u1, max (max u3 u2) u1} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E)) (Set.{max (max (max u3 u1) u2) u3} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E))) (Set.instMembershipSet.{max (max u3 u2) u1} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E))) e' (VectorPrebundle.pretrivializationAtlas.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a)), ContinuousOn.{u3, u2} B (ContinuousLinearMap.{u4, u4, u2, u2} R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) _inst_6 (ContinuousLinearMap.topologicalSpace.{u4, u4, u2, u2} R R (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F F (SeminormedAddCommGroup.toAddCommGroup.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (SeminormedAddCommGroup.toAddCommGroup.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (SeminormedAddCommGroup.to_topologicalAddGroup.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4))) (VectorPrebundle.coordChange.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a e e' he he') (Inter.inter.{u3} (Set.{u3} B) (Set.instInterSet.{u3} B) (Pretrivialization.baseSet.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E) e) (Pretrivialization.baseSet.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E) e'))
Case conversion may be inaccurate. Consider using '#align vector_prebundle.continuous_on_coord_change VectorPrebundle.continuousOn_coordChangeₓ'. -/
theorem continuousOn_coordChange (a : VectorPrebundle R F E) {e e' : Pretrivialization F (π E)}
    (he : e ∈ a.pretrivializationAtlas) (he' : e' ∈ a.pretrivializationAtlas) :
    ContinuousOn (a.coordChange he he') (e.baseSet ∩ e'.baseSet) :=
  (Classical.choose_spec (a.exists_coord_change e he e' he')).1
#align vector_prebundle.continuous_on_coord_change VectorPrebundle.continuousOn_coordChange

/- warning: vector_prebundle.coord_change_apply -> VectorPrebundle.coordChange_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] (a : VectorPrebundle.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6) {e : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)} {e' : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)} (he : Membership.Mem.{max u2 u3 u2 u4, max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)) (Set.{max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E))) (Set.hasMem.{max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E))) e (VectorPrebundle.pretrivializationAtlas.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a)) (he' : Membership.Mem.{max u2 u3 u2 u4, max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)) (Set.{max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E))) (Set.hasMem.{max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E))) e' (VectorPrebundle.pretrivializationAtlas.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a)) {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E) e) (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E) e'))) -> (forall (v : F), Eq.{succ u3} F (coeFn.{succ u3, succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => F -> F) (ContinuousLinearMap.toFun.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (VectorPrebundle.coordChange.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a e e' he he' b) v) (Prod.snd.{u2, u3} B F (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Pretrivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)) e' (Bundle.totalSpaceMk.{u2, u4} B E b (Pretrivialization.symm.{u2, u3, u4} B F E _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (fun (x : B) => AddZeroClass.toHasZero.{u4} (E x) (AddMonoid.toAddZeroClass.{u4} (E x) (AddCommMonoid.toAddMonoid.{u4} (E x) (_inst_2 x)))) e b v)))))
but is expected to have type
  forall {R : Type.{u4}} {B : Type.{u3}} {F : Type.{u2}} {E : B -> Type.{u1}} [_inst_1 : NontriviallyNormedField.{u4} R] [_inst_2 : forall (x : B), AddCommMonoid.{u1} (E x)] [_inst_3 : forall (x : B), Module.{u4, u1} R (E x) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u3} B] (a : VectorPrebundle.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6) {e : Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E)} {e' : Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E)} (he : Membership.mem.{max (max u3 u2) u1, max (max u3 u2) u1} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E)) (Set.{max (max (max u3 u1) u2) u3} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E))) (Set.instMembershipSet.{max (max u3 u2) u1} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E))) e (VectorPrebundle.pretrivializationAtlas.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a)) (he' : Membership.mem.{max (max u3 u2) u1, max (max u3 u2) u1} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E)) (Set.{max (max (max u3 u1) u2) u3} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E))) (Set.instMembershipSet.{max (max u3 u2) u1} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E))) e' (VectorPrebundle.pretrivializationAtlas.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a)) {b : B}, (Membership.mem.{u3, u3} B (Set.{u3} B) (Set.instMembershipSet.{u3} B) b (Inter.inter.{u3} (Set.{u3} B) (Set.instInterSet.{u3} B) (Pretrivialization.baseSet.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E) e) (Pretrivialization.baseSet.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E) e'))) -> (forall (v : F), Eq.{succ u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) v) (FunLike.coe.{succ u2, succ u2, succ u2} (ContinuousLinearMap.{u4, u4, u2, u2} R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) _x) (ContinuousMapClass.toFunLike.{u2, u2, u2} (ContinuousLinearMap.{u4, u4, u2, u2} R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) F F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{u2, u4, u4, u2, u2} (ContinuousLinearMap.{u4, u4, u2, u2} R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u2, u2} R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)))) (VectorPrebundle.coordChange.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a e e' he he' b) v) (Prod.snd.{u3, u2} B F (Pretrivialization.toFun'.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E) e' (Bundle.totalSpaceMk.{u3, u1} B E b (Pretrivialization.symm.{u3, u2, u1} B F E _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (fun (x : B) => AddMonoid.toZero.{u1} (E x) (AddCommMonoid.toAddMonoid.{u1} (E x) (_inst_2 x))) e b v)))))
Case conversion may be inaccurate. Consider using '#align vector_prebundle.coord_change_apply VectorPrebundle.coordChange_applyₓ'. -/
theorem coordChange_apply (a : VectorPrebundle R F E) {e e' : Pretrivialization F (π E)}
    (he : e ∈ a.pretrivializationAtlas) (he' : e' ∈ a.pretrivializationAtlas) {b : B}
    (hb : b ∈ e.baseSet ∩ e'.baseSet) (v : F) :
    a.coordChange he he' b v = (e' (totalSpaceMk b (e.symm b v))).2 :=
  (Classical.choose_spec (a.exists_coord_change e he e' he')).2 b hb v
#align vector_prebundle.coord_change_apply VectorPrebundle.coordChange_apply

/- warning: vector_prebundle.mk_coord_change -> VectorPrebundle.mk_coordChange is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] (a : VectorPrebundle.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6) {e : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)} {e' : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)} (he : Membership.Mem.{max u2 u3 u2 u4, max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)) (Set.{max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E))) (Set.hasMem.{max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E))) e (VectorPrebundle.pretrivializationAtlas.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a)) (he' : Membership.Mem.{max u2 u3 u2 u4, max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)) (Set.{max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E))) (Set.hasMem.{max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E))) e' (VectorPrebundle.pretrivializationAtlas.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a)) {b : B}, (Membership.Mem.{u2, u2} B (Set.{u2} B) (Set.hasMem.{u2} B) b (Inter.inter.{u2} (Set.{u2} B) (Set.hasInter.{u2} B) (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E) e) (Pretrivialization.baseSet.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E) e'))) -> (forall (v : F), Eq.{max (succ u2) (succ u3)} (Prod.{u2, u3} B F) (Prod.mk.{u2, u3} B F b (coeFn.{succ u3, succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) => F -> F) (ContinuousLinearMap.toFun.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5)) (VectorPrebundle.coordChange.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a e e' he he' b) v)) (coeFn.{max (succ u2) (succ u3) (succ (max u2 u4)), max (succ (max u2 u4)) (succ u2) (succ u3)} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)) (fun (_x : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)) => (Bundle.TotalSpace.{u2, u4} B E) -> (Prod.{u2, u3} B F)) (Pretrivialization.hasCoeToFun.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)) e' (Bundle.totalSpaceMk.{u2, u4} B E b (Pretrivialization.symm.{u2, u3, u4} B F E _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (fun (x : B) => AddZeroClass.toHasZero.{u4} (E x) (AddMonoid.toAddZeroClass.{u4} (E x) (AddCommMonoid.toAddMonoid.{u4} (E x) (_inst_2 x)))) e b v))))
but is expected to have type
  forall {R : Type.{u4}} {B : Type.{u3}} {F : Type.{u2}} {E : B -> Type.{u1}} [_inst_1 : NontriviallyNormedField.{u4} R] [_inst_2 : forall (x : B), AddCommMonoid.{u1} (E x)] [_inst_3 : forall (x : B), Module.{u4, u1} R (E x) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u3} B] (a : VectorPrebundle.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6) {e : Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E)} {e' : Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E)} (he : Membership.mem.{max (max u3 u2) u1, max (max u3 u2) u1} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E)) (Set.{max (max (max u3 u1) u2) u3} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E))) (Set.instMembershipSet.{max (max u3 u2) u1} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E))) e (VectorPrebundle.pretrivializationAtlas.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a)) (he' : Membership.mem.{max (max u3 u2) u1, max (max u3 u2) u1} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E)) (Set.{max (max (max u3 u1) u2) u3} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E))) (Set.instMembershipSet.{max (max u3 u2) u1} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E))) e' (VectorPrebundle.pretrivializationAtlas.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a)) {b : B}, (Membership.mem.{u3, u3} B (Set.{u3} B) (Set.instMembershipSet.{u3} B) b (Inter.inter.{u3} (Set.{u3} B) (Set.instInterSet.{u3} B) (Pretrivialization.baseSet.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E) e) (Pretrivialization.baseSet.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E) e'))) -> (forall (v : F), Eq.{max (succ u3) (succ u2)} (Prod.{u3, u2} B ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) v)) (Prod.mk.{u3, u2} B ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) v) b (FunLike.coe.{succ u2, succ u2, succ u2} (ContinuousLinearMap.{u4, u4, u2, u2} R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) F (fun (_x : F) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : F) => F) _x) (ContinuousMapClass.toFunLike.{u2, u2, u2} (ContinuousLinearMap.{u4, u4, u2, u2} R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) F F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (ContinuousSemilinearMapClass.toContinuousMapClass.{u2, u4, u4, u2, u2} (ContinuousLinearMap.{u4, u4, u2, u2} R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)) R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u2, u2} R R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5)))) (VectorPrebundle.coordChange.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a e e' he he' b) v)) (Pretrivialization.toFun'.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E) e' (Bundle.totalSpaceMk.{u3, u1} B E b (Pretrivialization.symm.{u3, u2, u1} B F E _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (fun (x : B) => AddMonoid.toZero.{u1} (E x) (AddCommMonoid.toAddMonoid.{u1} (E x) (_inst_2 x))) e b v))))
Case conversion may be inaccurate. Consider using '#align vector_prebundle.mk_coord_change VectorPrebundle.mk_coordChangeₓ'. -/
theorem mk_coordChange (a : VectorPrebundle R F E) {e e' : Pretrivialization F (π E)}
    (he : e ∈ a.pretrivializationAtlas) (he' : e' ∈ a.pretrivializationAtlas) {b : B}
    (hb : b ∈ e.baseSet ∩ e'.baseSet) (v : F) :
    (b, a.coordChange he he' b v) = e' (totalSpaceMk b (e.symm b v)) :=
  by
  ext
  · rw [e.mk_symm hb.1 v, e'.coe_fst', e.proj_symm_apply' hb.1]
    rw [e.proj_symm_apply' hb.1]
    exact hb.2
  · exact a.coord_change_apply he he' hb v
#align vector_prebundle.mk_coord_change VectorPrebundle.mk_coordChange

/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/
#print VectorPrebundle.toFiberPrebundle /-
/-- Natural identification of `vector_prebundle` as a `fiber_prebundle`. -/
def toFiberPrebundle (a : VectorPrebundle R F E) : FiberPrebundle F E :=
  { a with
    continuous_triv_change := by
      intro e he e' he'
      have :=
        is_bounded_bilinear_map_apply.continuous.comp_continuous_on
          ((a.continuous_on_coord_change he' he).Prod_map continuousOn_id)
      have H :
        e'.to_local_equiv.target ∩ e'.to_local_equiv.symm ⁻¹' e.to_local_equiv.source =
          (e'.base_set ∩ e.base_set) ×ˢ univ :=
        by
        rw [e'.target_eq, e.source_eq]
        ext ⟨b, f⟩
        simp (config := { contextual := true }) only [-total_space.proj, and_congr_right_iff,
          e'.proj_symm_apply', iff_self_iff, imp_true_iff, mfld_simps]
      rw [H]
      refine' (continuous_on_fst.prod this).congr _
      rintro ⟨b, f⟩ ⟨hb, -⟩
      dsimp only [Function.comp, Prod.map]
      rw [a.mk_coord_change _ _ hb, e'.mk_symm hb.1]
      rfl }
#align vector_prebundle.to_fiber_prebundle VectorPrebundle.toFiberPrebundle
-/

#print VectorPrebundle.totalSpaceTopology /-
/-- Topology on the total space that will make the prebundle into a bundle. -/
def totalSpaceTopology (a : VectorPrebundle R F E) : TopologicalSpace (TotalSpace E) :=
  a.toFiberPrebundle.totalSpaceTopology
#align vector_prebundle.total_space_topology VectorPrebundle.totalSpaceTopology
-/

#print VectorPrebundle.trivializationOfMemPretrivializationAtlas /-
/-- Promotion from a `trivialization` in the `pretrivialization_atlas` of a
`vector_prebundle` to a `trivialization`. -/
def trivializationOfMemPretrivializationAtlas (a : VectorPrebundle R F E)
    {e : Pretrivialization F (π E)} (he : e ∈ a.pretrivializationAtlas) :
    @Trivialization B F _ _ _ a.totalSpaceTopology (π E) :=
  a.toFiberPrebundle.trivializationOfMemPretrivializationAtlas he
#align vector_prebundle.trivialization_of_mem_pretrivialization_atlas VectorPrebundle.trivializationOfMemPretrivializationAtlas
-/

/- warning: vector_prebundle.linear_of_mem_pretrivialization_atlas -> VectorPrebundle.linear_trivializationOfMemPretrivializationAtlas is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] (a : VectorPrebundle.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6) {e : Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)} (he : Membership.Mem.{max u2 u3 u2 u4, max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E)) (Set.{max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E))) (Set.hasMem.{max u2 u3 u2 u4} (Pretrivialization.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E))) e (VectorPrebundle.pretrivializationAtlas.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a)), Trivialization.IsLinear.{u1, u2, u3, u4} R B F E (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_6 (VectorPrebundle.totalSpaceTopology.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (NormedSpace.toModule.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) (VectorPrebundle.trivializationOfMemPretrivializationAtlas.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a e he)
but is expected to have type
  forall {R : Type.{u4}} {B : Type.{u3}} {F : Type.{u2}} {E : B -> Type.{u1}} [_inst_1 : NontriviallyNormedField.{u4} R] [_inst_2 : forall (x : B), AddCommMonoid.{u1} (E x)] [_inst_3 : forall (x : B), Module.{u4, u1} R (E x) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u3} B] (a : VectorPrebundle.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6) {e : Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E)} (he : Membership.mem.{max (max u3 u2) u1, max (max u3 u2) u1} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E)) (Set.{max (max (max u3 u1) u2) u3} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E))) (Set.instMembershipSet.{max (max u3 u2) u1} (Pretrivialization.{u3, u2, max u3 u1} B F (Bundle.TotalSpace.{u3, u1} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u1} B E))) e (VectorPrebundle.pretrivializationAtlas.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a)), Trivialization.IsLinear.{u4, u3, u2, u1} R B F E (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) _inst_6 (VectorPrebundle.totalSpaceTopology.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (NormedSpace.toModule.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_5) (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) (VectorPrebundle.trivializationOfMemPretrivializationAtlas.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a e he)
Case conversion may be inaccurate. Consider using '#align vector_prebundle.linear_of_mem_pretrivialization_atlas VectorPrebundle.linear_trivializationOfMemPretrivializationAtlasₓ'. -/
theorem linear_trivializationOfMemPretrivializationAtlas (a : VectorPrebundle R F E)
    {e : Pretrivialization F (π E)} (he : e ∈ a.pretrivializationAtlas) :
    @Trivialization.IsLinear R B F _ _ _ _ a.totalSpaceTopology _ _ _ _
      (trivializationOfMemPretrivializationAtlas a he) :=
  { linear := (a.pretrivialization_linear' e he).linear }
#align vector_prebundle.linear_of_mem_pretrivialization_atlas VectorPrebundle.linear_trivializationOfMemPretrivializationAtlas

variable (a : VectorPrebundle R F E)

/- warning: vector_prebundle.mem_trivialization_at_source -> VectorPrebundle.mem_trivialization_at_source is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] (a : VectorPrebundle.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6) (b : B) (x : E b), Membership.Mem.{max u2 u4, max u2 u4} (Bundle.TotalSpace.{u2, u4} B (fun (b : B) => E b)) (Set.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)) (Set.hasMem.{max u2 u4} (Bundle.TotalSpace.{u2, u4} B E)) (Bundle.totalSpaceMk.{u2, u4} B (fun (b : B) => E b) b x) (LocalEquiv.source.{max u2 u4, max u2 u3} (Bundle.TotalSpace.{u2, u4} B E) (Prod.{u2, u3} B F) (Pretrivialization.toLocalEquiv.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E) (VectorPrebundle.pretrivializationAt.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a b)))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u3}} {F : Type.{u2}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u1, u2} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u3} B] (a : VectorPrebundle.{u1, u3, u2, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6) (b : B) (x : E b), Membership.mem.{max u4 u3, max u3 u4} (Bundle.TotalSpace.{u3, u4} B E) (Set.{max u3 u4} (Bundle.TotalSpace.{u3, u4} B E)) (Set.instMembershipSet.{max u3 u4} (Bundle.TotalSpace.{u3, u4} B E)) (Bundle.totalSpaceMk.{u3, u4} B E b x) (LocalEquiv.source.{max u3 u4, max u3 u2} (Bundle.TotalSpace.{u3, u4} B E) (Prod.{u3, u2} B F) (Pretrivialization.toLocalEquiv.{u3, u2, max u3 u4} B F (Bundle.TotalSpace.{u3, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u4} B E) (VectorPrebundle.pretrivializationAt.{u1, u3, u2, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a b)))
Case conversion may be inaccurate. Consider using '#align vector_prebundle.mem_trivialization_at_source VectorPrebundle.mem_trivialization_at_sourceₓ'. -/
theorem mem_trivialization_at_source (b : B) (x : E b) :
    totalSpaceMk b x ∈ (a.pretrivializationAt b).source :=
  a.toFiberPrebundle.mem_pretrivializationAt_source b x
#align vector_prebundle.mem_trivialization_at_source VectorPrebundle.mem_trivialization_at_source

/- warning: vector_prebundle.total_space_mk_preimage_source -> VectorPrebundle.totalSpaceMk_preimage_source is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] (a : VectorPrebundle.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6) (b : B), Eq.{succ u4} (Set.{u4} (E b)) (Set.preimage.{u4, max u2 u4} (E b) (Bundle.TotalSpace.{u2, u4} B E) (Bundle.totalSpaceMk.{u2, u4} B E b) (LocalEquiv.source.{max u2 u4, max u2 u3} (Bundle.TotalSpace.{u2, u4} B E) (Prod.{u2, u3} B F) (Pretrivialization.toLocalEquiv.{u2, u3, max u2 u4} B F (Bundle.TotalSpace.{u2, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (Bundle.TotalSpace.proj.{u2, u4} B E) (VectorPrebundle.pretrivializationAt.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a b)))) (Set.univ.{u4} (E b))
but is expected to have type
  forall {R : Type.{u1}} {B : Type.{u3}} {F : Type.{u2}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (DivisionSemiring.toSemiring.{u1} R (Semifield.toDivisionSemiring.{u1} R (Field.toSemifield.{u1} R (NormedField.toField.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u1, u2} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u3} B] (a : VectorPrebundle.{u1, u3, u2, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6) (b : B), Eq.{succ u4} (Set.{u4} (E b)) (Set.preimage.{u4, max u3 u4} (E b) (Bundle.TotalSpace.{u3, u4} B E) (Bundle.totalSpaceMk.{u3, u4} B E b) (LocalEquiv.source.{max u3 u4, max u3 u2} (Bundle.TotalSpace.{u3, u4} B E) (Prod.{u3, u2} B F) (Pretrivialization.toLocalEquiv.{u3, u2, max u3 u4} B F (Bundle.TotalSpace.{u3, u4} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (Bundle.TotalSpace.proj.{u3, u4} B E) (VectorPrebundle.pretrivializationAt.{u1, u3, u2, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a b)))) (Set.univ.{u4} (E b))
Case conversion may be inaccurate. Consider using '#align vector_prebundle.total_space_mk_preimage_source VectorPrebundle.totalSpaceMk_preimage_sourceₓ'. -/
@[simp]
theorem totalSpaceMk_preimage_source (b : B) :
    totalSpaceMk b ⁻¹' (a.pretrivializationAt b).source = univ :=
  a.toFiberPrebundle.totalSpaceMk_preimage_source b
#align vector_prebundle.total_space_mk_preimage_source VectorPrebundle.totalSpaceMk_preimage_source

#print VectorPrebundle.fiberTopology /-
/-- Topology on the fibers `E b` induced by the map `E b → E.total_space`. -/
def fiberTopology (b : B) : TopologicalSpace (E b) :=
  a.toFiberPrebundle.fiberTopology b
#align vector_prebundle.fiber_topology VectorPrebundle.fiberTopology
-/

/- warning: vector_prebundle.inducing_total_space_mk -> VectorPrebundle.inducing_totalSpaceMk is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] (a : VectorPrebundle.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6) (b : B), Inducing.{u4, max u2 u4} (E b) (Bundle.TotalSpace.{u2, u4} B E) (VectorPrebundle.fiberTopology.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a b) (VectorPrebundle.totalSpaceTopology.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a) (Bundle.totalSpaceMk.{u2, u4} B E b)
but is expected to have type
  forall {R : Type.{u2}} {B : Type.{u3}} {F : Type.{u1}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u2} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u2, u4} R (E x) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u1} F] [_inst_5 : NormedSpace.{u2, u1} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F _inst_4)] [_inst_6 : TopologicalSpace.{u3} B] (a : VectorPrebundle.{u2, u3, u1, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6) (b : B), Inducing.{u4, max u3 u4} (E b) (Bundle.TotalSpace.{u3, u4} B E) (VectorPrebundle.fiberTopology.{u2, u3, u1, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a b) (VectorPrebundle.totalSpaceTopology.{u2, u3, u1, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a) (Bundle.totalSpaceMk.{u3, u4} B E b)
Case conversion may be inaccurate. Consider using '#align vector_prebundle.inducing_total_space_mk VectorPrebundle.inducing_totalSpaceMkₓ'. -/
@[continuity]
theorem inducing_totalSpaceMk (b : B) :
    @Inducing _ _ (a.fiberTopology b) a.totalSpaceTopology (totalSpaceMk b) :=
  a.toFiberPrebundle.inducing_totalSpaceMk b
#align vector_prebundle.inducing_total_space_mk VectorPrebundle.inducing_totalSpaceMk

/- warning: vector_prebundle.continuous_total_space_mk -> VectorPrebundle.continuous_totalSpaceMk is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] (a : VectorPrebundle.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6) (b : B), Continuous.{u4, max u2 u4} (E b) (Bundle.TotalSpace.{u2, u4} B E) (VectorPrebundle.fiberTopology.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a b) (VectorPrebundle.totalSpaceTopology.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a) (Bundle.totalSpaceMk.{u2, u4} B E b)
but is expected to have type
  forall {R : Type.{u2}} {B : Type.{u3}} {F : Type.{u1}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u2} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u2, u4} R (E x) (DivisionSemiring.toSemiring.{u2} R (Semifield.toDivisionSemiring.{u2} R (Field.toSemifield.{u2} R (NormedField.toField.{u2} R (NontriviallyNormedField.toNormedField.{u2} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u1} F] [_inst_5 : NormedSpace.{u2, u1} R F (NontriviallyNormedField.toNormedField.{u2} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F _inst_4)] [_inst_6 : TopologicalSpace.{u3} B] (a : VectorPrebundle.{u2, u3, u1, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6) (b : B), Continuous.{u4, max u3 u4} (E b) (Bundle.TotalSpace.{u3, u4} B E) (VectorPrebundle.fiberTopology.{u2, u3, u1, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a b) (VectorPrebundle.totalSpaceTopology.{u2, u3, u1, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a) (Bundle.totalSpaceMk.{u3, u4} B E b)
Case conversion may be inaccurate. Consider using '#align vector_prebundle.continuous_total_space_mk VectorPrebundle.continuous_totalSpaceMkₓ'. -/
@[continuity]
theorem continuous_totalSpaceMk (b : B) :
    @Continuous _ _ (a.fiberTopology b) a.totalSpaceTopology (totalSpaceMk b) :=
  a.toFiberPrebundle.continuous_totalSpaceMk b
#align vector_prebundle.continuous_total_space_mk VectorPrebundle.continuous_totalSpaceMk

#print VectorPrebundle.toFiberBundle /-
/-- Make a `fiber_bundle` from a `vector_prebundle`; auxiliary construction for
`vector_prebundle.vector_bundle`. -/
def toFiberBundle : @FiberBundle B F _ _ _ a.totalSpaceTopology a.fiberTopology :=
  a.toFiberPrebundle.toFiberBundle
#align vector_prebundle.to_fiber_bundle VectorPrebundle.toFiberBundle
-/

/- warning: vector_prebundle.to_vector_bundle -> VectorPrebundle.to_vectorBundle is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {B : Type.{u2}} {F : Type.{u3}} {E : B -> Type.{u4}} [_inst_1 : NontriviallyNormedField.{u1} R] [_inst_2 : forall (x : B), AddCommMonoid.{u4} (E x)] [_inst_3 : forall (x : B), Module.{u1, u4} R (E x) (Ring.toSemiring.{u1} R (NormedRing.toRing.{u1} R (NormedCommRing.toNormedRing.{u1} R (NormedField.toNormedCommRing.{u1} R (NontriviallyNormedField.toNormedField.{u1} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_5 : NormedSpace.{u1, u3} R F (NontriviallyNormedField.toNormedField.{u1} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_6 : TopologicalSpace.{u2} B] (a : VectorPrebundle.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6), VectorBundle.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 (VectorPrebundle.totalSpaceTopology.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a) (VectorPrebundle.fiberTopology.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a) (VectorPrebundle.toFiberBundle.{u1, u2, u3, u4} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a)
but is expected to have type
  forall {R : Type.{u4}} {B : Type.{u3}} {F : Type.{u2}} {E : B -> Type.{u1}} [_inst_1 : NontriviallyNormedField.{u4} R] [_inst_2 : forall (x : B), AddCommMonoid.{u1} (E x)] [_inst_3 : forall (x : B), Module.{u4, u1} R (E x) (DivisionSemiring.toSemiring.{u4} R (Semifield.toDivisionSemiring.{u4} R (Field.toSemifield.{u4} R (NormedField.toField.{u4} R (NontriviallyNormedField.toNormedField.{u4} R _inst_1))))) (_inst_2 x)] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_5 : NormedSpace.{u4, u2} R F (NontriviallyNormedField.toNormedField.{u4} R _inst_1) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_6 : TopologicalSpace.{u3} B] (a : VectorPrebundle.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6), VectorBundle.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 (VectorPrebundle.totalSpaceTopology.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a) (VectorPrebundle.fiberTopology.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a) (VectorPrebundle.toFiberBundle.{u4, u3, u2, u1} R B F E _inst_1 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_3 x) _inst_4 _inst_5 _inst_6 a)
Case conversion may be inaccurate. Consider using '#align vector_prebundle.to_vector_bundle VectorPrebundle.to_vectorBundleₓ'. -/
/-- Make a `vector_bundle` from a `vector_prebundle`.  Concretely this means
that, given a `vector_prebundle` structure for a sigma-type `E` -- which consists of a
number of "pretrivializations" identifying parts of `E` with product spaces `U × F` -- one
establishes that for the topology constructed on the sigma-type using
`vector_prebundle.total_space_topology`, these "pretrivializations" are actually
"trivializations" (i.e., homeomorphisms with respect to the constructed topology). -/
theorem to_vectorBundle :
    @VectorBundle R _ F E _ _ _ _ _ _ a.totalSpaceTopology a.fiberTopology a.toFiberBundle :=
  { trivialization_linear' := by
      rintro _ ⟨e, he, rfl⟩
      apply linear_of_mem_pretrivialization_atlas
    continuousOn_coord_change' :=
      by
      rintro _ _ ⟨e, he, rfl⟩ ⟨e', he', rfl⟩
      refine' (a.continuous_on_coord_change he he').congr _
      intro b hb
      ext v
      rw [a.coord_change_apply he he' hb v, ContinuousLinearEquiv.coe_coe,
        Trivialization.coordChangeL_apply]
      exacts[rfl, hb] }
#align vector_prebundle.to_vector_bundle VectorPrebundle.to_vectorBundle

end VectorPrebundle

namespace ContinuousLinearMap

variable {𝕜₁ 𝕜₂ : Type _} [NontriviallyNormedField 𝕜₁] [NontriviallyNormedField 𝕜₂]

variable {σ : 𝕜₁ →+* 𝕜₂}

variable {B' : Type _} [TopologicalSpace B']

variable [NormedSpace 𝕜₁ F] [∀ x, Module 𝕜₁ (E x)] [TopologicalSpace (TotalSpace E)]

variable {F' : Type _} [NormedAddCommGroup F'] [NormedSpace 𝕜₂ F'] {E' : B' → Type _}
  [∀ x, AddCommMonoid (E' x)] [∀ x, Module 𝕜₂ (E' x)] [TopologicalSpace (TotalSpace E')]

variable [∀ x, TopologicalSpace (E x)] [FiberBundle F E] [VectorBundle 𝕜₁ F E]

variable [∀ x, TopologicalSpace (E' x)] [FiberBundle F' E'] [VectorBundle 𝕜₂ F' E']

variable (F E F' E')

#print ContinuousLinearMap.inCoordinates /-
/-- When `ϕ` is a continuous (semi)linear map between the fibers `E x` and `E' y` of two vector
bundles `E` and `E'`, `continuous_linear_map.in_coordinates F E F' E' x₀ x y₀ y ϕ` is a coordinate
change of this continuous linear map w.r.t. the chart around `x₀` and the chart around `y₀`.

It is defined by composing `ϕ` with appropriate coordinate changes given by the vector bundles
`E` and `E'`.
We use the operations `trivialization.continuous_linear_map_at` and `trivialization.symmL` in the
definition, instead of `trivialization.continuous_linear_equiv_at`, so that
`continuous_linear_map.in_coordinates` is defined everywhere (but see
`continuous_linear_map.in_coordinates_eq`).

This is the (second component of the) underlying function of a trivialization of the hom-bundle
(see `hom_trivialization_at_apply`). However, note that `continuous_linear_map.in_coordinates` is
defined even when `x` and `y` live in different base sets.
Therefore, it is is also convenient when working with the hom-bundle between pulled back bundles.
-/
def inCoordinates (x₀ x : B) (y₀ y : B') (ϕ : E x →SL[σ] E' y) : F →SL[σ] F' :=
  ((trivializationAt F' E' y₀).continuousLinearMapAt 𝕜₂ y).comp <|
    ϕ.comp <| (trivializationAt F E x₀).symmL 𝕜₁ x
#align continuous_linear_map.in_coordinates ContinuousLinearMap.inCoordinates
-/

variable {F F'}

/- warning: continuous_linear_map.in_coordinates_eq -> ContinuousLinearMap.inCoordinates_eq is a dubious translation:
lean 3 declaration is
  forall {B : Type.{u1}} {F : Type.{u2}} (E : B -> Type.{u3}) [_inst_2 : forall (x : B), AddCommMonoid.{u3} (E x)] [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_6 : TopologicalSpace.{u1} B] {𝕜₁ : Type.{u4}} {𝕜₂ : Type.{u5}} [_inst_7 : NontriviallyNormedField.{u4} 𝕜₁] [_inst_8 : NontriviallyNormedField.{u5} 𝕜₂] {σ : RingHom.{u4, u5} 𝕜₁ 𝕜₂ (NonAssocRing.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toNonAssocRing.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7)))))) (NonAssocRing.toNonAssocSemiring.{u5} 𝕜₂ (Ring.toNonAssocRing.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))))} {B' : Type.{u6}} [_inst_9 : TopologicalSpace.{u6} B'] [_inst_10 : NormedSpace.{u4, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] [_inst_11 : forall (x : B), Module.{u4, u3} 𝕜₁ (E x) (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (_inst_2 x)] [_inst_12 : TopologicalSpace.{max u1 u3} (Bundle.TotalSpace.{u1, u3} B E)] {F' : Type.{u7}} [_inst_13 : NormedAddCommGroup.{u7} F'] [_inst_14 : NormedSpace.{u5, u7} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)] (E' : B' -> Type.{u8}) [_inst_15 : forall (x : B'), AddCommMonoid.{u8} (E' x)] [_inst_16 : forall (x : B'), Module.{u5, u8} 𝕜₂ (E' x) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (_inst_15 x)] [_inst_17 : TopologicalSpace.{max u6 u8} (Bundle.TotalSpace.{u6, u8} B' E')] [_inst_18 : forall (x : B), TopologicalSpace.{u3} (E x)] [_inst_19 : FiberBundle.{u1, u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) E _inst_12 (fun (b : B) => _inst_18 b)] [_inst_20 : VectorBundle.{u4, u1, u2, u3} 𝕜₁ B F E _inst_7 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_11 x) _inst_4 _inst_10 _inst_6 _inst_12 (fun (x : B) => _inst_18 x) _inst_19] [_inst_21 : forall (x : B'), TopologicalSpace.{u8} (E' x)] [_inst_22 : FiberBundle.{u6, u7, u8} B' F' _inst_9 (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) E' _inst_17 (fun (b : B') => _inst_21 b)] [_inst_23 : VectorBundle.{u5, u6, u7, u8} 𝕜₂ B' F' E' _inst_8 (fun (x : B') => _inst_15 x) (fun (x : B') => _inst_16 x) _inst_13 _inst_14 _inst_9 _inst_17 (fun (x : B') => _inst_21 x) _inst_22] (x₀ : B) (x : B) (y₀ : B') (y : B') (ϕ : ContinuousLinearMap.{u4, u5, u3, u8} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) σ (E x) (_inst_18 x) (_inst_2 x) (E' y) (_inst_21 y) (_inst_15 y) (_inst_11 x) (_inst_16 y)) (hx : Membership.Mem.{u1, u1} B (Set.{u1} B) (Set.hasMem.{u1} B) x (Trivialization.baseSet.{u1, u2, max u1 u3} B F (Bundle.TotalSpace.{u1, u3} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) _inst_12 (Bundle.TotalSpace.proj.{u1, u3} B E) (FiberBundle.trivializationAt.{u1, u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) E _inst_12 (fun (b : B) => _inst_18 b) _inst_19 x₀))) (hy : Membership.Mem.{u6, u6} B' (Set.{u6} B') (Set.hasMem.{u6} B') y (Trivialization.baseSet.{u6, u7, max u6 u8} B' F' (Bundle.TotalSpace.{u6, u8} B' E') _inst_9 (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) _inst_17 (Bundle.TotalSpace.proj.{u6, u8} B' E') (FiberBundle.trivializationAt.{u6, u7, u8} B' F' _inst_9 (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) E' _inst_17 (fun (b : B') => _inst_21 b) _inst_22 y₀))), Eq.{max (succ u2) (succ u7)} (ContinuousLinearMap.{u4, u5, u2, u7} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) σ F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F' (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u7} F' (NormedAddCommGroup.toAddCommGroup.{u7} F' _inst_13)) (NormedSpace.toModule.{u4, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (NormedSpace.toModule.{u5, u7} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13) _inst_14)) (ContinuousLinearMap.inCoordinates.{u1, u2, u3, u4, u5, u6, u7, u8} B F E (fun (x : B) => _inst_2 x) _inst_4 _inst_6 𝕜₁ 𝕜₂ _inst_7 _inst_8 σ B' _inst_9 _inst_10 (fun (x : B) => _inst_11 x) _inst_12 F' _inst_13 _inst_14 E' (fun (x : B') => _inst_15 x) (fun (y : B') => _inst_16 y) _inst_17 (fun (b : B) => _inst_18 b) _inst_19 _inst_20 (fun (b : B') => _inst_21 b) _inst_22 _inst_23 x₀ x y₀ y ϕ) (ContinuousLinearMap.comp.{u4, u5, u5, u2, u8, u7} 𝕜₁ 𝕜₂ 𝕜₂ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) σ (RingHom.id.{u5} 𝕜₂ (Semiring.toNonAssocSemiring.{u5} 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))))) σ F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (E' y) (_inst_21 y) (_inst_15 y) F' (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u7} F' (NormedAddCommGroup.toAddCommGroup.{u7} F' _inst_13)) (NormedSpace.toModule.{u4, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (_inst_16 y) (NormedSpace.toModule.{u5, u7} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13) _inst_14) (RingHomCompTriple.right_ids.{u4, u5} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) σ) ((fun (a : Sort.{max (succ u8) (succ u7)}) (b : Sort.{max (succ u8) (succ u7)}) [self : HasLiftT.{max (succ u8) (succ u7), max (succ u8) (succ u7)} a b] => self.0) (ContinuousLinearEquiv.{u5, u5, u8, u7} 𝕜₂ 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (RingHom.id.{u5} 𝕜₂ (Semiring.toNonAssocSemiring.{u5} 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))))) (RingHom.id.{u5} 𝕜₂ (Semiring.toNonAssocSemiring.{u5} 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u5} 𝕜₂ _inst_8) (Trivialization.continuousLinearEquivAt._proof_2.{u5} 𝕜₂ _inst_8) (E' y) (_inst_21 y) (_inst_15 y) F' (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u7} F' (NormedAddCommGroup.toAddCommGroup.{u7} F' _inst_13)) (_inst_16 y) (NormedSpace.toModule.{u5, u7} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13) _inst_14)) (ContinuousLinearMap.{u5, u5, u8, u7} 𝕜₂ 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (RingHom.id.{u5} 𝕜₂ (Semiring.toNonAssocSemiring.{u5} 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))))) (E' y) (_inst_21 y) (_inst_15 y) F' (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u7} F' (NormedAddCommGroup.toAddCommGroup.{u7} F' _inst_13)) (_inst_16 y) (NormedSpace.toModule.{u5, u7} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13) _inst_14)) (HasLiftT.mk.{max (succ u8) (succ u7), max (succ u8) (succ u7)} (ContinuousLinearEquiv.{u5, u5, u8, u7} 𝕜₂ 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (RingHom.id.{u5} 𝕜₂ (Semiring.toNonAssocSemiring.{u5} 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))))) (RingHom.id.{u5} 𝕜₂ (Semiring.toNonAssocSemiring.{u5} 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u5} 𝕜₂ _inst_8) (Trivialization.continuousLinearEquivAt._proof_2.{u5} 𝕜₂ _inst_8) (E' y) (_inst_21 y) (_inst_15 y) F' (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u7} F' (NormedAddCommGroup.toAddCommGroup.{u7} F' _inst_13)) (_inst_16 y) (NormedSpace.toModule.{u5, u7} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13) _inst_14)) (ContinuousLinearMap.{u5, u5, u8, u7} 𝕜₂ 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (RingHom.id.{u5} 𝕜₂ (Semiring.toNonAssocSemiring.{u5} 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))))) (E' y) (_inst_21 y) (_inst_15 y) F' (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u7} F' (NormedAddCommGroup.toAddCommGroup.{u7} F' _inst_13)) (_inst_16 y) (NormedSpace.toModule.{u5, u7} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13) _inst_14)) (CoeTCₓ.coe.{max (succ u8) (succ u7), max (succ u8) (succ u7)} (ContinuousLinearEquiv.{u5, u5, u8, u7} 𝕜₂ 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (RingHom.id.{u5} 𝕜₂ (Semiring.toNonAssocSemiring.{u5} 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))))) (RingHom.id.{u5} 𝕜₂ (Semiring.toNonAssocSemiring.{u5} 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u5} 𝕜₂ _inst_8) (Trivialization.continuousLinearEquivAt._proof_2.{u5} 𝕜₂ _inst_8) (E' y) (_inst_21 y) (_inst_15 y) F' (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u7} F' (NormedAddCommGroup.toAddCommGroup.{u7} F' _inst_13)) (_inst_16 y) (NormedSpace.toModule.{u5, u7} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13) _inst_14)) (ContinuousLinearMap.{u5, u5, u8, u7} 𝕜₂ 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (RingHom.id.{u5} 𝕜₂ (Semiring.toNonAssocSemiring.{u5} 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))))) (E' y) (_inst_21 y) (_inst_15 y) F' (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u7} F' (NormedAddCommGroup.toAddCommGroup.{u7} F' _inst_13)) (_inst_16 y) (NormedSpace.toModule.{u5, u7} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13) _inst_14)) (coeBase.{max (succ u8) (succ u7), max (succ u8) (succ u7)} (ContinuousLinearEquiv.{u5, u5, u8, u7} 𝕜₂ 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (RingHom.id.{u5} 𝕜₂ (Semiring.toNonAssocSemiring.{u5} 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))))) (RingHom.id.{u5} 𝕜₂ (Semiring.toNonAssocSemiring.{u5} 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u5} 𝕜₂ _inst_8) (Trivialization.continuousLinearEquivAt._proof_2.{u5} 𝕜₂ _inst_8) (E' y) (_inst_21 y) (_inst_15 y) F' (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u7} F' (NormedAddCommGroup.toAddCommGroup.{u7} F' _inst_13)) (_inst_16 y) (NormedSpace.toModule.{u5, u7} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13) _inst_14)) (ContinuousLinearMap.{u5, u5, u8, u7} 𝕜₂ 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (RingHom.id.{u5} 𝕜₂ (Semiring.toNonAssocSemiring.{u5} 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))))) (E' y) (_inst_21 y) (_inst_15 y) F' (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u7} F' (NormedAddCommGroup.toAddCommGroup.{u7} F' _inst_13)) (_inst_16 y) (NormedSpace.toModule.{u5, u7} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13) _inst_14)) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u5, u5, u8, u7} 𝕜₂ 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (RingHom.id.{u5} 𝕜₂ (Semiring.toNonAssocSemiring.{u5} 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))))) (RingHom.id.{u5} 𝕜₂ (Semiring.toNonAssocSemiring.{u5} 𝕜₂ (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u5} 𝕜₂ _inst_8) (Trivialization.continuousLinearEquivAt._proof_2.{u5} 𝕜₂ _inst_8) (E' y) (_inst_21 y) (_inst_15 y) F' (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u7} F' (NormedAddCommGroup.toAddCommGroup.{u7} F' _inst_13)) (_inst_16 y) (NormedSpace.toModule.{u5, u7} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13) _inst_14))))) (Trivialization.continuousLinearEquivAt.{u5, u6, u7, u8} 𝕜₂ B' F' E' _inst_8 (fun (x : B') => _inst_15 x) (fun (y : B') => _inst_16 y) _inst_13 _inst_14 _inst_9 _inst_17 (fun (b : B') => _inst_21 b) _inst_22 (FiberBundle.trivializationAt.{u6, u7, u8} B' F' _inst_9 (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) E' _inst_17 (fun (b : B') => _inst_21 b) _inst_22 y₀) (trivialization_linear.{u5, u6, u7, u8} 𝕜₂ B' F' E' _inst_8 (fun (x : B') => _inst_15 x) (fun (x : B') => _inst_16 x) _inst_13 _inst_14 _inst_9 _inst_17 (fun (b : B') => _inst_21 b) _inst_22 _inst_23 (FiberBundle.trivializationAt.{u6, u7, u8} B' F' _inst_9 (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) E' _inst_17 (fun (b : B') => _inst_21 b) _inst_22 y₀) (FiberBundle.trivializationAt.memTrivializationAtlas.{u6, u7, u8} B' F' _inst_9 (UniformSpace.toTopologicalSpace.{u7} F' (PseudoMetricSpace.toUniformSpace.{u7} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u7} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u7} F' _inst_13)))) E' _inst_17 (fun (b : B') => _inst_21 b) _inst_22 y₀)) y hy)) (ContinuousLinearMap.comp.{u4, u4, u5, u2, u3, u8} 𝕜₁ 𝕜₁ 𝕜₂ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) σ σ F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (E x) (_inst_18 x) (_inst_2 x) (E' y) (_inst_21 y) (_inst_15 y) (NormedSpace.toModule.{u4, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (_inst_11 x) (_inst_16 y) (RingHomCompTriple.ids.{u4, u5} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u5} 𝕜₂ (NormedRing.toRing.{u5} 𝕜₂ (NormedCommRing.toNormedRing.{u5} 𝕜₂ (NormedField.toNormedCommRing.{u5} 𝕜₂ (NontriviallyNormedField.toNormedField.{u5} 𝕜₂ _inst_8))))) σ) ϕ ((fun (a : Sort.{max (succ u2) (succ u3)}) (b : Sort.{max (succ u2) (succ u3)}) [self : HasLiftT.{max (succ u2) (succ u3), max (succ u2) (succ u3)} a b] => self.0) (ContinuousLinearEquiv.{u4, u4, u2, u3} 𝕜₁ 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) (Trivialization.continuousLinearEquivAt._proof_2.{u4} 𝕜₁ _inst_7) (Trivialization.continuousLinearEquivAt._proof_1.{u4} 𝕜₁ _inst_7) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (E x) (_inst_18 x) (_inst_2 x) (NormedSpace.toModule.{u4, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (_inst_11 x)) (ContinuousLinearMap.{u4, u4, u2, u3} 𝕜₁ 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (E x) (_inst_18 x) (_inst_2 x) (NormedSpace.toModule.{u4, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (_inst_11 x)) (HasLiftT.mk.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u4, u4, u2, u3} 𝕜₁ 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) (Trivialization.continuousLinearEquivAt._proof_2.{u4} 𝕜₁ _inst_7) (Trivialization.continuousLinearEquivAt._proof_1.{u4} 𝕜₁ _inst_7) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (E x) (_inst_18 x) (_inst_2 x) (NormedSpace.toModule.{u4, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (_inst_11 x)) (ContinuousLinearMap.{u4, u4, u2, u3} 𝕜₁ 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (E x) (_inst_18 x) (_inst_2 x) (NormedSpace.toModule.{u4, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (_inst_11 x)) (CoeTCₓ.coe.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u4, u4, u2, u3} 𝕜₁ 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) (Trivialization.continuousLinearEquivAt._proof_2.{u4} 𝕜₁ _inst_7) (Trivialization.continuousLinearEquivAt._proof_1.{u4} 𝕜₁ _inst_7) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (E x) (_inst_18 x) (_inst_2 x) (NormedSpace.toModule.{u4, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (_inst_11 x)) (ContinuousLinearMap.{u4, u4, u2, u3} 𝕜₁ 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (E x) (_inst_18 x) (_inst_2 x) (NormedSpace.toModule.{u4, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (_inst_11 x)) (coeBase.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u4, u4, u2, u3} 𝕜₁ 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) (Trivialization.continuousLinearEquivAt._proof_2.{u4} 𝕜₁ _inst_7) (Trivialization.continuousLinearEquivAt._proof_1.{u4} 𝕜₁ _inst_7) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (E x) (_inst_18 x) (_inst_2 x) (NormedSpace.toModule.{u4, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (_inst_11 x)) (ContinuousLinearMap.{u4, u4, u2, u3} 𝕜₁ 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (E x) (_inst_18 x) (_inst_2 x) (NormedSpace.toModule.{u4, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (_inst_11 x)) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u4, u4, u2, u3} 𝕜₁ 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) (Trivialization.continuousLinearEquivAt._proof_2.{u4} 𝕜₁ _inst_7) (Trivialization.continuousLinearEquivAt._proof_1.{u4} 𝕜₁ _inst_7) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (E x) (_inst_18 x) (_inst_2 x) (NormedSpace.toModule.{u4, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (_inst_11 x))))) (ContinuousLinearEquiv.symm.{u4, u4, u3, u2} 𝕜₁ 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) (RingHom.id.{u4} 𝕜₁ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (Ring.toSemiring.{u4} 𝕜₁ (NormedRing.toRing.{u4} 𝕜₁ (NormedCommRing.toNormedRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7))))))) (Trivialization.continuousLinearEquivAt._proof_1.{u4} 𝕜₁ _inst_7) (Trivialization.continuousLinearEquivAt._proof_2.{u4} 𝕜₁ _inst_7) (E x) (_inst_18 x) (_inst_2 x) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) (_inst_11 x) (NormedSpace.toModule.{u4, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u4} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (Trivialization.continuousLinearEquivAt.{u4, u1, u2, u3} 𝕜₁ B F E _inst_7 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_11 x) _inst_4 _inst_10 _inst_6 _inst_12 (fun (x : B) => _inst_18 x) _inst_19 (FiberBundle.trivializationAt.{u1, u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) E _inst_12 (fun (b : B) => _inst_18 b) _inst_19 x₀) (trivialization_linear.{u4, u1, u2, u3} 𝕜₁ B F E _inst_7 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_11 x) _inst_4 _inst_10 _inst_6 _inst_12 (fun (b : B) => _inst_18 b) _inst_19 _inst_20 (FiberBundle.trivializationAt.{u1, u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) E _inst_12 (fun (b : B) => _inst_18 b) _inst_19 x₀) (FiberBundle.trivializationAt.memTrivializationAtlas.{u1, u2, u3} B F _inst_6 (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) E _inst_12 (fun (b : B) => _inst_18 b) _inst_19 x₀)) x hx)))))
but is expected to have type
  forall {B : Type.{u4}} {F : Type.{u3}} (E : B -> Type.{u6}) [_inst_2 : forall (x : B), AddCommMonoid.{u6} (E x)] [_inst_4 : NormedAddCommGroup.{u3} F] [_inst_6 : TopologicalSpace.{u4} B] {𝕜₁ : Type.{u8}} {𝕜₂ : Type.{u7}} [_inst_7 : NontriviallyNormedField.{u8} 𝕜₁] [_inst_8 : NontriviallyNormedField.{u7} 𝕜₂] {σ : RingHom.{u8, u7} 𝕜₁ 𝕜₂ (Semiring.toNonAssocSemiring.{u8} 𝕜₁ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7)))))) (Semiring.toNonAssocSemiring.{u7} 𝕜₂ (DivisionSemiring.toSemiring.{u7} 𝕜₂ (Semifield.toDivisionSemiring.{u7} 𝕜₂ (Field.toSemifield.{u7} 𝕜₂ (NormedField.toField.{u7} 𝕜₂ (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8))))))} {B' : Type.{u2}} [_inst_9 : TopologicalSpace.{u2} B'] [_inst_10 : NormedSpace.{u8, u3} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)] [_inst_11 : forall (x : B), Module.{u8, u6} 𝕜₁ (E x) (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))) (_inst_2 x)] [_inst_12 : TopologicalSpace.{max u6 u4} (Bundle.TotalSpace.{u4, u6} B E)] (F' : Type.{u1}) [_inst_13 : NormedAddCommGroup.{u1} F'] [_inst_14 : NormedSpace.{u7, u1} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13)] (E' : B' -> Type.{u5}) [_inst_15 : forall (x : B'), AddCommMonoid.{u5} (E' x)] [_inst_16 : forall (x : B'), Module.{u7, u5} 𝕜₂ (E' x) (DivisionSemiring.toSemiring.{u7} 𝕜₂ (Semifield.toDivisionSemiring.{u7} 𝕜₂ (Field.toSemifield.{u7} 𝕜₂ (NormedField.toField.{u7} 𝕜₂ (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8))))) (_inst_15 x)] [_inst_17 : TopologicalSpace.{max u5 u2} (Bundle.TotalSpace.{u2, u5} B' E')] [_inst_18 : forall (x : B), TopologicalSpace.{u6} (E x)] [_inst_19 : FiberBundle.{u4, u3, u6} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_12 (fun (b : B) => _inst_18 b)] [_inst_20 : VectorBundle.{u8, u4, u3, u6} 𝕜₁ B F E _inst_7 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_11 x) _inst_4 _inst_10 _inst_6 _inst_12 (fun (x : B) => _inst_18 x) _inst_19] [_inst_21 : forall (x : B'), TopologicalSpace.{u5} (E' x)] [_inst_22 : FiberBundle.{u2, u1, u5} B' F' _inst_9 (UniformSpace.toTopologicalSpace.{u1} F' (PseudoMetricSpace.toUniformSpace.{u1} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13)))) E' _inst_17 (fun (b : B') => _inst_21 b)] [_inst_23 : VectorBundle.{u7, u2, u1, u5} 𝕜₂ B' F' E' _inst_8 (fun (x : B') => _inst_15 x) (fun (x : B') => _inst_16 x) _inst_13 _inst_14 _inst_9 _inst_17 (fun (x : B') => _inst_21 x) _inst_22] (x₀ : B) (x : B) (y₀ : B') (y : B') (ϕ : ContinuousLinearMap.{u8, u7, u6, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))) (DivisionSemiring.toSemiring.{u7} 𝕜₂ (Semifield.toDivisionSemiring.{u7} 𝕜₂ (Field.toSemifield.{u7} 𝕜₂ (NormedField.toField.{u7} 𝕜₂ (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8))))) σ (E x) (_inst_18 x) (_inst_2 x) (E' y) (_inst_21 y) (_inst_15 y) (_inst_11 x) (_inst_16 y)) (hx : Membership.mem.{u4, u4} B (Set.{u4} B) (Set.instMembershipSet.{u4} B) x (Trivialization.baseSet.{u4, u3, max u4 u6} B F (Bundle.TotalSpace.{u4, u6} B E) _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) _inst_12 (Bundle.TotalSpace.proj.{u4, u6} B E) (FiberBundle.trivializationAt.{u4, u3, u6} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_12 (fun (b : B) => _inst_18 b) _inst_19 x₀))) (hy : Membership.mem.{u2, u2} B' (Set.{u2} B') (Set.instMembershipSet.{u2} B') y (Trivialization.baseSet.{u2, u1, max u2 u5} B' F' (Bundle.TotalSpace.{u2, u5} B' E') _inst_9 (UniformSpace.toTopologicalSpace.{u1} F' (PseudoMetricSpace.toUniformSpace.{u1} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13)))) _inst_17 (Bundle.TotalSpace.proj.{u2, u5} B' E') (FiberBundle.trivializationAt.{u2, u1, u5} B' F' _inst_9 (UniformSpace.toTopologicalSpace.{u1} F' (PseudoMetricSpace.toUniformSpace.{u1} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13)))) E' _inst_17 (fun (b : B') => _inst_21 b) _inst_22 y₀))), Eq.{max (succ u3) (succ u1)} (ContinuousLinearMap.{u8, u7, u3, u1} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))) (DivisionSemiring.toSemiring.{u7} 𝕜₂ (Semifield.toDivisionSemiring.{u7} 𝕜₂ (Field.toSemifield.{u7} 𝕜₂ (NormedField.toField.{u7} 𝕜₂ (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8))))) σ F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) F' (UniformSpace.toTopologicalSpace.{u1} F' (PseudoMetricSpace.toUniformSpace.{u1} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u1} F' (NormedAddCommGroup.toAddCommGroup.{u1} F' _inst_13)) (NormedSpace.toModule.{u8, u3} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_10) (NormedSpace.toModule.{u7, u1} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13) _inst_14)) (ContinuousLinearMap.inCoordinates.{u4, u3, u6, u8, u7, u2, u1, u5} B F E (fun (x : B) => _inst_2 x) _inst_4 _inst_6 𝕜₁ 𝕜₂ _inst_7 _inst_8 σ B' _inst_9 _inst_10 (fun (x : B) => _inst_11 x) _inst_12 F' _inst_13 _inst_14 E' (fun (x : B') => _inst_15 x) (fun (y : B') => _inst_16 y) _inst_17 (fun (b : B) => _inst_18 b) _inst_19 _inst_20 (fun (b : B') => _inst_21 b) _inst_22 _inst_23 x₀ x y₀ y ϕ) (ContinuousLinearMap.comp.{u8, u7, u7, u3, u5, u1} 𝕜₁ 𝕜₂ 𝕜₂ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))) (DivisionSemiring.toSemiring.{u7} 𝕜₂ (Semifield.toDivisionSemiring.{u7} 𝕜₂ (Field.toSemifield.{u7} 𝕜₂ (NormedField.toField.{u7} 𝕜₂ (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8))))) (DivisionSemiring.toSemiring.{u7} 𝕜₂ (Semifield.toDivisionSemiring.{u7} 𝕜₂ (Field.toSemifield.{u7} 𝕜₂ (NormedField.toField.{u7} 𝕜₂ (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8))))) σ (RingHom.id.{u7} 𝕜₂ (Semiring.toNonAssocSemiring.{u7} 𝕜₂ (DivisionSemiring.toSemiring.{u7} 𝕜₂ (Semifield.toDivisionSemiring.{u7} 𝕜₂ (Field.toSemifield.{u7} 𝕜₂ (NormedField.toField.{u7} 𝕜₂ (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8))))))) σ F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E' y) (_inst_21 y) (_inst_15 y) F' (UniformSpace.toTopologicalSpace.{u1} F' (PseudoMetricSpace.toUniformSpace.{u1} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u1} F' (NormedAddCommGroup.toAddCommGroup.{u1} F' _inst_13)) (NormedSpace.toModule.{u8, u3} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_10) (_inst_16 y) (NormedSpace.toModule.{u7, u1} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13) _inst_14) (RingHomCompTriple.right_ids.{u8, u7} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))) (DivisionSemiring.toSemiring.{u7} 𝕜₂ (Semifield.toDivisionSemiring.{u7} 𝕜₂ (Field.toSemifield.{u7} 𝕜₂ (NormedField.toField.{u7} 𝕜₂ (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8))))) σ) (ContinuousLinearEquiv.toContinuousLinearMap.{u7, u7, u5, u1} 𝕜₂ 𝕜₂ (DivisionSemiring.toSemiring.{u7} 𝕜₂ (Semifield.toDivisionSemiring.{u7} 𝕜₂ (Field.toSemifield.{u7} 𝕜₂ (NormedField.toField.{u7} 𝕜₂ (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8))))) (DivisionSemiring.toSemiring.{u7} 𝕜₂ (Semifield.toDivisionSemiring.{u7} 𝕜₂ (Field.toSemifield.{u7} 𝕜₂ (NormedField.toField.{u7} 𝕜₂ (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8))))) (RingHom.id.{u7} 𝕜₂ (Semiring.toNonAssocSemiring.{u7} 𝕜₂ (DivisionSemiring.toSemiring.{u7} 𝕜₂ (Semifield.toDivisionSemiring.{u7} 𝕜₂ (Field.toSemifield.{u7} 𝕜₂ (NormedField.toField.{u7} 𝕜₂ (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8))))))) (RingHom.id.{u7} 𝕜₂ (Semiring.toNonAssocSemiring.{u7} 𝕜₂ (DivisionSemiring.toSemiring.{u7} 𝕜₂ (Semifield.toDivisionSemiring.{u7} 𝕜₂ (Field.toSemifield.{u7} 𝕜₂ (NormedField.toField.{u7} 𝕜₂ (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8))))))) (RingHomInvPair.ids.{u7} 𝕜₂ (DivisionSemiring.toSemiring.{u7} 𝕜₂ (Semifield.toDivisionSemiring.{u7} 𝕜₂ (Field.toSemifield.{u7} 𝕜₂ (NormedField.toField.{u7} 𝕜₂ (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8)))))) (RingHomInvPair.ids.{u7} 𝕜₂ (DivisionSemiring.toSemiring.{u7} 𝕜₂ (Semifield.toDivisionSemiring.{u7} 𝕜₂ (Field.toSemifield.{u7} 𝕜₂ (NormedField.toField.{u7} 𝕜₂ (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8)))))) (E' y) (_inst_21 y) (_inst_15 y) F' (UniformSpace.toTopologicalSpace.{u1} F' (PseudoMetricSpace.toUniformSpace.{u1} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u1} F' (NormedAddCommGroup.toAddCommGroup.{u1} F' _inst_13)) (_inst_16 y) (NormedSpace.toModule.{u7, u1} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13) _inst_14) (Trivialization.continuousLinearEquivAt.{u7, u2, u1, u5} 𝕜₂ B' F' E' _inst_8 (fun (x : B') => _inst_15 x) (fun (y : B') => _inst_16 y) _inst_13 _inst_14 _inst_9 _inst_17 (fun (b : B') => _inst_21 b) _inst_22 (FiberBundle.trivializationAt.{u2, u1, u5} B' F' _inst_9 (UniformSpace.toTopologicalSpace.{u1} F' (PseudoMetricSpace.toUniformSpace.{u1} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13)))) E' _inst_17 (fun (b : B') => _inst_21 b) _inst_22 y₀) (trivialization_linear.{u7, u2, u1, u5} 𝕜₂ B' F' E' _inst_8 (fun (x : B') => _inst_15 x) (fun (x : B') => _inst_16 x) _inst_13 _inst_14 _inst_9 _inst_17 (fun (b : B') => _inst_21 b) _inst_22 _inst_23 (FiberBundle.trivializationAt.{u2, u1, u5} B' F' _inst_9 (UniformSpace.toTopologicalSpace.{u1} F' (PseudoMetricSpace.toUniformSpace.{u1} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13)))) E' _inst_17 (fun (b : B') => _inst_21 b) _inst_22 y₀) (instMemTrivializationAtlasTrivializationAt.{u2, u1, u5} B' F' _inst_9 (UniformSpace.toTopologicalSpace.{u1} F' (PseudoMetricSpace.toUniformSpace.{u1} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13)))) E' _inst_17 (fun (b : B') => _inst_21 b) _inst_22 y₀)) y hy)) (ContinuousLinearMap.comp.{u8, u8, u7, u3, u6, u5} 𝕜₁ 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))) (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))) (DivisionSemiring.toSemiring.{u7} 𝕜₂ (Semifield.toDivisionSemiring.{u7} 𝕜₂ (Field.toSemifield.{u7} 𝕜₂ (NormedField.toField.{u7} 𝕜₂ (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8))))) (RingHom.id.{u8} 𝕜₁ (Semiring.toNonAssocSemiring.{u8} 𝕜₁ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))))) σ σ F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E x) (_inst_18 x) (_inst_2 x) (E' y) (_inst_21 y) (_inst_15 y) (NormedSpace.toModule.{u8, u3} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_10) (_inst_11 x) (_inst_16 y) (RingHomCompTriple.ids.{u8, u7} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))) (DivisionSemiring.toSemiring.{u7} 𝕜₂ (Semifield.toDivisionSemiring.{u7} 𝕜₂ (Field.toSemifield.{u7} 𝕜₂ (NormedField.toField.{u7} 𝕜₂ (NontriviallyNormedField.toNormedField.{u7} 𝕜₂ _inst_8))))) σ) ϕ (ContinuousLinearEquiv.toContinuousLinearMap.{u8, u8, u3, u6} 𝕜₁ 𝕜₁ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))) (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))) (RingHom.id.{u8} 𝕜₁ (Semiring.toNonAssocSemiring.{u8} 𝕜₁ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))))) (RingHom.id.{u8} 𝕜₁ (Semiring.toNonAssocSemiring.{u8} 𝕜₁ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))))) (RingHomInvPair.ids.{u8} 𝕜₁ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7)))))) (RingHomInvPair.ids.{u8} 𝕜₁ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7)))))) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (E x) (_inst_18 x) (_inst_2 x) (NormedSpace.toModule.{u8, u3} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_10) (_inst_11 x) (ContinuousLinearEquiv.symm.{u8, u8, u6, u3} 𝕜₁ 𝕜₁ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))) (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))) (RingHom.id.{u8} 𝕜₁ (Semiring.toNonAssocSemiring.{u8} 𝕜₁ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))))) (RingHom.id.{u8} 𝕜₁ (Semiring.toNonAssocSemiring.{u8} 𝕜₁ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7))))))) (RingHomInvPair.ids.{u8} 𝕜₁ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7)))))) (RingHomInvPair.ids.{u8} 𝕜₁ (DivisionSemiring.toSemiring.{u8} 𝕜₁ (Semifield.toDivisionSemiring.{u8} 𝕜₁ (Field.toSemifield.{u8} 𝕜₁ (NormedField.toField.{u8} 𝕜₁ (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7)))))) (E x) (_inst_18 x) (_inst_2 x) F (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u3} F (NormedAddCommGroup.toAddCommGroup.{u3} F _inst_4)) (_inst_11 x) (NormedSpace.toModule.{u8, u3} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u8} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4) _inst_10) (Trivialization.continuousLinearEquivAt.{u8, u4, u3, u6} 𝕜₁ B F E _inst_7 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_11 x) _inst_4 _inst_10 _inst_6 _inst_12 (fun (x : B) => _inst_18 x) _inst_19 (FiberBundle.trivializationAt.{u4, u3, u6} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_12 (fun (b : B) => _inst_18 b) _inst_19 x₀) (trivialization_linear.{u8, u4, u3, u6} 𝕜₁ B F E _inst_7 (fun (x : B) => _inst_2 x) (fun (x : B) => _inst_11 x) _inst_4 _inst_10 _inst_6 _inst_12 (fun (b : B) => _inst_18 b) _inst_19 _inst_20 (FiberBundle.trivializationAt.{u4, u3, u6} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_12 (fun (b : B) => _inst_18 b) _inst_19 x₀) (instMemTrivializationAtlasTrivializationAt.{u4, u3, u6} B F _inst_6 (UniformSpace.toTopologicalSpace.{u3} F (PseudoMetricSpace.toUniformSpace.{u3} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u3} F _inst_4)))) E _inst_12 (fun (b : B) => _inst_18 b) _inst_19 x₀)) x hx)))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.in_coordinates_eq ContinuousLinearMap.inCoordinates_eqₓ'. -/
/-- rewrite `in_coordinates` using continuous linear equivalences. -/
theorem inCoordinates_eq (x₀ x : B) (y₀ y : B') (ϕ : E x →SL[σ] E' y)
    (hx : x ∈ (trivializationAt F E x₀).baseSet) (hy : y ∈ (trivializationAt F' E' y₀).baseSet) :
    inCoordinates F E F' E' x₀ x y₀ y ϕ =
      ((trivializationAt F' E' y₀).continuousLinearEquivAt 𝕜₂ y hy : E' y →L[𝕜₂] F').comp
        (ϕ.comp <|
          (((trivializationAt F E x₀).continuousLinearEquivAt 𝕜₁ x hx).symm : F →L[𝕜₁] E x)) :=
  by
  ext
  simp_rw [in_coordinates, ContinuousLinearMap.coe_comp', ContinuousLinearEquiv.coe_coe,
    Trivialization.coe_continuousLinearEquivAt_eq, Trivialization.symm_continuousLinearEquivAt_eq]
#align continuous_linear_map.in_coordinates_eq ContinuousLinearMap.inCoordinates_eq

/- warning: continuous_linear_map.vector_bundle_core.in_coordinates_eq -> VectorBundleCore.inCoordinates_eq is a dubious translation:
lean 3 declaration is
  forall {B : Type.{u1}} {F : Type.{u2}} [_inst_4 : NormedAddCommGroup.{u2} F] [_inst_6 : TopologicalSpace.{u1} B] {𝕜₁ : Type.{u3}} {𝕜₂ : Type.{u4}} [_inst_7 : NontriviallyNormedField.{u3} 𝕜₁] [_inst_8 : NontriviallyNormedField.{u4} 𝕜₂] {σ : RingHom.{u3, u4} 𝕜₁ 𝕜₂ (NonAssocRing.toNonAssocSemiring.{u3} 𝕜₁ (Ring.toNonAssocRing.{u3} 𝕜₁ (NormedRing.toRing.{u3} 𝕜₁ (NormedCommRing.toNormedRing.{u3} 𝕜₁ (NormedField.toNormedCommRing.{u3} 𝕜₁ (NontriviallyNormedField.toNormedField.{u3} 𝕜₁ _inst_7)))))) (NonAssocRing.toNonAssocSemiring.{u4} 𝕜₂ (Ring.toNonAssocRing.{u4} 𝕜₂ (NormedRing.toRing.{u4} 𝕜₂ (NormedCommRing.toNormedRing.{u4} 𝕜₂ (NormedField.toNormedCommRing.{u4} 𝕜₂ (NontriviallyNormedField.toNormedField.{u4} 𝕜₂ _inst_8))))))} {B' : Type.{u5}} [_inst_9 : TopologicalSpace.{u5} B'] [_inst_10 : NormedSpace.{u3, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u3} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)] {F' : Type.{u6}} [_inst_13 : NormedAddCommGroup.{u6} F'] [_inst_14 : NormedSpace.{u4, u6} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u4} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u6} F' _inst_13)] {ι : Type.{u7}} {ι' : Type.{u8}} (Z : VectorBundleCore.{u3, u1, u2, u7} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι) (Z' : VectorBundleCore.{u4, u5, u6, u8} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι') {x₀ : B} {x : B} {y₀ : B'} {y : B'} (ϕ : ContinuousLinearMap.{u3, u4, u2, u6} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u3} 𝕜₁ (NormedRing.toRing.{u3} 𝕜₁ (NormedCommRing.toNormedRing.{u3} 𝕜₁ (NormedField.toNormedCommRing.{u3} 𝕜₁ (NontriviallyNormedField.toNormedField.{u3} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₂ (NormedRing.toRing.{u4} 𝕜₂ (NormedCommRing.toNormedRing.{u4} 𝕜₂ (NormedField.toNormedCommRing.{u4} 𝕜₂ (NontriviallyNormedField.toNormedField.{u4} 𝕜₂ _inst_8))))) σ F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F' (UniformSpace.toTopologicalSpace.{u6} F' (PseudoMetricSpace.toUniformSpace.{u6} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u6} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u6} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u6} F' (NormedAddCommGroup.toAddCommGroup.{u6} F' _inst_13)) (NormedSpace.toModule.{u3, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u3} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (NormedSpace.toModule.{u4, u6} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u4} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u6} F' _inst_13) _inst_14)), (Membership.Mem.{u1, u1} B (Set.{u1} B) (Set.hasMem.{u1} B) x (VectorBundleCore.baseSet.{u3, u1, u2, u7} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z (VectorBundleCore.indexAt.{u3, u1, u2, u7} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z x₀))) -> (Membership.Mem.{u5, u5} B' (Set.{u5} B') (Set.hasMem.{u5} B') y (VectorBundleCore.baseSet.{u4, u5, u6, u8} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z' (VectorBundleCore.indexAt.{u4, u5, u6, u8} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z' y₀))) -> (Eq.{max (succ u2) (succ u6)} (ContinuousLinearMap.{u3, u4, u2, u6} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u3} 𝕜₁ (NormedRing.toRing.{u3} 𝕜₁ (NormedCommRing.toNormedRing.{u3} 𝕜₁ (NormedField.toNormedCommRing.{u3} 𝕜₁ (NontriviallyNormedField.toNormedField.{u3} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₂ (NormedRing.toRing.{u4} 𝕜₂ (NormedCommRing.toNormedRing.{u4} 𝕜₂ (NormedField.toNormedCommRing.{u4} 𝕜₂ (NontriviallyNormedField.toNormedField.{u4} 𝕜₂ _inst_8))))) σ F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F' (UniformSpace.toTopologicalSpace.{u6} F' (PseudoMetricSpace.toUniformSpace.{u6} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u6} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u6} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u6} F' (NormedAddCommGroup.toAddCommGroup.{u6} F' _inst_13)) (NormedSpace.toModule.{u3, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u3} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (NormedSpace.toModule.{u4, u6} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u4} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u6} F' _inst_13) _inst_14)) (ContinuousLinearMap.inCoordinates.{u1, u2, u2, u3, u4, u5, u6, u6} B F (VectorBundleCore.Fiber.{u3, u1, u2, u7} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z) (fun (x : B) => VectorBundleCore.addCommMonoidFiber.{u3, u1, u2, u7} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z x) _inst_4 _inst_6 𝕜₁ 𝕜₂ _inst_7 _inst_8 σ B' _inst_9 _inst_10 (fun {x : B} => NormedSpace.toModule.{u3, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u3} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (VectorBundleCore.toTopologicalSpace.{u3, u1, u2, u7} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z) F' _inst_13 _inst_14 (VectorBundleCore.Fiber.{u4, u5, u6, u8} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z') (fun (x : B') => VectorBundleCore.addCommMonoidFiber.{u4, u5, u6, u8} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z' x) (fun {y : B'} => NormedSpace.toModule.{u4, u6} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u4} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u6} F' _inst_13) _inst_14) (VectorBundleCore.toTopologicalSpace.{u4, u5, u6, u8} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z') (fun (x : B) => VectorBundleCore.topologicalSpaceFiber.{u3, u1, u2, u7} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z x) (VectorBundleCore.fiberBundle.{u3, u1, u2, u7} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z) (VectorBundleCore.vectorBundle.{u3, u1, u2, u7} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z) (fun (x : B') => VectorBundleCore.topologicalSpaceFiber.{u4, u5, u6, u8} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z' x) (VectorBundleCore.fiberBundle.{u4, u5, u6, u8} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z') (VectorBundleCore.vectorBundle.{u4, u5, u6, u8} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z') x₀ x y₀ y ϕ) (ContinuousLinearMap.comp.{u3, u4, u4, u2, u6, u6} 𝕜₁ 𝕜₂ 𝕜₂ (Ring.toSemiring.{u3} 𝕜₁ (NormedRing.toRing.{u3} 𝕜₁ (NormedCommRing.toNormedRing.{u3} 𝕜₁ (NormedField.toNormedCommRing.{u3} 𝕜₁ (NontriviallyNormedField.toNormedField.{u3} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₂ (NormedRing.toRing.{u4} 𝕜₂ (NormedCommRing.toNormedRing.{u4} 𝕜₂ (NormedField.toNormedCommRing.{u4} 𝕜₂ (NontriviallyNormedField.toNormedField.{u4} 𝕜₂ _inst_8))))) (Ring.toSemiring.{u4} 𝕜₂ (NormedRing.toRing.{u4} 𝕜₂ (NormedCommRing.toNormedRing.{u4} 𝕜₂ (NormedField.toNormedCommRing.{u4} 𝕜₂ (NontriviallyNormedField.toNormedField.{u4} 𝕜₂ _inst_8))))) σ (RingHom.id.{u4} 𝕜₂ (Semiring.toNonAssocSemiring.{u4} 𝕜₂ (Ring.toSemiring.{u4} 𝕜₂ (NormedRing.toRing.{u4} 𝕜₂ (NormedCommRing.toNormedRing.{u4} 𝕜₂ (NormedField.toNormedCommRing.{u4} 𝕜₂ (NontriviallyNormedField.toNormedField.{u4} 𝕜₂ _inst_8))))))) σ F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F' (UniformSpace.toTopologicalSpace.{u6} F' (PseudoMetricSpace.toUniformSpace.{u6} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u6} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u6} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u6} F' (NormedAddCommGroup.toAddCommGroup.{u6} F' _inst_13)) F' (UniformSpace.toTopologicalSpace.{u6} F' (PseudoMetricSpace.toUniformSpace.{u6} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u6} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u6} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u6} F' (NormedAddCommGroup.toAddCommGroup.{u6} F' _inst_13)) (NormedSpace.toModule.{u3, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u3} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (NormedSpace.toModule.{u4, u6} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u4} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u6} F' _inst_13) _inst_14) (NormedSpace.toModule.{u4, u6} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u4} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u6} F' _inst_13) _inst_14) (RingHomCompTriple.right_ids.{u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u3} 𝕜₁ (NormedRing.toRing.{u3} 𝕜₁ (NormedCommRing.toNormedRing.{u3} 𝕜₁ (NormedField.toNormedCommRing.{u3} 𝕜₁ (NontriviallyNormedField.toNormedField.{u3} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₂ (NormedRing.toRing.{u4} 𝕜₂ (NormedCommRing.toNormedRing.{u4} 𝕜₂ (NormedField.toNormedCommRing.{u4} 𝕜₂ (NontriviallyNormedField.toNormedField.{u4} 𝕜₂ _inst_8))))) σ) (VectorBundleCore.coordChange.{u4, u5, u6, u8} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z' (VectorBundleCore.indexAt.{u4, u5, u6, u8} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z' y) (VectorBundleCore.indexAt.{u4, u5, u6, u8} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z' y₀) y) (ContinuousLinearMap.comp.{u3, u3, u4, u2, u2, u6} 𝕜₁ 𝕜₁ 𝕜₂ (Ring.toSemiring.{u3} 𝕜₁ (NormedRing.toRing.{u3} 𝕜₁ (NormedCommRing.toNormedRing.{u3} 𝕜₁ (NormedField.toNormedCommRing.{u3} 𝕜₁ (NontriviallyNormedField.toNormedField.{u3} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u3} 𝕜₁ (NormedRing.toRing.{u3} 𝕜₁ (NormedCommRing.toNormedRing.{u3} 𝕜₁ (NormedField.toNormedCommRing.{u3} 𝕜₁ (NontriviallyNormedField.toNormedField.{u3} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₂ (NormedRing.toRing.{u4} 𝕜₂ (NormedCommRing.toNormedRing.{u4} 𝕜₂ (NormedField.toNormedCommRing.{u4} 𝕜₂ (NontriviallyNormedField.toNormedField.{u4} 𝕜₂ _inst_8))))) (RingHom.id.{u3} 𝕜₁ (Semiring.toNonAssocSemiring.{u3} 𝕜₁ (Ring.toSemiring.{u3} 𝕜₁ (NormedRing.toRing.{u3} 𝕜₁ (NormedCommRing.toNormedRing.{u3} 𝕜₁ (NormedField.toNormedCommRing.{u3} 𝕜₁ (NontriviallyNormedField.toNormedField.{u3} 𝕜₁ _inst_7))))))) σ σ F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u2} F (PseudoMetricSpace.toUniformSpace.{u2} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u2} F (NormedAddCommGroup.toAddCommGroup.{u2} F _inst_4)) F' (UniformSpace.toTopologicalSpace.{u6} F' (PseudoMetricSpace.toUniformSpace.{u6} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u6} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u6} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u6} F' (NormedAddCommGroup.toAddCommGroup.{u6} F' _inst_13)) (NormedSpace.toModule.{u3, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u3} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (NormedSpace.toModule.{u3, u2} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u3} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} F _inst_4) _inst_10) (NormedSpace.toModule.{u4, u6} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u4} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u6} F' _inst_13) _inst_14) (RingHomCompTriple.ids.{u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u3} 𝕜₁ (NormedRing.toRing.{u3} 𝕜₁ (NormedCommRing.toNormedRing.{u3} 𝕜₁ (NormedField.toNormedCommRing.{u3} 𝕜₁ (NontriviallyNormedField.toNormedField.{u3} 𝕜₁ _inst_7))))) (Ring.toSemiring.{u4} 𝕜₂ (NormedRing.toRing.{u4} 𝕜₂ (NormedCommRing.toNormedRing.{u4} 𝕜₂ (NormedField.toNormedCommRing.{u4} 𝕜₂ (NontriviallyNormedField.toNormedField.{u4} 𝕜₂ _inst_8))))) σ) ϕ (VectorBundleCore.coordChange.{u3, u1, u2, u7} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z (VectorBundleCore.indexAt.{u3, u1, u2, u7} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z x₀) (VectorBundleCore.indexAt.{u3, u1, u2, u7} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z x) x))))
but is expected to have type
  forall {B : Type.{u5}} {F : Type.{u4}} [_inst_4 : NormedAddCommGroup.{u4} F] [_inst_6 : TopologicalSpace.{u5} B] {𝕜₁ : Type.{u6}} {𝕜₂ : Type.{u3}} [_inst_7 : NontriviallyNormedField.{u6} 𝕜₁] [_inst_8 : NontriviallyNormedField.{u3} 𝕜₂] {σ : RingHom.{u6, u3} 𝕜₁ 𝕜₂ (Semiring.toNonAssocSemiring.{u6} 𝕜₁ (DivisionSemiring.toSemiring.{u6} 𝕜₁ (Semifield.toDivisionSemiring.{u6} 𝕜₁ (Field.toSemifield.{u6} 𝕜₁ (NormedField.toField.{u6} 𝕜₁ (NontriviallyNormedField.toNormedField.{u6} 𝕜₁ _inst_7)))))) (Semiring.toNonAssocSemiring.{u3} 𝕜₂ (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ (NontriviallyNormedField.toNormedField.{u3} 𝕜₂ _inst_8))))))} {B' : Type.{u2}} [_inst_9 : TopologicalSpace.{u2} B'] [_inst_10 : NormedSpace.{u6, u4} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u6} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)] (F' : Type.{u1}) [_inst_13 : NormedAddCommGroup.{u1} F'] [_inst_14 : NormedSpace.{u3, u1} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u3} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13)] {ι : Type.{u8}} {ι' : Type.{u7}} (Z : VectorBundleCore.{u6, u5, u4, u8} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι) (Z' : VectorBundleCore.{u3, u2, u1, u7} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι') {x₀ : B} {x : B} {y₀ : B'} {y : B'} (ϕ : ContinuousLinearMap.{u6, u3, u4, u1} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u6} 𝕜₁ (Semifield.toDivisionSemiring.{u6} 𝕜₁ (Field.toSemifield.{u6} 𝕜₁ (NormedField.toField.{u6} 𝕜₁ (NontriviallyNormedField.toNormedField.{u6} 𝕜₁ _inst_7))))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ (NontriviallyNormedField.toNormedField.{u3} 𝕜₂ _inst_8))))) σ F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u4} F (NormedAddCommGroup.toAddCommGroup.{u4} F _inst_4)) F' (UniformSpace.toTopologicalSpace.{u1} F' (PseudoMetricSpace.toUniformSpace.{u1} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u1} F' (NormedAddCommGroup.toAddCommGroup.{u1} F' _inst_13)) (NormedSpace.toModule.{u6, u4} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u6} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4) _inst_10) (NormedSpace.toModule.{u3, u1} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u3} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13) _inst_14)), (Membership.mem.{u5, u5} B (Set.{u5} B) (Set.instMembershipSet.{u5} B) x (VectorBundleCore.baseSet.{u6, u5, u4, u8} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z (VectorBundleCore.indexAt.{u6, u5, u4, u8} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z x₀))) -> (Membership.mem.{u2, u2} B' (Set.{u2} B') (Set.instMembershipSet.{u2} B') y (VectorBundleCore.baseSet.{u3, u2, u1, u7} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z' (VectorBundleCore.indexAt.{u3, u2, u1, u7} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z' y₀))) -> (Eq.{max (succ u4) (succ u1)} (ContinuousLinearMap.{u6, u3, u4, u1} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u6} 𝕜₁ (Semifield.toDivisionSemiring.{u6} 𝕜₁ (Field.toSemifield.{u6} 𝕜₁ (NormedField.toField.{u6} 𝕜₁ (NontriviallyNormedField.toNormedField.{u6} 𝕜₁ _inst_7))))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ (NontriviallyNormedField.toNormedField.{u3} 𝕜₂ _inst_8))))) σ F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u4} F (NormedAddCommGroup.toAddCommGroup.{u4} F _inst_4)) F' (UniformSpace.toTopologicalSpace.{u1} F' (PseudoMetricSpace.toUniformSpace.{u1} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u1} F' (NormedAddCommGroup.toAddCommGroup.{u1} F' _inst_13)) (NormedSpace.toModule.{u6, u4} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u6} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4) _inst_10) (NormedSpace.toModule.{u3, u1} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u3} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13) _inst_14)) (ContinuousLinearMap.inCoordinates.{u5, u4, u4, u6, u3, u2, u1, u1} B F (VectorBundleCore.Fiber.{u6, u5, u4, u8} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z) (fun (x : B) => AddCommGroup.toAddCommMonoid.{u4} (VectorBundleCore.Fiber.{u6, u5, u4, u8} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z x) (VectorBundleCore.addCommGroupFiber.{u6, u5, u4, u8} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z x)) _inst_4 _inst_6 𝕜₁ 𝕜₂ _inst_7 _inst_8 σ B' _inst_9 _inst_10 (fun (x : B) => VectorBundleCore.moduleFiber.{u6, u5, u4, u8} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z x) (VectorBundleCore.toTopologicalSpace.{u6, u5, u4, u8} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z) F' _inst_13 _inst_14 (VectorBundleCore.Fiber.{u3, u2, u1, u7} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z') (fun (x : B') => AddCommGroup.toAddCommMonoid.{u1} (VectorBundleCore.Fiber.{u3, u2, u1, u7} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z' x) (VectorBundleCore.addCommGroupFiber.{u3, u2, u1, u7} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z' x)) (fun (y : B') => VectorBundleCore.moduleFiber.{u3, u2, u1, u7} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z' y) (VectorBundleCore.toTopologicalSpace.{u3, u2, u1, u7} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z') (fun (x : B) => VectorBundleCore.topologicalSpaceFiber.{u6, u5, u4, u8} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z x) (VectorBundleCore.fiberBundle.{u6, u5, u4, u8} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z) (VectorBundleCore.vectorBundle.{u6, u5, u4, u8} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z) (fun (x : B') => VectorBundleCore.topologicalSpaceFiber.{u3, u2, u1, u7} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z' x) (VectorBundleCore.fiberBundle.{u3, u2, u1, u7} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z') (VectorBundleCore.vectorBundle.{u3, u2, u1, u7} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z') x₀ x y₀ y ϕ) (ContinuousLinearMap.comp.{u6, u3, u3, u4, u1, u1} 𝕜₁ 𝕜₂ 𝕜₂ (DivisionSemiring.toSemiring.{u6} 𝕜₁ (Semifield.toDivisionSemiring.{u6} 𝕜₁ (Field.toSemifield.{u6} 𝕜₁ (NormedField.toField.{u6} 𝕜₁ (NontriviallyNormedField.toNormedField.{u6} 𝕜₁ _inst_7))))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ (NontriviallyNormedField.toNormedField.{u3} 𝕜₂ _inst_8))))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ (NontriviallyNormedField.toNormedField.{u3} 𝕜₂ _inst_8))))) σ (RingHom.id.{u3} 𝕜₂ (Semiring.toNonAssocSemiring.{u3} 𝕜₂ (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ (NontriviallyNormedField.toNormedField.{u3} 𝕜₂ _inst_8))))))) σ F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u4} F (NormedAddCommGroup.toAddCommGroup.{u4} F _inst_4)) F' (UniformSpace.toTopologicalSpace.{u1} F' (PseudoMetricSpace.toUniformSpace.{u1} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u1} F' (NormedAddCommGroup.toAddCommGroup.{u1} F' _inst_13)) F' (UniformSpace.toTopologicalSpace.{u1} F' (PseudoMetricSpace.toUniformSpace.{u1} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u1} F' (NormedAddCommGroup.toAddCommGroup.{u1} F' _inst_13)) (NormedSpace.toModule.{u6, u4} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u6} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4) _inst_10) (NormedSpace.toModule.{u3, u1} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u3} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13) _inst_14) (NormedSpace.toModule.{u3, u1} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u3} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13) _inst_14) (RingHomCompTriple.right_ids.{u6, u3} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u6} 𝕜₁ (Semifield.toDivisionSemiring.{u6} 𝕜₁ (Field.toSemifield.{u6} 𝕜₁ (NormedField.toField.{u6} 𝕜₁ (NontriviallyNormedField.toNormedField.{u6} 𝕜₁ _inst_7))))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ (NontriviallyNormedField.toNormedField.{u3} 𝕜₂ _inst_8))))) σ) (VectorBundleCore.coordChange.{u3, u2, u1, u7} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z' (VectorBundleCore.indexAt.{u3, u2, u1, u7} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z' y) (VectorBundleCore.indexAt.{u3, u2, u1, u7} 𝕜₂ B' F' _inst_8 _inst_13 _inst_14 _inst_9 ι' Z' y₀) y) (ContinuousLinearMap.comp.{u6, u6, u3, u4, u4, u1} 𝕜₁ 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u6} 𝕜₁ (Semifield.toDivisionSemiring.{u6} 𝕜₁ (Field.toSemifield.{u6} 𝕜₁ (NormedField.toField.{u6} 𝕜₁ (NontriviallyNormedField.toNormedField.{u6} 𝕜₁ _inst_7))))) (DivisionSemiring.toSemiring.{u6} 𝕜₁ (Semifield.toDivisionSemiring.{u6} 𝕜₁ (Field.toSemifield.{u6} 𝕜₁ (NormedField.toField.{u6} 𝕜₁ (NontriviallyNormedField.toNormedField.{u6} 𝕜₁ _inst_7))))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ (NontriviallyNormedField.toNormedField.{u3} 𝕜₂ _inst_8))))) (RingHom.id.{u6} 𝕜₁ (Semiring.toNonAssocSemiring.{u6} 𝕜₁ (DivisionSemiring.toSemiring.{u6} 𝕜₁ (Semifield.toDivisionSemiring.{u6} 𝕜₁ (Field.toSemifield.{u6} 𝕜₁ (NormedField.toField.{u6} 𝕜₁ (NontriviallyNormedField.toNormedField.{u6} 𝕜₁ _inst_7))))))) σ σ F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u4} F (NormedAddCommGroup.toAddCommGroup.{u4} F _inst_4)) F (UniformSpace.toTopologicalSpace.{u4} F (PseudoMetricSpace.toUniformSpace.{u4} F (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} F (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4)))) (AddCommGroup.toAddCommMonoid.{u4} F (NormedAddCommGroup.toAddCommGroup.{u4} F _inst_4)) F' (UniformSpace.toTopologicalSpace.{u1} F' (PseudoMetricSpace.toUniformSpace.{u1} F' (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} F' (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13)))) (AddCommGroup.toAddCommMonoid.{u1} F' (NormedAddCommGroup.toAddCommGroup.{u1} F' _inst_13)) (NormedSpace.toModule.{u6, u4} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u6} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4) _inst_10) (NormedSpace.toModule.{u6, u4} 𝕜₁ F (NontriviallyNormedField.toNormedField.{u6} 𝕜₁ _inst_7) (NormedAddCommGroup.toSeminormedAddCommGroup.{u4} F _inst_4) _inst_10) (NormedSpace.toModule.{u3, u1} 𝕜₂ F' (NontriviallyNormedField.toNormedField.{u3} 𝕜₂ _inst_8) (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} F' _inst_13) _inst_14) (RingHomCompTriple.ids.{u6, u3} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u6} 𝕜₁ (Semifield.toDivisionSemiring.{u6} 𝕜₁ (Field.toSemifield.{u6} 𝕜₁ (NormedField.toField.{u6} 𝕜₁ (NontriviallyNormedField.toNormedField.{u6} 𝕜₁ _inst_7))))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ (NontriviallyNormedField.toNormedField.{u3} 𝕜₂ _inst_8))))) σ) ϕ (VectorBundleCore.coordChange.{u6, u5, u4, u8} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z (VectorBundleCore.indexAt.{u6, u5, u4, u8} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z x₀) (VectorBundleCore.indexAt.{u6, u5, u4, u8} 𝕜₁ B F _inst_7 _inst_4 _inst_10 _inst_6 ι Z x) x))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.vector_bundle_core.in_coordinates_eq VectorBundleCore.inCoordinates_eqₓ'. -/
/-- rewrite `in_coordinates` in a `vector_bundle_core`. -/
protected theorem VectorBundleCore.inCoordinates_eq {ι ι'} (Z : VectorBundleCore 𝕜₁ B F ι)
    (Z' : VectorBundleCore 𝕜₂ B' F' ι') {x₀ x : B} {y₀ y : B'} (ϕ : F →SL[σ] F')
    (hx : x ∈ Z.baseSet (Z.indexAt x₀)) (hy : y ∈ Z'.baseSet (Z'.indexAt y₀)) :
    inCoordinates F Z.Fiber F' Z'.Fiber x₀ x y₀ y ϕ =
      (Z'.coordChange (Z'.indexAt y) (Z'.indexAt y₀) y).comp
        (ϕ.comp <| Z.coordChange (Z.indexAt x₀) (Z.indexAt x) x) :=
  by
  simp_rw [in_coordinates, Z'.trivialization_at_continuous_linear_map_at hy,
    Z.trivialization_at_symmL hx]
#align continuous_linear_map.vector_bundle_core.in_coordinates_eq VectorBundleCore.inCoordinates_eq

end ContinuousLinearMap

end

