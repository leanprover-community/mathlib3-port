/-
Copyright (c) 2022 Anatole Dedecker. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Anatole Dedecker

! This file was ported from Lean 3 source module topology.algebra.module.strong_topology
! leanprover-community/mathlib commit f2b757fc5c341d88741b9c4630b1e8ba973c5726
! Please do not edit these lines, except to modify the commit id
! if you have ported upstream changes.
-/
import Mathbin.Topology.Algebra.UniformConvergence

/-!
# Strong topologies on the space of continuous linear maps

> THIS FILE IS SYNCHRONIZED WITH MATHLIB4.
> Any changes to this file require a corresponding PR to mathlib4.

In this file, we define the strong topologies on `E →L[𝕜] F` associated with a family
`𝔖 : set (set E)` to be the topology of uniform convergence on the elements of `𝔖` (also called
the topology of `𝔖`-convergence).

The lemma `uniform_on_fun.has_continuous_smul_of_image_bounded` tells us that this is a
vector space topology if the continuous linear image of any element of `𝔖` is bounded (in the sense
of `bornology.is_vonN_bounded`).

We then declare an instance for the case where `𝔖` is exactly the set of all bounded subsets of
`E`, giving us the so-called "topology of uniform convergence on bounded sets" (or "topology of
bounded convergence"), which coincides with the operator norm topology in the case of
`normed_space`s.

Other useful examples include the weak-* topology (when `𝔖` is the set of finite sets or the set
of singletons) and the topology of compact convergence (when `𝔖` is the set of relatively compact
sets).

## Main definitions

* `continuous_linear_map.strong_topology` is the topology mentioned above for an arbitrary `𝔖`.
* `continuous_linear_map.topological_space` is the topology of bounded convergence. This is
  declared as an instance.

## Main statements

* `continuous_linear_map.strong_topology.topological_add_group` and
  `continuous_linear_map.strong_topology.has_continuous_smul` show that the strong topology
  makes `E →L[𝕜] F` a topological vector space, with the assumptions on `𝔖` mentioned above.
* `continuous_linear_map.topological_add_group` and
  `continuous_linear_map.has_continuous_smul` register these facts as instances for the special
  case of bounded convergence.

## References

* [N. Bourbaki, *Topological Vector Spaces*][bourbaki1987]

## TODO

* add a type alias for continuous linear maps with the topology of `𝔖`-convergence?

## Tags

uniform convergence, bounded convergence
-/


open Topology UniformConvergence

namespace ContinuousLinearMap

section General

variable {𝕜₁ 𝕜₂ : Type _} [NormedField 𝕜₁] [NormedField 𝕜₂] (σ : 𝕜₁ →+* 𝕜₂) {E E' F F' : Type _}
  [AddCommGroup E] [Module 𝕜₁ E] [AddCommGroup E'] [Module ℝ E'] [AddCommGroup F] [Module 𝕜₂ F]
  [AddCommGroup F'] [Module ℝ F'] [TopologicalSpace E] [TopologicalSpace E'] (F)

#print ContinuousLinearMap.strongTopology /-
/-- Given `E` and `F` two topological vector spaces and `𝔖 : set (set E)`, then
`strong_topology σ F 𝔖` is the "topology of uniform convergence on the elements of `𝔖`" on
`E →L[𝕜] F`.

If the continuous linear image of any element of `𝔖` is bounded, this makes `E →L[𝕜] F` a
topological vector space. -/
def strongTopology [TopologicalSpace F] [TopologicalAddGroup F] (𝔖 : Set (Set E)) :
    TopologicalSpace (E →SL[σ] F) :=
  (@UniformOnFun.topologicalSpace E F (TopologicalAddGroup.toUniformSpace F) 𝔖).induced coeFn
#align continuous_linear_map.strong_topology ContinuousLinearMap.strongTopology
-/

#print ContinuousLinearMap.strongUniformity /-
/-- The uniform structure associated with `continuous_linear_map.strong_topology`. We make sure
that this has nice definitional properties. -/
def strongUniformity [UniformSpace F] [UniformAddGroup F] (𝔖 : Set (Set E)) :
    UniformSpace (E →SL[σ] F) :=
  @UniformSpace.replaceTopology _ (strongTopology σ F 𝔖)
    ((UniformOnFun.uniformSpace E F 𝔖).comap coeFn)
    (by rw [strong_topology, UniformAddGroup.toUniformSpace_eq] <;> rfl)
#align continuous_linear_map.strong_uniformity ContinuousLinearMap.strongUniformity
-/

/- warning: continuous_linear_map.strong_uniformity_topology_eq -> ContinuousLinearMap.strongUniformity_topology_eq is a dubious translation:
lean 3 declaration is
  forall {𝕜₁ : Type.{u1}} {𝕜₂ : Type.{u2}} [_inst_1 : NormedField.{u1} 𝕜₁] [_inst_2 : NormedField.{u2} 𝕜₂] (σ : RingHom.{u1, u2} 𝕜₁ 𝕜₂ (NonAssocRing.toNonAssocSemiring.{u1} 𝕜₁ (Ring.toNonAssocRing.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))))) (NonAssocRing.toNonAssocSemiring.{u2} 𝕜₂ (Ring.toNonAssocRing.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u4}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u1, u3} 𝕜₁ E (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u2, u4} 𝕜₂ F (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : UniformSpace.{u4} F] [_inst_14 : UniformAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7)] (𝔖 : Set.{u3} (Set.{u3} E)), Eq.{succ (max u3 u4)} (TopologicalSpace.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8)) (UniformSpace.toTopologicalSpace.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.strongUniformity.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_13 _inst_14 𝔖)) (ContinuousLinearMap.strongTopology.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (UniformAddGroup.to_topologicalAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7) _inst_14) 𝔖)
but is expected to have type
  forall {𝕜₁ : Type.{u2}} {𝕜₂ : Type.{u1}} [_inst_1 : NormedField.{u2} 𝕜₁] [_inst_2 : NormedField.{u1} 𝕜₂] (σ : RingHom.{u2, u1} 𝕜₁ 𝕜₂ (Semiring.toNonAssocSemiring.{u2} 𝕜₁ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1))))) (Semiring.toNonAssocSemiring.{u1} 𝕜₂ (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u4}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u2, u3} 𝕜₁ E (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u1, u4} 𝕜₂ F (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : UniformSpace.{u4} F] [_inst_14 : UniformAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7)] (𝔖 : Set.{u3} (Set.{u3} E)), Eq.{max (succ u3) (succ u4)} (TopologicalSpace.{max u3 u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8)) (UniformSpace.toTopologicalSpace.{max u3 u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.strongUniformity.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_13 _inst_14 𝔖)) (ContinuousLinearMap.strongTopology.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (UniformAddGroup.to_topologicalAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7) _inst_14) 𝔖)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.strong_uniformity_topology_eq ContinuousLinearMap.strongUniformity_topology_eqₓ'. -/
@[simp]
theorem strongUniformity_topology_eq [UniformSpace F] [UniformAddGroup F] (𝔖 : Set (Set E)) :
    (strongUniformity σ F 𝔖).toTopologicalSpace = strongTopology σ F 𝔖 :=
  rfl
#align continuous_linear_map.strong_uniformity_topology_eq ContinuousLinearMap.strongUniformity_topology_eq

/- warning: continuous_linear_map.strong_uniformity.uniform_embedding_coe_fn -> ContinuousLinearMap.strongUniformity.uniformEmbedding_coeFn is a dubious translation:
lean 3 declaration is
  forall {𝕜₁ : Type.{u1}} {𝕜₂ : Type.{u2}} [_inst_1 : NormedField.{u1} 𝕜₁] [_inst_2 : NormedField.{u2} 𝕜₂] (σ : RingHom.{u1, u2} 𝕜₁ 𝕜₂ (NonAssocRing.toNonAssocSemiring.{u1} 𝕜₁ (Ring.toNonAssocRing.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))))) (NonAssocRing.toNonAssocSemiring.{u2} 𝕜₂ (Ring.toNonAssocRing.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u4}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u1, u3} 𝕜₁ E (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u2, u4} 𝕜₂ F (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : UniformSpace.{u4} F] [_inst_14 : UniformAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7)] (𝔖 : Set.{u3} (Set.{u3} E)), UniformEmbedding.{max u3 u4, max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (UniformOnFun.{u3, u4} E F 𝔖) (ContinuousLinearMap.strongUniformity.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_13 _inst_14 𝔖) (UniformOnFun.uniformSpace.{u3, u4} E F _inst_13 𝔖) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (fun (ᾰ : ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) => UniformOnFun.{u3, u4} E F 𝔖) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8))
but is expected to have type
  forall {𝕜₁ : Type.{u2}} {𝕜₂ : Type.{u1}} [_inst_1 : NormedField.{u2} 𝕜₁] [_inst_2 : NormedField.{u1} 𝕜₂] (σ : RingHom.{u2, u1} 𝕜₁ 𝕜₂ (Semiring.toNonAssocSemiring.{u2} 𝕜₁ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1))))) (Semiring.toNonAssocSemiring.{u1} 𝕜₂ (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u4}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u2, u3} 𝕜₁ E (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u1, u4} 𝕜₂ F (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : UniformSpace.{u4} F] [_inst_14 : UniformAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7)] (𝔖 : Set.{u3} (Set.{u3} E)), UniformEmbedding.{max u4 u3, max u4 u3} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (UniformOnFun.{u3, u4} E F 𝔖) (ContinuousLinearMap.strongUniformity.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_13 _inst_14 𝔖) (UniformOnFun.uniformSpace.{u3, u4} E F _inst_13 𝔖) (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) E (fun (ᾰ : E) => F) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) E F _inst_11 (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u2, u1, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.strong_uniformity.uniform_embedding_coe_fn ContinuousLinearMap.strongUniformity.uniformEmbedding_coeFnₓ'. -/
theorem strongUniformity.uniformEmbedding_coeFn [UniformSpace F] [UniformAddGroup F]
    (𝔖 : Set (Set E)) :
    @UniformEmbedding (E →SL[σ] F) (E →ᵤ[𝔖] F) (strongUniformity σ F 𝔖)
      (UniformOnFun.uniformSpace E F 𝔖) coeFn :=
  letI : UniformSpace (E →SL[σ] F) := strong_uniformity σ F 𝔖
  ⟨⟨rfl⟩, FunLike.coe_injective⟩
#align continuous_linear_map.strong_uniformity.uniform_embedding_coe_fn ContinuousLinearMap.strongUniformity.uniformEmbedding_coeFn

/- warning: continuous_linear_map.strong_topology.embedding_coe_fn -> ContinuousLinearMap.strongTopology.embedding_coeFn is a dubious translation:
lean 3 declaration is
  forall {𝕜₁ : Type.{u1}} {𝕜₂ : Type.{u2}} [_inst_1 : NormedField.{u1} 𝕜₁] [_inst_2 : NormedField.{u2} 𝕜₂] (σ : RingHom.{u1, u2} 𝕜₁ 𝕜₂ (NonAssocRing.toNonAssocSemiring.{u1} 𝕜₁ (Ring.toNonAssocRing.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))))) (NonAssocRing.toNonAssocSemiring.{u2} 𝕜₂ (Ring.toNonAssocRing.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u4}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u1, u3} 𝕜₁ E (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u2, u4} 𝕜₂ F (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : UniformSpace.{u4} F] [_inst_14 : UniformAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7)] (𝔖 : Set.{u3} (Set.{u3} E)), Embedding.{max u3 u4, max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (UniformOnFun.{u3, u4} E F 𝔖) (ContinuousLinearMap.strongTopology.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (UniformAddGroup.to_topologicalAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7) _inst_14) 𝔖) (UniformOnFun.topologicalSpace.{u3, u4} E F _inst_13 𝔖) (Function.comp.{max (succ u3) (succ u4), max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (E -> F) (UniformOnFun.{u3, u4} E F 𝔖) (coeFn.{max 1 (succ u3) (succ u4), max (succ u3) (succ u4)} (Equiv.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (E -> F) (UniformOnFun.{u3, u4} E F 𝔖)) (fun (_x : Equiv.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (E -> F) (UniformOnFun.{u3, u4} E F 𝔖)) => (E -> F) -> (UniformOnFun.{u3, u4} E F 𝔖)) (Equiv.hasCoeToFun.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (E -> F) (UniformOnFun.{u3, u4} E F 𝔖)) (UniformOnFun.ofFun.{u3, u4} E F 𝔖)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (fun (ᾰ : ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) => E -> F) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8)))
but is expected to have type
  forall {𝕜₁ : Type.{u2}} {𝕜₂ : Type.{u1}} [_inst_1 : NormedField.{u2} 𝕜₁] [_inst_2 : NormedField.{u1} 𝕜₂] (σ : RingHom.{u2, u1} 𝕜₁ 𝕜₂ (Semiring.toNonAssocSemiring.{u2} 𝕜₁ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1))))) (Semiring.toNonAssocSemiring.{u1} 𝕜₂ (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u4}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u2, u3} 𝕜₁ E (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u1, u4} 𝕜₂ F (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : UniformSpace.{u4} F] [_inst_14 : UniformAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7)] (𝔖 : Set.{u3} (Set.{u3} E)), Embedding.{max u4 u3, max u4 u3} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (UniformOnFun.{u3, u4} E F 𝔖) (ContinuousLinearMap.strongTopology.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (UniformAddGroup.to_topologicalAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7) _inst_14) 𝔖) (UniformOnFun.topologicalSpace.{u3, u4} E F _inst_13 𝔖) (Function.comp.{max (succ u3) (succ u4), max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (E -> F) (UniformOnFun.{u3, u4} E F 𝔖) (FunLike.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4), max (succ u3) (succ u4)} (Equiv.{max (succ u3) (succ u4), max (succ u4) (succ u3)} (E -> F) (UniformOnFun.{u3, u4} E F 𝔖)) (E -> F) (fun (_x : E -> F) => (fun (x._@.Mathlib.Logic.Equiv.Defs._hyg.812 : E -> F) => UniformOnFun.{u3, u4} E F 𝔖) _x) (Equiv.instFunLikeEquiv.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (E -> F) (UniformOnFun.{u3, u4} E F 𝔖)) (UniformOnFun.ofFun.{u3, u4} E F 𝔖)) (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) E (fun (ᾰ : E) => F) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) E F _inst_11 (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u2, u1, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8)))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.strong_topology.embedding_coe_fn ContinuousLinearMap.strongTopology.embedding_coeFnₓ'. -/
theorem strongTopology.embedding_coeFn [UniformSpace F] [UniformAddGroup F] (𝔖 : Set (Set E)) :
    @Embedding (E →SL[σ] F) (E →ᵤ[𝔖] F) (strongTopology σ F 𝔖) (UniformOnFun.topologicalSpace E F 𝔖)
      (UniformOnFun.ofFun 𝔖 ∘ coeFn) :=
  @UniformEmbedding.embedding _ _ (id _) _ _ (strongUniformity.uniformEmbedding_coeFn _ _ _)
#align continuous_linear_map.strong_topology.embedding_coe_fn ContinuousLinearMap.strongTopology.embedding_coeFn

/- warning: continuous_linear_map.strong_uniformity.uniform_add_group -> ContinuousLinearMap.strongUniformity.uniformAddGroup is a dubious translation:
lean 3 declaration is
  forall {𝕜₁ : Type.{u1}} {𝕜₂ : Type.{u2}} [_inst_1 : NormedField.{u1} 𝕜₁] [_inst_2 : NormedField.{u2} 𝕜₂] (σ : RingHom.{u1, u2} 𝕜₁ 𝕜₂ (NonAssocRing.toNonAssocSemiring.{u1} 𝕜₁ (Ring.toNonAssocRing.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))))) (NonAssocRing.toNonAssocSemiring.{u2} 𝕜₂ (Ring.toNonAssocRing.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u4}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u1, u3} 𝕜₁ E (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u2, u4} 𝕜₂ F (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : UniformSpace.{u4} F] [_inst_14 : UniformAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7)] (𝔖 : Set.{u3} (Set.{u3} E)), UniformAddGroup.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.strongUniformity.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_13 _inst_14 𝔖) (AddCommGroup.toAddGroup.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.addCommGroup.{u1, u2, u3, u4} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))) 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2))) E _inst_11 _inst_3 F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) _inst_7 _inst_4 _inst_8 σ (UniformAddGroup.to_topologicalAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7) _inst_14)))
but is expected to have type
  forall {𝕜₁ : Type.{u2}} {𝕜₂ : Type.{u1}} [_inst_1 : NormedField.{u2} 𝕜₁] [_inst_2 : NormedField.{u1} 𝕜₂] (σ : RingHom.{u2, u1} 𝕜₁ 𝕜₂ (Semiring.toNonAssocSemiring.{u2} 𝕜₁ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1))))) (Semiring.toNonAssocSemiring.{u1} 𝕜₂ (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u4}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u2, u3} 𝕜₁ E (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u1, u4} 𝕜₂ F (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : UniformSpace.{u4} F] [_inst_14 : UniformAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7)] (𝔖 : Set.{u3} (Set.{u3} E)), UniformAddGroup.{max u4 u3} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.strongUniformity.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_13 _inst_14 𝔖) (AddCommGroup.toAddGroup.{max u3 u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.addCommGroup.{u2, u1, u3, u4} 𝕜₁ (NormedRing.toRing.{u2} 𝕜₁ (NormedCommRing.toNormedRing.{u2} 𝕜₁ (NormedField.toNormedCommRing.{u2} 𝕜₁ _inst_1))) 𝕜₂ (NormedRing.toRing.{u1} 𝕜₂ (NormedCommRing.toNormedRing.{u1} 𝕜₂ (NormedField.toNormedCommRing.{u1} 𝕜₂ _inst_2))) E _inst_11 _inst_3 F (UniformSpace.toTopologicalSpace.{u4} F _inst_13) _inst_7 _inst_4 _inst_8 σ (UniformAddGroup.to_topologicalAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7) _inst_14)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.strong_uniformity.uniform_add_group ContinuousLinearMap.strongUniformity.uniformAddGroupₓ'. -/
theorem strongUniformity.uniformAddGroup [UniformSpace F] [UniformAddGroup F] (𝔖 : Set (Set E)) :
    @UniformAddGroup (E →SL[σ] F) (strongUniformity σ F 𝔖) _ :=
  by
  letI : UniformSpace (E →SL[σ] F) := strong_uniformity σ F 𝔖
  rw [strong_uniformity, UniformSpace.replaceTopology_eq]
  let φ : (E →SL[σ] F) →+ E →ᵤ[𝔖] F := ⟨(coeFn : (E →SL[σ] F) → E →ᵤ F), rfl, fun _ _ => rfl⟩
  exact uniformAddGroup_comap φ
#align continuous_linear_map.strong_uniformity.uniform_add_group ContinuousLinearMap.strongUniformity.uniformAddGroup

/- warning: continuous_linear_map.strong_topology.topological_add_group -> ContinuousLinearMap.strongTopology.topologicalAddGroup is a dubious translation:
lean 3 declaration is
  forall {𝕜₁ : Type.{u1}} {𝕜₂ : Type.{u2}} [_inst_1 : NormedField.{u1} 𝕜₁] [_inst_2 : NormedField.{u2} 𝕜₂] (σ : RingHom.{u1, u2} 𝕜₁ 𝕜₂ (NonAssocRing.toNonAssocSemiring.{u1} 𝕜₁ (Ring.toNonAssocRing.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))))) (NonAssocRing.toNonAssocSemiring.{u2} 𝕜₂ (Ring.toNonAssocRing.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u4}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u1, u3} 𝕜₁ E (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u2, u4} 𝕜₂ F (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : TopologicalSpace.{u4} F] [_inst_14 : TopologicalAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7)] (𝔖 : Set.{u3} (Set.{u3} E)), TopologicalAddGroup.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.strongTopology.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_13 _inst_14 𝔖) (AddCommGroup.toAddGroup.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.addCommGroup.{u1, u2, u3, u4} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))) 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2))) E _inst_11 _inst_3 F _inst_13 _inst_7 _inst_4 _inst_8 σ _inst_14))
but is expected to have type
  forall {𝕜₁ : Type.{u2}} {𝕜₂ : Type.{u1}} [_inst_1 : NormedField.{u2} 𝕜₁] [_inst_2 : NormedField.{u1} 𝕜₂] (σ : RingHom.{u2, u1} 𝕜₁ 𝕜₂ (Semiring.toNonAssocSemiring.{u2} 𝕜₁ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1))))) (Semiring.toNonAssocSemiring.{u1} 𝕜₂ (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u4}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u2, u3} 𝕜₁ E (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u1, u4} 𝕜₂ F (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : TopologicalSpace.{u4} F] [_inst_14 : TopologicalAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7)] (𝔖 : Set.{u3} (Set.{u3} E)), TopologicalAddGroup.{max u4 u3} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.strongTopology.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_13 _inst_14 𝔖) (AddCommGroup.toAddGroup.{max u3 u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.addCommGroup.{u2, u1, u3, u4} 𝕜₁ (NormedRing.toRing.{u2} 𝕜₁ (NormedCommRing.toNormedRing.{u2} 𝕜₁ (NormedField.toNormedCommRing.{u2} 𝕜₁ _inst_1))) 𝕜₂ (NormedRing.toRing.{u1} 𝕜₂ (NormedCommRing.toNormedRing.{u1} 𝕜₂ (NormedField.toNormedCommRing.{u1} 𝕜₂ _inst_2))) E _inst_11 _inst_3 F _inst_13 _inst_7 _inst_4 _inst_8 σ _inst_14))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.strong_topology.topological_add_group ContinuousLinearMap.strongTopology.topologicalAddGroupₓ'. -/
theorem strongTopology.topologicalAddGroup [TopologicalSpace F] [TopologicalAddGroup F]
    (𝔖 : Set (Set E)) : @TopologicalAddGroup (E →SL[σ] F) (strongTopology σ F 𝔖) _ :=
  by
  letI : UniformSpace F := TopologicalAddGroup.toUniformSpace F
  haveI : UniformAddGroup F := comm_topologicalAddGroup_is_uniform
  letI : UniformSpace (E →SL[σ] F) := strong_uniformity σ F 𝔖
  haveI : UniformAddGroup (E →SL[σ] F) := strong_uniformity.uniform_add_group σ F 𝔖
  infer_instance
#align continuous_linear_map.strong_topology.topological_add_group ContinuousLinearMap.strongTopology.topologicalAddGroup

/- warning: continuous_linear_map.strong_topology.t2_space -> ContinuousLinearMap.strongTopology.t2Space is a dubious translation:
lean 3 declaration is
  forall {𝕜₁ : Type.{u1}} {𝕜₂ : Type.{u2}} [_inst_1 : NormedField.{u1} 𝕜₁] [_inst_2 : NormedField.{u2} 𝕜₂] (σ : RingHom.{u1, u2} 𝕜₁ 𝕜₂ (NonAssocRing.toNonAssocSemiring.{u1} 𝕜₁ (Ring.toNonAssocRing.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))))) (NonAssocRing.toNonAssocSemiring.{u2} 𝕜₂ (Ring.toNonAssocRing.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u4}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u1, u3} 𝕜₁ E (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u2, u4} 𝕜₂ F (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : TopologicalSpace.{u4} F] [_inst_14 : TopologicalAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7)] [_inst_15 : T2Space.{u4} F _inst_13] (𝔖 : Set.{u3} (Set.{u3} E)), (Eq.{succ u3} (Set.{u3} E) (Set.sUnion.{u3} E 𝔖) (Set.univ.{u3} E)) -> (T2Space.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.strongTopology.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_13 _inst_14 𝔖))
but is expected to have type
  forall {𝕜₁ : Type.{u2}} {𝕜₂ : Type.{u1}} [_inst_1 : NormedField.{u2} 𝕜₁] [_inst_2 : NormedField.{u1} 𝕜₂] (σ : RingHom.{u2, u1} 𝕜₁ 𝕜₂ (Semiring.toNonAssocSemiring.{u2} 𝕜₁ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1))))) (Semiring.toNonAssocSemiring.{u1} 𝕜₂ (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u4}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u2, u3} 𝕜₁ E (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u1, u4} 𝕜₂ F (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : TopologicalSpace.{u4} F] [_inst_14 : TopologicalAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7)] [_inst_15 : T2Space.{u4} F _inst_13] (𝔖 : Set.{u3} (Set.{u3} E)), (Eq.{succ u3} (Set.{u3} E) (Set.sUnion.{u3} E 𝔖) (Set.univ.{u3} E)) -> (T2Space.{max u4 u3} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.strongTopology.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_13 _inst_14 𝔖))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.strong_topology.t2_space ContinuousLinearMap.strongTopology.t2Spaceₓ'. -/
theorem strongTopology.t2Space [TopologicalSpace F] [TopologicalAddGroup F] [T2Space F]
    (𝔖 : Set (Set E)) (h𝔖 : ⋃₀ 𝔖 = Set.univ) : @T2Space (E →SL[σ] F) (strongTopology σ F 𝔖) :=
  by
  letI : UniformSpace F := TopologicalAddGroup.toUniformSpace F
  haveI : UniformAddGroup F := comm_topologicalAddGroup_is_uniform
  letI : TopologicalSpace (E →SL[σ] F) := strong_topology σ F 𝔖
  haveI : T2Space (E →ᵤ[𝔖] F) := UniformOnFun.t2Space_of_covering h𝔖
  exact (strong_topology.embedding_coe_fn σ F 𝔖).T2Space
#align continuous_linear_map.strong_topology.t2_space ContinuousLinearMap.strongTopology.t2Space

/- warning: continuous_linear_map.strong_topology.has_continuous_smul -> ContinuousLinearMap.strongTopology.continuousSMul is a dubious translation:
lean 3 declaration is
  forall {𝕜₁ : Type.{u1}} {𝕜₂ : Type.{u2}} [_inst_1 : NormedField.{u1} 𝕜₁] [_inst_2 : NormedField.{u2} 𝕜₂] (σ : RingHom.{u1, u2} 𝕜₁ 𝕜₂ (NonAssocRing.toNonAssocSemiring.{u1} 𝕜₁ (Ring.toNonAssocRing.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))))) (NonAssocRing.toNonAssocSemiring.{u2} 𝕜₂ (Ring.toNonAssocRing.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u4}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u1, u3} 𝕜₁ E (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u2, u4} 𝕜₂ F (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : RingHomSurjective.{u1, u2} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ] [_inst_14 : RingHomIsometric.{u1, u2} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (NormedField.toHasNorm.{u1} 𝕜₁ _inst_1) (NormedField.toHasNorm.{u2} 𝕜₂ _inst_2) σ] [_inst_15 : TopologicalSpace.{u4} F] [_inst_16 : TopologicalAddGroup.{u4} F _inst_15 (AddCommGroup.toAddGroup.{u4} F _inst_7)] [_inst_17 : ContinuousSMul.{u2, u4} 𝕜₂ F (SMulZeroClass.toHasSmul.{u2, u4} 𝕜₂ F (AddZeroClass.toHasZero.{u4} F (AddMonoid.toAddZeroClass.{u4} F (AddCommMonoid.toAddMonoid.{u4} F (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)))) (SMulWithZero.toSmulZeroClass.{u2, u4} 𝕜₂ F (MulZeroClass.toHasZero.{u2} 𝕜₂ (MulZeroOneClass.toMulZeroClass.{u2} 𝕜₂ (MonoidWithZero.toMulZeroOneClass.{u2} 𝕜₂ (Semiring.toMonoidWithZero.{u2} 𝕜₂ (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))))) (AddZeroClass.toHasZero.{u4} F (AddMonoid.toAddZeroClass.{u4} F (AddCommMonoid.toAddMonoid.{u4} F (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)))) (MulActionWithZero.toSMulWithZero.{u2, u4} 𝕜₂ F (Semiring.toMonoidWithZero.{u2} 𝕜₂ (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2))))) (AddZeroClass.toHasZero.{u4} F (AddMonoid.toAddZeroClass.{u4} F (AddCommMonoid.toAddMonoid.{u4} F (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)))) (Module.toMulActionWithZero.{u2, u4} 𝕜₂ F (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_8)))) (UniformSpace.toTopologicalSpace.{u2} 𝕜₂ (PseudoMetricSpace.toUniformSpace.{u2} 𝕜₂ (SeminormedRing.toPseudoMetricSpace.{u2} 𝕜₂ (SeminormedCommRing.toSemiNormedRing.{u2} 𝕜₂ (NormedCommRing.toSeminormedCommRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))) _inst_15] (𝔖 : Set.{u3} (Set.{u3} E)), (Set.Nonempty.{u3} (Set.{u3} E) 𝔖) -> (DirectedOn.{u3} (Set.{u3} E) (HasSubset.Subset.{u3} (Set.{u3} E) (Set.hasSubset.{u3} E)) 𝔖) -> (forall (S : Set.{u3} E), (Membership.Mem.{u3, u3} (Set.{u3} E) (Set.{u3} (Set.{u3} E)) (Set.hasMem.{u3} (Set.{u3} E)) S 𝔖) -> (Bornology.IsVonNBounded.{u1, u3} 𝕜₁ E (SeminormedCommRing.toSemiNormedRing.{u1} 𝕜₁ (NormedCommRing.toSeminormedCommRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))) (SMulZeroClass.toHasSmul.{u1, u3} 𝕜₁ E (AddZeroClass.toHasZero.{u3} E (AddMonoid.toAddZeroClass.{u3} E (AddCommMonoid.toAddMonoid.{u3} E (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)))) (SMulWithZero.toSmulZeroClass.{u1, u3} 𝕜₁ E (MulZeroClass.toHasZero.{u1} 𝕜₁ (MulZeroOneClass.toMulZeroClass.{u1} 𝕜₁ (MonoidWithZero.toMulZeroOneClass.{u1} 𝕜₁ (Semiring.toMonoidWithZero.{u1} 𝕜₁ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))))))) (AddZeroClass.toHasZero.{u3} E (AddMonoid.toAddZeroClass.{u3} E (AddCommMonoid.toAddMonoid.{u3} E (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)))) (MulActionWithZero.toSMulWithZero.{u1, u3} 𝕜₁ E (Semiring.toMonoidWithZero.{u1} 𝕜₁ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))))) (AddZeroClass.toHasZero.{u3} E (AddMonoid.toAddZeroClass.{u3} E (AddCommMonoid.toAddMonoid.{u3} E (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)))) (Module.toMulActionWithZero.{u1, u3} 𝕜₁ E (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) _inst_4)))) (AddZeroClass.toHasZero.{u3} E (AddMonoid.toAddZeroClass.{u3} E (SubNegMonoid.toAddMonoid.{u3} E (AddGroup.toSubNegMonoid.{u3} E (AddCommGroup.toAddGroup.{u3} E _inst_3))))) _inst_11 S)) -> (ContinuousSMul.{u2, max u3 u4} 𝕜₂ (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (SMulZeroClass.toHasSmul.{u2, max u3 u4} 𝕜₂ (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (AddZeroClass.toHasZero.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (AddMonoid.toAddZeroClass.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (AddCommMonoid.toAddMonoid.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.addCommMonoid.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8 (TopologicalAddGroup.to_continuousAdd.{u4} F _inst_15 (AddCommGroup.toAddGroup.{u4} F _inst_7) _inst_16))))) (SMulWithZero.toSmulZeroClass.{u2, max u3 u4} 𝕜₂ (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (MulZeroClass.toHasZero.{u2} 𝕜₂ (MulZeroOneClass.toMulZeroClass.{u2} 𝕜₂ (MonoidWithZero.toMulZeroOneClass.{u2} 𝕜₂ (Semiring.toMonoidWithZero.{u2} 𝕜₂ (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))))) (AddZeroClass.toHasZero.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (AddMonoid.toAddZeroClass.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (AddCommMonoid.toAddMonoid.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.addCommMonoid.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8 (TopologicalAddGroup.to_continuousAdd.{u4} F _inst_15 (AddCommGroup.toAddGroup.{u4} F _inst_7) _inst_16))))) (MulActionWithZero.toSMulWithZero.{u2, max u3 u4} 𝕜₂ (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (Semiring.toMonoidWithZero.{u2} 𝕜₂ (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2))))) (AddZeroClass.toHasZero.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (AddMonoid.toAddZeroClass.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (AddCommMonoid.toAddMonoid.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.addCommMonoid.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8 (TopologicalAddGroup.to_continuousAdd.{u4} F _inst_15 (AddCommGroup.toAddGroup.{u4} F _inst_7) _inst_16))))) (Module.toMulActionWithZero.{u2, max u3 u4} 𝕜₂ (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (ContinuousLinearMap.addCommMonoid.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8 (TopologicalAddGroup.to_continuousAdd.{u4} F _inst_15 (AddCommGroup.toAddGroup.{u4} F _inst_7) _inst_16)) (ContinuousLinearMap.module.{u1, u2, u2, u3, u4} 𝕜₁ 𝕜₂ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) _inst_4 F _inst_15 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_8 _inst_8 (smulCommClass_self.{u2, u4} 𝕜₂ F (CommRing.toCommMonoid.{u2} 𝕜₂ (SeminormedCommRing.toCommRing.{u2} 𝕜₂ (NormedCommRing.toSeminormedCommRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (MulActionWithZero.toMulAction.{u2, u4} 𝕜₂ F (Semiring.toMonoidWithZero.{u2} 𝕜₂ (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2))))) (AddZeroClass.toHasZero.{u4} F (AddMonoid.toAddZeroClass.{u4} F (AddCommMonoid.toAddMonoid.{u4} F (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)))) (Module.toMulActionWithZero.{u2, u4} 𝕜₂ F (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_8))) (ContinuousSMul.continuousConstSMul.{u2, u4} 𝕜₂ F (UniformSpace.toTopologicalSpace.{u2} 𝕜₂ (PseudoMetricSpace.toUniformSpace.{u2} 𝕜₂ (SeminormedRing.toPseudoMetricSpace.{u2} 𝕜₂ (SeminormedCommRing.toSemiNormedRing.{u2} 𝕜₂ (NormedCommRing.toSeminormedCommRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))) _inst_15 (SMulZeroClass.toHasSmul.{u2, u4} 𝕜₂ F (AddZeroClass.toHasZero.{u4} F (AddMonoid.toAddZeroClass.{u4} F (AddCommMonoid.toAddMonoid.{u4} F (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)))) (SMulWithZero.toSmulZeroClass.{u2, u4} 𝕜₂ F (MulZeroClass.toHasZero.{u2} 𝕜₂ (MulZeroOneClass.toMulZeroClass.{u2} 𝕜₂ (MonoidWithZero.toMulZeroOneClass.{u2} 𝕜₂ (Semiring.toMonoidWithZero.{u2} 𝕜₂ (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))))) (AddZeroClass.toHasZero.{u4} F (AddMonoid.toAddZeroClass.{u4} F (AddCommMonoid.toAddMonoid.{u4} F (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)))) (MulActionWithZero.toSMulWithZero.{u2, u4} 𝕜₂ F (Semiring.toMonoidWithZero.{u2} 𝕜₂ (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2))))) (AddZeroClass.toHasZero.{u4} F (AddMonoid.toAddZeroClass.{u4} F (AddCommMonoid.toAddMonoid.{u4} F (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)))) (Module.toMulActionWithZero.{u2, u4} 𝕜₂ F (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_8)))) _inst_17) σ (TopologicalAddGroup.to_continuousAdd.{u4} F _inst_15 (AddCommGroup.toAddGroup.{u4} F _inst_7) _inst_16)))))) (UniformSpace.toTopologicalSpace.{u2} 𝕜₂ (PseudoMetricSpace.toUniformSpace.{u2} 𝕜₂ (SeminormedRing.toPseudoMetricSpace.{u2} 𝕜₂ (SeminormedCommRing.toSemiNormedRing.{u2} 𝕜₂ (NormedCommRing.toSeminormedCommRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))) (ContinuousLinearMap.strongTopology.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_15 _inst_16 𝔖))
but is expected to have type
  forall {𝕜₁ : Type.{u4}} {𝕜₂ : Type.{u3}} [_inst_1 : NormedField.{u4} 𝕜₁] [_inst_2 : NormedField.{u3} 𝕜₂] (σ : RingHom.{u4, u3} 𝕜₁ 𝕜₂ (Semiring.toNonAssocSemiring.{u4} 𝕜₁ (DivisionSemiring.toSemiring.{u4} 𝕜₁ (Semifield.toDivisionSemiring.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1))))) (Semiring.toNonAssocSemiring.{u3} 𝕜₂ (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))))) {E : Type.{u1}} (F : Type.{u2}) [_inst_3 : AddCommGroup.{u1} E] [_inst_4 : Module.{u4, u1} 𝕜₁ E (DivisionSemiring.toSemiring.{u4} 𝕜₁ (Semifield.toDivisionSemiring.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_3)] [_inst_7 : AddCommGroup.{u2} F] [_inst_8 : Module.{u3, u2} 𝕜₂ F (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u2} F _inst_7)] [_inst_11 : TopologicalSpace.{u1} E] [_inst_13 : RingHomSurjective.{u4, u3} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u4} 𝕜₁ (Semifield.toDivisionSemiring.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) σ] [_inst_14 : RingHomIsometric.{u4, u3} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u4} 𝕜₁ (Semifield.toDivisionSemiring.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) (NormedField.toNorm.{u4} 𝕜₁ _inst_1) (NormedField.toNorm.{u3} 𝕜₂ _inst_2) σ] [_inst_15 : TopologicalSpace.{u2} F] [_inst_16 : TopologicalAddGroup.{u2} F _inst_15 (AddCommGroup.toAddGroup.{u2} F _inst_7)] [_inst_17 : ContinuousSMul.{u3, u2} 𝕜₂ F (SMulZeroClass.toSMul.{u3, u2} 𝕜₂ F (NegZeroClass.toZero.{u2} F (SubNegZeroMonoid.toNegZeroClass.{u2} F (SubtractionMonoid.toSubNegZeroMonoid.{u2} F (SubtractionCommMonoid.toSubtractionMonoid.{u2} F (AddCommGroup.toDivisionAddCommMonoid.{u2} F _inst_7))))) (SMulWithZero.toSMulZeroClass.{u3, u2} 𝕜₂ F (CommMonoidWithZero.toZero.{u3} 𝕜₂ (CommGroupWithZero.toCommMonoidWithZero.{u3} 𝕜₂ (Semifield.toCommGroupWithZero.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2))))) (NegZeroClass.toZero.{u2} F (SubNegZeroMonoid.toNegZeroClass.{u2} F (SubtractionMonoid.toSubNegZeroMonoid.{u2} F (SubtractionCommMonoid.toSubtractionMonoid.{u2} F (AddCommGroup.toDivisionAddCommMonoid.{u2} F _inst_7))))) (MulActionWithZero.toSMulWithZero.{u3, u2} 𝕜₂ F (Semiring.toMonoidWithZero.{u3} 𝕜₂ (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2))))) (NegZeroClass.toZero.{u2} F (SubNegZeroMonoid.toNegZeroClass.{u2} F (SubtractionMonoid.toSubNegZeroMonoid.{u2} F (SubtractionCommMonoid.toSubtractionMonoid.{u2} F (AddCommGroup.toDivisionAddCommMonoid.{u2} F _inst_7))))) (Module.toMulActionWithZero.{u3, u2} 𝕜₂ F (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u2} F _inst_7) _inst_8)))) (UniformSpace.toTopologicalSpace.{u3} 𝕜₂ (PseudoMetricSpace.toUniformSpace.{u3} 𝕜₂ (SeminormedRing.toPseudoMetricSpace.{u3} 𝕜₂ (SeminormedCommRing.toSeminormedRing.{u3} 𝕜₂ (NormedCommRing.toSeminormedCommRing.{u3} 𝕜₂ (NormedField.toNormedCommRing.{u3} 𝕜₂ _inst_2)))))) _inst_15] (𝔖 : Set.{u1} (Set.{u1} E)), (Set.Nonempty.{u1} (Set.{u1} E) 𝔖) -> (DirectedOn.{u1} (Set.{u1} E) (fun (x._@.Mathlib.Topology.Algebra.Module.StrongTopology._hyg.1367 : Set.{u1} E) (x._@.Mathlib.Topology.Algebra.Module.StrongTopology._hyg.1369 : Set.{u1} E) => HasSubset.Subset.{u1} (Set.{u1} E) (Set.instHasSubsetSet.{u1} E) x._@.Mathlib.Topology.Algebra.Module.StrongTopology._hyg.1367 x._@.Mathlib.Topology.Algebra.Module.StrongTopology._hyg.1369) 𝔖) -> (forall (S : Set.{u1} E), (Membership.mem.{u1, u1} (Set.{u1} E) (Set.{u1} (Set.{u1} E)) (Set.instMembershipSet.{u1} (Set.{u1} E)) S 𝔖) -> (Bornology.IsVonNBounded.{u4, u1} 𝕜₁ E (SeminormedCommRing.toSeminormedRing.{u4} 𝕜₁ (NormedCommRing.toSeminormedCommRing.{u4} 𝕜₁ (NormedField.toNormedCommRing.{u4} 𝕜₁ _inst_1))) (SMulZeroClass.toSMul.{u4, u1} 𝕜₁ E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_3))))) (SMulWithZero.toSMulZeroClass.{u4, u1} 𝕜₁ E (CommMonoidWithZero.toZero.{u4} 𝕜₁ (CommGroupWithZero.toCommMonoidWithZero.{u4} 𝕜₁ (Semifield.toCommGroupWithZero.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_3))))) (MulActionWithZero.toSMulWithZero.{u4, u1} 𝕜₁ E (Semiring.toMonoidWithZero.{u4} 𝕜₁ (DivisionSemiring.toSemiring.{u4} 𝕜₁ (Semifield.toDivisionSemiring.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_3))))) (Module.toMulActionWithZero.{u4, u1} 𝕜₁ E (DivisionSemiring.toSemiring.{u4} 𝕜₁ (Semifield.toDivisionSemiring.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_3) _inst_4)))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_3))))) _inst_11 S)) -> (ContinuousSMul.{u3, max u2 u1} 𝕜₂ (ContinuousLinearMap.{u4, u3, u1, u2} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u4} 𝕜₁ (Semifield.toDivisionSemiring.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u1} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u2} F _inst_7) _inst_4 _inst_8) (SMulZeroClass.toSMul.{u3, max u1 u2} 𝕜₂ (ContinuousLinearMap.{u4, u3, u1, u2} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u4} 𝕜₁ (Semifield.toDivisionSemiring.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u1} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u2} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.zero.{u4, u3, u1, u2} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u4} 𝕜₁ (Semifield.toDivisionSemiring.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u1} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u2} F _inst_7) _inst_4 _inst_8) (SMulWithZero.toSMulZeroClass.{u3, max u1 u2} 𝕜₂ (ContinuousLinearMap.{u4, u3, u1, u2} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u4} 𝕜₁ (Semifield.toDivisionSemiring.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u1} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u2} F _inst_7) _inst_4 _inst_8) (CommMonoidWithZero.toZero.{u3} 𝕜₂ (CommGroupWithZero.toCommMonoidWithZero.{u3} 𝕜₂ (Semifield.toCommGroupWithZero.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2))))) (ContinuousLinearMap.zero.{u4, u3, u1, u2} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u4} 𝕜₁ (Semifield.toDivisionSemiring.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u1} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u2} F _inst_7) _inst_4 _inst_8) (MulActionWithZero.toSMulWithZero.{u3, max u1 u2} 𝕜₂ (ContinuousLinearMap.{u4, u3, u1, u2} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u4} 𝕜₁ (Semifield.toDivisionSemiring.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u1} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u2} F _inst_7) _inst_4 _inst_8) (Semiring.toMonoidWithZero.{u3} 𝕜₂ (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2))))) (ContinuousLinearMap.zero.{u4, u3, u1, u2} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u4} 𝕜₁ (Semifield.toDivisionSemiring.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u1} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u2} F _inst_7) _inst_4 _inst_8) (Module.toMulActionWithZero.{u3, max u1 u2} 𝕜₂ (ContinuousLinearMap.{u4, u3, u1, u2} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u4} 𝕜₁ (Semifield.toDivisionSemiring.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u1} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u2} F _inst_7) _inst_4 _inst_8) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) (ContinuousLinearMap.addCommMonoid.{u4, u3, u1, u2} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u4} 𝕜₁ (Semifield.toDivisionSemiring.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u1} E _inst_3) F _inst_15 (AddCommGroup.toAddCommMonoid.{u2} F _inst_7) _inst_4 _inst_8 (TopologicalAddGroup.toContinuousAdd.{u2} F _inst_15 (AddCommGroup.toAddGroup.{u2} F _inst_7) _inst_16)) (ContinuousLinearMap.module.{u4, u3, u3, u1, u2} 𝕜₁ 𝕜₂ 𝕜₂ (DivisionSemiring.toSemiring.{u4} 𝕜₁ (Semifield.toDivisionSemiring.{u4} 𝕜₁ (Field.toSemifield.{u4} 𝕜₁ (NormedField.toField.{u4} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) E _inst_11 (AddCommGroup.toAddCommMonoid.{u1} E _inst_3) _inst_4 F _inst_15 (AddCommGroup.toAddCommMonoid.{u2} F _inst_7) _inst_8 _inst_8 (smulCommClass_self.{u3, u2} 𝕜₂ F (CommRing.toCommMonoid.{u3} 𝕜₂ (EuclideanDomain.toCommRing.{u3} 𝕜₂ (Field.toEuclideanDomain.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) (MulActionWithZero.toMulAction.{u3, u2} 𝕜₂ F (Semiring.toMonoidWithZero.{u3} 𝕜₂ (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2))))) (NegZeroClass.toZero.{u2} F (SubNegZeroMonoid.toNegZeroClass.{u2} F (SubtractionMonoid.toSubNegZeroMonoid.{u2} F (SubtractionCommMonoid.toSubtractionMonoid.{u2} F (AddCommGroup.toDivisionAddCommMonoid.{u2} F _inst_7))))) (Module.toMulActionWithZero.{u3, u2} 𝕜₂ F (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u2} F _inst_7) _inst_8))) (ContinuousSMul.continuousConstSMul.{u3, u2} 𝕜₂ F (UniformSpace.toTopologicalSpace.{u3} 𝕜₂ (PseudoMetricSpace.toUniformSpace.{u3} 𝕜₂ (SeminormedRing.toPseudoMetricSpace.{u3} 𝕜₂ (SeminormedCommRing.toSeminormedRing.{u3} 𝕜₂ (NormedCommRing.toSeminormedCommRing.{u3} 𝕜₂ (NormedField.toNormedCommRing.{u3} 𝕜₂ _inst_2)))))) _inst_15 (SMulZeroClass.toSMul.{u3, u2} 𝕜₂ F (AddMonoid.toZero.{u2} F (AddCommMonoid.toAddMonoid.{u2} F (AddCommGroup.toAddCommMonoid.{u2} F _inst_7))) (SMulWithZero.toSMulZeroClass.{u3, u2} 𝕜₂ F (MonoidWithZero.toZero.{u3} 𝕜₂ (Semiring.toMonoidWithZero.{u3} 𝕜₂ (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))))) (AddMonoid.toZero.{u2} F (AddCommMonoid.toAddMonoid.{u2} F (AddCommGroup.toAddCommMonoid.{u2} F _inst_7))) (MulActionWithZero.toSMulWithZero.{u3, u2} 𝕜₂ F (Semiring.toMonoidWithZero.{u3} 𝕜₂ (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2))))) (AddMonoid.toZero.{u2} F (AddCommMonoid.toAddMonoid.{u2} F (AddCommGroup.toAddCommMonoid.{u2} F _inst_7))) (Module.toMulActionWithZero.{u3, u2} 𝕜₂ F (DivisionSemiring.toSemiring.{u3} 𝕜₂ (Semifield.toDivisionSemiring.{u3} 𝕜₂ (Field.toSemifield.{u3} 𝕜₂ (NormedField.toField.{u3} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u2} F _inst_7) _inst_8)))) _inst_17) σ (TopologicalAddGroup.toContinuousAdd.{u2} F _inst_15 (AddCommGroup.toAddGroup.{u2} F _inst_7) _inst_16)))))) (UniformSpace.toTopologicalSpace.{u3} 𝕜₂ (PseudoMetricSpace.toUniformSpace.{u3} 𝕜₂ (SeminormedRing.toPseudoMetricSpace.{u3} 𝕜₂ (SeminormedCommRing.toSeminormedRing.{u3} 𝕜₂ (NormedCommRing.toSeminormedCommRing.{u3} 𝕜₂ (NormedField.toNormedCommRing.{u3} 𝕜₂ _inst_2)))))) (ContinuousLinearMap.strongTopology.{u4, u3, u1, u2} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_15 _inst_16 𝔖))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.strong_topology.has_continuous_smul ContinuousLinearMap.strongTopology.continuousSMulₓ'. -/
theorem strongTopology.continuousSMul [RingHomSurjective σ] [RingHomIsometric σ]
    [TopologicalSpace F] [TopologicalAddGroup F] [ContinuousSMul 𝕜₂ F] (𝔖 : Set (Set E))
    (h𝔖₁ : 𝔖.Nonempty) (h𝔖₂ : DirectedOn (· ⊆ ·) 𝔖) (h𝔖₃ : ∀ S ∈ 𝔖, Bornology.IsVonNBounded 𝕜₁ S) :
    @ContinuousSMul 𝕜₂ (E →SL[σ] F) _ _ (strongTopology σ F 𝔖) :=
  by
  letI : UniformSpace F := TopologicalAddGroup.toUniformSpace F
  haveI : UniformAddGroup F := comm_topologicalAddGroup_is_uniform
  letI : TopologicalSpace (E →SL[σ] F) := strong_topology σ F 𝔖
  let φ : (E →SL[σ] F) →ₗ[𝕜₂] E →ᵤ[𝔖] F :=
    ⟨(coeFn : (E →SL[σ] F) → E → F), fun _ _ => rfl, fun _ _ => rfl⟩
  exact
    UniformOnFun.continuousSMul_induced_of_image_bounded 𝕜₂ E F (E →SL[σ] F) h𝔖₁ h𝔖₂ φ ⟨rfl⟩
      fun u s hs => (h𝔖₃ s hs).image u
#align continuous_linear_map.strong_topology.has_continuous_smul ContinuousLinearMap.strongTopology.continuousSMul

/- warning: continuous_linear_map.strong_topology.has_basis_nhds_zero_of_basis -> ContinuousLinearMap.strongTopology.hasBasis_nhds_zero_of_basis is a dubious translation:
lean 3 declaration is
  forall {𝕜₁ : Type.{u1}} {𝕜₂ : Type.{u2}} [_inst_1 : NormedField.{u1} 𝕜₁] [_inst_2 : NormedField.{u2} 𝕜₂] (σ : RingHom.{u1, u2} 𝕜₁ 𝕜₂ (NonAssocRing.toNonAssocSemiring.{u1} 𝕜₁ (Ring.toNonAssocRing.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))))) (NonAssocRing.toNonAssocSemiring.{u2} 𝕜₂ (Ring.toNonAssocRing.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u4}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u1, u3} 𝕜₁ E (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u2, u4} 𝕜₂ F (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : TopologicalSpace.{u4} F] [_inst_14 : TopologicalAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7)] {ι : Type.{u5}} (𝔖 : Set.{u3} (Set.{u3} E)), (Set.Nonempty.{u3} (Set.{u3} E) 𝔖) -> (DirectedOn.{u3} (Set.{u3} E) (HasSubset.Subset.{u3} (Set.{u3} E) (Set.hasSubset.{u3} E)) 𝔖) -> (forall {p : ι -> Prop} {b : ι -> (Set.{u4} F)}, (Filter.HasBasis.{u4, succ u5} F ι (nhds.{u4} F _inst_13 (OfNat.ofNat.{u4} F 0 (OfNat.mk.{u4} F 0 (Zero.zero.{u4} F (AddZeroClass.toHasZero.{u4} F (AddMonoid.toAddZeroClass.{u4} F (SubNegMonoid.toAddMonoid.{u4} F (AddGroup.toSubNegMonoid.{u4} F (AddCommGroup.toAddGroup.{u4} F _inst_7))))))))) p b) -> (Filter.HasBasis.{max u3 u4, max (succ u3) (succ u5)} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (Prod.{u3, u5} (Set.{u3} E) ι) (nhds.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.strongTopology.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_13 _inst_14 𝔖) (OfNat.ofNat.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) 0 (OfNat.mk.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) 0 (Zero.zero.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.zero.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8))))) (fun (Si : Prod.{u3, u5} (Set.{u3} E) ι) => And (Membership.Mem.{u3, u3} (Set.{u3} E) (Set.{u3} (Set.{u3} E)) (Set.hasMem.{u3} (Set.{u3} E)) (Prod.fst.{u3, u5} (Set.{u3} E) ι Si) 𝔖) (p (Prod.snd.{u3, u5} (Set.{u3} E) ι Si))) (fun (Si : Prod.{u3, u5} (Set.{u3} E) ι) => setOf.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (fun (f : ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) => forall (x : E), (Membership.Mem.{u3, u3} E (Set.{u3} E) (Set.hasMem.{u3} E) x (Prod.fst.{u3, u5} (Set.{u3} E) ι Si)) -> (Membership.Mem.{u4, u4} F (Set.{u4} F) (Set.hasMem.{u4} F) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) => E -> F) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) f x) (b (Prod.snd.{u3, u5} (Set.{u3} E) ι Si)))))))
but is expected to have type
  forall {𝕜₁ : Type.{u2}} {𝕜₂ : Type.{u1}} [_inst_1 : NormedField.{u2} 𝕜₁] [_inst_2 : NormedField.{u1} 𝕜₂] (σ : RingHom.{u2, u1} 𝕜₁ 𝕜₂ (Semiring.toNonAssocSemiring.{u2} 𝕜₁ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1))))) (Semiring.toNonAssocSemiring.{u1} 𝕜₂ (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u5}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u2, u3} 𝕜₁ E (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u5} F] [_inst_8 : Module.{u1, u5} 𝕜₂ F (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u5} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : TopologicalSpace.{u5} F] [_inst_14 : TopologicalAddGroup.{u5} F _inst_13 (AddCommGroup.toAddGroup.{u5} F _inst_7)] {ι : Type.{u4}} (𝔖 : Set.{u3} (Set.{u3} E)), (Set.Nonempty.{u3} (Set.{u3} E) 𝔖) -> (DirectedOn.{u3} (Set.{u3} E) (fun (x._@.Mathlib.Topology.Algebra.Module.StrongTopology._hyg.1659 : Set.{u3} E) (x._@.Mathlib.Topology.Algebra.Module.StrongTopology._hyg.1661 : Set.{u3} E) => HasSubset.Subset.{u3} (Set.{u3} E) (Set.instHasSubsetSet.{u3} E) x._@.Mathlib.Topology.Algebra.Module.StrongTopology._hyg.1659 x._@.Mathlib.Topology.Algebra.Module.StrongTopology._hyg.1661) 𝔖) -> (forall {p : ι -> Prop} {b : ι -> (Set.{u5} F)}, (Filter.HasBasis.{u5, succ u4} F ι (nhds.{u5} F _inst_13 (OfNat.ofNat.{u5} F 0 (Zero.toOfNat0.{u5} F (NegZeroClass.toZero.{u5} F (SubNegZeroMonoid.toNegZeroClass.{u5} F (SubtractionMonoid.toSubNegZeroMonoid.{u5} F (SubtractionCommMonoid.toSubtractionMonoid.{u5} F (AddCommGroup.toDivisionAddCommMonoid.{u5} F _inst_7)))))))) p b) -> (Filter.HasBasis.{max u3 u5, max (succ u3) (succ u4)} (ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) (Prod.{u3, u4} (Set.{u3} E) ι) (nhds.{max u5 u3} (ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.strongTopology.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_13 _inst_14 𝔖) (OfNat.ofNat.{max u3 u5} (ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) 0 (Zero.toOfNat0.{max u3 u5} (ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.zero.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8)))) (fun (Si : Prod.{u3, u4} (Set.{u3} E) ι) => And (Membership.mem.{u3, u3} (Set.{u3} E) (Set.{u3} (Set.{u3} E)) (Set.instMembershipSet.{u3} (Set.{u3} E)) (Prod.fst.{u3, u4} (Set.{u3} E) ι Si) 𝔖) (p (Prod.snd.{u3, u4} (Set.{u3} E) ι Si))) (fun (Si : Prod.{u3, u4} (Set.{u3} E) ι) => setOf.{max u3 u5} (ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) (fun (f : ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) => forall (x : E), (Membership.mem.{u3, u3} E (Set.{u3} E) (Set.instMembershipSet.{u3} E) x (Prod.fst.{u3, u4} (Set.{u3} E) ι Si)) -> (Membership.mem.{u5, u5} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E) => F) x) (Set.{u5} F) (Set.instMembershipSet.{u5} F) (FunLike.coe.{max (succ u3) (succ u5), succ u3, succ u5} (ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) E (fun (_x : E) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E) => F) _x) (ContinuousMapClass.toFunLike.{max u3 u5, u3, u5} (ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) E F _inst_11 _inst_13 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u5, u2, u1, u3, u5} (ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8))) f x) (b (Prod.snd.{u3, u4} (Set.{u3} E) ι Si)))))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.strong_topology.has_basis_nhds_zero_of_basis ContinuousLinearMap.strongTopology.hasBasis_nhds_zero_of_basisₓ'. -/
theorem strongTopology.hasBasis_nhds_zero_of_basis [TopologicalSpace F] [TopologicalAddGroup F]
    {ι : Type _} (𝔖 : Set (Set E)) (h𝔖₁ : 𝔖.Nonempty) (h𝔖₂ : DirectedOn (· ⊆ ·) 𝔖) {p : ι → Prop}
    {b : ι → Set F} (h : (𝓝 0 : Filter F).HasBasis p b) :
    (@nhds (E →SL[σ] F) (strongTopology σ F 𝔖) 0).HasBasis (fun Si : Set E × ι => Si.1 ∈ 𝔖 ∧ p Si.2)
      fun Si => { f : E →SL[σ] F | ∀ x ∈ Si.1, f x ∈ b Si.2 } :=
  by
  letI : UniformSpace F := TopologicalAddGroup.toUniformSpace F
  haveI : UniformAddGroup F := comm_topologicalAddGroup_is_uniform
  rw [nhds_induced]
  exact (UniformOnFun.hasBasis_nhds_zero_of_basis 𝔖 h𝔖₁ h𝔖₂ h).comap coeFn
#align continuous_linear_map.strong_topology.has_basis_nhds_zero_of_basis ContinuousLinearMap.strongTopology.hasBasis_nhds_zero_of_basis

/- warning: continuous_linear_map.strong_topology.has_basis_nhds_zero -> ContinuousLinearMap.strongTopology.hasBasis_nhds_zero is a dubious translation:
lean 3 declaration is
  forall {𝕜₁ : Type.{u1}} {𝕜₂ : Type.{u2}} [_inst_1 : NormedField.{u1} 𝕜₁] [_inst_2 : NormedField.{u2} 𝕜₂] (σ : RingHom.{u1, u2} 𝕜₁ 𝕜₂ (NonAssocRing.toNonAssocSemiring.{u1} 𝕜₁ (Ring.toNonAssocRing.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))))) (NonAssocRing.toNonAssocSemiring.{u2} 𝕜₂ (Ring.toNonAssocRing.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u4}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u1, u3} 𝕜₁ E (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u2, u4} 𝕜₂ F (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : TopologicalSpace.{u4} F] [_inst_14 : TopologicalAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7)] (𝔖 : Set.{u3} (Set.{u3} E)), (Set.Nonempty.{u3} (Set.{u3} E) 𝔖) -> (DirectedOn.{u3} (Set.{u3} E) (HasSubset.Subset.{u3} (Set.{u3} E) (Set.hasSubset.{u3} E)) 𝔖) -> (Filter.HasBasis.{max u3 u4, max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (Prod.{u3, u4} (Set.{u3} E) (Set.{u4} F)) (nhds.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.strongTopology.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_13 _inst_14 𝔖) (OfNat.ofNat.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) 0 (OfNat.mk.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) 0 (Zero.zero.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.zero.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8))))) (fun (SV : Prod.{u3, u4} (Set.{u3} E) (Set.{u4} F)) => And (Membership.Mem.{u3, u3} (Set.{u3} E) (Set.{u3} (Set.{u3} E)) (Set.hasMem.{u3} (Set.{u3} E)) (Prod.fst.{u3, u4} (Set.{u3} E) (Set.{u4} F) SV) 𝔖) (Membership.Mem.{u4, u4} (Set.{u4} F) (Filter.{u4} F) (Filter.hasMem.{u4} F) (Prod.snd.{u3, u4} (Set.{u3} E) (Set.{u4} F) SV) (nhds.{u4} F _inst_13 (OfNat.ofNat.{u4} F 0 (OfNat.mk.{u4} F 0 (Zero.zero.{u4} F (AddZeroClass.toHasZero.{u4} F (AddMonoid.toAddZeroClass.{u4} F (SubNegMonoid.toAddMonoid.{u4} F (AddGroup.toSubNegMonoid.{u4} F (AddCommGroup.toAddGroup.{u4} F _inst_7))))))))))) (fun (SV : Prod.{u3, u4} (Set.{u3} E) (Set.{u4} F)) => setOf.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (fun (f : ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) => forall (x : E), (Membership.Mem.{u3, u3} E (Set.{u3} E) (Set.hasMem.{u3} E) x (Prod.fst.{u3, u4} (Set.{u3} E) (Set.{u4} F) SV)) -> (Membership.Mem.{u4, u4} F (Set.{u4} F) (Set.hasMem.{u4} F) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) => E -> F) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) f x) (Prod.snd.{u3, u4} (Set.{u3} E) (Set.{u4} F) SV)))))
but is expected to have type
  forall {𝕜₁ : Type.{u2}} {𝕜₂ : Type.{u1}} [_inst_1 : NormedField.{u2} 𝕜₁] [_inst_2 : NormedField.{u1} 𝕜₂] (σ : RingHom.{u2, u1} 𝕜₁ 𝕜₂ (Semiring.toNonAssocSemiring.{u2} 𝕜₁ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1))))) (Semiring.toNonAssocSemiring.{u1} 𝕜₂ (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))))) {E : Type.{u3}} (F : Type.{u4}) [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u2, u3} 𝕜₁ E (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u1, u4} 𝕜₂ F (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_13 : TopologicalSpace.{u4} F] [_inst_14 : TopologicalAddGroup.{u4} F _inst_13 (AddCommGroup.toAddGroup.{u4} F _inst_7)] (𝔖 : Set.{u3} (Set.{u3} E)), (Set.Nonempty.{u3} (Set.{u3} E) 𝔖) -> (DirectedOn.{u3} (Set.{u3} E) (fun (x._@.Mathlib.Topology.Algebra.Module.StrongTopology._hyg.1962 : Set.{u3} E) (x._@.Mathlib.Topology.Algebra.Module.StrongTopology._hyg.1964 : Set.{u3} E) => HasSubset.Subset.{u3} (Set.{u3} E) (Set.instHasSubsetSet.{u3} E) x._@.Mathlib.Topology.Algebra.Module.StrongTopology._hyg.1962 x._@.Mathlib.Topology.Algebra.Module.StrongTopology._hyg.1964) 𝔖) -> (Filter.HasBasis.{max u3 u4, max (succ u3) (succ u4)} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (Prod.{u3, u4} (Set.{u3} E) (Set.{u4} F)) (nhds.{max u4 u3} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.strongTopology.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_13 _inst_14 𝔖) (OfNat.ofNat.{max u3 u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) 0 (Zero.toOfNat0.{max u3 u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.zero.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8)))) (fun (SV : Prod.{u3, u4} (Set.{u3} E) (Set.{u4} F)) => And (Membership.mem.{u3, u3} (Set.{u3} E) (Set.{u3} (Set.{u3} E)) (Set.instMembershipSet.{u3} (Set.{u3} E)) (Prod.fst.{u3, u4} (Set.{u3} E) (Set.{u4} F) SV) 𝔖) (Membership.mem.{u4, u4} (Set.{u4} F) (Filter.{u4} F) (instMembershipSetFilter.{u4} F) (Prod.snd.{u3, u4} (Set.{u3} E) (Set.{u4} F) SV) (nhds.{u4} F _inst_13 (OfNat.ofNat.{u4} F 0 (Zero.toOfNat0.{u4} F (NegZeroClass.toZero.{u4} F (SubNegZeroMonoid.toNegZeroClass.{u4} F (SubtractionMonoid.toSubNegZeroMonoid.{u4} F (SubtractionCommMonoid.toSubtractionMonoid.{u4} F (AddCommGroup.toDivisionAddCommMonoid.{u4} F _inst_7)))))))))) (fun (SV : Prod.{u3, u4} (Set.{u3} E) (Set.{u4} F)) => setOf.{max u3 u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (fun (f : ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) => forall (x : E), (Membership.mem.{u3, u3} E (Set.{u3} E) (Set.instMembershipSet.{u3} E) x (Prod.fst.{u3, u4} (Set.{u3} E) (Set.{u4} F) SV)) -> (Membership.mem.{u4, u4} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E) => F) x) (Set.{u4} F) (Set.instMembershipSet.{u4} F) (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) E (fun (_x : E) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E) => F) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) E F _inst_11 _inst_13 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u2, u1, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_13 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8))) f x) (Prod.snd.{u3, u4} (Set.{u3} E) (Set.{u4} F) SV)))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.strong_topology.has_basis_nhds_zero ContinuousLinearMap.strongTopology.hasBasis_nhds_zeroₓ'. -/
theorem strongTopology.hasBasis_nhds_zero [TopologicalSpace F] [TopologicalAddGroup F]
    (𝔖 : Set (Set E)) (h𝔖₁ : 𝔖.Nonempty) (h𝔖₂ : DirectedOn (· ⊆ ·) 𝔖) :
    (@nhds (E →SL[σ] F) (strongTopology σ F 𝔖) 0).HasBasis
      (fun SV : Set E × Set F => SV.1 ∈ 𝔖 ∧ SV.2 ∈ (𝓝 0 : Filter F)) fun SV =>
      { f : E →SL[σ] F | ∀ x ∈ SV.1, f x ∈ SV.2 } :=
  strongTopology.hasBasis_nhds_zero_of_basis σ F 𝔖 h𝔖₁ h𝔖₂ (𝓝 0).basis_sets
#align continuous_linear_map.strong_topology.has_basis_nhds_zero ContinuousLinearMap.strongTopology.hasBasis_nhds_zero

end General

section BoundedSets

variable {𝕜₁ 𝕜₂ : Type _} [NormedField 𝕜₁] [NormedField 𝕜₂] {σ : 𝕜₁ →+* 𝕜₂} {E E' F F' : Type _}
  [AddCommGroup E] [Module 𝕜₁ E] [AddCommGroup E'] [Module ℝ E'] [AddCommGroup F] [Module 𝕜₂ F]
  [AddCommGroup F'] [Module ℝ F'] [TopologicalSpace E]

/-- The topology of bounded convergence on `E →L[𝕜] F`. This coincides with the topology induced by
the operator norm when `E` and `F` are normed spaces. -/
instance [TopologicalSpace F] [TopologicalAddGroup F] : TopologicalSpace (E →SL[σ] F) :=
  strongTopology σ F { S | Bornology.IsVonNBounded 𝕜₁ S }

instance [TopologicalSpace F] [TopologicalAddGroup F] : TopologicalAddGroup (E →SL[σ] F) :=
  strongTopology.topologicalAddGroup σ F _

instance [RingHomSurjective σ] [RingHomIsometric σ] [TopologicalSpace F] [TopologicalAddGroup F]
    [ContinuousSMul 𝕜₂ F] : ContinuousSMul 𝕜₂ (E →SL[σ] F) :=
  strongTopology.continuousSMul σ F { S | Bornology.IsVonNBounded 𝕜₁ S }
    ⟨∅, Bornology.isVonNBounded_empty 𝕜₁ E⟩
    (directedOn_of_sup_mem fun _ _ => Bornology.IsVonNBounded.union) fun s hs => hs

instance [UniformSpace F] [UniformAddGroup F] : UniformSpace (E →SL[σ] F) :=
  strongUniformity σ F { S | Bornology.IsVonNBounded 𝕜₁ S }

instance [UniformSpace F] [UniformAddGroup F] : UniformAddGroup (E →SL[σ] F) :=
  strongUniformity.uniformAddGroup σ F _

instance [TopologicalSpace F] [TopologicalAddGroup F] [ContinuousSMul 𝕜₁ E] [T2Space F] :
    T2Space (E →SL[σ] F) :=
  strongTopology.t2Space σ F _
    (Set.eq_univ_of_forall fun x =>
      Set.mem_sUnion_of_mem (Set.mem_singleton x) (Bornology.isVonNBounded_singleton x))

/- warning: continuous_linear_map.has_basis_nhds_zero_of_basis -> ContinuousLinearMap.hasBasis_nhds_zero_of_basis is a dubious translation:
lean 3 declaration is
  forall {𝕜₁ : Type.{u1}} {𝕜₂ : Type.{u2}} [_inst_1 : NormedField.{u1} 𝕜₁] [_inst_2 : NormedField.{u2} 𝕜₂] {σ : RingHom.{u1, u2} 𝕜₁ 𝕜₂ (NonAssocRing.toNonAssocSemiring.{u1} 𝕜₁ (Ring.toNonAssocRing.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))))) (NonAssocRing.toNonAssocSemiring.{u2} 𝕜₂ (Ring.toNonAssocRing.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))} {E : Type.{u3}} {F : Type.{u4}} [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u1, u3} 𝕜₁ E (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u2, u4} 𝕜₂ F (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_12 : TopologicalSpace.{u4} F] [_inst_13 : TopologicalAddGroup.{u4} F _inst_12 (AddCommGroup.toAddGroup.{u4} F _inst_7)] {ι : Type.{u5}} {p : ι -> Prop} {b : ι -> (Set.{u4} F)}, (Filter.HasBasis.{u4, succ u5} F ι (nhds.{u4} F _inst_12 (OfNat.ofNat.{u4} F 0 (OfNat.mk.{u4} F 0 (Zero.zero.{u4} F (AddZeroClass.toHasZero.{u4} F (AddMonoid.toAddZeroClass.{u4} F (SubNegMonoid.toAddMonoid.{u4} F (AddGroup.toSubNegMonoid.{u4} F (AddCommGroup.toAddGroup.{u4} F _inst_7))))))))) p b) -> (Filter.HasBasis.{max u3 u4, max (succ u3) (succ u5)} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (Prod.{u3, u5} (Set.{u3} E) ι) (nhds.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.topologicalSpace.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_12 _inst_13) (OfNat.ofNat.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) 0 (OfNat.mk.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) 0 (Zero.zero.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.zero.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8))))) (fun (Si : Prod.{u3, u5} (Set.{u3} E) ι) => And (Bornology.IsVonNBounded.{u1, u3} 𝕜₁ E (SeminormedCommRing.toSemiNormedRing.{u1} 𝕜₁ (NormedCommRing.toSeminormedCommRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))) (SMulZeroClass.toHasSmul.{u1, u3} 𝕜₁ E (AddZeroClass.toHasZero.{u3} E (AddMonoid.toAddZeroClass.{u3} E (AddCommMonoid.toAddMonoid.{u3} E (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)))) (SMulWithZero.toSmulZeroClass.{u1, u3} 𝕜₁ E (MulZeroClass.toHasZero.{u1} 𝕜₁ (MulZeroOneClass.toMulZeroClass.{u1} 𝕜₁ (MonoidWithZero.toMulZeroOneClass.{u1} 𝕜₁ (Semiring.toMonoidWithZero.{u1} 𝕜₁ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))))))) (AddZeroClass.toHasZero.{u3} E (AddMonoid.toAddZeroClass.{u3} E (AddCommMonoid.toAddMonoid.{u3} E (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)))) (MulActionWithZero.toSMulWithZero.{u1, u3} 𝕜₁ E (Semiring.toMonoidWithZero.{u1} 𝕜₁ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))))) (AddZeroClass.toHasZero.{u3} E (AddMonoid.toAddZeroClass.{u3} E (AddCommMonoid.toAddMonoid.{u3} E (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)))) (Module.toMulActionWithZero.{u1, u3} 𝕜₁ E (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) _inst_4)))) (AddZeroClass.toHasZero.{u3} E (AddMonoid.toAddZeroClass.{u3} E (SubNegMonoid.toAddMonoid.{u3} E (AddGroup.toSubNegMonoid.{u3} E (AddCommGroup.toAddGroup.{u3} E _inst_3))))) _inst_11 (Prod.fst.{u3, u5} (Set.{u3} E) ι Si)) (p (Prod.snd.{u3, u5} (Set.{u3} E) ι Si))) (fun (Si : Prod.{u3, u5} (Set.{u3} E) ι) => setOf.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (fun (f : ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) => forall (x : E), (Membership.Mem.{u3, u3} E (Set.{u3} E) (Set.hasMem.{u3} E) x (Prod.fst.{u3, u5} (Set.{u3} E) ι Si)) -> (Membership.Mem.{u4, u4} F (Set.{u4} F) (Set.hasMem.{u4} F) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) => E -> F) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) f x) (b (Prod.snd.{u3, u5} (Set.{u3} E) ι Si))))))
but is expected to have type
  forall {𝕜₁ : Type.{u2}} {𝕜₂ : Type.{u1}} [_inst_1 : NormedField.{u2} 𝕜₁] [_inst_2 : NormedField.{u1} 𝕜₂] {σ : RingHom.{u2, u1} 𝕜₁ 𝕜₂ (Semiring.toNonAssocSemiring.{u2} 𝕜₁ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1))))) (Semiring.toNonAssocSemiring.{u1} 𝕜₂ (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))))} {E : Type.{u3}} {F : Type.{u5}} [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u2, u3} 𝕜₁ E (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u5} F] [_inst_8 : Module.{u1, u5} 𝕜₂ F (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u5} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_12 : TopologicalSpace.{u5} F] [_inst_13 : TopologicalAddGroup.{u5} F _inst_12 (AddCommGroup.toAddGroup.{u5} F _inst_7)] {ι : Type.{u4}} {p : ι -> Prop} {b : ι -> (Set.{u5} F)}, (Filter.HasBasis.{u5, succ u4} F ι (nhds.{u5} F _inst_12 (OfNat.ofNat.{u5} F 0 (Zero.toOfNat0.{u5} F (NegZeroClass.toZero.{u5} F (SubNegZeroMonoid.toNegZeroClass.{u5} F (SubtractionMonoid.toSubNegZeroMonoid.{u5} F (SubtractionCommMonoid.toSubtractionMonoid.{u5} F (AddCommGroup.toDivisionAddCommMonoid.{u5} F _inst_7)))))))) p b) -> (Filter.HasBasis.{max u3 u5, max (succ u3) (succ u4)} (ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) (Prod.{u3, u4} (Set.{u3} E) ι) (nhds.{max u3 u5} (ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.topologicalSpace.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_12 _inst_13) (OfNat.ofNat.{max u3 u5} (ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) 0 (Zero.toOfNat0.{max u3 u5} (ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.zero.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8)))) (fun (Si : Prod.{u3, u4} (Set.{u3} E) ι) => And (Bornology.IsVonNBounded.{u2, u3} 𝕜₁ E (SeminormedCommRing.toSeminormedRing.{u2} 𝕜₁ (NormedCommRing.toSeminormedCommRing.{u2} 𝕜₁ (NormedField.toNormedCommRing.{u2} 𝕜₁ _inst_1))) (SMulZeroClass.toSMul.{u2, u3} 𝕜₁ E (NegZeroClass.toZero.{u3} E (SubNegZeroMonoid.toNegZeroClass.{u3} E (SubtractionMonoid.toSubNegZeroMonoid.{u3} E (SubtractionCommMonoid.toSubtractionMonoid.{u3} E (AddCommGroup.toDivisionAddCommMonoid.{u3} E _inst_3))))) (SMulWithZero.toSMulZeroClass.{u2, u3} 𝕜₁ E (CommMonoidWithZero.toZero.{u2} 𝕜₁ (CommGroupWithZero.toCommMonoidWithZero.{u2} 𝕜₁ (Semifield.toCommGroupWithZero.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1))))) (NegZeroClass.toZero.{u3} E (SubNegZeroMonoid.toNegZeroClass.{u3} E (SubtractionMonoid.toSubNegZeroMonoid.{u3} E (SubtractionCommMonoid.toSubtractionMonoid.{u3} E (AddCommGroup.toDivisionAddCommMonoid.{u3} E _inst_3))))) (MulActionWithZero.toSMulWithZero.{u2, u3} 𝕜₁ E (Semiring.toMonoidWithZero.{u2} 𝕜₁ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1))))) (NegZeroClass.toZero.{u3} E (SubNegZeroMonoid.toNegZeroClass.{u3} E (SubtractionMonoid.toSubNegZeroMonoid.{u3} E (SubtractionCommMonoid.toSubtractionMonoid.{u3} E (AddCommGroup.toDivisionAddCommMonoid.{u3} E _inst_3))))) (Module.toMulActionWithZero.{u2, u3} 𝕜₁ E (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) _inst_4)))) (NegZeroClass.toZero.{u3} E (SubNegZeroMonoid.toNegZeroClass.{u3} E (SubtractionMonoid.toSubNegZeroMonoid.{u3} E (SubtractionCommMonoid.toSubtractionMonoid.{u3} E (AddCommGroup.toDivisionAddCommMonoid.{u3} E _inst_3))))) _inst_11 (Prod.fst.{u3, u4} (Set.{u3} E) ι Si)) (p (Prod.snd.{u3, u4} (Set.{u3} E) ι Si))) (fun (Si : Prod.{u3, u4} (Set.{u3} E) ι) => setOf.{max u3 u5} (ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) (fun (f : ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) => forall (x : E), (Membership.mem.{u3, u3} E (Set.{u3} E) (Set.instMembershipSet.{u3} E) x (Prod.fst.{u3, u4} (Set.{u3} E) ι Si)) -> (Membership.mem.{u5, u5} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E) => F) x) (Set.{u5} F) (Set.instMembershipSet.{u5} F) (FunLike.coe.{max (succ u3) (succ u5), succ u3, succ u5} (ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) E (fun (_x : E) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E) => F) _x) (ContinuousMapClass.toFunLike.{max u3 u5, u3, u5} (ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) E F _inst_11 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u5, u2, u1, u3, u5} (ContinuousLinearMap.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8) 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u3, u5} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u5} F _inst_7) _inst_4 _inst_8))) f x) (b (Prod.snd.{u3, u4} (Set.{u3} E) ι Si))))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.has_basis_nhds_zero_of_basis ContinuousLinearMap.hasBasis_nhds_zero_of_basisₓ'. -/
protected theorem hasBasis_nhds_zero_of_basis [TopologicalSpace F] [TopologicalAddGroup F]
    {ι : Type _} {p : ι → Prop} {b : ι → Set F} (h : (𝓝 0 : Filter F).HasBasis p b) :
    (𝓝 (0 : E →SL[σ] F)).HasBasis (fun Si : Set E × ι => Bornology.IsVonNBounded 𝕜₁ Si.1 ∧ p Si.2)
      fun Si => { f : E →SL[σ] F | ∀ x ∈ Si.1, f x ∈ b Si.2 } :=
  strongTopology.hasBasis_nhds_zero_of_basis σ F { S | Bornology.IsVonNBounded 𝕜₁ S }
    ⟨∅, Bornology.isVonNBounded_empty 𝕜₁ E⟩
    (directedOn_of_sup_mem fun _ _ => Bornology.IsVonNBounded.union) h
#align continuous_linear_map.has_basis_nhds_zero_of_basis ContinuousLinearMap.hasBasis_nhds_zero_of_basis

/- warning: continuous_linear_map.has_basis_nhds_zero -> ContinuousLinearMap.hasBasis_nhds_zero is a dubious translation:
lean 3 declaration is
  forall {𝕜₁ : Type.{u1}} {𝕜₂ : Type.{u2}} [_inst_1 : NormedField.{u1} 𝕜₁] [_inst_2 : NormedField.{u2} 𝕜₂] {σ : RingHom.{u1, u2} 𝕜₁ 𝕜₂ (NonAssocRing.toNonAssocSemiring.{u1} 𝕜₁ (Ring.toNonAssocRing.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))))) (NonAssocRing.toNonAssocSemiring.{u2} 𝕜₂ (Ring.toNonAssocRing.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))))} {E : Type.{u3}} {F : Type.{u4}} [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u1, u3} 𝕜₁ E (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u2, u4} 𝕜₂ F (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_12 : TopologicalSpace.{u4} F] [_inst_13 : TopologicalAddGroup.{u4} F _inst_12 (AddCommGroup.toAddGroup.{u4} F _inst_7)], Filter.HasBasis.{max u3 u4, max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (Prod.{u3, u4} (Set.{u3} E) (Set.{u4} F)) (nhds.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.topologicalSpace.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_12 _inst_13) (OfNat.ofNat.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) 0 (OfNat.mk.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) 0 (Zero.zero.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.zero.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8))))) (fun (SV : Prod.{u3, u4} (Set.{u3} E) (Set.{u4} F)) => And (Bornology.IsVonNBounded.{u1, u3} 𝕜₁ E (SeminormedCommRing.toSemiNormedRing.{u1} 𝕜₁ (NormedCommRing.toSeminormedCommRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))) (SMulZeroClass.toHasSmul.{u1, u3} 𝕜₁ E (AddZeroClass.toHasZero.{u3} E (AddMonoid.toAddZeroClass.{u3} E (AddCommMonoid.toAddMonoid.{u3} E (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)))) (SMulWithZero.toSmulZeroClass.{u1, u3} 𝕜₁ E (MulZeroClass.toHasZero.{u1} 𝕜₁ (MulZeroOneClass.toMulZeroClass.{u1} 𝕜₁ (MonoidWithZero.toMulZeroOneClass.{u1} 𝕜₁ (Semiring.toMonoidWithZero.{u1} 𝕜₁ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))))))) (AddZeroClass.toHasZero.{u3} E (AddMonoid.toAddZeroClass.{u3} E (AddCommMonoid.toAddMonoid.{u3} E (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)))) (MulActionWithZero.toSMulWithZero.{u1, u3} 𝕜₁ E (Semiring.toMonoidWithZero.{u1} 𝕜₁ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1))))) (AddZeroClass.toHasZero.{u3} E (AddMonoid.toAddZeroClass.{u3} E (AddCommMonoid.toAddMonoid.{u3} E (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)))) (Module.toMulActionWithZero.{u1, u3} 𝕜₁ E (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) _inst_4)))) (AddZeroClass.toHasZero.{u3} E (AddMonoid.toAddZeroClass.{u3} E (SubNegMonoid.toAddMonoid.{u3} E (AddGroup.toSubNegMonoid.{u3} E (AddCommGroup.toAddGroup.{u3} E _inst_3))))) _inst_11 (Prod.fst.{u3, u4} (Set.{u3} E) (Set.{u4} F) SV)) (Membership.Mem.{u4, u4} (Set.{u4} F) (Filter.{u4} F) (Filter.hasMem.{u4} F) (Prod.snd.{u3, u4} (Set.{u3} E) (Set.{u4} F) SV) (nhds.{u4} F _inst_12 (OfNat.ofNat.{u4} F 0 (OfNat.mk.{u4} F 0 (Zero.zero.{u4} F (AddZeroClass.toHasZero.{u4} F (AddMonoid.toAddZeroClass.{u4} F (SubNegMonoid.toAddMonoid.{u4} F (AddGroup.toSubNegMonoid.{u4} F (AddCommGroup.toAddGroup.{u4} F _inst_7))))))))))) (fun (SV : Prod.{u3, u4} (Set.{u3} E) (Set.{u4} F)) => setOf.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (fun (f : ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) => forall (x : E), (Membership.Mem.{u3, u3} E (Set.{u3} E) (Set.hasMem.{u3} E) x (Prod.fst.{u3, u4} (Set.{u3} E) (Set.{u4} F) SV)) -> (Membership.Mem.{u4, u4} F (Set.{u4} F) (Set.hasMem.{u4} F) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) => E -> F) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} 𝕜₁ 𝕜₂ (Ring.toSemiring.{u1} 𝕜₁ (NormedRing.toRing.{u1} 𝕜₁ (NormedCommRing.toNormedRing.{u1} 𝕜₁ (NormedField.toNormedCommRing.{u1} 𝕜₁ _inst_1)))) (Ring.toSemiring.{u2} 𝕜₂ (NormedRing.toRing.{u2} 𝕜₂ (NormedCommRing.toNormedRing.{u2} 𝕜₂ (NormedField.toNormedCommRing.{u2} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) f x) (Prod.snd.{u3, u4} (Set.{u3} E) (Set.{u4} F) SV))))
but is expected to have type
  forall {𝕜₁ : Type.{u2}} {𝕜₂ : Type.{u1}} [_inst_1 : NormedField.{u2} 𝕜₁] [_inst_2 : NormedField.{u1} 𝕜₂] {σ : RingHom.{u2, u1} 𝕜₁ 𝕜₂ (Semiring.toNonAssocSemiring.{u2} 𝕜₁ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1))))) (Semiring.toNonAssocSemiring.{u1} 𝕜₂ (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))))} {E : Type.{u3}} {F : Type.{u4}} [_inst_3 : AddCommGroup.{u3} E] [_inst_4 : Module.{u2, u3} 𝕜₁ E (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3)] [_inst_7 : AddCommGroup.{u4} F] [_inst_8 : Module.{u1, u4} 𝕜₂ F (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} F _inst_7)] [_inst_11 : TopologicalSpace.{u3} E] [_inst_12 : TopologicalSpace.{u4} F] [_inst_13 : TopologicalAddGroup.{u4} F _inst_12 (AddCommGroup.toAddGroup.{u4} F _inst_7)], Filter.HasBasis.{max u3 u4, max (succ u3) (succ u4)} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (Prod.{u3, u4} (Set.{u3} E) (Set.{u4} F)) (nhds.{max u3 u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.topologicalSpace.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ _inst_1 _inst_2 σ E F _inst_3 _inst_4 _inst_7 _inst_8 _inst_11 _inst_12 _inst_13) (OfNat.ofNat.{max u3 u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) 0 (Zero.toOfNat0.{max u3 u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (ContinuousLinearMap.zero.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8)))) (fun (SV : Prod.{u3, u4} (Set.{u3} E) (Set.{u4} F)) => And (Bornology.IsVonNBounded.{u2, u3} 𝕜₁ E (SeminormedCommRing.toSeminormedRing.{u2} 𝕜₁ (NormedCommRing.toSeminormedCommRing.{u2} 𝕜₁ (NormedField.toNormedCommRing.{u2} 𝕜₁ _inst_1))) (SMulZeroClass.toSMul.{u2, u3} 𝕜₁ E (NegZeroClass.toZero.{u3} E (SubNegZeroMonoid.toNegZeroClass.{u3} E (SubtractionMonoid.toSubNegZeroMonoid.{u3} E (SubtractionCommMonoid.toSubtractionMonoid.{u3} E (AddCommGroup.toDivisionAddCommMonoid.{u3} E _inst_3))))) (SMulWithZero.toSMulZeroClass.{u2, u3} 𝕜₁ E (CommMonoidWithZero.toZero.{u2} 𝕜₁ (CommGroupWithZero.toCommMonoidWithZero.{u2} 𝕜₁ (Semifield.toCommGroupWithZero.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1))))) (NegZeroClass.toZero.{u3} E (SubNegZeroMonoid.toNegZeroClass.{u3} E (SubtractionMonoid.toSubNegZeroMonoid.{u3} E (SubtractionCommMonoid.toSubtractionMonoid.{u3} E (AddCommGroup.toDivisionAddCommMonoid.{u3} E _inst_3))))) (MulActionWithZero.toSMulWithZero.{u2, u3} 𝕜₁ E (Semiring.toMonoidWithZero.{u2} 𝕜₁ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1))))) (NegZeroClass.toZero.{u3} E (SubNegZeroMonoid.toNegZeroClass.{u3} E (SubtractionMonoid.toSubNegZeroMonoid.{u3} E (SubtractionCommMonoid.toSubtractionMonoid.{u3} E (AddCommGroup.toDivisionAddCommMonoid.{u3} E _inst_3))))) (Module.toMulActionWithZero.{u2, u3} 𝕜₁ E (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) _inst_4)))) (NegZeroClass.toZero.{u3} E (SubNegZeroMonoid.toNegZeroClass.{u3} E (SubtractionMonoid.toSubNegZeroMonoid.{u3} E (SubtractionCommMonoid.toSubtractionMonoid.{u3} E (AddCommGroup.toDivisionAddCommMonoid.{u3} E _inst_3))))) _inst_11 (Prod.fst.{u3, u4} (Set.{u3} E) (Set.{u4} F) SV)) (Membership.mem.{u4, u4} (Set.{u4} F) (Filter.{u4} F) (instMembershipSetFilter.{u4} F) (Prod.snd.{u3, u4} (Set.{u3} E) (Set.{u4} F) SV) (nhds.{u4} F _inst_12 (OfNat.ofNat.{u4} F 0 (Zero.toOfNat0.{u4} F (NegZeroClass.toZero.{u4} F (SubNegZeroMonoid.toNegZeroClass.{u4} F (SubtractionMonoid.toSubNegZeroMonoid.{u4} F (SubtractionCommMonoid.toSubtractionMonoid.{u4} F (AddCommGroup.toDivisionAddCommMonoid.{u4} F _inst_7)))))))))) (fun (SV : Prod.{u3, u4} (Set.{u3} E) (Set.{u4} F)) => setOf.{max u3 u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) (fun (f : ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) => forall (x : E), (Membership.mem.{u3, u3} E (Set.{u3} E) (Set.instMembershipSet.{u3} E) x (Prod.fst.{u3, u4} (Set.{u3} E) (Set.{u4} F) SV)) -> (Membership.mem.{u4, u4} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E) => F) x) (Set.{u4} F) (Set.instMembershipSet.{u4} F) (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) E (fun (_x : E) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E) => F) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) E F _inst_11 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u2, u1, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8) 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u3, u4} 𝕜₁ 𝕜₂ (DivisionSemiring.toSemiring.{u2} 𝕜₁ (Semifield.toDivisionSemiring.{u2} 𝕜₁ (Field.toSemifield.{u2} 𝕜₁ (NormedField.toField.{u2} 𝕜₁ _inst_1)))) (DivisionSemiring.toSemiring.{u1} 𝕜₂ (Semifield.toDivisionSemiring.{u1} 𝕜₂ (Field.toSemifield.{u1} 𝕜₂ (NormedField.toField.{u1} 𝕜₂ _inst_2)))) σ E _inst_11 (AddCommGroup.toAddCommMonoid.{u3} E _inst_3) F _inst_12 (AddCommGroup.toAddCommMonoid.{u4} F _inst_7) _inst_4 _inst_8))) f x) (Prod.snd.{u3, u4} (Set.{u3} E) (Set.{u4} F) SV))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.has_basis_nhds_zero ContinuousLinearMap.hasBasis_nhds_zeroₓ'. -/
protected theorem hasBasis_nhds_zero [TopologicalSpace F] [TopologicalAddGroup F] :
    (𝓝 (0 : E →SL[σ] F)).HasBasis
      (fun SV : Set E × Set F => Bornology.IsVonNBounded 𝕜₁ SV.1 ∧ SV.2 ∈ (𝓝 0 : Filter F))
      fun SV => { f : E →SL[σ] F | ∀ x ∈ SV.1, f x ∈ SV.2 } :=
  ContinuousLinearMap.hasBasis_nhds_zero_of_basis (𝓝 0).basis_sets
#align continuous_linear_map.has_basis_nhds_zero ContinuousLinearMap.hasBasis_nhds_zero

end BoundedSets

end ContinuousLinearMap

