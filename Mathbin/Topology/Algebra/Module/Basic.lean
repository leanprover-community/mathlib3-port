/-
Copyright (c) 2019 Sébastien Gouëzel. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Jan-David Salchow, Sébastien Gouëzel, Jean Lo, Yury Kudryashov, Frédéric Dupuis,
  Heather Macbeth

! This file was ported from Lean 3 source module topology.algebra.module.basic
! leanprover-community/mathlib commit d64d67d000b974f0d86a2be7918cf800be6271c8
! Please do not edit these lines, except to modify the commit id
! if you have ported upstream changes.
-/
import Mathbin.Topology.Algebra.Ring.Basic
import Mathbin.Topology.Algebra.MulAction
import Mathbin.Topology.Algebra.UniformGroup
import Mathbin.Topology.ContinuousFunction.Basic
import Mathbin.Topology.UniformSpace.UniformEmbedding
import Mathbin.Algebra.Algebra.Basic
import Mathbin.LinearAlgebra.Projection
import Mathbin.LinearAlgebra.Pi

/-!
# Theory of topological modules and continuous linear maps.

> THIS FILE IS SYNCHRONIZED WITH MATHLIB4.
> Any changes to this file require a corresponding PR to mathlib4.

We use the class `has_continuous_smul` for topological (semi) modules and topological vector spaces.

In this file we define continuous (semi-)linear maps, as semilinear maps between topological
modules which are continuous. The set of continuous semilinear maps between the topological
`R₁`-module `M` and `R₂`-module `M₂` with respect to the `ring_hom` `σ` is denoted by `M →SL[σ] M₂`.
Plain linear maps are denoted by `M →L[R] M₂` and star-linear maps by `M →L⋆[R] M₂`.

The corresponding notation for equivalences is `M ≃SL[σ] M₂`, `M ≃L[R] M₂` and `M ≃L⋆[R] M₂`.
-/


open Filter

open LinearMap (ker range)

open Topology BigOperators Filter

universe u v w u'

section

variable {R : Type _} {M : Type _} [Ring R] [TopologicalSpace R] [TopologicalSpace M]
  [AddCommGroup M] [Module R M]

/- warning: has_continuous_smul.of_nhds_zero -> ContinuousSMul.of_nhds_zero is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Ring.{u1} R] [_inst_2 : TopologicalSpace.{u1} R] [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] [_inst_6 : TopologicalRing.{u1} R _inst_2 (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))] [_inst_7 : TopologicalAddGroup.{u2} M _inst_3 (AddCommGroup.toAddGroup.{u2} M _inst_4)], (Filter.Tendsto.{max u1 u2, u2} (Prod.{u1, u2} R M) M (fun (p : Prod.{u1, u2} R M) => SMul.smul.{u1, u2} R M (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (Module.toMulActionWithZero.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))) (Prod.fst.{u1, u2} R M p) (Prod.snd.{u1, u2} R M p)) (Filter.prod.{u1, u2} R M (nhds.{u1} R _inst_2 (OfNat.ofNat.{u1} R 0 (OfNat.mk.{u1} R 0 (Zero.zero.{u1} R (MulZeroClass.toHasZero.{u1} R (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))))))))) (nhds.{u2} M _inst_3 (OfNat.ofNat.{u2} M 0 (OfNat.mk.{u2} M 0 (Zero.zero.{u2} M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (SubNegMonoid.toAddMonoid.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_4)))))))))) (nhds.{u2} M _inst_3 (OfNat.ofNat.{u2} M 0 (OfNat.mk.{u2} M 0 (Zero.zero.{u2} M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (SubNegMonoid.toAddMonoid.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_4)))))))))) -> (forall (m : M), Filter.Tendsto.{u1, u2} R M (fun (a : R) => SMul.smul.{u1, u2} R M (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (Module.toMulActionWithZero.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))) a m) (nhds.{u1} R _inst_2 (OfNat.ofNat.{u1} R 0 (OfNat.mk.{u1} R 0 (Zero.zero.{u1} R (MulZeroClass.toHasZero.{u1} R (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))))))))) (nhds.{u2} M _inst_3 (OfNat.ofNat.{u2} M 0 (OfNat.mk.{u2} M 0 (Zero.zero.{u2} M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (SubNegMonoid.toAddMonoid.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_4)))))))))) -> (forall (a : R), Filter.Tendsto.{u2, u2} M M (fun (m : M) => SMul.smul.{u1, u2} R M (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (Module.toMulActionWithZero.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))) a m) (nhds.{u2} M _inst_3 (OfNat.ofNat.{u2} M 0 (OfNat.mk.{u2} M 0 (Zero.zero.{u2} M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (SubNegMonoid.toAddMonoid.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_4))))))))) (nhds.{u2} M _inst_3 (OfNat.ofNat.{u2} M 0 (OfNat.mk.{u2} M 0 (Zero.zero.{u2} M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (SubNegMonoid.toAddMonoid.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_4)))))))))) -> (ContinuousSMul.{u1, u2} R M (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (Module.toMulActionWithZero.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))) _inst_2 _inst_3)
but is expected to have type
  forall {R : Type.{u2}} {M : Type.{u1}} [_inst_1 : Ring.{u2} R] [_inst_2 : TopologicalSpace.{u2} R] [_inst_3 : TopologicalSpace.{u1} M] [_inst_4 : AddCommGroup.{u1} M] [_inst_5 : Module.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4)] [_inst_6 : TopologicalRing.{u2} R _inst_2 (NonAssocRing.toNonUnitalNonAssocRing.{u2} R (Ring.toNonAssocRing.{u2} R _inst_1))] [_inst_7 : TopologicalAddGroup.{u1} M _inst_3 (AddCommGroup.toAddGroup.{u1} M _inst_4)], (Filter.Tendsto.{max u2 u1, u1} (Prod.{u2, u1} R M) M (fun (p : Prod.{u2, u1} R M) => HSMul.hSMul.{u2, u1, u1} R M M (instHSMul.{u2, u1} R M (SMulZeroClass.toSMul.{u2, u1} R M (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (SMulWithZero.toSMulZeroClass.{u2, u1} R M (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_1))) (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (MulActionWithZero.toSMulWithZero.{u2, u1} R M (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_1)) (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (Module.toMulActionWithZero.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_5))))) (Prod.fst.{u2, u1} R M p) (Prod.snd.{u2, u1} R M p)) (Filter.prod.{u2, u1} R M (nhds.{u2} R _inst_2 (OfNat.ofNat.{u2} R 0 (Zero.toOfNat0.{u2} R (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_1)))))) (nhds.{u1} M _inst_3 (OfNat.ofNat.{u1} M 0 (Zero.toOfNat0.{u1} M (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))))))) (nhds.{u1} M _inst_3 (OfNat.ofNat.{u1} M 0 (Zero.toOfNat0.{u1} M (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))))))) -> (forall (m : M), Filter.Tendsto.{u2, u1} R M (fun (a : R) => HSMul.hSMul.{u2, u1, u1} R M M (instHSMul.{u2, u1} R M (SMulZeroClass.toSMul.{u2, u1} R M (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (SMulWithZero.toSMulZeroClass.{u2, u1} R M (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_1))) (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (MulActionWithZero.toSMulWithZero.{u2, u1} R M (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_1)) (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (Module.toMulActionWithZero.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_5))))) a m) (nhds.{u2} R _inst_2 (OfNat.ofNat.{u2} R 0 (Zero.toOfNat0.{u2} R (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_1)))))) (nhds.{u1} M _inst_3 (OfNat.ofNat.{u1} M 0 (Zero.toOfNat0.{u1} M (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))))))) -> (forall (a : R), Filter.Tendsto.{u1, u1} M M (fun (m : M) => HSMul.hSMul.{u2, u1, u1} R M M (instHSMul.{u2, u1} R M (SMulZeroClass.toSMul.{u2, u1} R M (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (SMulWithZero.toSMulZeroClass.{u2, u1} R M (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_1))) (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (MulActionWithZero.toSMulWithZero.{u2, u1} R M (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_1)) (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (Module.toMulActionWithZero.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_5))))) a m) (nhds.{u1} M _inst_3 (OfNat.ofNat.{u1} M 0 (Zero.toOfNat0.{u1} M (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4)))))))) (nhds.{u1} M _inst_3 (OfNat.ofNat.{u1} M 0 (Zero.toOfNat0.{u1} M (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))))))) -> (ContinuousSMul.{u2, u1} R M (SMulZeroClass.toSMul.{u2, u1} R M (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (SMulWithZero.toSMulZeroClass.{u2, u1} R M (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_1))) (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (MulActionWithZero.toSMulWithZero.{u2, u1} R M (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_1)) (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (Module.toMulActionWithZero.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_5)))) _inst_2 _inst_3)
Case conversion may be inaccurate. Consider using '#align has_continuous_smul.of_nhds_zero ContinuousSMul.of_nhds_zeroₓ'. -/
theorem ContinuousSMul.of_nhds_zero [TopologicalRing R] [TopologicalAddGroup M]
    (hmul : Tendsto (fun p : R × M => p.1 • p.2) (𝓝 0 ×ᶠ 𝓝 0) (𝓝 0))
    (hmulleft : ∀ m : M, Tendsto (fun a : R => a • m) (𝓝 0) (𝓝 0))
    (hmulright : ∀ a : R, Tendsto (fun m : M => a • m) (𝓝 0) (𝓝 0)) : ContinuousSMul R M :=
  ⟨by
    rw [continuous_iff_continuousAt]
    rintro ⟨a₀, m₀⟩
    have key :
      ∀ p : R × M,
        p.1 • p.2 = a₀ • m₀ + ((p.1 - a₀) • m₀ + a₀ • (p.2 - m₀) + (p.1 - a₀) • (p.2 - m₀)) :=
      by
      rintro ⟨a, m⟩
      simp [sub_smul, smul_sub]
      abel
    rw [funext key]
    clear key
    refine' tendsto_const_nhds.add (tendsto.add (tendsto.add _ _) _)
    · rw [sub_self, zero_smul]
      apply (hmulleft m₀).comp
      rw [show (fun p : R × M => p.1 - a₀) = (fun a => a - a₀) ∘ Prod.fst
          by
          ext
          rfl,
        nhds_prod_eq]
      have : tendsto (fun a => a - a₀) (𝓝 a₀) (𝓝 0) :=
        by
        rw [← sub_self a₀]
        exact tendsto_id.sub tendsto_const_nhds
      exact this.comp tendsto_fst
    · rw [sub_self, smul_zero]
      apply (hmulright a₀).comp
      rw [show (fun p : R × M => p.2 - m₀) = (fun m => m - m₀) ∘ Prod.snd
          by
          ext
          rfl,
        nhds_prod_eq]
      have : tendsto (fun m => m - m₀) (𝓝 m₀) (𝓝 0) :=
        by
        rw [← sub_self m₀]
        exact tendsto_id.sub tendsto_const_nhds
      exact this.comp tendsto_snd
    · rw [sub_self, zero_smul, nhds_prod_eq,
        show
          (fun p : R × M => (p.fst - a₀) • (p.snd - m₀)) =
            (fun p : R × M => p.1 • p.2) ∘ Prod.map (fun a => a - a₀) fun m => m - m₀
          by
          ext
          rfl]
      apply hmul.comp (tendsto.prod_map _ _) <;>
        · rw [← sub_self]
          exact tendsto_id.sub tendsto_const_nhds⟩
#align has_continuous_smul.of_nhds_zero ContinuousSMul.of_nhds_zero

end

section

variable {R : Type _} {M : Type _} [Ring R] [TopologicalSpace R] [TopologicalSpace M]
  [AddCommGroup M] [ContinuousAdd M] [Module R M] [ContinuousSMul R M]

/- warning: submodule.eq_top_of_nonempty_interior' -> Submodule.eq_top_of_nonempty_interior' is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Ring.{u1} R] [_inst_2 : TopologicalSpace.{u1} R] [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : ContinuousAdd.{u2} M _inst_3 (AddZeroClass.toHasAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (SubNegMonoid.toAddMonoid.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_4)))))] [_inst_6 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] [_inst_7 : ContinuousSMul.{u1, u2} R M (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (Module.toMulActionWithZero.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6)))) _inst_2 _inst_3] [_inst_8 : Filter.NeBot.{u1} R (nhdsWithin.{u1} R _inst_2 (OfNat.ofNat.{u1} R 0 (OfNat.mk.{u1} R 0 (Zero.zero.{u1} R (MulZeroClass.toHasZero.{u1} R (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))))))) (setOf.{u1} R (fun (x : R) => IsUnit.{u1} R (Ring.toMonoid.{u1} R _inst_1) x)))] (s : Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6), (Set.Nonempty.{u2} M (interior.{u2} M _inst_3 ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6) (Set.{u2} M) (HasLiftT.mk.{succ u2, succ u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6) (Set.{u2} M) (CoeTCₓ.coe.{succ u2, succ u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6) (Set.{u2} M) (SetLike.Set.hasCoeT.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6)))) s))) -> (Eq.{succ u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6) s (Top.top.{u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6) (Submodule.hasTop.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6)))
but is expected to have type
  forall {R : Type.{u2}} {M : Type.{u1}} [_inst_1 : Ring.{u2} R] [_inst_2 : TopologicalSpace.{u2} R] [_inst_3 : TopologicalSpace.{u1} M] [_inst_4 : AddCommGroup.{u1} M] [_inst_5 : ContinuousAdd.{u1} M _inst_3 (AddZeroClass.toAdd.{u1} M (AddMonoid.toAddZeroClass.{u1} M (SubNegMonoid.toAddMonoid.{u1} M (AddGroup.toSubNegMonoid.{u1} M (AddCommGroup.toAddGroup.{u1} M _inst_4)))))] [_inst_6 : Module.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4)] [_inst_7 : ContinuousSMul.{u2, u1} R M (SMulZeroClass.toSMul.{u2, u1} R M (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (SMulWithZero.toSMulZeroClass.{u2, u1} R M (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_1))) (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (MulActionWithZero.toSMulWithZero.{u2, u1} R M (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_1)) (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (Module.toMulActionWithZero.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_6)))) _inst_2 _inst_3] [_inst_8 : Filter.NeBot.{u2} R (nhdsWithin.{u2} R _inst_2 (OfNat.ofNat.{u2} R 0 (Zero.toOfNat0.{u2} R (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_1))))) (setOf.{u2} R (fun (x : R) => IsUnit.{u2} R (MonoidWithZero.toMonoid.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_1))) x)))] (s : Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_6), (Set.Nonempty.{u1} M (interior.{u1} M _inst_3 (SetLike.coe.{u1, u1} (Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_6) M (Submodule.setLike.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_6) s))) -> (Eq.{succ u1} (Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_6) s (Top.top.{u1} (Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_6) (Submodule.instTopSubmodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_6)))
Case conversion may be inaccurate. Consider using '#align submodule.eq_top_of_nonempty_interior' Submodule.eq_top_of_nonempty_interior'ₓ'. -/
/-- If `M` is a topological module over `R` and `0` is a limit of invertible elements of `R`, then
`⊤` is the only submodule of `M` with a nonempty interior.
This is the case, e.g., if `R` is a nontrivially normed field. -/
theorem Submodule.eq_top_of_nonempty_interior' [NeBot (𝓝[{ x : R | IsUnit x }] 0)]
    (s : Submodule R M) (hs : (interior (s : Set M)).Nonempty) : s = ⊤ :=
  by
  rcases hs with ⟨y, hy⟩
  refine' Submodule.eq_top_iff'.2 fun x => _
  rw [mem_interior_iff_mem_nhds] at hy
  have : tendsto (fun c : R => y + c • x) (𝓝[{ x : R | IsUnit x }] 0) (𝓝 (y + (0 : R) • x)) :=
    tendsto_const_nhds.add ((tendsto_nhdsWithin_of_tendsto_nhds tendsto_id).smul tendsto_const_nhds)
  rw [zero_smul, add_zero] at this
  obtain ⟨_, hu : y + _ • _ ∈ s, u, rfl⟩ :=
    nonempty_of_mem (inter_mem (mem_map.1 (this hy)) self_mem_nhdsWithin)
  have hy' : y ∈ ↑s := mem_of_mem_nhds hy
  rwa [s.add_mem_iff_right hy', ← Units.smul_def, s.smul_mem_iff' u] at hu
#align submodule.eq_top_of_nonempty_interior' Submodule.eq_top_of_nonempty_interior'

variable (R M)

/- warning: module.punctured_nhds_ne_bot -> Module.punctured_nhds_neBot is a dubious translation:
lean 3 declaration is
  forall (R : Type.{u1}) (M : Type.{u2}) [_inst_1 : Ring.{u1} R] [_inst_2 : TopologicalSpace.{u1} R] [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : ContinuousAdd.{u2} M _inst_3 (AddZeroClass.toHasAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (SubNegMonoid.toAddMonoid.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_4)))))] [_inst_6 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] [_inst_7 : ContinuousSMul.{u1, u2} R M (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (Module.toMulActionWithZero.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6)))) _inst_2 _inst_3] [_inst_8 : Nontrivial.{u2} M] [_inst_9 : Filter.NeBot.{u1} R (nhdsWithin.{u1} R _inst_2 (OfNat.ofNat.{u1} R 0 (OfNat.mk.{u1} R 0 (Zero.zero.{u1} R (MulZeroClass.toHasZero.{u1} R (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))))))) (HasCompl.compl.{u1} (Set.{u1} R) (BooleanAlgebra.toHasCompl.{u1} (Set.{u1} R) (Set.booleanAlgebra.{u1} R)) (Singleton.singleton.{u1, u1} R (Set.{u1} R) (Set.hasSingleton.{u1} R) (OfNat.ofNat.{u1} R 0 (OfNat.mk.{u1} R 0 (Zero.zero.{u1} R (MulZeroClass.toHasZero.{u1} R (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))))))))))] [_inst_10 : NoZeroSMulDivisors.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (NonUnitalNonAssocSemiring.toMulZeroClass.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (SubNegMonoid.toAddMonoid.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_4))))) (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (Module.toMulActionWithZero.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6))))] (x : M), Filter.NeBot.{u2} M (nhdsWithin.{u2} M _inst_3 x (HasCompl.compl.{u2} (Set.{u2} M) (BooleanAlgebra.toHasCompl.{u2} (Set.{u2} M) (Set.booleanAlgebra.{u2} M)) (Singleton.singleton.{u2, u2} M (Set.{u2} M) (Set.hasSingleton.{u2} M) x)))
but is expected to have type
  forall (R : Type.{u1}) (M : Type.{u2}) [_inst_1 : Ring.{u1} R] [_inst_2 : TopologicalSpace.{u1} R] [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : ContinuousAdd.{u2} M _inst_3 (AddZeroClass.toAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (SubNegMonoid.toAddMonoid.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_4)))))] [_inst_6 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] [_inst_7 : ContinuousSMul.{u1, u2} R M (SMulZeroClass.toSMul.{u1, u2} R M (NegZeroClass.toZero.{u2} M (SubNegZeroMonoid.toNegZeroClass.{u2} M (SubtractionMonoid.toSubNegZeroMonoid.{u2} M (SubtractionCommMonoid.toSubtractionMonoid.{u2} M (AddCommGroup.toDivisionAddCommMonoid.{u2} M _inst_4))))) (SMulWithZero.toSMulZeroClass.{u1, u2} R M (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (NegZeroClass.toZero.{u2} M (SubNegZeroMonoid.toNegZeroClass.{u2} M (SubtractionMonoid.toSubNegZeroMonoid.{u2} M (SubtractionCommMonoid.toSubtractionMonoid.{u2} M (AddCommGroup.toDivisionAddCommMonoid.{u2} M _inst_4))))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (NegZeroClass.toZero.{u2} M (SubNegZeroMonoid.toNegZeroClass.{u2} M (SubtractionMonoid.toSubNegZeroMonoid.{u2} M (SubtractionCommMonoid.toSubtractionMonoid.{u2} M (AddCommGroup.toDivisionAddCommMonoid.{u2} M _inst_4))))) (Module.toMulActionWithZero.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6)))) _inst_2 _inst_3] [_inst_8 : Nontrivial.{u2} M] [_inst_9 : Filter.NeBot.{u1} R (nhdsWithin.{u1} R _inst_2 (OfNat.ofNat.{u1} R 0 (Zero.toOfNat0.{u1} R (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) (HasCompl.compl.{u1} (Set.{u1} R) (BooleanAlgebra.toHasCompl.{u1} (Set.{u1} R) (Set.instBooleanAlgebraSet.{u1} R)) (Singleton.singleton.{u1, u1} R (Set.{u1} R) (Set.instSingletonSet.{u1} R) (OfNat.ofNat.{u1} R 0 (Zero.toOfNat0.{u1} R (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))))))))] [_inst_10 : NoZeroSMulDivisors.{u1, u2} R M (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (NegZeroClass.toZero.{u2} M (SubNegZeroMonoid.toNegZeroClass.{u2} M (SubtractionMonoid.toSubNegZeroMonoid.{u2} M (SubtractionCommMonoid.toSubtractionMonoid.{u2} M (AddCommGroup.toDivisionAddCommMonoid.{u2} M _inst_4))))) (SMulZeroClass.toSMul.{u1, u2} R M (NegZeroClass.toZero.{u2} M (SubNegZeroMonoid.toNegZeroClass.{u2} M (SubtractionMonoid.toSubNegZeroMonoid.{u2} M (SubtractionCommMonoid.toSubtractionMonoid.{u2} M (AddCommGroup.toDivisionAddCommMonoid.{u2} M _inst_4))))) (SMulWithZero.toSMulZeroClass.{u1, u2} R M (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (NegZeroClass.toZero.{u2} M (SubNegZeroMonoid.toNegZeroClass.{u2} M (SubtractionMonoid.toSubNegZeroMonoid.{u2} M (SubtractionCommMonoid.toSubtractionMonoid.{u2} M (AddCommGroup.toDivisionAddCommMonoid.{u2} M _inst_4))))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (NegZeroClass.toZero.{u2} M (SubNegZeroMonoid.toNegZeroClass.{u2} M (SubtractionMonoid.toSubNegZeroMonoid.{u2} M (SubtractionCommMonoid.toSubtractionMonoid.{u2} M (AddCommGroup.toDivisionAddCommMonoid.{u2} M _inst_4))))) (Module.toMulActionWithZero.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6))))] (x : M), Filter.NeBot.{u2} M (nhdsWithin.{u2} M _inst_3 x (HasCompl.compl.{u2} (Set.{u2} M) (BooleanAlgebra.toHasCompl.{u2} (Set.{u2} M) (Set.instBooleanAlgebraSet.{u2} M)) (Singleton.singleton.{u2, u2} M (Set.{u2} M) (Set.instSingletonSet.{u2} M) x)))
Case conversion may be inaccurate. Consider using '#align module.punctured_nhds_ne_bot Module.punctured_nhds_neBotₓ'. -/
/-- Let `R` be a topological ring such that zero is not an isolated point (e.g., a nontrivially
normed field, see `normed_field.punctured_nhds_ne_bot`). Let `M` be a nontrivial module over `R`
such that `c • x = 0` implies `c = 0 ∨ x = 0`. Then `M` has no isolated points. We formulate this
using `ne_bot (𝓝[≠] x)`.

This lemma is not an instance because Lean would need to find `[has_continuous_smul ?m_1 M]` with
unknown `?m_1`. We register this as an instance for `R = ℝ` in `real.punctured_nhds_module_ne_bot`.
One can also use `haveI := module.punctured_nhds_ne_bot R M` in a proof.
-/
theorem Module.punctured_nhds_neBot [Nontrivial M] [NeBot (𝓝[≠] (0 : R))] [NoZeroSMulDivisors R M]
    (x : M) : NeBot (𝓝[≠] x) :=
  by
  rcases exists_ne (0 : M) with ⟨y, hy⟩
  suffices : tendsto (fun c : R => x + c • y) (𝓝[≠] 0) (𝓝[≠] x); exact this.ne_bot
  refine' tendsto.inf _ (tendsto_principal_principal.2 <| _)
  · convert tendsto_const_nhds.add ((@tendsto_id R _).smul_const y)
    rw [zero_smul, add_zero]
  · intro c hc
    simpa [hy] using hc
#align module.punctured_nhds_ne_bot Module.punctured_nhds_neBot

end

section LatticeOps

variable {ι R M₁ M₂ : Type _} [Semiring R] [AddCommMonoid M₁] [AddCommMonoid M₂] [Module R M₁]
  [Module R M₂] [u : TopologicalSpace R] {t : TopologicalSpace M₂} [ContinuousSMul R M₂]
  (f : M₁ →ₗ[R] M₂)

/- warning: has_continuous_smul_induced -> continuousSMul_induced is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M₁ : Type.{u2}} {M₂ : Type.{u3}} [_inst_1 : Semiring.{u1} R] [_inst_2 : AddCommMonoid.{u2} M₁] [_inst_3 : AddCommMonoid.{u3} M₂] [_inst_4 : Module.{u1, u2} R M₁ _inst_1 _inst_2] [_inst_5 : Module.{u1, u3} R M₂ _inst_1 _inst_3] [u : TopologicalSpace.{u1} R] {t : TopologicalSpace.{u3} M₂} [_inst_6 : ContinuousSMul.{u1, u3} R M₂ (SMulZeroClass.toHasSmul.{u1, u3} R M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ _inst_3))) (SMulWithZero.toSmulZeroClass.{u1, u3} R M₂ (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ _inst_3))) (MulActionWithZero.toSMulWithZero.{u1, u3} R M₂ (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ _inst_3))) (Module.toMulActionWithZero.{u1, u3} R M₂ _inst_1 _inst_3 _inst_5)))) u t] (f : LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M₁ M₂ _inst_2 _inst_3 _inst_4 _inst_5), ContinuousSMul.{u1, u2} R M₁ (SMulZeroClass.toHasSmul.{u1, u2} R M₁ (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_2))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M₁ (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_2))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M₁ (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_2))) (Module.toMulActionWithZero.{u1, u2} R M₁ _inst_1 _inst_2 _inst_4)))) u (TopologicalSpace.induced.{u2, u3} M₁ M₂ (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M₁ M₂ _inst_2 _inst_3 _inst_4 _inst_5) (fun (_x : LinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M₁ M₂ _inst_2 _inst_3 _inst_4 _inst_5) => M₁ -> M₂) (LinearMap.hasCoeToFun.{u1, u1, u2, u3} R R M₁ M₂ _inst_1 _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) f) t)
but is expected to have type
  forall {R : Type.{u3}} {M₁ : Type.{u2}} {M₂ : Type.{u1}} [_inst_1 : Semiring.{u3} R] [_inst_2 : AddCommMonoid.{u2} M₁] [_inst_3 : AddCommMonoid.{u1} M₂] [_inst_4 : Module.{u3, u2} R M₁ _inst_1 _inst_2] [_inst_5 : Module.{u3, u1} R M₂ _inst_1 _inst_3] [u : TopologicalSpace.{u3} R] {t : TopologicalSpace.{u1} M₂} [_inst_6 : ContinuousSMul.{u3, u1} R M₂ (SMulZeroClass.toSMul.{u3, u1} R M₂ (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_3)) (SMulWithZero.toSMulZeroClass.{u3, u1} R M₂ (MonoidWithZero.toZero.{u3} R (Semiring.toMonoidWithZero.{u3} R _inst_1)) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_3)) (MulActionWithZero.toSMulWithZero.{u3, u1} R M₂ (Semiring.toMonoidWithZero.{u3} R _inst_1) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_3)) (Module.toMulActionWithZero.{u3, u1} R M₂ _inst_1 _inst_3 _inst_5)))) u t] (f : LinearMap.{u3, u3, u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_1)) M₁ M₂ _inst_2 _inst_3 _inst_4 _inst_5), ContinuousSMul.{u3, u2} R M₁ (SMulZeroClass.toSMul.{u3, u2} R M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_2)) (SMulWithZero.toSMulZeroClass.{u3, u2} R M₁ (MonoidWithZero.toZero.{u3} R (Semiring.toMonoidWithZero.{u3} R _inst_1)) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_2)) (MulActionWithZero.toSMulWithZero.{u3, u2} R M₁ (Semiring.toMonoidWithZero.{u3} R _inst_1) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_2)) (Module.toMulActionWithZero.{u3, u2} R M₁ _inst_1 _inst_2 _inst_4)))) u (TopologicalSpace.induced.{u2, u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (LinearMap.{u3, u3, u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_1)) M₁ M₂ _inst_2 _inst_3 _inst_4 _inst_5) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) _x) (LinearMap.instFunLikeLinearMap.{u3, u3, u2, u1} R R M₁ M₂ _inst_1 _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_1))) f) t)
Case conversion may be inaccurate. Consider using '#align has_continuous_smul_induced continuousSMul_inducedₓ'. -/
theorem continuousSMul_induced : @ContinuousSMul R M₁ _ u (t.induced f) :=
  {
    continuous_smul := by
      letI : TopologicalSpace M₁ := t.induced f
      refine' continuous_induced_rng.2 _
      simp_rw [Function.comp, f.map_smul]
      refine' continuous_fst.smul (continuous_induced_dom.comp continuous_snd) }
#align has_continuous_smul_induced continuousSMul_induced

end LatticeOps

namespace Submodule

variable {α β : Type _} [TopologicalSpace β]

instance [TopologicalSpace α] [Semiring α] [AddCommMonoid β] [Module α β] [ContinuousSMul α β]
    (S : Submodule α β) : ContinuousSMul α S
    where continuous_smul :=
    by
    rw [embedding_subtype_coe.to_inducing.continuous_iff]
    exact continuous_fst.smul (continuous_subtype_coe.comp continuous_snd)

instance [Ring α] [AddCommGroup β] [Module α β] [TopologicalAddGroup β] (S : Submodule α β) :
    TopologicalAddGroup S :=
  S.toAddSubgroup.TopologicalAddGroup

end Submodule

section closure

variable {R : Type u} {M : Type v} [Semiring R] [TopologicalSpace R] [TopologicalSpace M]
  [AddCommMonoid M] [Module R M] [ContinuousSMul R M]

/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/
/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/
/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/
/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/
theorem Submodule.closure_smul_self_subset (s : Submodule R M) :
    (fun p : R × M => p.1 • p.2) '' Set.univ ×ˢ closure s ⊆ closure s :=
  calc
    (fun p : R × M => p.1 • p.2) '' Set.univ ×ˢ closure s =
        (fun p : R × M => p.1 • p.2) '' closure (Set.univ ×ˢ s) :=
      by simp [closure_prod_eq]
    _ ⊆ closure ((fun p : R × M => p.1 • p.2) '' Set.univ ×ˢ s) :=
      (image_closure_subset_closure_image continuous_smul)
    _ = closure s := by
      congr
      ext x
      refine' ⟨_, fun hx => ⟨⟨1, x⟩, ⟨Set.mem_univ _, hx⟩, one_smul R _⟩⟩
      rintro ⟨⟨c, y⟩, ⟨hc, hy⟩, rfl⟩
      simp [s.smul_mem c hy]
    
#align submodule.closure_smul_self_subset Submodule.closure_smul_self_subset

/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/
theorem Submodule.closure_smul_self_eq (s : Submodule R M) :
    (fun p : R × M => p.1 • p.2) '' Set.univ ×ˢ closure s = closure s :=
  s.closure_smul_self_subset.antisymm fun x hx => ⟨⟨1, x⟩, ⟨Set.mem_univ _, hx⟩, one_smul R _⟩
#align submodule.closure_smul_self_eq Submodule.closure_smul_self_eq

variable [ContinuousAdd M]

/- warning: submodule.topological_closure -> Submodule.topologicalClosure is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u1} R] [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommMonoid.{u2} M] [_inst_5 : Module.{u1, u2} R M _inst_1 _inst_4] [_inst_6 : ContinuousSMul.{u1, u2} R M (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) _inst_2 _inst_3] [_inst_7 : ContinuousAdd.{u2} M _inst_3 (AddZeroClass.toHasAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4)))], (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) -> (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5)
but is expected to have type
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_1 _inst_3] [_inst_5 : ContinuousConstSMul.{u1, u2} R M _inst_2 (SMulZeroClass.toSMul.{u1, u2} R M (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (SMulWithZero.toSMulZeroClass.{u1, u2} R M (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_3 _inst_4))))] [_inst_6 : ContinuousAdd.{u2} M _inst_2 (AddZeroClass.toAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)))], (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) -> (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4)
Case conversion may be inaccurate. Consider using '#align submodule.topological_closure Submodule.topologicalClosureₓ'. -/
/-- The (topological-space) closure of a submodule of a topological `R`-module `M` is itself
a submodule. -/
def Submodule.topologicalClosure (s : Submodule R M) : Submodule R M :=
  {
    s.toAddSubmonoid.topologicalClosure with
    carrier := closure (s : Set M)
    smul_mem' := fun c x hx => s.closure_smul_self_subset ⟨⟨c, x⟩, ⟨Set.mem_univ _, hx⟩, rfl⟩ }
#align submodule.topological_closure Submodule.topologicalClosure

/- warning: submodule.topological_closure_coe -> Submodule.topologicalClosure_coe is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u1} R] [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommMonoid.{u2} M] [_inst_5 : Module.{u1, u2} R M _inst_1 _inst_4] [_inst_6 : ContinuousSMul.{u1, u2} R M (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) _inst_2 _inst_3] [_inst_7 : ContinuousAdd.{u2} M _inst_3 (AddZeroClass.toHasAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4)))] (s : Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5), Eq.{succ u2} (Set.{u2} M) ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (HasLiftT.mk.{succ u2, succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (CoeTCₓ.coe.{succ u2, succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (SetLike.Set.hasCoeT.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) (Submodule.topologicalClosure.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 s)) (closure.{u2} M _inst_3 ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (HasLiftT.mk.{succ u2, succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (CoeTCₓ.coe.{succ u2, succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (SetLike.Set.hasCoeT.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) s))
but is expected to have type
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_1 _inst_3] [_inst_5 : ContinuousConstSMul.{u1, u2} R M _inst_2 (SMulZeroClass.toSMul.{u1, u2} R M (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (SMulWithZero.toSMulZeroClass.{u1, u2} R M (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_3 _inst_4))))] [_inst_6 : ContinuousAdd.{u2} M _inst_2 (AddZeroClass.toAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)))] (_inst_7 : Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4), Eq.{succ u2} (Set.{u2} M) (SetLike.coe.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_3 _inst_4) (Submodule.topologicalClosure.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7)) (closure.{u2} M _inst_2 (SetLike.coe.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_3 _inst_4) _inst_7))
Case conversion may be inaccurate. Consider using '#align submodule.topological_closure_coe Submodule.topologicalClosure_coeₓ'. -/
@[simp]
theorem Submodule.topologicalClosure_coe (s : Submodule R M) :
    (s.topologicalClosure : Set M) = closure (s : Set M) :=
  rfl
#align submodule.topological_closure_coe Submodule.topologicalClosure_coe

/- warning: submodule.le_topological_closure -> Submodule.le_topologicalClosure is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u1} R] [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommMonoid.{u2} M] [_inst_5 : Module.{u1, u2} R M _inst_1 _inst_4] [_inst_6 : ContinuousSMul.{u1, u2} R M (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) _inst_2 _inst_3] [_inst_7 : ContinuousAdd.{u2} M _inst_3 (AddZeroClass.toHasAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4)))] (s : Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5), LE.le.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Preorder.toHasLe.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (PartialOrder.toPreorder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (SetLike.partialOrder.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) s (Submodule.topologicalClosure.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 s)
but is expected to have type
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_1 _inst_3] [_inst_5 : ContinuousConstSMul.{u1, u2} R M _inst_2 (SMulZeroClass.toSMul.{u1, u2} R M (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (SMulWithZero.toSMulZeroClass.{u1, u2} R M (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_3 _inst_4))))] [_inst_6 : ContinuousAdd.{u2} M _inst_2 (AddZeroClass.toAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)))] (_inst_7 : Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4), LE.le.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (Preorder.toLE.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (PartialOrder.toPreorder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (OmegaCompletePartialOrder.toPartialOrder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (CompleteLattice.instOmegaCompletePartialOrder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (Submodule.completeLattice.{u1, u2} R M _inst_1 _inst_3 _inst_4))))) _inst_7 (Submodule.topologicalClosure.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7)
Case conversion may be inaccurate. Consider using '#align submodule.le_topological_closure Submodule.le_topologicalClosureₓ'. -/
theorem Submodule.le_topologicalClosure (s : Submodule R M) : s ≤ s.topologicalClosure :=
  subset_closure
#align submodule.le_topological_closure Submodule.le_topologicalClosure

/- warning: submodule.is_closed_topological_closure -> Submodule.isClosed_topologicalClosure is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u1} R] [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommMonoid.{u2} M] [_inst_5 : Module.{u1, u2} R M _inst_1 _inst_4] [_inst_6 : ContinuousSMul.{u1, u2} R M (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) _inst_2 _inst_3] [_inst_7 : ContinuousAdd.{u2} M _inst_3 (AddZeroClass.toHasAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4)))] (s : Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5), IsClosed.{u2} M _inst_3 ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (HasLiftT.mk.{succ u2, succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (CoeTCₓ.coe.{succ u2, succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (SetLike.Set.hasCoeT.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) (Submodule.topologicalClosure.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 s))
but is expected to have type
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_1 _inst_3] [_inst_5 : ContinuousConstSMul.{u1, u2} R M _inst_2 (SMulZeroClass.toSMul.{u1, u2} R M (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (SMulWithZero.toSMulZeroClass.{u1, u2} R M (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_3 _inst_4))))] [_inst_6 : ContinuousAdd.{u2} M _inst_2 (AddZeroClass.toAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)))] (_inst_7 : Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4), IsClosed.{u2} M _inst_2 (SetLike.coe.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_3 _inst_4) (Submodule.topologicalClosure.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7))
Case conversion may be inaccurate. Consider using '#align submodule.is_closed_topological_closure Submodule.isClosed_topologicalClosureₓ'. -/
theorem Submodule.isClosed_topologicalClosure (s : Submodule R M) :
    IsClosed (s.topologicalClosure : Set M) := by convert isClosed_closure
#align submodule.is_closed_topological_closure Submodule.isClosed_topologicalClosure

/- warning: submodule.topological_closure_minimal -> Submodule.topologicalClosure_minimal is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u1} R] [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommMonoid.{u2} M] [_inst_5 : Module.{u1, u2} R M _inst_1 _inst_4] [_inst_6 : ContinuousSMul.{u1, u2} R M (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) _inst_2 _inst_3] [_inst_7 : ContinuousAdd.{u2} M _inst_3 (AddZeroClass.toHasAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4)))] (s : Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) {t : Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5}, (LE.le.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Preorder.toHasLe.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (PartialOrder.toPreorder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (SetLike.partialOrder.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) s t) -> (IsClosed.{u2} M _inst_3 ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (HasLiftT.mk.{succ u2, succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (CoeTCₓ.coe.{succ u2, succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (SetLike.Set.hasCoeT.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) t)) -> (LE.le.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Preorder.toHasLe.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (PartialOrder.toPreorder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (SetLike.partialOrder.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) (Submodule.topologicalClosure.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 s) t)
but is expected to have type
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_1 _inst_3] [_inst_5 : ContinuousConstSMul.{u1, u2} R M _inst_2 (SMulZeroClass.toSMul.{u1, u2} R M (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (SMulWithZero.toSMulZeroClass.{u1, u2} R M (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_3 _inst_4))))] [_inst_6 : ContinuousAdd.{u2} M _inst_2 (AddZeroClass.toAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)))] (_inst_7 : Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) {s : Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4}, (LE.le.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (Preorder.toLE.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (PartialOrder.toPreorder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (OmegaCompletePartialOrder.toPartialOrder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (CompleteLattice.instOmegaCompletePartialOrder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (Submodule.completeLattice.{u1, u2} R M _inst_1 _inst_3 _inst_4))))) _inst_7 s) -> (IsClosed.{u2} M _inst_2 (SetLike.coe.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_3 _inst_4) s)) -> (LE.le.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (Preorder.toLE.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (PartialOrder.toPreorder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (OmegaCompletePartialOrder.toPartialOrder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (CompleteLattice.instOmegaCompletePartialOrder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (Submodule.completeLattice.{u1, u2} R M _inst_1 _inst_3 _inst_4))))) (Submodule.topologicalClosure.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7) s)
Case conversion may be inaccurate. Consider using '#align submodule.topological_closure_minimal Submodule.topologicalClosure_minimalₓ'. -/
theorem Submodule.topologicalClosure_minimal (s : Submodule R M) {t : Submodule R M} (h : s ≤ t)
    (ht : IsClosed (t : Set M)) : s.topologicalClosure ≤ t :=
  closure_minimal h ht
#align submodule.topological_closure_minimal Submodule.topologicalClosure_minimal

/- warning: submodule.topological_closure_mono -> Submodule.topologicalClosure_mono is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u1} R] [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommMonoid.{u2} M] [_inst_5 : Module.{u1, u2} R M _inst_1 _inst_4] [_inst_6 : ContinuousSMul.{u1, u2} R M (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) _inst_2 _inst_3] [_inst_7 : ContinuousAdd.{u2} M _inst_3 (AddZeroClass.toHasAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4)))] {s : Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5} {t : Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5}, (LE.le.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Preorder.toHasLe.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (PartialOrder.toPreorder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (SetLike.partialOrder.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) s t) -> (LE.le.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Preorder.toHasLe.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (PartialOrder.toPreorder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (SetLike.partialOrder.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) (Submodule.topologicalClosure.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 s) (Submodule.topologicalClosure.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 t))
but is expected to have type
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_1 _inst_3] [_inst_5 : ContinuousConstSMul.{u1, u2} R M _inst_2 (SMulZeroClass.toSMul.{u1, u2} R M (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (SMulWithZero.toSMulZeroClass.{u1, u2} R M (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_3 _inst_4))))] [_inst_6 : ContinuousAdd.{u2} M _inst_2 (AddZeroClass.toAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)))] {_inst_7 : Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4} {s : Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4}, (LE.le.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (Preorder.toLE.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (PartialOrder.toPreorder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (OmegaCompletePartialOrder.toPartialOrder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (CompleteLattice.instOmegaCompletePartialOrder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (Submodule.completeLattice.{u1, u2} R M _inst_1 _inst_3 _inst_4))))) _inst_7 s) -> (LE.le.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (Preorder.toLE.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (PartialOrder.toPreorder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (OmegaCompletePartialOrder.toPartialOrder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (CompleteLattice.instOmegaCompletePartialOrder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (Submodule.completeLattice.{u1, u2} R M _inst_1 _inst_3 _inst_4))))) (Submodule.topologicalClosure.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7) (Submodule.topologicalClosure.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 s))
Case conversion may be inaccurate. Consider using '#align submodule.topological_closure_mono Submodule.topologicalClosure_monoₓ'. -/
theorem Submodule.topologicalClosure_mono {s : Submodule R M} {t : Submodule R M} (h : s ≤ t) :
    s.topologicalClosure ≤ t.topologicalClosure :=
  s.topologicalClosure_minimal (h.trans t.le_topologicalClosure) t.isClosed_topologicalClosure
#align submodule.topological_closure_mono Submodule.topologicalClosure_mono

/- warning: is_closed.submodule_topological_closure_eq -> IsClosed.submodule_topologicalClosure_eq is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u1} R] [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommMonoid.{u2} M] [_inst_5 : Module.{u1, u2} R M _inst_1 _inst_4] [_inst_6 : ContinuousSMul.{u1, u2} R M (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) _inst_2 _inst_3] [_inst_7 : ContinuousAdd.{u2} M _inst_3 (AddZeroClass.toHasAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4)))] {s : Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5}, (IsClosed.{u2} M _inst_3 ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (HasLiftT.mk.{succ u2, succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (CoeTCₓ.coe.{succ u2, succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (SetLike.Set.hasCoeT.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) s)) -> (Eq.{succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Submodule.topologicalClosure.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 s) s)
but is expected to have type
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_1 _inst_3] [_inst_5 : ContinuousConstSMul.{u1, u2} R M _inst_2 (SMulZeroClass.toSMul.{u1, u2} R M (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (SMulWithZero.toSMulZeroClass.{u1, u2} R M (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_3 _inst_4))))] [_inst_6 : ContinuousAdd.{u2} M _inst_2 (AddZeroClass.toAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)))] {_inst_7 : Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4}, (IsClosed.{u2} M _inst_2 (SetLike.coe.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_3 _inst_4) _inst_7)) -> (Eq.{succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (Submodule.topologicalClosure.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7) _inst_7)
Case conversion may be inaccurate. Consider using '#align is_closed.submodule_topological_closure_eq IsClosed.submodule_topologicalClosure_eqₓ'. -/
/-- The topological closure of a closed submodule `s` is equal to `s`. -/
theorem IsClosed.submodule_topologicalClosure_eq {s : Submodule R M} (hs : IsClosed (s : Set M)) :
    s.topologicalClosure = s :=
  le_antisymm (s.topologicalClosure_minimal rfl.le hs) s.le_topologicalClosure
#align is_closed.submodule_topological_closure_eq IsClosed.submodule_topologicalClosure_eq

/- warning: submodule.dense_iff_topological_closure_eq_top -> Submodule.dense_iff_topologicalClosure_eq_top is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u1} R] [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommMonoid.{u2} M] [_inst_5 : Module.{u1, u2} R M _inst_1 _inst_4] [_inst_6 : ContinuousSMul.{u1, u2} R M (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) _inst_2 _inst_3] [_inst_7 : ContinuousAdd.{u2} M _inst_3 (AddZeroClass.toHasAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4)))] {s : Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5}, Iff (Dense.{u2} M _inst_3 ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (HasLiftT.mk.{succ u2, succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (CoeTCₓ.coe.{succ u2, succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (SetLike.Set.hasCoeT.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) s)) (Eq.{succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Submodule.topologicalClosure.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 s) (Top.top.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Submodule.hasTop.{u1, u2} R M _inst_1 _inst_4 _inst_5)))
but is expected to have type
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_1 _inst_3] [_inst_5 : ContinuousConstSMul.{u1, u2} R M _inst_2 (SMulZeroClass.toSMul.{u1, u2} R M (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (SMulWithZero.toSMulZeroClass.{u1, u2} R M (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_3 _inst_4))))] [_inst_6 : ContinuousAdd.{u2} M _inst_2 (AddZeroClass.toAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)))] {_inst_7 : Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4}, Iff (Dense.{u2} M _inst_2 (SetLike.coe.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_3 _inst_4) _inst_7)) (Eq.{succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (Submodule.topologicalClosure.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7) (Top.top.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (Submodule.instTopSubmodule.{u1, u2} R M _inst_1 _inst_3 _inst_4)))
Case conversion may be inaccurate. Consider using '#align submodule.dense_iff_topological_closure_eq_top Submodule.dense_iff_topologicalClosure_eq_topₓ'. -/
/-- A subspace is dense iff its topological closure is the entire space. -/
theorem Submodule.dense_iff_topologicalClosure_eq_top {s : Submodule R M} :
    Dense (s : Set M) ↔ s.topologicalClosure = ⊤ :=
  by
  rw [← SetLike.coe_set_eq, dense_iff_closure_eq]
  simp
#align submodule.dense_iff_topological_closure_eq_top Submodule.dense_iff_topologicalClosure_eq_top

instance {M' : Type _} [AddCommMonoid M'] [Module R M'] [UniformSpace M'] [ContinuousAdd M']
    [ContinuousSMul R M'] [CompleteSpace M'] (U : Submodule R M') :
    CompleteSpace U.topologicalClosure :=
  isClosed_closure.completeSpace_coe

/- warning: submodule.is_closed_or_dense_of_is_coatom -> Submodule.isClosed_or_dense_of_isCoatom is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u1} R] [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommMonoid.{u2} M] [_inst_5 : Module.{u1, u2} R M _inst_1 _inst_4] [_inst_6 : ContinuousSMul.{u1, u2} R M (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4))) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) _inst_2 _inst_3] [_inst_7 : ContinuousAdd.{u2} M _inst_3 (AddZeroClass.toHasAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_4)))] (s : Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5), (IsCoatom.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (PartialOrder.toPreorder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (SetLike.partialOrder.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_4 _inst_5))) (Submodule.orderTop.{u1, u2} R M _inst_1 _inst_4 _inst_5) s) -> (Or (IsClosed.{u2} M _inst_3 ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (HasLiftT.mk.{succ u2, succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (CoeTCₓ.coe.{succ u2, succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (SetLike.Set.hasCoeT.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) s)) (Dense.{u2} M _inst_3 ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (HasLiftT.mk.{succ u2, succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (CoeTCₓ.coe.{succ u2, succ u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) (Set.{u2} M) (SetLike.Set.hasCoeT.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_4 _inst_5) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_4 _inst_5)))) s)))
but is expected to have type
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_1 _inst_3] [_inst_5 : ContinuousConstSMul.{u1, u2} R M _inst_2 (SMulZeroClass.toSMul.{u1, u2} R M (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (SMulWithZero.toSMulZeroClass.{u1, u2} R M (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddMonoid.toZero.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)) (Module.toMulActionWithZero.{u1, u2} R M _inst_1 _inst_3 _inst_4))))] [_inst_6 : ContinuousAdd.{u2} M _inst_2 (AddZeroClass.toAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M _inst_3)))] (_inst_7 : Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4), (IsCoatom.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (PartialOrder.toPreorder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (OmegaCompletePartialOrder.toPartialOrder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (CompleteLattice.instOmegaCompletePartialOrder.{u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) (Submodule.completeLattice.{u1, u2} R M _inst_1 _inst_3 _inst_4)))) (Submodule.instOrderTopSubmoduleToLEToPreorderInstPartialOrderSetLike.{u1, u2} R M _inst_1 _inst_3 _inst_4) _inst_7) -> (Or (IsClosed.{u2} M _inst_2 (SetLike.coe.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_3 _inst_4) _inst_7)) (Dense.{u2} M _inst_2 (SetLike.coe.{u2, u2} (Submodule.{u1, u2} R M _inst_1 _inst_3 _inst_4) M (Submodule.setLike.{u1, u2} R M _inst_1 _inst_3 _inst_4) _inst_7)))
Case conversion may be inaccurate. Consider using '#align submodule.is_closed_or_dense_of_is_coatom Submodule.isClosed_or_dense_of_isCoatomₓ'. -/
/-- A maximal proper subspace of a topological module (i.e a `submodule` satisfying `is_coatom`)
is either closed or dense. -/
theorem Submodule.isClosed_or_dense_of_isCoatom (s : Submodule R M) (hs : IsCoatom s) :
    IsClosed (s : Set M) ∨ Dense (s : Set M) :=
  (hs.le_iff.mp s.le_topologicalClosure).symm.imp (isClosed_of_closure_subset ∘ Eq.le)
    Submodule.dense_iff_topologicalClosure_eq_top.mpr
#align submodule.is_closed_or_dense_of_is_coatom Submodule.isClosed_or_dense_of_isCoatom

end closure

section Pi

/- warning: linear_map.continuous_on_pi -> LinearMap.continuous_on_pi is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} {R : Type.{u2}} {M : Type.{u3}} [_inst_1 : Finite.{succ u1} ι] [_inst_2 : Semiring.{u2} R] [_inst_3 : TopologicalSpace.{u2} R] [_inst_4 : AddCommMonoid.{u3} M] [_inst_5 : Module.{u2, u3} R M _inst_2 _inst_4] [_inst_6 : TopologicalSpace.{u3} M] [_inst_7 : ContinuousAdd.{u3} M _inst_6 (AddZeroClass.toHasAdd.{u3} M (AddMonoid.toAddZeroClass.{u3} M (AddCommMonoid.toAddMonoid.{u3} M _inst_4)))] [_inst_8 : ContinuousSMul.{u2, u3} R M (SMulZeroClass.toHasSmul.{u2, u3} R M (AddZeroClass.toHasZero.{u3} M (AddMonoid.toAddZeroClass.{u3} M (AddCommMonoid.toAddMonoid.{u3} M _inst_4))) (SMulWithZero.toSmulZeroClass.{u2, u3} R M (MulZeroClass.toHasZero.{u2} R (MulZeroOneClass.toMulZeroClass.{u2} R (MonoidWithZero.toMulZeroOneClass.{u2} R (Semiring.toMonoidWithZero.{u2} R _inst_2)))) (AddZeroClass.toHasZero.{u3} M (AddMonoid.toAddZeroClass.{u3} M (AddCommMonoid.toAddMonoid.{u3} M _inst_4))) (MulActionWithZero.toSMulWithZero.{u2, u3} R M (Semiring.toMonoidWithZero.{u2} R _inst_2) (AddZeroClass.toHasZero.{u3} M (AddMonoid.toAddZeroClass.{u3} M (AddCommMonoid.toAddMonoid.{u3} M _inst_4))) (Module.toMulActionWithZero.{u2, u3} R M _inst_2 _inst_4 _inst_5)))) _inst_3 _inst_6] (f : LinearMap.{u2, u2, max u1 u2, u3} R R _inst_2 _inst_2 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (ι -> R) M (Pi.addCommMonoid.{u1, u2} ι (fun (ᾰ : ι) => R) (fun (i : ι) => NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)))) _inst_4 (Pi.Function.module.{u1, u2, u2} ι R R _inst_2 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2))) (Semiring.toModule.{u2} R _inst_2)) _inst_5), Continuous.{max u1 u2, u3} (ι -> R) M (Pi.topologicalSpace.{u1, u2} ι (fun (ᾰ : ι) => R) (fun (a : ι) => _inst_3)) _inst_6 (coeFn.{max (succ (max u1 u2)) (succ u3), max (succ (max u1 u2)) (succ u3)} (LinearMap.{u2, u2, max u1 u2, u3} R R _inst_2 _inst_2 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (ι -> R) M (Pi.addCommMonoid.{u1, u2} ι (fun (ᾰ : ι) => R) (fun (i : ι) => NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)))) _inst_4 (Pi.Function.module.{u1, u2, u2} ι R R _inst_2 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2))) (Semiring.toModule.{u2} R _inst_2)) _inst_5) (fun (_x : LinearMap.{u2, u2, max u1 u2, u3} R R _inst_2 _inst_2 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (ι -> R) M (Pi.addCommMonoid.{u1, u2} ι (fun (ᾰ : ι) => R) (fun (i : ι) => NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)))) _inst_4 (Pi.Function.module.{u1, u2, u2} ι R R _inst_2 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2))) (Semiring.toModule.{u2} R _inst_2)) _inst_5) => (ι -> R) -> M) (LinearMap.hasCoeToFun.{u2, u2, max u1 u2, u3} R R (ι -> R) M _inst_2 _inst_2 (Pi.addCommMonoid.{u1, u2} ι (fun (ᾰ : ι) => R) (fun (i : ι) => NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)))) _inst_4 (Pi.Function.module.{u1, u2, u2} ι R R _inst_2 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2))) (Semiring.toModule.{u2} R _inst_2)) _inst_5 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2))) f)
but is expected to have type
  forall {ι : Type.{u3}} {R : Type.{u2}} {M : Type.{u1}} [_inst_1 : Finite.{succ u3} ι] [_inst_2 : Semiring.{u2} R] [_inst_3 : TopologicalSpace.{u2} R] [_inst_4 : AddCommMonoid.{u1} M] [_inst_5 : Module.{u2, u1} R M _inst_2 _inst_4] [_inst_6 : TopologicalSpace.{u1} M] [_inst_7 : ContinuousAdd.{u1} M _inst_6 (AddZeroClass.toAdd.{u1} M (AddMonoid.toAddZeroClass.{u1} M (AddCommMonoid.toAddMonoid.{u1} M _inst_4)))] [_inst_8 : ContinuousSMul.{u2, u1} R M (SMulZeroClass.toSMul.{u2, u1} R M (AddMonoid.toZero.{u1} M (AddCommMonoid.toAddMonoid.{u1} M _inst_4)) (SMulWithZero.toSMulZeroClass.{u2, u1} R M (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R _inst_2)) (AddMonoid.toZero.{u1} M (AddCommMonoid.toAddMonoid.{u1} M _inst_4)) (MulActionWithZero.toSMulWithZero.{u2, u1} R M (Semiring.toMonoidWithZero.{u2} R _inst_2) (AddMonoid.toZero.{u1} M (AddCommMonoid.toAddMonoid.{u1} M _inst_4)) (Module.toMulActionWithZero.{u2, u1} R M _inst_2 _inst_4 _inst_5)))) _inst_3 _inst_6] (f : LinearMap.{u2, u2, max u3 u2, u1} R R _inst_2 _inst_2 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (ι -> R) M (Pi.addCommMonoid.{u3, u2} ι (fun (ᾰ : ι) => R) (fun (i : ι) => NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)))) _inst_4 (Pi.module.{u3, u2, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.5153 : ι) => R) R _inst_2 (fun (i : ι) => NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2))) (fun (i : ι) => Semiring.toModule.{u2} R _inst_2)) _inst_5), Continuous.{max u3 u2, u1} (ι -> R) M (Pi.topologicalSpace.{u3, u2} ι (fun (ᾰ : ι) => R) (fun (a : ι) => _inst_3)) _inst_6 (FunLike.coe.{max (max (succ u3) (succ u2)) (succ u1), max (succ u3) (succ u2), succ u1} (LinearMap.{u2, u2, max u3 u2, u1} R R _inst_2 _inst_2 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (ι -> R) M (Pi.addCommMonoid.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.5153 : ι) => R) (fun (i : ι) => NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)))) _inst_4 (Pi.module.{u3, u2, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.5153 : ι) => R) R _inst_2 (fun (i : ι) => NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2))) (fun (i : ι) => Semiring.toModule.{u2} R _inst_2)) _inst_5) (ι -> R) (fun (_x : ι -> R) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : ι -> R) => M) _x) (LinearMap.instFunLikeLinearMap.{u2, u2, max u3 u2, u1} R R (ι -> R) M _inst_2 _inst_2 (Pi.addCommMonoid.{u3, u2} ι (fun (ᾰ : ι) => R) (fun (i : ι) => NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)))) _inst_4 (Pi.module.{u3, u2, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.5153 : ι) => R) R _inst_2 (fun (i : ι) => NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2))) (fun (i : ι) => Semiring.toModule.{u2} R _inst_2)) _inst_5 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2))) f)
Case conversion may be inaccurate. Consider using '#align linear_map.continuous_on_pi LinearMap.continuous_on_piₓ'. -/
theorem LinearMap.continuous_on_pi {ι : Type _} {R : Type _} {M : Type _} [Finite ι] [Semiring R]
    [TopologicalSpace R] [AddCommMonoid M] [Module R M] [TopologicalSpace M] [ContinuousAdd M]
    [ContinuousSMul R M] (f : (ι → R) →ₗ[R] M) : Continuous f :=
  by
  cases nonempty_fintype ι
  classical
    -- for the proof, write `f` in the standard basis, and use that each coordinate is a continuous
    -- function.
    have : (f : (ι → R) → M) = fun x => ∑ i : ι, x i • f fun j => if i = j then 1 else 0 :=
      by
      ext x
      exact f.pi_apply_eq_sum_univ x
    rw [this]
    refine' continuous_finset_sum _ fun i hi => _
    exact (continuous_apply i).smul continuous_const
#align linear_map.continuous_on_pi LinearMap.continuous_on_pi

end Pi

#print ContinuousLinearMap /-
/-- Continuous linear maps between modules. We only put the type classes that are necessary for the
definition, although in applications `M` and `M₂` will be topological modules over the topological
ring `R`. -/
structure ContinuousLinearMap {R : Type _} {S : Type _} [Semiring R] [Semiring S] (σ : R →+* S)
  (M : Type _) [TopologicalSpace M] [AddCommMonoid M] (M₂ : Type _) [TopologicalSpace M₂]
  [AddCommMonoid M₂] [Module R M] [Module S M₂] extends M →ₛₗ[σ] M₂ where
  cont : Continuous to_fun := by continuity
#align continuous_linear_map ContinuousLinearMap
-/

-- mathport name: «expr →SL[ ] »
notation:25 M " →SL[" σ "] " M₂ => ContinuousLinearMap σ M M₂

-- mathport name: «expr →L[ ] »
notation:25 M " →L[" R "] " M₂ => ContinuousLinearMap (RingHom.id R) M M₂

-- mathport name: «expr →L⋆[ ] »
notation:25 M " →L⋆[" R "] " M₂ => ContinuousLinearMap (starRingEnd R) M M₂

#print ContinuousSemilinearMapClass /-
/-- `continuous_semilinear_map_class F σ M M₂` asserts `F` is a type of bundled continuous
`σ`-semilinear maps `M → M₂`.  See also `continuous_linear_map_class F R M M₂` for the case where
`σ` is the identity map on `R`.  A map `f` between an `R`-module and an `S`-module over a ring
homomorphism `σ : R →+* S` is semilinear if it satisfies the two properties `f (x + y) = f x + f y`
and `f (c • x) = (σ c) • f x`. -/
class ContinuousSemilinearMapClass (F : Type _) {R S : outParam (Type _)} [Semiring R] [Semiring S]
  (σ : outParam <| R →+* S) (M : outParam (Type _)) [TopologicalSpace M] [AddCommMonoid M]
  (M₂ : outParam (Type _)) [TopologicalSpace M₂] [AddCommMonoid M₂] [Module R M]
  [Module S M₂] extends SemilinearMapClass F σ M M₂, ContinuousMapClass F M M₂
#align continuous_semilinear_map_class ContinuousSemilinearMapClass
-/

-- `σ`, `R` and `S` become metavariables, but they are all outparams so it's OK
attribute [nolint dangerous_instance] ContinuousSemilinearMapClass.toContinuousMapClass

#print ContinuousLinearMapClass /-
/-- `continuous_linear_map_class F R M M₂` asserts `F` is a type of bundled continuous
`R`-linear maps `M → M₂`.  This is an abbreviation for
`continuous_semilinear_map_class F (ring_hom.id R) M M₂`.  -/
abbrev ContinuousLinearMapClass (F : Type _) (R : outParam (Type _)) [Semiring R]
    (M : outParam (Type _)) [TopologicalSpace M] [AddCommMonoid M] (M₂ : outParam (Type _))
    [TopologicalSpace M₂] [AddCommMonoid M₂] [Module R M] [Module R M₂] :=
  ContinuousSemilinearMapClass F (RingHom.id R) M M₂
#align continuous_linear_map_class ContinuousLinearMapClass
-/

#print ContinuousLinearEquiv /-
/-- Continuous linear equivalences between modules. We only put the type classes that are necessary
for the definition, although in applications `M` and `M₂` will be topological modules over the
topological semiring `R`. -/
@[nolint has_nonempty_instance]
structure ContinuousLinearEquiv {R : Type _} {S : Type _} [Semiring R] [Semiring S] (σ : R →+* S)
  {σ' : S →+* R} [RingHomInvPair σ σ'] [RingHomInvPair σ' σ] (M : Type _) [TopologicalSpace M]
  [AddCommMonoid M] (M₂ : Type _) [TopologicalSpace M₂] [AddCommMonoid M₂] [Module R M]
  [Module S M₂] extends M ≃ₛₗ[σ] M₂ where
  continuous_toFun : Continuous to_fun := by continuity
  continuous_invFun : Continuous inv_fun := by continuity
#align continuous_linear_equiv ContinuousLinearEquiv
-/

-- mathport name: «expr ≃SL[ ] »
notation:50 M " ≃SL[" σ "] " M₂ => ContinuousLinearEquiv σ M M₂

-- mathport name: «expr ≃L[ ] »
notation:50 M " ≃L[" R "] " M₂ => ContinuousLinearEquiv (RingHom.id R) M M₂

-- mathport name: «expr ≃L⋆[ ] »
notation:50 M " ≃L⋆[" R "] " M₂ => ContinuousLinearEquiv (starRingEnd R) M M₂

#print ContinuousSemilinearEquivClass /-
/-- `continuous_semilinear_equiv_class F σ M M₂` asserts `F` is a type of bundled continuous
`σ`-semilinear equivs `M → M₂`.  See also `continuous_linear_equiv_class F R M M₂` for the case
where `σ` is the identity map on `R`.  A map `f` between an `R`-module and an `S`-module over a ring
homomorphism `σ : R →+* S` is semilinear if it satisfies the two properties `f (x + y) = f x + f y`
and `f (c • x) = (σ c) • f x`. -/
class ContinuousSemilinearEquivClass (F : Type _) {R : outParam (Type _)} {S : outParam (Type _)}
  [Semiring R] [Semiring S] (σ : outParam <| R →+* S) {σ' : outParam <| S →+* R}
  [RingHomInvPair σ σ'] [RingHomInvPair σ' σ] (M : outParam (Type _)) [TopologicalSpace M]
  [AddCommMonoid M] (M₂ : outParam (Type _)) [TopologicalSpace M₂] [AddCommMonoid M₂] [Module R M]
  [Module S M₂] extends SemilinearEquivClass F σ M M₂ where
  map_continuous : ∀ f : F, Continuous f := by continuity
  inv_continuous : ∀ f : F, Continuous (inv f) := by continuity
#align continuous_semilinear_equiv_class ContinuousSemilinearEquivClass
-/

#print ContinuousLinearEquivClass /-
/-- `continuous_linear_equiv_class F σ M M₂` asserts `F` is a type of bundled continuous
`R`-linear equivs `M → M₂`. This is an abbreviation for
`continuous_semilinear_equiv_class F (ring_hom.id) M M₂`. -/
abbrev ContinuousLinearEquivClass (F : Type _) (R : outParam (Type _)) [Semiring R]
    (M : outParam (Type _)) [TopologicalSpace M] [AddCommMonoid M] (M₂ : outParam (Type _))
    [TopologicalSpace M₂] [AddCommMonoid M₂] [Module R M] [Module R M₂] :=
  ContinuousSemilinearEquivClass F (RingHom.id R) M M₂
#align continuous_linear_equiv_class ContinuousLinearEquivClass
-/

namespace ContinuousSemilinearEquivClass

variable (F : Type _) {R : Type _} {S : Type _} [Semiring R] [Semiring S] (σ : R →+* S)
  {σ' : S →+* R} [RingHomInvPair σ σ'] [RingHomInvPair σ' σ] (M : Type _) [TopologicalSpace M]
  [AddCommMonoid M] (M₂ : Type _) [TopologicalSpace M₂] [AddCommMonoid M₂] [Module R M]
  [Module S M₂]

include σ'

-- `σ'` becomes a metavariable, but it's OK since it's an outparam
@[nolint dangerous_instance]
instance (priority := 100) [s : ContinuousSemilinearEquivClass F σ M M₂] :
    ContinuousSemilinearMapClass F σ M M₂ :=
  { s with
    coe := (coe : F → M → M₂)
    coe_injective' := @FunLike.coe_injective F _ _ _ }

omit σ'

end ContinuousSemilinearEquivClass

section PointwiseLimits

variable {M₁ M₂ α R S : Type _} [TopologicalSpace M₂] [T2Space M₂] [Semiring R] [Semiring S]
  [AddCommMonoid M₁] [AddCommMonoid M₂] [Module R M₁] [Module S M₂] [ContinuousConstSMul S M₂]

section

variable (M₁ M₂) (σ : R →+* S)

theorem isClosed_setOf_map_smul : IsClosed { f : M₁ → M₂ | ∀ c x, f (c • x) = σ c • f x } :=
  by
  simp only [Set.setOf_forall]
  exact
    isClosed_iInter fun c =>
      isClosed_iInter fun x => isClosed_eq (continuous_apply _) ((continuous_apply _).const_smul _)
#align is_closed_set_of_map_smul isClosed_setOf_map_smulₓ

end

variable [ContinuousAdd M₂] {σ : R →+* S} {l : Filter α}

/- warning: linear_map_of_mem_closure_range_coe -> linearMapOfMemClosureRangeCoe is a dubious translation:
lean 3 declaration is
  forall {M₁ : Type.{u1}} {M₂ : Type.{u2}} {R : Type.{u3}} {S : Type.{u4}} [_inst_1 : TopologicalSpace.{u2} M₂] [_inst_2 : T2Space.{u2} M₂ _inst_1] [_inst_3 : Semiring.{u3} R] [_inst_4 : Semiring.{u4} S] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_6 : AddCommMonoid.{u2} M₂] [_inst_7 : Module.{u3, u1} R M₁ _inst_3 _inst_5] [_inst_8 : Module.{u4, u2} S M₂ _inst_4 _inst_6] [_inst_9 : ContinuousConstSMul.{u4, u2} S M₂ _inst_1 (SMulZeroClass.toHasSmul.{u4, u2} S M₂ (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6))) (SMulWithZero.toSmulZeroClass.{u4, u2} S M₂ (MulZeroClass.toHasZero.{u4} S (MulZeroOneClass.toMulZeroClass.{u4} S (MonoidWithZero.toMulZeroOneClass.{u4} S (Semiring.toMonoidWithZero.{u4} S _inst_4)))) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6))) (MulActionWithZero.toSMulWithZero.{u4, u2} S M₂ (Semiring.toMonoidWithZero.{u4} S _inst_4) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6))) (Module.toMulActionWithZero.{u4, u2} S M₂ _inst_4 _inst_6 _inst_8))))] [_inst_10 : ContinuousAdd.{u2} M₂ _inst_1 (AddZeroClass.toHasAdd.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6)))] {σ : RingHom.{u3, u4} R S (Semiring.toNonAssocSemiring.{u3} R _inst_3) (Semiring.toNonAssocSemiring.{u4} S _inst_4)} (f : M₁ -> M₂), (Membership.Mem.{max u1 u2, max u1 u2} (M₁ -> M₂) (Set.{max u1 u2} (M₁ -> M₂)) (Set.hasMem.{max u1 u2} (M₁ -> M₂)) f (closure.{max u1 u2} (M₁ -> M₂) (Pi.topologicalSpace.{u1, u2} M₁ (fun (ᾰ : M₁) => M₂) (fun (a : M₁) => _inst_1)) (Set.range.{max u1 u2, max (succ u1) (succ u2)} (M₁ -> M₂) (LinearMap.{u3, u4, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8) (coeFn.{max (succ u1) (succ u2), max (succ u1) (succ u2)} (LinearMap.{u3, u4, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8) (fun (ᾰ : LinearMap.{u3, u4, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8) => M₁ -> M₂) (LinearMap.hasCoeToFun.{u3, u4, u1, u2} R S M₁ M₂ _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 _inst_8 σ))))) -> (LinearMap.{u3, u4, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8)
but is expected to have type
  forall {M₁ : Type.{u1}} {M₂ : Type.{u2}} {R : Type.{u3}} {S : Type.{u4}} [_inst_1 : TopologicalSpace.{u2} M₂] [_inst_2 : T2Space.{u2} M₂ _inst_1] [_inst_3 : Semiring.{u3} R] [_inst_4 : Semiring.{u4} S] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_6 : AddCommMonoid.{u2} M₂] [_inst_7 : Module.{u3, u1} R M₁ _inst_3 _inst_5] [_inst_8 : Module.{u4, u2} S M₂ _inst_4 _inst_6] [_inst_9 : ContinuousConstSMul.{u4, u2} S M₂ _inst_1 (SMulZeroClass.toSMul.{u4, u2} S M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6)) (SMulWithZero.toSMulZeroClass.{u4, u2} S M₂ (MonoidWithZero.toZero.{u4} S (Semiring.toMonoidWithZero.{u4} S _inst_4)) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6)) (MulActionWithZero.toSMulWithZero.{u4, u2} S M₂ (Semiring.toMonoidWithZero.{u4} S _inst_4) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6)) (Module.toMulActionWithZero.{u4, u2} S M₂ _inst_4 _inst_6 _inst_8))))] [_inst_10 : ContinuousAdd.{u2} M₂ _inst_1 (AddZeroClass.toAdd.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6)))] {σ : RingHom.{u3, u4} R S (Semiring.toNonAssocSemiring.{u3} R _inst_3) (Semiring.toNonAssocSemiring.{u4} S _inst_4)} (f : M₁ -> M₂), (Membership.mem.{max u1 u2, max u1 u2} (M₁ -> M₂) (Set.{max u1 u2} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) ᾰ)) (Set.instMembershipSet.{max u1 u2} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) ᾰ)) f (closure.{max u1 u2} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) ᾰ) (Pi.topologicalSpace.{u1, u2} M₁ (fun (ᾰ : M₁) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) ᾰ) (fun (a : M₁) => _inst_1)) (Set.range.{max u1 u2, max (succ u1) (succ u2)} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) ᾰ) (LinearMap.{u3, u4, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8) (FunLike.coe.{max (succ u1) (succ u2), succ u1, succ u2} (LinearMap.{u3, u4, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8) M₁ (fun (ᾰ : M₁) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) ᾰ) (LinearMap.instFunLikeLinearMap.{u3, u4, u1, u2} R S M₁ M₂ _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 _inst_8 σ))))) -> (LinearMap.{u3, u4, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8)
Case conversion may be inaccurate. Consider using '#align linear_map_of_mem_closure_range_coe linearMapOfMemClosureRangeCoeₓ'. -/
/-- Constructs a bundled linear map from a function and a proof that this function belongs to the
closure of the set of linear maps. -/
@[simps (config := { fullyApplied := false })]
def linearMapOfMemClosureRangeCoe (f : M₁ → M₂)
    (hf : f ∈ closure (Set.range (coeFn : (M₁ →ₛₗ[σ] M₂) → M₁ → M₂))) : M₁ →ₛₗ[σ] M₂ :=
  { addMonoidHomOfMemClosureRangeCoe f hf with
    toFun := f
    map_smul' :=
      (isClosed_setOf_map_smul M₁ M₂ σ).closure_subset_iff.2
        (Set.range_subset_iff.2 LinearMap.map_smulₛₗ) hf }
#align linear_map_of_mem_closure_range_coe linearMapOfMemClosureRangeCoe

/- warning: linear_map_of_tendsto -> linearMapOfTendsto is a dubious translation:
lean 3 declaration is
  forall {M₁ : Type.{u1}} {M₂ : Type.{u2}} {α : Type.{u3}} {R : Type.{u4}} {S : Type.{u5}} [_inst_1 : TopologicalSpace.{u2} M₂] [_inst_2 : T2Space.{u2} M₂ _inst_1] [_inst_3 : Semiring.{u4} R] [_inst_4 : Semiring.{u5} S] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_6 : AddCommMonoid.{u2} M₂] [_inst_7 : Module.{u4, u1} R M₁ _inst_3 _inst_5] [_inst_8 : Module.{u5, u2} S M₂ _inst_4 _inst_6] [_inst_9 : ContinuousConstSMul.{u5, u2} S M₂ _inst_1 (SMulZeroClass.toHasSmul.{u5, u2} S M₂ (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6))) (SMulWithZero.toSmulZeroClass.{u5, u2} S M₂ (MulZeroClass.toHasZero.{u5} S (MulZeroOneClass.toMulZeroClass.{u5} S (MonoidWithZero.toMulZeroOneClass.{u5} S (Semiring.toMonoidWithZero.{u5} S _inst_4)))) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6))) (MulActionWithZero.toSMulWithZero.{u5, u2} S M₂ (Semiring.toMonoidWithZero.{u5} S _inst_4) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6))) (Module.toMulActionWithZero.{u5, u2} S M₂ _inst_4 _inst_6 _inst_8))))] [_inst_10 : ContinuousAdd.{u2} M₂ _inst_1 (AddZeroClass.toHasAdd.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6)))] {σ : RingHom.{u4, u5} R S (Semiring.toNonAssocSemiring.{u4} R _inst_3) (Semiring.toNonAssocSemiring.{u5} S _inst_4)} {l : Filter.{u3} α} (f : M₁ -> M₂) (g : α -> (LinearMap.{u4, u5, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8)) [_inst_11 : Filter.NeBot.{u3} α l], (Filter.Tendsto.{u3, max u1 u2} α (M₁ -> M₂) (fun (a : α) (x : M₁) => coeFn.{max (succ u1) (succ u2), max (succ u1) (succ u2)} (LinearMap.{u4, u5, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8) (fun (_x : LinearMap.{u4, u5, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8) => M₁ -> M₂) (LinearMap.hasCoeToFun.{u4, u5, u1, u2} R S M₁ M₂ _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 _inst_8 σ) (g a) x) l (nhds.{max u1 u2} (M₁ -> M₂) (Pi.topologicalSpace.{u1, u2} M₁ (fun (x : M₁) => M₂) (fun (a : M₁) => _inst_1)) f)) -> (LinearMap.{u4, u5, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8)
but is expected to have type
  forall {M₁ : Type.{u1}} {M₂ : Type.{u2}} {α : Type.{u3}} {R : Type.{u4}} {S : Type.{u5}} [_inst_1 : TopologicalSpace.{u2} M₂] [_inst_2 : T2Space.{u2} M₂ _inst_1] [_inst_3 : Semiring.{u4} R] [_inst_4 : Semiring.{u5} S] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_6 : AddCommMonoid.{u2} M₂] [_inst_7 : Module.{u4, u1} R M₁ _inst_3 _inst_5] [_inst_8 : Module.{u5, u2} S M₂ _inst_4 _inst_6] [_inst_9 : ContinuousConstSMul.{u5, u2} S M₂ _inst_1 (SMulZeroClass.toSMul.{u5, u2} S M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6)) (SMulWithZero.toSMulZeroClass.{u5, u2} S M₂ (MonoidWithZero.toZero.{u5} S (Semiring.toMonoidWithZero.{u5} S _inst_4)) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6)) (MulActionWithZero.toSMulWithZero.{u5, u2} S M₂ (Semiring.toMonoidWithZero.{u5} S _inst_4) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6)) (Module.toMulActionWithZero.{u5, u2} S M₂ _inst_4 _inst_6 _inst_8))))] [_inst_10 : ContinuousAdd.{u2} M₂ _inst_1 (AddZeroClass.toAdd.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6)))] {σ : RingHom.{u4, u5} R S (Semiring.toNonAssocSemiring.{u4} R _inst_3) (Semiring.toNonAssocSemiring.{u5} S _inst_4)} {l : Filter.{u3} α} (f : M₁ -> M₂) (g : α -> (LinearMap.{u4, u5, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8)) [_inst_11 : Filter.NeBot.{u3} α l], (Filter.Tendsto.{u3, max u1 u2} α (forall (x : M₁), (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) x) (fun (a : α) (x : M₁) => FunLike.coe.{max (succ u1) (succ u2), succ u1, succ u2} (LinearMap.{u4, u5, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) _x) (LinearMap.instFunLikeLinearMap.{u4, u5, u1, u2} R S M₁ M₂ _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 _inst_8 σ) (g a) x) l (nhds.{max u1 u2} (forall (x : M₁), (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) x) (Pi.topologicalSpace.{u1, u2} M₁ (fun (x : M₁) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) x) (fun (a : M₁) => _inst_1)) f)) -> (LinearMap.{u4, u5, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8)
Case conversion may be inaccurate. Consider using '#align linear_map_of_tendsto linearMapOfTendstoₓ'. -/
/-- Construct a bundled linear map from a pointwise limit of linear maps -/
@[simps (config := { fullyApplied := false })]
def linearMapOfTendsto (f : M₁ → M₂) (g : α → M₁ →ₛₗ[σ] M₂) [l.ne_bot]
    (h : Tendsto (fun a x => g a x) l (𝓝 f)) : M₁ →ₛₗ[σ] M₂ :=
  linearMapOfMemClosureRangeCoe f <|
    mem_closure_of_tendsto h <| eventually_of_forall fun a => Set.mem_range_self _
#align linear_map_of_tendsto linearMapOfTendsto

variable (M₁ M₂ σ)

/- warning: linear_map.is_closed_range_coe -> LinearMap.isClosed_range_coe is a dubious translation:
lean 3 declaration is
  forall (M₁ : Type.{u1}) (M₂ : Type.{u2}) {R : Type.{u3}} {S : Type.{u4}} [_inst_1 : TopologicalSpace.{u2} M₂] [_inst_2 : T2Space.{u2} M₂ _inst_1] [_inst_3 : Semiring.{u3} R] [_inst_4 : Semiring.{u4} S] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_6 : AddCommMonoid.{u2} M₂] [_inst_7 : Module.{u3, u1} R M₁ _inst_3 _inst_5] [_inst_8 : Module.{u4, u2} S M₂ _inst_4 _inst_6] [_inst_9 : ContinuousConstSMul.{u4, u2} S M₂ _inst_1 (SMulZeroClass.toHasSmul.{u4, u2} S M₂ (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6))) (SMulWithZero.toSmulZeroClass.{u4, u2} S M₂ (MulZeroClass.toHasZero.{u4} S (MulZeroOneClass.toMulZeroClass.{u4} S (MonoidWithZero.toMulZeroOneClass.{u4} S (Semiring.toMonoidWithZero.{u4} S _inst_4)))) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6))) (MulActionWithZero.toSMulWithZero.{u4, u2} S M₂ (Semiring.toMonoidWithZero.{u4} S _inst_4) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6))) (Module.toMulActionWithZero.{u4, u2} S M₂ _inst_4 _inst_6 _inst_8))))] [_inst_10 : ContinuousAdd.{u2} M₂ _inst_1 (AddZeroClass.toHasAdd.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_6)))] (σ : RingHom.{u3, u4} R S (Semiring.toNonAssocSemiring.{u3} R _inst_3) (Semiring.toNonAssocSemiring.{u4} S _inst_4)), IsClosed.{max u1 u2} (M₁ -> M₂) (Pi.topologicalSpace.{u1, u2} M₁ (fun (ᾰ : M₁) => M₂) (fun (a : M₁) => _inst_1)) (Set.range.{max u1 u2, max (succ u1) (succ u2)} (M₁ -> M₂) (LinearMap.{u3, u4, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8) (coeFn.{max (succ u1) (succ u2), max (succ u1) (succ u2)} (LinearMap.{u3, u4, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8) (fun (ᾰ : LinearMap.{u3, u4, u1, u2} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8) => M₁ -> M₂) (LinearMap.hasCoeToFun.{u3, u4, u1, u2} R S M₁ M₂ _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 _inst_8 σ)))
but is expected to have type
  forall (M₁ : Type.{u4}) (M₂ : Type.{u3}) {R : Type.{u2}} {S : Type.{u1}} [_inst_1 : TopologicalSpace.{u3} M₂] [_inst_2 : T2Space.{u3} M₂ _inst_1] [_inst_3 : Semiring.{u2} R] [_inst_4 : Semiring.{u1} S] [_inst_5 : AddCommMonoid.{u4} M₁] [_inst_6 : AddCommMonoid.{u3} M₂] [_inst_7 : Module.{u2, u4} R M₁ _inst_3 _inst_5] [_inst_8 : Module.{u1, u3} S M₂ _inst_4 _inst_6] [_inst_9 : ContinuousConstSMul.{u1, u3} S M₂ _inst_1 (SMulZeroClass.toSMul.{u1, u3} S M₂ (AddMonoid.toZero.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ _inst_6)) (SMulWithZero.toSMulZeroClass.{u1, u3} S M₂ (MonoidWithZero.toZero.{u1} S (Semiring.toMonoidWithZero.{u1} S _inst_4)) (AddMonoid.toZero.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ _inst_6)) (MulActionWithZero.toSMulWithZero.{u1, u3} S M₂ (Semiring.toMonoidWithZero.{u1} S _inst_4) (AddMonoid.toZero.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ _inst_6)) (Module.toMulActionWithZero.{u1, u3} S M₂ _inst_4 _inst_6 _inst_8))))] [_inst_10 : ContinuousAdd.{u3} M₂ _inst_1 (AddZeroClass.toAdd.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ _inst_6)))] (σ : RingHom.{u2, u1} R S (Semiring.toNonAssocSemiring.{u2} R _inst_3) (Semiring.toNonAssocSemiring.{u1} S _inst_4)), IsClosed.{max u4 u3} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) ᾰ) (Pi.topologicalSpace.{u4, u3} M₁ (fun (ᾰ : M₁) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) ᾰ) (fun (a : M₁) => _inst_1)) (Set.range.{max u4 u3, max (succ u4) (succ u3)} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) ᾰ) (LinearMap.{u2, u1, u4, u3} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8) (FunLike.coe.{max (succ u4) (succ u3), succ u4, succ u3} (LinearMap.{u2, u1, u4, u3} R S _inst_3 _inst_4 σ M₁ M₂ _inst_5 _inst_6 _inst_7 _inst_8) M₁ (fun (ᾰ : M₁) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) ᾰ) (LinearMap.instFunLikeLinearMap.{u2, u1, u4, u3} R S M₁ M₂ _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 _inst_8 σ)))
Case conversion may be inaccurate. Consider using '#align linear_map.is_closed_range_coe LinearMap.isClosed_range_coeₓ'. -/
theorem LinearMap.isClosed_range_coe : IsClosed (Set.range (coeFn : (M₁ →ₛₗ[σ] M₂) → M₁ → M₂)) :=
  isClosed_of_closure_subset fun f hf => ⟨linearMapOfMemClosureRangeCoe f hf, rfl⟩
#align linear_map.is_closed_range_coe LinearMap.isClosed_range_coe

end PointwiseLimits

namespace ContinuousLinearMap

section Semiring

/-!
### Properties that hold for non-necessarily commutative semirings.
-/


variable {R₁ : Type _} {R₂ : Type _} {R₃ : Type _} [Semiring R₁] [Semiring R₂] [Semiring R₃]
  {σ₁₂ : R₁ →+* R₂} {σ₂₃ : R₂ →+* R₃} {σ₁₃ : R₁ →+* R₃} {M₁ : Type _} [TopologicalSpace M₁]
  [AddCommMonoid M₁] {M'₁ : Type _} [TopologicalSpace M'₁] [AddCommMonoid M'₁] {M₂ : Type _}
  [TopologicalSpace M₂] [AddCommMonoid M₂] {M₃ : Type _} [TopologicalSpace M₃] [AddCommMonoid M₃]
  {M₄ : Type _} [TopologicalSpace M₄] [AddCommMonoid M₄] [Module R₁ M₁] [Module R₁ M'₁]
  [Module R₂ M₂] [Module R₃ M₃]

/-- Coerce continuous linear maps to linear maps. -/
instance : Coe (M₁ →SL[σ₁₂] M₂) (M₁ →ₛₗ[σ₁₂] M₂) :=
  ⟨toLinearMap⟩

/- warning: continuous_linear_map.to_linear_map_eq_coe clashes with [anonymous] -> [anonymous]
warning: continuous_linear_map.to_linear_map_eq_coe -> [anonymous] is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u_1}} {R₂ : Type.{u_2}} [_inst_1 : Semiring.{u_1} R₁] [_inst_2 : Semiring.{u_2} R₂] {σ₁₂ : RingHom.{u_1, u_2} R₁ R₂ (Semiring.toNonAssocSemiring.{u_1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u_2} R₂ _inst_2)} {M₁ : Type.{u_4}} [_inst_4 : TopologicalSpace.{u_4} M₁] [_inst_5 : AddCommMonoid.{u_4} M₁] {M₂ : Type.{u_6}} [_inst_8 : TopologicalSpace.{u_6} M₂] [_inst_9 : AddCommMonoid.{u_6} M₂] [_inst_14 : Module.{u_1, u_4} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u_2, u_6} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u_4) (succ u_6)} (LinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.toLinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f) ((fun (a : Sort.{max (succ u_4) (succ u_6)}) (b : Sort.{max (succ u_4) (succ u_6)}) [self : HasLiftT.{max (succ u_4) (succ u_6), max (succ u_4) (succ u_6)} a b] => self.0) (ContinuousLinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{max (succ u_4) (succ u_6), max (succ u_4) (succ u_6)} (ContinuousLinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{max (succ u_4) (succ u_6), max (succ u_4) (succ u_6)} (ContinuousLinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{max (succ u_4) (succ u_6), max (succ u_4) (succ u_6)} (ContinuousLinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) f)
but is expected to have type
  forall {R₁ : Type.{u}} {R₂ : Type.{v}}, (Nat -> R₁ -> R₂) -> Nat -> (List.{u} R₁) -> (List.{v} R₂)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.to_linear_map_eq_coe [anonymous]ₓ'. -/
-- make the coercion the preferred form
@[simp]
theorem [anonymous] (f : M₁ →SL[σ₁₂] M₂) : f.toLinearMap = f :=
  rfl
#align continuous_linear_map.to_linear_map_eq_coe [anonymous]

/- warning: continuous_linear_map.coe_injective -> ContinuousLinearMap.coe_injective is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9], Function.Injective.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))))
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u1}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u1} R₂] {σ₁₂ : RingHom.{u2, u1} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2)} {M₁ : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M₁] [_inst_5 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u2, u4} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u1, u3} R₂ M₂ _inst_2 _inst_9], Function.Injective.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.toLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_injective ContinuousLinearMap.coe_injectiveₓ'. -/
theorem coe_injective : Function.Injective (coe : (M₁ →SL[σ₁₂] M₂) → M₁ →ₛₗ[σ₁₂] M₂) :=
  by
  intro f g H
  cases f
  cases g
  congr
#align continuous_linear_map.coe_injective ContinuousLinearMap.coe_injective

instance : ContinuousSemilinearMapClass (M₁ →SL[σ₁₂] M₂) σ₁₂ M₁ M₂
    where
  coe f := f.toFun
  coe_injective' f g h := coe_injective (FunLike.coe_injective h)
  map_add f := map_add f.toLinearMap
  map_continuous f := f.2
  map_smulₛₗ f := f.toLinearMap.map_smul'

-- see Note [function coercion]
/-- Coerce continuous linear maps to functions. -/
instance toFun : CoeFun (M₁ →SL[σ₁₂] M₂) fun _ => M₁ → M₂ :=
  ⟨fun f => f.toFun⟩
#align continuous_linear_map.to_fun ContinuousLinearMap.toFun

/- warning: continuous_linear_map.coe_mk -> ContinuousLinearMap.coe_mk is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (h : autoParamₓ.{0} (Continuous.{u3, u4} M₁ M₂ _inst_4 _inst_8 (LinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16 f)) (Name.mk_string (String.str (String.str (String.str (String.str (String.str (String.str (String.str (String.str (String.str (String.str (String.str String.empty (Char.ofNat (OfNat.ofNat.{0} Nat 99 (OfNat.mk.{0} Nat 99 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 111 (OfNat.mk.{0} Nat 111 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 110 (OfNat.mk.{0} Nat 110 (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 116 (OfNat.mk.{0} Nat 116 (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 105 (OfNat.mk.{0} Nat 105 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 110 (OfNat.mk.{0} Nat 110 (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 117 (OfNat.mk.{0} Nat 117 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 105 (OfNat.mk.{0} Nat 105 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 116 (OfNat.mk.{0} Nat 116 (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 121 (OfNat.mk.{0} Nat 121 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 39 (OfNat.mk.{0} Nat 39 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)))))))))) (Name.mk_string (String.str (String.str (String.str (String.str (String.str (String.str (String.str (String.str (String.str (String.str (String.str String.empty (Char.ofNat (OfNat.ofNat.{0} Nat 105 (OfNat.mk.{0} Nat 105 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 110 (OfNat.mk.{0} Nat 110 (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 116 (OfNat.mk.{0} Nat 116 (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 101 (OfNat.mk.{0} Nat 101 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 114 (OfNat.mk.{0} Nat 114 (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 97 (OfNat.mk.{0} Nat 97 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 99 (OfNat.mk.{0} Nat 99 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 116 (OfNat.mk.{0} Nat 116 (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 105 (OfNat.mk.{0} Nat 105 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 118 (OfNat.mk.{0} Nat 118 (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 101 (OfNat.mk.{0} Nat 101 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Name.mk_string (String.str (String.str (String.str (String.str (String.str (String.str String.empty (Char.ofNat (OfNat.ofNat.{0} Nat 116 (OfNat.mk.{0} Nat 116 (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 97 (OfNat.mk.{0} Nat 97 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 99 (OfNat.mk.{0} Nat 99 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 116 (OfNat.mk.{0} Nat 116 (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 105 (OfNat.mk.{0} Nat 105 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 99 (OfNat.mk.{0} Nat 99 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) Name.anonymous)))), Eq.{max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) (ContinuousLinearMap.mk.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f h)) f
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] (f : LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (h : Continuous.{u2, u1} M₁ M₂ _inst_4 _inst_8 (AddHom.toFun.{u2, u1} M₁ M₂ (AddZeroClass.toAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (AddZeroClass.toAdd.{u1} M₂ (AddMonoid.toAddZeroClass.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9))) (LinearMap.toAddHom.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16 f))), Eq.{max (succ u2) (succ u1)} (LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.mk.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f h)) f
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_mk ContinuousLinearMap.coe_mkₓ'. -/
@[simp]
theorem coe_mk (f : M₁ →ₛₗ[σ₁₂] M₂) (h) : (mk f h : M₁ →ₛₗ[σ₁₂] M₂) = f :=
  rfl
#align continuous_linear_map.coe_mk ContinuousLinearMap.coe_mk

/- warning: continuous_linear_map.coe_mk' -> ContinuousLinearMap.coe_mk' is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (h : autoParamₓ.{0} (Continuous.{u3, u4} M₁ M₂ _inst_4 _inst_8 (LinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16 f)) (Name.mk_string (String.str (String.str (String.str (String.str (String.str (String.str (String.str (String.str (String.str (String.str (String.str String.empty (Char.ofNat (OfNat.ofNat.{0} Nat 99 (OfNat.mk.{0} Nat 99 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 111 (OfNat.mk.{0} Nat 111 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 110 (OfNat.mk.{0} Nat 110 (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 116 (OfNat.mk.{0} Nat 116 (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 105 (OfNat.mk.{0} Nat 105 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 110 (OfNat.mk.{0} Nat 110 (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 117 (OfNat.mk.{0} Nat 117 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 105 (OfNat.mk.{0} Nat 105 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 116 (OfNat.mk.{0} Nat 116 (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 121 (OfNat.mk.{0} Nat 121 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 39 (OfNat.mk.{0} Nat 39 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)))))))))) (Name.mk_string (String.str (String.str (String.str (String.str (String.str (String.str (String.str (String.str (String.str (String.str (String.str String.empty (Char.ofNat (OfNat.ofNat.{0} Nat 105 (OfNat.mk.{0} Nat 105 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 110 (OfNat.mk.{0} Nat 110 (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 116 (OfNat.mk.{0} Nat 116 (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 101 (OfNat.mk.{0} Nat 101 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 114 (OfNat.mk.{0} Nat 114 (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 97 (OfNat.mk.{0} Nat 97 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 99 (OfNat.mk.{0} Nat 99 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 116 (OfNat.mk.{0} Nat 116 (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 105 (OfNat.mk.{0} Nat 105 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 118 (OfNat.mk.{0} Nat 118 (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 101 (OfNat.mk.{0} Nat 101 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Name.mk_string (String.str (String.str (String.str (String.str (String.str (String.str String.empty (Char.ofNat (OfNat.ofNat.{0} Nat 116 (OfNat.mk.{0} Nat 116 (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 97 (OfNat.mk.{0} Nat 97 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 99 (OfNat.mk.{0} Nat 99 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 116 (OfNat.mk.{0} Nat 116 (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 105 (OfNat.mk.{0} Nat 105 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) (Char.ofNat (OfNat.ofNat.{0} Nat 99 (OfNat.mk.{0} Nat 99 (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit0.{0} Nat Nat.hasAdd (bit1.{0} Nat Nat.hasOne Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))))))))) Name.anonymous)))), Eq.{max (succ u3) (succ u4)} ((fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.mk.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f h)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.mk.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f h)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (fun (_x : LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂) f)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] (f : LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (h : Continuous.{u2, u1} M₁ M₂ _inst_4 _inst_8 (AddHom.toFun.{u2, u1} M₁ M₂ (AddZeroClass.toAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (AddZeroClass.toAdd.{u1} M₂ (AddMonoid.toAddZeroClass.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9))) (LinearMap.toAddHom.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16 f))), Eq.{max (succ u2) (succ u1)} (forall (a : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) a) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) (ContinuousLinearMap.mk.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f h)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) _x) (LinearMap.instFunLikeLinearMap.{u4, u3, u2, u1} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂) f)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_mk' ContinuousLinearMap.coe_mk'ₓ'. -/
@[simp]
theorem coe_mk' (f : M₁ →ₛₗ[σ₁₂] M₂) (h) : (mk f h : M₁ → M₂) = f :=
  rfl
#align continuous_linear_map.coe_mk' ContinuousLinearMap.coe_mk'

/- warning: continuous_linear_map.continuous -> ContinuousLinearMap.continuous is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Continuous.{u3, u4} M₁ M₂ _inst_4 _inst_8 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Continuous.{u2, u1} M₁ M₂ _inst_4 _inst_8 (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.continuous ContinuousLinearMap.continuousₓ'. -/
@[continuity]
protected theorem continuous (f : M₁ →SL[σ₁₂] M₂) : Continuous f :=
  f.2
#align continuous_linear_map.continuous ContinuousLinearMap.continuous

/- warning: continuous_linear_map.uniform_continuous -> ContinuousLinearMap.uniformContinuous is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {E₁ : Type.{u3}} {E₂ : Type.{u4}} [_inst_18 : UniformSpace.{u3} E₁] [_inst_19 : UniformSpace.{u4} E₂] [_inst_20 : AddCommGroup.{u3} E₁] [_inst_21 : AddCommGroup.{u4} E₂] [_inst_22 : Module.{u1, u3} R₁ E₁ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_20)] [_inst_23 : Module.{u2, u4} R₂ E₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_21)] [_inst_24 : UniformAddGroup.{u3} E₁ _inst_18 (AddCommGroup.toAddGroup.{u3} E₁ _inst_20)] [_inst_25 : UniformAddGroup.{u4} E₂ _inst_19 (AddCommGroup.toAddGroup.{u4} E₂ _inst_21)] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ E₁ (UniformSpace.toTopologicalSpace.{u3} E₁ _inst_18) (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_20) E₂ (UniformSpace.toTopologicalSpace.{u4} E₂ _inst_19) (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_21) _inst_22 _inst_23), UniformContinuous.{u3, u4} E₁ E₂ _inst_18 _inst_19 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ E₁ (UniformSpace.toTopologicalSpace.{u3} E₁ _inst_18) (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_20) E₂ (UniformSpace.toTopologicalSpace.{u4} E₂ _inst_19) (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_21) _inst_22 _inst_23) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ E₁ (UniformSpace.toTopologicalSpace.{u3} E₁ _inst_18) (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_20) E₂ (UniformSpace.toTopologicalSpace.{u4} E₂ _inst_19) (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_21) _inst_22 _inst_23) => E₁ -> E₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ E₁ (UniformSpace.toTopologicalSpace.{u3} E₁ _inst_18) (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_20) E₂ (UniformSpace.toTopologicalSpace.{u4} E₂ _inst_19) (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_21) _inst_22 _inst_23) f)
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u1}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u1} R₂] {σ₁₂ : RingHom.{u2, u1} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2)} {E₁ : Type.{u4}} {E₂ : Type.{u3}} [_inst_18 : UniformSpace.{u4} E₁] [_inst_19 : UniformSpace.{u3} E₂] [_inst_20 : AddCommGroup.{u4} E₁] [_inst_21 : AddCommGroup.{u3} E₂] [_inst_22 : Module.{u2, u4} R₁ E₁ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_20)] [_inst_23 : Module.{u1, u3} R₂ E₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_21)] [_inst_24 : UniformAddGroup.{u4} E₁ _inst_18 (AddCommGroup.toAddGroup.{u4} E₁ _inst_20)] [_inst_25 : UniformAddGroup.{u3} E₂ _inst_19 (AddCommGroup.toAddGroup.{u3} E₂ _inst_21)] (f : ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ E₁ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_18) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_20) E₂ (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_19) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_21) _inst_22 _inst_23), UniformContinuous.{u4, u3} E₁ E₂ _inst_18 _inst_19 (FunLike.coe.{max (succ u4) (succ u3), succ u4, succ u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ E₁ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_18) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_20) E₂ (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_19) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_21) _inst_22 _inst_23) E₁ (fun (_x : E₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E₁) => E₂) _x) (ContinuousMapClass.toFunLike.{max u4 u3, u4, u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ E₁ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_18) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_20) E₂ (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_19) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_21) _inst_22 _inst_23) E₁ E₂ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_18) (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_19) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u3, u2, u1, u4, u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ E₁ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_18) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_20) E₂ (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_19) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_21) _inst_22 _inst_23) R₁ R₂ _inst_1 _inst_2 σ₁₂ E₁ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_18) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_20) E₂ (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_19) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_21) _inst_22 _inst_23 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ E₁ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_18) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_20) E₂ (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_19) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_21) _inst_22 _inst_23))) f)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.uniform_continuous ContinuousLinearMap.uniformContinuousₓ'. -/
protected theorem uniformContinuous {E₁ E₂ : Type _} [UniformSpace E₁] [UniformSpace E₂]
    [AddCommGroup E₁] [AddCommGroup E₂] [Module R₁ E₁] [Module R₂ E₂] [UniformAddGroup E₁]
    [UniformAddGroup E₂] (f : E₁ →SL[σ₁₂] E₂) : UniformContinuous f :=
  uniformContinuous_addMonoidHom_of_continuous f.Continuous
#align continuous_linear_map.uniform_continuous ContinuousLinearMap.uniformContinuous

/- warning: continuous_linear_map.coe_inj -> ContinuousLinearMap.coe_inj is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] {f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16} {g : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16}, Iff (Eq.{max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) f) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) g)) (Eq.{max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f g)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] {f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16} {g : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16}, Iff (Eq.{max (succ u2) (succ u1)} (LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 g)) (Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f g)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_inj ContinuousLinearMap.coe_injₓ'. -/
@[simp, norm_cast]
theorem coe_inj {f g : M₁ →SL[σ₁₂] M₂} : (f : M₁ →ₛₗ[σ₁₂] M₂) = g ↔ f = g :=
  coe_injective.eq_iff
#align continuous_linear_map.coe_inj ContinuousLinearMap.coe_inj

/- warning: continuous_linear_map.coe_fn_injective -> ContinuousLinearMap.coeFn_injective is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9], Function.Injective.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (M₁ -> M₂) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (ᾰ : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u1}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u1} R₂] {σ₁₂ : RingHom.{u2, u1} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u2, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u1, u4} R₂ M₂ _inst_2 _inst_9], Function.Injective.{max (succ u4) (succ u3), max (succ u3) (succ u4)} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (M₁ -> M₂) (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (ᾰ : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) ᾰ) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u2, u1, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_fn_injective ContinuousLinearMap.coeFn_injectiveₓ'. -/
theorem coeFn_injective : @Function.Injective (M₁ →SL[σ₁₂] M₂) (M₁ → M₂) coeFn :=
  FunLike.coe_injective
#align continuous_linear_map.coe_fn_injective ContinuousLinearMap.coeFn_injective

#print ContinuousLinearMap.Simps.apply /-
/-- See Note [custom simps projection]. We need to specify this projection explicitly in this case,
  because it is a composition of multiple projections. -/
def Simps.apply (h : M₁ →SL[σ₁₂] M₂) : M₁ → M₂ :=
  h
#align continuous_linear_map.simps.apply ContinuousLinearMap.Simps.apply
-/

#print ContinuousLinearMap.Simps.coe /-
/-- See Note [custom simps projection]. -/
def Simps.coe (h : M₁ →SL[σ₁₂] M₂) : M₁ →ₛₗ[σ₁₂] M₂ :=
  h
#align continuous_linear_map.simps.coe ContinuousLinearMap.Simps.coe
-/

initialize_simps_projections ContinuousLinearMap (to_linear_map_to_fun → apply, toLinearMap → coe)

/- warning: continuous_linear_map.ext -> ContinuousLinearMap.ext is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] {f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16} {g : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16}, (forall (x : M₁), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f x) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) g x)) -> (Eq.{max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f g)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] {f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16} {g : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16}, (forall (x : M₁), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) g x)) -> (Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f g)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.ext ContinuousLinearMap.extₓ'. -/
@[ext]
theorem ext {f g : M₁ →SL[σ₁₂] M₂} (h : ∀ x, f x = g x) : f = g :=
  FunLike.ext f g h
#align continuous_linear_map.ext ContinuousLinearMap.ext

/- warning: continuous_linear_map.ext_iff -> ContinuousLinearMap.ext_iff is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] {f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16} {g : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16}, Iff (Eq.{max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f g) (forall (x : M₁), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f x) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) g x))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] {f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16} {g : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16}, Iff (Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f g) (forall (x : M₁), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) g x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.ext_iff ContinuousLinearMap.ext_iffₓ'. -/
theorem ext_iff {f g : M₁ →SL[σ₁₂] M₂} : f = g ↔ ∀ x, f x = g x :=
  FunLike.ext_iff
#align continuous_linear_map.ext_iff ContinuousLinearMap.ext_iff

/- warning: continuous_linear_map.copy -> ContinuousLinearMap.copy is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (f' : M₁ -> M₂), (Eq.{max (succ u3) (succ u4)} (M₁ -> M₂) f' (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f)) -> (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)
but is expected to have type
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (f' : M₁ -> M₂), (Eq.{max (succ u3) (succ u4)} (M₁ -> M₂) f' (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (f : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) f) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f)) -> (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.copy ContinuousLinearMap.copyₓ'. -/
/-- Copy of a `continuous_linear_map` with a new `to_fun` equal to the old one. Useful to fix
definitional equalities. -/
protected def copy (f : M₁ →SL[σ₁₂] M₂) (f' : M₁ → M₂) (h : f' = ⇑f) : M₁ →SL[σ₁₂] M₂
    where
  toLinearMap := f.toLinearMap.copy f' h
  cont := show Continuous f' from h.symm ▸ f.Continuous
#align continuous_linear_map.copy ContinuousLinearMap.copy

/- warning: continuous_linear_map.coe_copy -> ContinuousLinearMap.coe_copy is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (f' : M₁ -> M₂) (h : Eq.{max (succ u3) (succ u4)} (M₁ -> M₂) f' (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f)), Eq.{max (succ u3) (succ u4)} (M₁ -> M₂) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.copy.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f f' h)) f'
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (f' : M₁ -> M₂) (h : Eq.{max (succ u2) (succ u1)} (M₁ -> M₂) f' (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (f : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) f) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f)), Eq.{max (succ u2) (succ u1)} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) ᾰ) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) (ContinuousLinearMap.copy.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f f' h)) f'
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_copy ContinuousLinearMap.coe_copyₓ'. -/
@[simp]
theorem coe_copy (f : M₁ →SL[σ₁₂] M₂) (f' : M₁ → M₂) (h : f' = ⇑f) : ⇑(f.copy f' h) = f' :=
  rfl
#align continuous_linear_map.coe_copy ContinuousLinearMap.coe_copy

/- warning: continuous_linear_map.copy_eq -> ContinuousLinearMap.copy_eq is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (f' : M₁ -> M₂) (h : Eq.{max (succ u3) (succ u4)} (M₁ -> M₂) f' (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f)), Eq.{max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.copy.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f f' h) f
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (f' : M₁ -> M₂) (h : Eq.{max (succ u2) (succ u1)} (M₁ -> M₂) f' (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (f : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) f) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f)), Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.copy.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f f' h) f
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.copy_eq ContinuousLinearMap.copy_eqₓ'. -/
theorem copy_eq (f : M₁ →SL[σ₁₂] M₂) (f' : M₁ → M₂) (h : f' = ⇑f) : f.copy f' h = f :=
  FunLike.ext' h
#align continuous_linear_map.copy_eq ContinuousLinearMap.copy_eq

/- warning: continuous_linear_map.map_zero -> ContinuousLinearMap.map_zero is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f (OfNat.ofNat.{u3} M₁ 0 (OfNat.mk.{u3} M₁ 0 (Zero.zero.{u3} M₁ (AddZeroClass.toHasZero.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_5))))))) (OfNat.ofNat.{u4} M₂ 0 (OfNat.mk.{u4} M₂ 0 (Zero.zero.{u4} M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))))))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (OfNat.ofNat.{u2} M₁ 0 (Zero.toOfNat0.{u2} M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f (OfNat.ofNat.{u2} M₁ 0 (Zero.toOfNat0.{u2} M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))))) (OfNat.ofNat.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (OfNat.ofNat.{u2} M₁ 0 (Zero.toOfNat0.{u2} M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))))) 0 (Zero.toOfNat0.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (OfNat.ofNat.{u2} M₁ 0 (Zero.toOfNat0.{u2} M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))))) (AddMonoid.toZero.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (OfNat.ofNat.{u2} M₁ 0 (Zero.toOfNat0.{u2} M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))))) (AddCommMonoid.toAddMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (OfNat.ofNat.{u2} M₁ 0 (Zero.toOfNat0.{u2} M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))))) _inst_9))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.map_zero ContinuousLinearMap.map_zeroₓ'. -/
-- make some straightforward lemmas available to `simp`.
protected theorem map_zero (f : M₁ →SL[σ₁₂] M₂) : f (0 : M₁) = 0 :=
  map_zero f
#align continuous_linear_map.map_zero ContinuousLinearMap.map_zero

/- warning: continuous_linear_map.map_add -> ContinuousLinearMap.map_add is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (x : M₁) (y : M₁), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f (HAdd.hAdd.{u3, u3, u3} M₁ M₁ M₁ (instHAdd.{u3} M₁ (AddZeroClass.toHasAdd.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_5)))) x y)) (HAdd.hAdd.{u4, u4, u4} M₂ M₂ M₂ (instHAdd.{u4} M₂ (AddZeroClass.toHasAdd.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)))) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f x) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f y))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (x : M₁) (y : M₁), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (HAdd.hAdd.{u2, u2, u2} M₁ M₁ M₁ (instHAdd.{u2} M₁ (AddZeroClass.toAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)))) x y)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f (HAdd.hAdd.{u2, u2, u2} M₁ M₁ M₁ (instHAdd.{u2} M₁ (AddZeroClass.toAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)))) x y)) (HAdd.hAdd.{u1, u1, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) y) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (instHAdd.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddZeroClass.toAdd.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddMonoid.toAddZeroClass.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_9)))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f y))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.map_add ContinuousLinearMap.map_addₓ'. -/
protected theorem map_add (f : M₁ →SL[σ₁₂] M₂) (x y : M₁) : f (x + y) = f x + f y :=
  map_add f x y
#align continuous_linear_map.map_add ContinuousLinearMap.map_add

/- warning: continuous_linear_map.map_smulₛₗ -> ContinuousLinearMap.map_smulₛₗ is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (c : R₁) (x : M₁), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f (SMul.smul.{u1, u3} R₁ M₁ (SMulZeroClass.toHasSmul.{u1, u3} R₁ M₁ (AddZeroClass.toHasZero.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_5))) (SMulWithZero.toSmulZeroClass.{u1, u3} R₁ M₁ (MulZeroClass.toHasZero.{u1} R₁ (MulZeroOneClass.toMulZeroClass.{u1} R₁ (MonoidWithZero.toMulZeroOneClass.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)))) (AddZeroClass.toHasZero.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_5))) (MulActionWithZero.toSMulWithZero.{u1, u3} R₁ M₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_5))) (Module.toMulActionWithZero.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14)))) c x)) (SMul.smul.{u2, u4} R₂ M₂ (SMulZeroClass.toHasSmul.{u2, u4} R₂ M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (SMulWithZero.toSmulZeroClass.{u2, u4} R₂ M₂ (MulZeroClass.toHasZero.{u2} R₂ (MulZeroOneClass.toMulZeroClass.{u2} R₂ (MonoidWithZero.toMulZeroOneClass.{u2} R₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2)))) (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (MulActionWithZero.toSMulWithZero.{u2, u4} R₂ M₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2) (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (Module.toMulActionWithZero.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)))) (coeFn.{max (succ u1) (succ u2), max (succ u1) (succ u2)} (RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)) (fun (_x : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)) => R₁ -> R₂) (RingHom.hasCoeToFun.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)) σ₁₂ c) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f x))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (c : R₁) (x : M₁), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (HSMul.hSMul.{u4, u2, u2} R₁ M₁ M₁ (instHSMul.{u4, u2} R₁ M₁ (SMulZeroClass.toSMul.{u4, u2} R₁ M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (SMulWithZero.toSMulZeroClass.{u4, u2} R₁ M₁ (MonoidWithZero.toZero.{u4} R₁ (Semiring.toMonoidWithZero.{u4} R₁ _inst_1)) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (MulActionWithZero.toSMulWithZero.{u4, u2} R₁ M₁ (Semiring.toMonoidWithZero.{u4} R₁ _inst_1) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (Module.toMulActionWithZero.{u4, u2} R₁ M₁ _inst_1 _inst_5 _inst_14))))) c x)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f (HSMul.hSMul.{u4, u2, u2} R₁ M₁ M₁ (instHSMul.{u4, u2} R₁ M₁ (SMulZeroClass.toSMul.{u4, u2} R₁ M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (SMulWithZero.toSMulZeroClass.{u4, u2} R₁ M₁ (MonoidWithZero.toZero.{u4} R₁ (Semiring.toMonoidWithZero.{u4} R₁ _inst_1)) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (MulActionWithZero.toSMulWithZero.{u4, u2} R₁ M₁ (Semiring.toMonoidWithZero.{u4} R₁ _inst_1) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (Module.toMulActionWithZero.{u4, u2} R₁ M₁ _inst_1 _inst_5 _inst_14))))) c x)) (HSMul.hSMul.{u3, u1, u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (instHSMul.{u3, u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (SMulZeroClass.toSMul.{u3, u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddMonoid.toZero.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_9)) (SMulWithZero.toSMulZeroClass.{u3, u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (MonoidWithZero.toZero.{u3} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) (Semiring.toMonoidWithZero.{u3} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) _inst_2)) (AddMonoid.toZero.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_9)) (MulActionWithZero.toSMulWithZero.{u3, u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (Semiring.toMonoidWithZero.{u3} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) _inst_2) (AddMonoid.toZero.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_9)) (Module.toMulActionWithZero.{u3, u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_2 _inst_9 _inst_16))))) (FunLike.coe.{max (succ u4) (succ u3), succ u4, succ u3} (RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)) R₁ (fun (_x : R₁) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) _x) (MulHomClass.toFunLike.{max u4 u3, u4, u3} (RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)) R₁ R₂ (NonUnitalNonAssocSemiring.toMul.{u4} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1))) (NonUnitalNonAssocSemiring.toMul.{u3} R₂ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u3} R₂ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2))) (NonUnitalRingHomClass.toMulHomClass.{max u4 u3, u4, u3} (RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)) R₁ R₂ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u3} R₂ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)) (RingHomClass.toNonUnitalRingHomClass.{max u4 u3, u4, u3} (RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)) R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (RingHom.instRingHomClassRingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2))))) σ₁₂ c) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.map_smulₛₗ ContinuousLinearMap.map_smulₛₗₓ'. -/
@[simp]
protected theorem map_smulₛₗ (f : M₁ →SL[σ₁₂] M₂) (c : R₁) (x : M₁) : f (c • x) = σ₁₂ c • f x :=
  (toLinearMap _).map_smulₛₗ _ _
#align continuous_linear_map.map_smulₛₗ ContinuousLinearMap.map_smulₛₗ

/- warning: continuous_linear_map.map_smul -> ContinuousLinearMap.map_smul is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_18 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] (f : ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18) (c : R₁) (x : M₁), Eq.{succ u3} M₂ (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18) f (SMul.smul.{u1, u2} R₁ M₁ (SMulZeroClass.toHasSmul.{u1, u2} R₁ M₁ (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (SMulWithZero.toSmulZeroClass.{u1, u2} R₁ M₁ (MulZeroClass.toHasZero.{u1} R₁ (MulZeroOneClass.toMulZeroClass.{u1} R₁ (MonoidWithZero.toMulZeroOneClass.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)))) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (MulActionWithZero.toSMulWithZero.{u1, u2} R₁ M₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (Module.toMulActionWithZero.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)))) c x)) (SMul.smul.{u1, u3} R₁ M₂ (SMulZeroClass.toHasSmul.{u1, u3} R₁ M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ _inst_9))) (SMulWithZero.toSmulZeroClass.{u1, u3} R₁ M₂ (MulZeroClass.toHasZero.{u1} R₁ (MulZeroOneClass.toMulZeroClass.{u1} R₁ (MonoidWithZero.toMulZeroOneClass.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ _inst_9))) (MulActionWithZero.toSMulWithZero.{u1, u3} R₁ M₂ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ _inst_9))) (Module.toMulActionWithZero.{u1, u3} R₁ M₂ _inst_1 _inst_9 _inst_18)))) c (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18) f x))
but is expected to have type
  forall {R₁ : Type.{u3}} [_inst_1 : Semiring.{u3} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] [_inst_14 : Module.{u3, u1} R₁ M₁ _inst_1 _inst_5] [_inst_18 : Module.{u3, u2} R₁ M₂ _inst_1 _inst_9] (f : ContinuousLinearMap.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18) (c : R₁) (x : M₁), Eq.{succ u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (HSMul.hSMul.{u3, u1, u1} R₁ M₁ M₁ (instHSMul.{u3, u1} R₁ M₁ (SMulZeroClass.toSMul.{u3, u1} R₁ M₁ (AddMonoid.toZero.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_5)) (SMulWithZero.toSMulZeroClass.{u3, u1} R₁ M₁ (MonoidWithZero.toZero.{u3} R₁ (Semiring.toMonoidWithZero.{u3} R₁ _inst_1)) (AddMonoid.toZero.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_5)) (MulActionWithZero.toSMulWithZero.{u3, u1} R₁ M₁ (Semiring.toMonoidWithZero.{u3} R₁ _inst_1) (AddMonoid.toZero.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_5)) (Module.toMulActionWithZero.{u3, u1} R₁ M₁ _inst_1 _inst_5 _inst_14))))) c x)) (FunLike.coe.{max (succ u1) (succ u2), succ u1, succ u2} (ContinuousLinearMap.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u1 u2, u1, u2} (ContinuousLinearMap.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u2, u3, u3, u1, u2} (ContinuousLinearMap.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18))) f (HSMul.hSMul.{u3, u1, u1} R₁ M₁ M₁ (instHSMul.{u3, u1} R₁ M₁ (SMulZeroClass.toSMul.{u3, u1} R₁ M₁ (AddMonoid.toZero.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_5)) (SMulWithZero.toSMulZeroClass.{u3, u1} R₁ M₁ (MonoidWithZero.toZero.{u3} R₁ (Semiring.toMonoidWithZero.{u3} R₁ _inst_1)) (AddMonoid.toZero.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_5)) (MulActionWithZero.toSMulWithZero.{u3, u1} R₁ M₁ (Semiring.toMonoidWithZero.{u3} R₁ _inst_1) (AddMonoid.toZero.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_5)) (Module.toMulActionWithZero.{u3, u1} R₁ M₁ _inst_1 _inst_5 _inst_14))))) c x)) (HSMul.hSMul.{u3, u2, u2} R₁ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (instHSMul.{u3, u2} R₁ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (SMulZeroClass.toSMul.{u3, u2} R₁ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddMonoid.toZero.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_9)) (SMulWithZero.toSMulZeroClass.{u3, u2} R₁ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (MonoidWithZero.toZero.{u3} R₁ (Semiring.toMonoidWithZero.{u3} R₁ _inst_1)) (AddMonoid.toZero.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_9)) (MulActionWithZero.toSMulWithZero.{u3, u2} R₁ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (Semiring.toMonoidWithZero.{u3} R₁ _inst_1) (AddMonoid.toZero.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_9)) (Module.toMulActionWithZero.{u3, u2} R₁ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_1 _inst_9 _inst_18))))) c (FunLike.coe.{max (succ u1) (succ u2), succ u1, succ u2} (ContinuousLinearMap.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u1 u2, u1, u2} (ContinuousLinearMap.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u2, u3, u3, u1, u2} (ContinuousLinearMap.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_18))) f x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.map_smul ContinuousLinearMap.map_smulₓ'. -/
@[simp]
protected theorem map_smul [Module R₁ M₂] (f : M₁ →L[R₁] M₂) (c : R₁) (x : M₁) :
    f (c • x) = c • f x := by simp only [RingHom.id_apply, ContinuousLinearMap.map_smulₛₗ]
#align continuous_linear_map.map_smul ContinuousLinearMap.map_smul

/- warning: continuous_linear_map.map_smul_of_tower -> ContinuousLinearMap.map_smul_of_tower is a dubious translation:
lean 3 declaration is
  forall {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] {R : Type.{u3}} {S : Type.{u4}} [_inst_18 : Semiring.{u4} S] [_inst_19 : SMul.{u3, u1} R M₁] [_inst_20 : Module.{u4, u1} S M₁ _inst_18 _inst_5] [_inst_21 : SMul.{u3, u2} R M₂] [_inst_22 : Module.{u4, u2} S M₂ _inst_18 _inst_9] [_inst_23 : LinearMap.CompatibleSMul.{u1, u2, u3, u4} M₁ M₂ _inst_5 _inst_9 R S _inst_18 _inst_19 _inst_20 _inst_21 _inst_22] (f : ContinuousLinearMap.{u4, u4, u1, u2} S S _inst_18 _inst_18 (RingHom.id.{u4} S (Semiring.toNonAssocSemiring.{u4} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22) (c : R) (x : M₁), Eq.{succ u2} M₂ (coeFn.{max (succ u1) (succ u2), max (succ u1) (succ u2)} (ContinuousLinearMap.{u4, u4, u1, u2} S S _inst_18 _inst_18 (RingHom.id.{u4} S (Semiring.toNonAssocSemiring.{u4} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22) (fun (_x : ContinuousLinearMap.{u4, u4, u1, u2} S S _inst_18 _inst_18 (RingHom.id.{u4} S (Semiring.toNonAssocSemiring.{u4} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u4, u4, u1, u2} S S _inst_18 _inst_18 (RingHom.id.{u4} S (Semiring.toNonAssocSemiring.{u4} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22) f (SMul.smul.{u3, u1} R M₁ _inst_19 c x)) (SMul.smul.{u3, u2} R M₂ _inst_21 c (coeFn.{max (succ u1) (succ u2), max (succ u1) (succ u2)} (ContinuousLinearMap.{u4, u4, u1, u2} S S _inst_18 _inst_18 (RingHom.id.{u4} S (Semiring.toNonAssocSemiring.{u4} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22) (fun (_x : ContinuousLinearMap.{u4, u4, u1, u2} S S _inst_18 _inst_18 (RingHom.id.{u4} S (Semiring.toNonAssocSemiring.{u4} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u4, u4, u1, u2} S S _inst_18 _inst_18 (RingHom.id.{u4} S (Semiring.toNonAssocSemiring.{u4} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22) f x))
but is expected to have type
  forall {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] {R : Type.{u4}} {S : Type.{u3}} [_inst_18 : Semiring.{u3} S] [_inst_19 : SMul.{u4, u2} R M₁] [_inst_20 : Module.{u3, u2} S M₁ _inst_18 _inst_5] [_inst_21 : SMul.{u4, u1} R M₂] [_inst_22 : Module.{u3, u1} S M₂ _inst_18 _inst_9] [_inst_23 : LinearMap.CompatibleSMul.{u2, u1, u4, u3} M₁ M₂ _inst_5 _inst_9 R S _inst_18 _inst_19 _inst_20 _inst_21 _inst_22] (f : ContinuousLinearMap.{u3, u3, u2, u1} S S _inst_18 _inst_18 (RingHom.id.{u3} S (Semiring.toNonAssocSemiring.{u3} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22) (c : R) (x : M₁), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (HSMul.hSMul.{u4, u2, u2} R M₁ M₁ (instHSMul.{u4, u2} R M₁ _inst_19) c x)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u3, u3, u2, u1} S S _inst_18 _inst_18 (RingHom.id.{u3} S (Semiring.toNonAssocSemiring.{u3} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} S S _inst_18 _inst_18 (RingHom.id.{u3} S (Semiring.toNonAssocSemiring.{u3} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} S S _inst_18 _inst_18 (RingHom.id.{u3} S (Semiring.toNonAssocSemiring.{u3} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22) S S _inst_18 _inst_18 (RingHom.id.{u3} S (Semiring.toNonAssocSemiring.{u3} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} S S _inst_18 _inst_18 (RingHom.id.{u3} S (Semiring.toNonAssocSemiring.{u3} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22))) f (HSMul.hSMul.{u4, u2, u2} R M₁ M₁ (instHSMul.{u4, u2} R M₁ _inst_19) c x)) (HSMul.hSMul.{u4, u1, u1} R ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (instHSMul.{u4, u1} R ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_21) c (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u3, u3, u2, u1} S S _inst_18 _inst_18 (RingHom.id.{u3} S (Semiring.toNonAssocSemiring.{u3} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} S S _inst_18 _inst_18 (RingHom.id.{u3} S (Semiring.toNonAssocSemiring.{u3} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} S S _inst_18 _inst_18 (RingHom.id.{u3} S (Semiring.toNonAssocSemiring.{u3} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22) S S _inst_18 _inst_18 (RingHom.id.{u3} S (Semiring.toNonAssocSemiring.{u3} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} S S _inst_18 _inst_18 (RingHom.id.{u3} S (Semiring.toNonAssocSemiring.{u3} S _inst_18)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_20 _inst_22))) f x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.map_smul_of_tower ContinuousLinearMap.map_smul_of_towerₓ'. -/
@[simp]
theorem map_smul_of_tower {R S : Type _} [Semiring S] [SMul R M₁] [Module S M₁] [SMul R M₂]
    [Module S M₂] [LinearMap.CompatibleSMul M₁ M₂ R S] (f : M₁ →L[S] M₂) (c : R) (x : M₁) :
    f (c • x) = c • f x :=
  LinearMap.CompatibleSMul.map_smul f c x
#align continuous_linear_map.map_smul_of_tower ContinuousLinearMap.map_smul_of_tower

/- warning: continuous_linear_map.map_sum -> ContinuousLinearMap.map_sum is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] {ι : Type.{u5}} (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (s : Finset.{u5} ι) (g : ι -> M₁), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f (Finset.sum.{u3, u5} M₁ ι _inst_5 s (fun (i : ι) => g i))) (Finset.sum.{u4, u5} M₂ ι _inst_9 s (fun (i : ι) => coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f (g i)))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] {ι : Type.{u5}} (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (s : Finset.{u5} ι) (g : ι -> M₁), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (Finset.sum.{u2, u5} M₁ ι _inst_5 s (fun (i : ι) => g i))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f (Finset.sum.{u2, u5} M₁ ι _inst_5 s (fun (i : ι) => g i))) (Finset.sum.{u1, u5} M₂ ι _inst_9 s (fun (i : ι) => FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f (g i)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.map_sum ContinuousLinearMap.map_sumₓ'. -/
protected theorem map_sum {ι : Type _} (f : M₁ →SL[σ₁₂] M₂) (s : Finset ι) (g : ι → M₁) :
    f (∑ i in s, g i) = ∑ i in s, f (g i) :=
  f.toLinearMap.map_sum
#align continuous_linear_map.map_sum ContinuousLinearMap.map_sum

/- warning: continuous_linear_map.coe_coe -> ContinuousLinearMap.coe_coe is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u3) (succ u4)} (M₁ -> M₂) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (fun (_x : LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) f)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u2) (succ u1)} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) ᾰ) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₁) => M₂) _x) (LinearMap.instFunLikeLinearMap.{u4, u3, u2, u1} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_coe ContinuousLinearMap.coe_coeₓ'. -/
@[simp, norm_cast]
theorem coe_coe (f : M₁ →SL[σ₁₂] M₂) : ⇑(f : M₁ →ₛₗ[σ₁₂] M₂) = f :=
  rfl
#align continuous_linear_map.coe_coe ContinuousLinearMap.coe_coe

/- warning: continuous_linear_map.ext_ring -> ContinuousLinearMap.ext_ring is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_18 : TopologicalSpace.{u1} R₁] {f : ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14} {g : ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14}, (Eq.{succ u2} M₁ (coeFn.{max (succ u1) (succ u2), max (succ u1) (succ u2)} (ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14) => R₁ -> M₁) (ContinuousLinearMap.toFun.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14) f (OfNat.ofNat.{u1} R₁ 1 (OfNat.mk.{u1} R₁ 1 (One.one.{u1} R₁ (AddMonoidWithOne.toOne.{u1} R₁ (AddCommMonoidWithOne.toAddMonoidWithOne.{u1} R₁ (NonAssocSemiring.toAddCommMonoidWithOne.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)))))))) (coeFn.{max (succ u1) (succ u2), max (succ u1) (succ u2)} (ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14) => R₁ -> M₁) (ContinuousLinearMap.toFun.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14) g (OfNat.ofNat.{u1} R₁ 1 (OfNat.mk.{u1} R₁ 1 (One.one.{u1} R₁ (AddMonoidWithOne.toOne.{u1} R₁ (AddCommMonoidWithOne.toAddMonoidWithOne.{u1} R₁ (NonAssocSemiring.toAddCommMonoidWithOne.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))))))))) -> (Eq.{max (succ u1) (succ u2)} (ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14) f g)
but is expected to have type
  forall {R₁ : Type.{u2}} [_inst_1 : Semiring.{u2} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] [_inst_18 : TopologicalSpace.{u2} R₁] {f : ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14} {g : ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14}, (Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₁) (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1)))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14) R₁ (fun (_x : R₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14) R₁ M₁ _inst_18 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u2, u2, u2, u1} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14))) f (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1)))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14) R₁ (fun (_x : R₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14) R₁ M₁ _inst_18 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u2, u2, u2, u1} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14))) g (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1))))) -> (Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14) f g)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.ext_ring ContinuousLinearMap.ext_ringₓ'. -/
@[ext]
theorem ext_ring [TopologicalSpace R₁] {f g : R₁ →L[R₁] M₁} (h : f 1 = g 1) : f = g :=
  coe_inj.1 <| LinearMap.ext_ring h
#align continuous_linear_map.ext_ring ContinuousLinearMap.ext_ring

/- warning: continuous_linear_map.ext_ring_iff -> ContinuousLinearMap.ext_ring_iff is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_18 : TopologicalSpace.{u1} R₁] {f : ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14} {g : ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14}, Iff (Eq.{max (succ u1) (succ u2)} (ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14) f g) (Eq.{succ u2} M₁ (coeFn.{max (succ u1) (succ u2), max (succ u1) (succ u2)} (ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14) => R₁ -> M₁) (ContinuousLinearMap.toFun.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14) f (OfNat.ofNat.{u1} R₁ 1 (OfNat.mk.{u1} R₁ 1 (One.one.{u1} R₁ (AddMonoidWithOne.toOne.{u1} R₁ (AddCommMonoidWithOne.toAddMonoidWithOne.{u1} R₁ (NonAssocSemiring.toAddCommMonoidWithOne.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)))))))) (coeFn.{max (succ u1) (succ u2), max (succ u1) (succ u2)} (ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14) => R₁ -> M₁) (ContinuousLinearMap.toFun.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u1} R₁ _inst_1) _inst_14) g (OfNat.ofNat.{u1} R₁ 1 (OfNat.mk.{u1} R₁ 1 (One.one.{u1} R₁ (AddMonoidWithOne.toOne.{u1} R₁ (AddCommMonoidWithOne.toAddMonoidWithOne.{u1} R₁ (NonAssocSemiring.toAddCommMonoidWithOne.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)))))))))
but is expected to have type
  forall {R₁ : Type.{u2}} [_inst_1 : Semiring.{u2} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] [_inst_18 : TopologicalSpace.{u2} R₁] {f : ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14} {g : ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14}, Iff (Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14) f g) (Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₁) (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1)))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14) R₁ (fun (_x : R₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14) R₁ M₁ _inst_18 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u2, u2, u2, u1} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14))) f (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1)))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14) R₁ (fun (_x : R₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14) R₁ M₁ _inst_18 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u2, u2, u2, u1} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_18 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_4 _inst_5 (Semiring.toModule.{u2} R₁ _inst_1) _inst_14))) g (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1)))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.ext_ring_iff ContinuousLinearMap.ext_ring_iffₓ'. -/
theorem ext_ring_iff [TopologicalSpace R₁] {f g : R₁ →L[R₁] M₁} : f = g ↔ f 1 = g 1 :=
  ⟨fun h => h ▸ rfl, ext_ring⟩
#align continuous_linear_map.ext_ring_iff ContinuousLinearMap.ext_ring_iff

/- warning: continuous_linear_map.eq_on_closure_span -> ContinuousLinearMap.eqOn_closure_span is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] [_inst_18 : T2Space.{u4} M₂ _inst_8] {s : Set.{u3} M₁} {f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16} {g : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16}, (Set.EqOn.{u3, u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) g) s) -> (Set.EqOn.{u3, u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) g) (closure.{u3} M₁ _inst_4 ((fun (a : Type.{u3}) (b : Type.{u3}) [self : HasLiftT.{succ u3, succ u3} a b] => self.0) (Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) (Set.{u3} M₁) (HasLiftT.mk.{succ u3, succ u3} (Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) (Set.{u3} M₁) (CoeTCₓ.coe.{succ u3, succ u3} (Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) (Set.{u3} M₁) (SetLike.Set.hasCoeT.{u3, u3} (Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14)))) (Submodule.span.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14 s))))
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u1}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u1} R₂] {σ₁₂ : RingHom.{u2, u1} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u2, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u1, u4} R₂ M₂ _inst_2 _inst_9] [_inst_18 : T2Space.{u4} M₂ _inst_8] {s : Set.{u3} M₁} {f : ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16} {g : ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16}, (Set.EqOn.{u3, u4} M₁ M₂ (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u2, u1, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f) (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u2, u1, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) g) s) -> (Set.EqOn.{u3, u4} M₁ M₂ (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u2, u1, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f) (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u2, u1, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) g) (closure.{u3} M₁ _inst_4 (SetLike.coe.{u3, u3} (Submodule.{u2, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) (Submodule.span.{u2, u3} R₁ M₁ _inst_1 _inst_5 _inst_14 s))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.eq_on_closure_span ContinuousLinearMap.eqOn_closure_spanₓ'. -/
/-- If two continuous linear maps are equal on a set `s`, then they are equal on the closure
of the `submodule.span` of this set. -/
theorem eqOn_closure_span [T2Space M₂] {s : Set M₁} {f g : M₁ →SL[σ₁₂] M₂} (h : Set.EqOn f g s) :
    Set.EqOn f g (closure (Submodule.span R₁ s : Set M₁)) :=
  (LinearMap.eqOn_span' h).closure f.Continuous g.Continuous
#align continuous_linear_map.eq_on_closure_span ContinuousLinearMap.eqOn_closure_span

/- warning: continuous_linear_map.ext_on -> ContinuousLinearMap.ext_on is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] [_inst_18 : T2Space.{u4} M₂ _inst_8] {s : Set.{u3} M₁}, (Dense.{u3} M₁ _inst_4 ((fun (a : Type.{u3}) (b : Type.{u3}) [self : HasLiftT.{succ u3, succ u3} a b] => self.0) (Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) (Set.{u3} M₁) (HasLiftT.mk.{succ u3, succ u3} (Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) (Set.{u3} M₁) (CoeTCₓ.coe.{succ u3, succ u3} (Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) (Set.{u3} M₁) (SetLike.Set.hasCoeT.{u3, u3} (Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14)))) (Submodule.span.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14 s))) -> (forall {f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16} {g : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16}, (Set.EqOn.{u3, u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) g) s) -> (Eq.{max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f g))
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u1}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u1} R₂] {σ₁₂ : RingHom.{u2, u1} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u2, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u1, u4} R₂ M₂ _inst_2 _inst_9] [_inst_18 : T2Space.{u4} M₂ _inst_8] {s : Set.{u3} M₁}, (Dense.{u3} M₁ _inst_4 (SetLike.coe.{u3, u3} (Submodule.{u2, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) (Submodule.span.{u2, u3} R₁ M₁ _inst_1 _inst_5 _inst_14 s))) -> (forall {f : ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16} {g : ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16}, (Set.EqOn.{u3, u4} M₁ M₂ (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u2, u1, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f) (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u2, u1, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) g) s) -> (Eq.{max (succ u3) (succ u4)} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f g))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.ext_on ContinuousLinearMap.ext_onₓ'. -/
/-- If the submodule generated by a set `s` is dense in the ambient module, then two continuous
linear maps equal on `s` are equal. -/
theorem ext_on [T2Space M₂] {s : Set M₁} (hs : Dense (Submodule.span R₁ s : Set M₁))
    {f g : M₁ →SL[σ₁₂] M₂} (h : Set.EqOn f g s) : f = g :=
  ext fun x => eqOn_closure_span h (hs x)
#align continuous_linear_map.ext_on ContinuousLinearMap.ext_on

/- warning: submodule.topological_closure_map -> Submodule.topologicalClosure_map is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] [_inst_18 : RingHomSurjective.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂] [_inst_19 : TopologicalSpace.{u1} R₁] [_inst_20 : TopologicalSpace.{u2} R₂] [_inst_21 : ContinuousSMul.{u1, u3} R₁ M₁ (SMulZeroClass.toHasSmul.{u1, u3} R₁ M₁ (AddZeroClass.toHasZero.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_5))) (SMulWithZero.toSmulZeroClass.{u1, u3} R₁ M₁ (MulZeroClass.toHasZero.{u1} R₁ (MulZeroOneClass.toMulZeroClass.{u1} R₁ (MonoidWithZero.toMulZeroOneClass.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)))) (AddZeroClass.toHasZero.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_5))) (MulActionWithZero.toSMulWithZero.{u1, u3} R₁ M₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_5))) (Module.toMulActionWithZero.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14)))) _inst_19 _inst_4] [_inst_22 : ContinuousAdd.{u3} M₁ _inst_4 (AddZeroClass.toHasAdd.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_5)))] [_inst_23 : ContinuousSMul.{u2, u4} R₂ M₂ (SMulZeroClass.toHasSmul.{u2, u4} R₂ M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (SMulWithZero.toSmulZeroClass.{u2, u4} R₂ M₂ (MulZeroClass.toHasZero.{u2} R₂ (MulZeroOneClass.toMulZeroClass.{u2} R₂ (MonoidWithZero.toMulZeroOneClass.{u2} R₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2)))) (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (MulActionWithZero.toSMulWithZero.{u2, u4} R₂ M₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2) (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (Module.toMulActionWithZero.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)))) _inst_20 _inst_8] [_inst_24 : ContinuousAdd.{u4} M₂ _inst_8 (AddZeroClass.toHasAdd.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)))] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (s : Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14), LE.le.{u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (Preorder.toHasLe.{u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (PartialOrder.toPreorder.{u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.partialOrder.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)))) (Submodule.map.{u1, u2, u3, u4, max u3 u4} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂ _inst_18 (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.semilinearMapClass.{u1, u2, u3, u4} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) f) (Submodule.topologicalClosure.{u1, u3} R₁ M₁ _inst_1 _inst_19 _inst_4 _inst_5 _inst_14 _inst_21 _inst_22 s)) (Submodule.topologicalClosure.{u2, u4} R₂ M₂ _inst_2 _inst_20 _inst_8 _inst_9 _inst_16 _inst_23 _inst_24 (Submodule.map.{u1, u2, u3, u4, max u3 u4} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂ _inst_18 (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.semilinearMapClass.{u1, u2, u3, u4} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) f) s))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] [_inst_18 : RingHomSurjective.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂] [_inst_19 : TopologicalSpace.{u4} R₁] [_inst_20 : TopologicalSpace.{u3} R₂] [_inst_21 : ContinuousSMul.{u4, u2} R₁ M₁ (SMulZeroClass.toSMul.{u4, u2} R₁ M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (SMulWithZero.toSMulZeroClass.{u4, u2} R₁ M₁ (MonoidWithZero.toZero.{u4} R₁ (Semiring.toMonoidWithZero.{u4} R₁ _inst_1)) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (MulActionWithZero.toSMulWithZero.{u4, u2} R₁ M₁ (Semiring.toMonoidWithZero.{u4} R₁ _inst_1) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (Module.toMulActionWithZero.{u4, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)))) _inst_19 _inst_4] [_inst_22 : ContinuousAdd.{u2} M₁ _inst_4 (AddZeroClass.toAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)))] [_inst_23 : ContinuousSMul.{u3, u1} R₂ M₂ (SMulZeroClass.toSMul.{u3, u1} R₂ M₂ (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (SMulWithZero.toSMulZeroClass.{u3, u1} R₂ M₂ (MonoidWithZero.toZero.{u3} R₂ (Semiring.toMonoidWithZero.{u3} R₂ _inst_2)) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (MulActionWithZero.toSMulWithZero.{u3, u1} R₂ M₂ (Semiring.toMonoidWithZero.{u3} R₂ _inst_2) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (Module.toMulActionWithZero.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)))) _inst_20 _inst_8] [_inst_24 : ContinuousAdd.{u1} M₂ _inst_8 (AddZeroClass.toAdd.{u1} M₂ (AddMonoid.toAddZeroClass.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)))] (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (s : Submodule.{u4, u2} R₁ M₁ _inst_1 _inst_5 _inst_14), LE.le.{u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (Preorder.toLE.{u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (PartialOrder.toPreorder.{u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (OmegaCompletePartialOrder.toPartialOrder.{u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (CompleteLattice.instOmegaCompletePartialOrder.{u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (Submodule.completeLattice.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16))))) (Submodule.map.{u4, u3, u2, u1, max u2 u1} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂ _inst_18 (LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.semilinearMapClass.{u4, u3, u2, u1} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f) (Submodule.topologicalClosure.{u4, u2} R₁ M₁ _inst_1 _inst_4 _inst_5 _inst_14 (ContinuousSMul.continuousConstSMul.{u4, u2} R₁ M₁ _inst_19 _inst_4 (SMulZeroClass.toSMul.{u4, u2} R₁ M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (SMulWithZero.toSMulZeroClass.{u4, u2} R₁ M₁ (MonoidWithZero.toZero.{u4} R₁ (Semiring.toMonoidWithZero.{u4} R₁ _inst_1)) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (MulActionWithZero.toSMulWithZero.{u4, u2} R₁ M₁ (Semiring.toMonoidWithZero.{u4} R₁ _inst_1) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (Module.toMulActionWithZero.{u4, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)))) _inst_21) _inst_22 s)) (Submodule.topologicalClosure.{u3, u1} R₂ M₂ _inst_2 _inst_8 _inst_9 _inst_16 (ContinuousSMul.continuousConstSMul.{u3, u1} R₂ M₂ _inst_20 _inst_8 (SMulZeroClass.toSMul.{u3, u1} R₂ M₂ (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (SMulWithZero.toSMulZeroClass.{u3, u1} R₂ M₂ (MonoidWithZero.toZero.{u3} R₂ (Semiring.toMonoidWithZero.{u3} R₂ _inst_2)) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (MulActionWithZero.toSMulWithZero.{u3, u1} R₂ M₂ (Semiring.toMonoidWithZero.{u3} R₂ _inst_2) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (Module.toMulActionWithZero.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)))) _inst_23) _inst_24 (Submodule.map.{u4, u3, u2, u1, max u2 u1} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂ _inst_18 (LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.semilinearMapClass.{u4, u3, u2, u1} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f) s))
Case conversion may be inaccurate. Consider using '#align submodule.topological_closure_map Submodule.topologicalClosure_mapₓ'. -/
/-- Under a continuous linear map, the image of the `topological_closure` of a submodule is
contained in the `topological_closure` of its image. -/
theorem Submodule.topologicalClosure_map [RingHomSurjective σ₁₂] [TopologicalSpace R₁]
    [TopologicalSpace R₂] [ContinuousSMul R₁ M₁] [ContinuousAdd M₁] [ContinuousSMul R₂ M₂]
    [ContinuousAdd M₂] (f : M₁ →SL[σ₁₂] M₂) (s : Submodule R₁ M₁) :
    s.topologicalClosure.map (f : M₁ →ₛₗ[σ₁₂] M₂) ≤
      (s.map (f : M₁ →ₛₗ[σ₁₂] M₂)).topologicalClosure :=
  image_closure_subset_closure_image f.Continuous
#align submodule.topological_closure_map Submodule.topologicalClosure_map

/- warning: dense_range.topological_closure_map_submodule -> DenseRange.topologicalClosure_map_submodule is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] [_inst_18 : RingHomSurjective.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂] [_inst_19 : TopologicalSpace.{u1} R₁] [_inst_20 : TopologicalSpace.{u2} R₂] [_inst_21 : ContinuousSMul.{u1, u3} R₁ M₁ (SMulZeroClass.toHasSmul.{u1, u3} R₁ M₁ (AddZeroClass.toHasZero.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_5))) (SMulWithZero.toSmulZeroClass.{u1, u3} R₁ M₁ (MulZeroClass.toHasZero.{u1} R₁ (MulZeroOneClass.toMulZeroClass.{u1} R₁ (MonoidWithZero.toMulZeroOneClass.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)))) (AddZeroClass.toHasZero.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_5))) (MulActionWithZero.toSMulWithZero.{u1, u3} R₁ M₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_5))) (Module.toMulActionWithZero.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14)))) _inst_19 _inst_4] [_inst_22 : ContinuousAdd.{u3} M₁ _inst_4 (AddZeroClass.toHasAdd.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_5)))] [_inst_23 : ContinuousSMul.{u2, u4} R₂ M₂ (SMulZeroClass.toHasSmul.{u2, u4} R₂ M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (SMulWithZero.toSmulZeroClass.{u2, u4} R₂ M₂ (MulZeroClass.toHasZero.{u2} R₂ (MulZeroOneClass.toMulZeroClass.{u2} R₂ (MonoidWithZero.toMulZeroOneClass.{u2} R₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2)))) (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (MulActionWithZero.toSMulWithZero.{u2, u4} R₂ M₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2) (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (Module.toMulActionWithZero.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)))) _inst_20 _inst_8] [_inst_24 : ContinuousAdd.{u4} M₂ _inst_8 (AddZeroClass.toHasAdd.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)))] {f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16}, (DenseRange.{u4, u3} M₂ _inst_8 M₁ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f)) -> (forall {s : Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14}, (Eq.{succ u3} (Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) (Submodule.topologicalClosure.{u1, u3} R₁ M₁ _inst_1 _inst_19 _inst_4 _inst_5 _inst_14 _inst_21 _inst_22 s) (Top.top.{u3} (Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) (Submodule.hasTop.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14))) -> (Eq.{succ u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (Submodule.topologicalClosure.{u2, u4} R₂ M₂ _inst_2 _inst_20 _inst_8 _inst_9 _inst_16 _inst_23 _inst_24 (Submodule.map.{u1, u2, u3, u4, max u3 u4} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂ _inst_18 (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.semilinearMapClass.{u1, u2, u3, u4} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) f) s)) (Top.top.{u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (Submodule.hasTop.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16))))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] [_inst_18 : RingHomSurjective.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂] [_inst_19 : TopologicalSpace.{u4} R₁] [_inst_20 : TopologicalSpace.{u3} R₂] [_inst_21 : ContinuousSMul.{u4, u2} R₁ M₁ (SMulZeroClass.toSMul.{u4, u2} R₁ M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (SMulWithZero.toSMulZeroClass.{u4, u2} R₁ M₁ (MonoidWithZero.toZero.{u4} R₁ (Semiring.toMonoidWithZero.{u4} R₁ _inst_1)) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (MulActionWithZero.toSMulWithZero.{u4, u2} R₁ M₁ (Semiring.toMonoidWithZero.{u4} R₁ _inst_1) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (Module.toMulActionWithZero.{u4, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)))) _inst_19 _inst_4] [_inst_22 : ContinuousAdd.{u2} M₁ _inst_4 (AddZeroClass.toAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)))] [_inst_23 : ContinuousSMul.{u3, u1} R₂ M₂ (SMulZeroClass.toSMul.{u3, u1} R₂ M₂ (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (SMulWithZero.toSMulZeroClass.{u3, u1} R₂ M₂ (MonoidWithZero.toZero.{u3} R₂ (Semiring.toMonoidWithZero.{u3} R₂ _inst_2)) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (MulActionWithZero.toSMulWithZero.{u3, u1} R₂ M₂ (Semiring.toMonoidWithZero.{u3} R₂ _inst_2) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (Module.toMulActionWithZero.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)))) _inst_20 _inst_8] [_inst_24 : ContinuousAdd.{u1} M₂ _inst_8 (AddZeroClass.toAdd.{u1} M₂ (AddMonoid.toAddZeroClass.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)))] {f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16}, (DenseRange.{u1, u2} M₂ _inst_8 M₁ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f)) -> (forall {s : Submodule.{u4, u2} R₁ M₁ _inst_1 _inst_5 _inst_14}, (Eq.{succ u2} (Submodule.{u4, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (Submodule.topologicalClosure.{u4, u2} R₁ M₁ _inst_1 _inst_4 _inst_5 _inst_14 (ContinuousSMul.continuousConstSMul.{u4, u2} R₁ M₁ _inst_19 _inst_4 (SMulZeroClass.toSMul.{u4, u2} R₁ M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (SMulWithZero.toSMulZeroClass.{u4, u2} R₁ M₁ (MonoidWithZero.toZero.{u4} R₁ (Semiring.toMonoidWithZero.{u4} R₁ _inst_1)) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (MulActionWithZero.toSMulWithZero.{u4, u2} R₁ M₁ (Semiring.toMonoidWithZero.{u4} R₁ _inst_1) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (Module.toMulActionWithZero.{u4, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)))) _inst_21) _inst_22 s) (Top.top.{u2} (Submodule.{u4, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (Submodule.instTopSubmodule.{u4, u2} R₁ M₁ _inst_1 _inst_5 _inst_14))) -> (Eq.{succ u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (Submodule.topologicalClosure.{u3, u1} R₂ M₂ _inst_2 _inst_8 _inst_9 _inst_16 (ContinuousSMul.continuousConstSMul.{u3, u1} R₂ M₂ _inst_20 _inst_8 (SMulZeroClass.toSMul.{u3, u1} R₂ M₂ (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (SMulWithZero.toSMulZeroClass.{u3, u1} R₂ M₂ (MonoidWithZero.toZero.{u3} R₂ (Semiring.toMonoidWithZero.{u3} R₂ _inst_2)) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (MulActionWithZero.toSMulWithZero.{u3, u1} R₂ M₂ (Semiring.toMonoidWithZero.{u3} R₂ _inst_2) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (Module.toMulActionWithZero.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)))) _inst_23) _inst_24 (Submodule.map.{u4, u3, u2, u1, max u2 u1} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂ _inst_18 (LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.semilinearMapClass.{u4, u3, u2, u1} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f) s)) (Top.top.{u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (Submodule.instTopSubmodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16))))
Case conversion may be inaccurate. Consider using '#align dense_range.topological_closure_map_submodule DenseRange.topologicalClosure_map_submoduleₓ'. -/
/-- Under a dense continuous linear map, a submodule whose `topological_closure` is `⊤` is sent to
another such submodule.  That is, the image of a dense set under a map with dense range is dense.
-/
theorem DenseRange.topologicalClosure_map_submodule [RingHomSurjective σ₁₂] [TopologicalSpace R₁]
    [TopologicalSpace R₂] [ContinuousSMul R₁ M₁] [ContinuousAdd M₁] [ContinuousSMul R₂ M₂]
    [ContinuousAdd M₂] {f : M₁ →SL[σ₁₂] M₂} (hf' : DenseRange f) {s : Submodule R₁ M₁}
    (hs : s.topologicalClosure = ⊤) : (s.map (f : M₁ →ₛₗ[σ₁₂] M₂)).topologicalClosure = ⊤ :=
  by
  rw [SetLike.ext'_iff] at hs⊢
  simp only [Submodule.topologicalClosure_coe, Submodule.top_coe, ← dense_iff_closure_eq] at hs⊢
  exact hf'.dense_image f.continuous hs
#align dense_range.topological_closure_map_submodule DenseRange.topologicalClosure_map_submodule

section SmulMonoid

variable {S₂ T₂ : Type _} [Monoid S₂] [Monoid T₂]

variable [DistribMulAction S₂ M₂] [SMulCommClass R₂ S₂ M₂] [ContinuousConstSMul S₂ M₂]

variable [DistribMulAction T₂ M₂] [SMulCommClass R₂ T₂ M₂] [ContinuousConstSMul T₂ M₂]

instance : MulAction S₂ (M₁ →SL[σ₁₂] M₂)
    where
  smul c f := ⟨c • f, (f.2.const_smul _ : Continuous fun x => c • f x)⟩
  one_smul f := ext fun x => one_smul _ _
  mul_smul a b f := ext fun x => mul_smul _ _ _

/- warning: continuous_linear_map.smul_apply -> ContinuousLinearMap.smul_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] {S₂ : Type.{u5}} [_inst_18 : Monoid.{u5} S₂] [_inst_20 : DistribMulAction.{u5, u4} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)] [_inst_21 : SMulCommClass.{u2, u5, u4} R₂ S₂ M₂ (SMulZeroClass.toHasSmul.{u2, u4} R₂ M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (SMulWithZero.toSmulZeroClass.{u2, u4} R₂ M₂ (MulZeroClass.toHasZero.{u2} R₂ (MulZeroOneClass.toMulZeroClass.{u2} R₂ (MonoidWithZero.toMulZeroOneClass.{u2} R₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2)))) (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (MulActionWithZero.toSMulWithZero.{u2, u4} R₂ M₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2) (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (Module.toMulActionWithZero.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)))) (SMulZeroClass.toHasSmul.{u5, u4} S₂ M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (DistribSMul.toSmulZeroClass.{u5, u4} S₂ M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)) (DistribMulAction.toDistribSMul.{u5, u4} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9) _inst_20)))] [_inst_22 : ContinuousConstSMul.{u5, u4} S₂ M₂ _inst_8 (SMulZeroClass.toHasSmul.{u5, u4} S₂ M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (DistribSMul.toSmulZeroClass.{u5, u4} S₂ M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)) (DistribMulAction.toDistribSMul.{u5, u4} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9) _inst_20)))] (c : S₂) (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (x : M₁), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (SMul.smul.{u5, max u3 u4} S₂ (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (MulAction.toHasSmul.{u5, max u3 u4} S₂ (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) _inst_18 (ContinuousLinearMap.mulAction.{u1, u2, u3, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 S₂ _inst_18 _inst_20 _inst_21 _inst_22)) c f) x) (SMul.smul.{u5, u4} S₂ M₂ (SMulZeroClass.toHasSmul.{u5, u4} S₂ M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (DistribSMul.toSmulZeroClass.{u5, u4} S₂ M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)) (DistribMulAction.toDistribSMul.{u5, u4} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9) _inst_20))) c (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f x))
but is expected to have type
  forall {R₁ : Type.{u5}} {R₂ : Type.{u4}} [_inst_1 : Semiring.{u5} R₁] [_inst_2 : Semiring.{u4} R₂] {σ₁₂ : RingHom.{u5, u4} R₁ R₂ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u4} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] [_inst_14 : Module.{u5, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u4, u2} R₂ M₂ _inst_2 _inst_9] {S₂ : Type.{u1}} [_inst_18 : Monoid.{u1} S₂] [_inst_20 : DistribMulAction.{u1, u2} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)] [_inst_21 : SMulCommClass.{u4, u1, u2} R₂ S₂ M₂ (SMulZeroClass.toSMul.{u4, u2} R₂ M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (SMulWithZero.toSMulZeroClass.{u4, u2} R₂ M₂ (MonoidWithZero.toZero.{u4} R₂ (Semiring.toMonoidWithZero.{u4} R₂ _inst_2)) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (MulActionWithZero.toSMulWithZero.{u4, u2} R₂ M₂ (Semiring.toMonoidWithZero.{u4} R₂ _inst_2) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (Module.toMulActionWithZero.{u4, u2} R₂ M₂ _inst_2 _inst_9 _inst_16)))) (SMulZeroClass.toSMul.{u1, u2} S₂ M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (DistribSMul.toSMulZeroClass.{u1, u2} S₂ M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (DistribMulAction.toDistribSMul.{u1, u2} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9) _inst_20)))] [_inst_22 : ContinuousConstSMul.{u1, u2} S₂ M₂ _inst_8 (SMulZeroClass.toSMul.{u1, u2} S₂ M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (DistribSMul.toSMulZeroClass.{u1, u2} S₂ M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (DistribMulAction.toDistribSMul.{u1, u2} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9) _inst_20)))] (c : S₂) (f : ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (x : M₁), Eq.{succ u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u5, u4, u3, u2} (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) (HSMul.hSMul.{u1, max u3 u2, max u3 u2} S₂ (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (instHSMul.{u1, max u3 u2} S₂ (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (MulAction.toSMul.{u1, max u3 u2} S₂ (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) _inst_18 (ContinuousLinearMap.mulAction.{u5, u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 S₂ _inst_18 _inst_20 _inst_21 _inst_22))) c f) x) (HSMul.hSMul.{u1, u2, u2} S₂ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (instHSMul.{u1, u2} S₂ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (SMulZeroClass.toSMul.{u1, u2} S₂ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddMonoid.toZero.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_9)) (DistribSMul.toSMulZeroClass.{u1, u2} S₂ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddMonoid.toAddZeroClass.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_9)) (DistribMulAction.toDistribSMul.{u1, u2} S₂ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_18 (AddCommMonoid.toAddMonoid.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_9) _inst_20)))) c (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u5, u4, u3, u2} (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.smul_apply ContinuousLinearMap.smul_applyₓ'. -/
theorem smul_apply (c : S₂) (f : M₁ →SL[σ₁₂] M₂) (x : M₁) : (c • f) x = c • f x :=
  rfl
#align continuous_linear_map.smul_apply ContinuousLinearMap.smul_apply

/- warning: continuous_linear_map.coe_smul -> ContinuousLinearMap.coe_smul is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] {S₂ : Type.{u5}} [_inst_18 : Monoid.{u5} S₂] [_inst_20 : DistribMulAction.{u5, u4} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)] [_inst_21 : SMulCommClass.{u2, u5, u4} R₂ S₂ M₂ (SMulZeroClass.toHasSmul.{u2, u4} R₂ M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (SMulWithZero.toSmulZeroClass.{u2, u4} R₂ M₂ (MulZeroClass.toHasZero.{u2} R₂ (MulZeroOneClass.toMulZeroClass.{u2} R₂ (MonoidWithZero.toMulZeroOneClass.{u2} R₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2)))) (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (MulActionWithZero.toSMulWithZero.{u2, u4} R₂ M₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2) (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (Module.toMulActionWithZero.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)))) (SMulZeroClass.toHasSmul.{u5, u4} S₂ M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (DistribSMul.toSmulZeroClass.{u5, u4} S₂ M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)) (DistribMulAction.toDistribSMul.{u5, u4} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9) _inst_20)))] [_inst_22 : ContinuousConstSMul.{u5, u4} S₂ M₂ _inst_8 (SMulZeroClass.toHasSmul.{u5, u4} S₂ M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (DistribSMul.toSmulZeroClass.{u5, u4} S₂ M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)) (DistribMulAction.toDistribSMul.{u5, u4} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9) _inst_20)))] (c : S₂) (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) ((fun (a : Type.{max u3 u4}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{succ (max u3 u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{succ (max u3 u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{succ (max u3 u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{succ (max u3 u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) (SMul.smul.{u5, max u3 u4} S₂ (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (MulAction.toHasSmul.{u5, max u3 u4} S₂ (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) _inst_18 (ContinuousLinearMap.mulAction.{u1, u2, u3, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 S₂ _inst_18 _inst_20 _inst_21 _inst_22)) c f)) (SMul.smul.{u5, max u3 u4} S₂ (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.hasSmul.{u1, u2, u5, u3, u4} R₁ R₂ S₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂ _inst_18 _inst_20 _inst_21) c ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) f))
but is expected to have type
  forall {R₁ : Type.{u5}} {R₂ : Type.{u4}} [_inst_1 : Semiring.{u5} R₁] [_inst_2 : Semiring.{u4} R₂] {σ₁₂ : RingHom.{u5, u4} R₁ R₂ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u4} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] [_inst_14 : Module.{u5, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u4, u2} R₂ M₂ _inst_2 _inst_9] {S₂ : Type.{u1}} [_inst_18 : Monoid.{u1} S₂] [_inst_20 : DistribMulAction.{u1, u2} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)] [_inst_21 : SMulCommClass.{u4, u1, u2} R₂ S₂ M₂ (SMulZeroClass.toSMul.{u4, u2} R₂ M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (SMulWithZero.toSMulZeroClass.{u4, u2} R₂ M₂ (MonoidWithZero.toZero.{u4} R₂ (Semiring.toMonoidWithZero.{u4} R₂ _inst_2)) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (MulActionWithZero.toSMulWithZero.{u4, u2} R₂ M₂ (Semiring.toMonoidWithZero.{u4} R₂ _inst_2) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (Module.toMulActionWithZero.{u4, u2} R₂ M₂ _inst_2 _inst_9 _inst_16)))) (SMulZeroClass.toSMul.{u1, u2} S₂ M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (DistribSMul.toSMulZeroClass.{u1, u2} S₂ M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (DistribMulAction.toDistribSMul.{u1, u2} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9) _inst_20)))] [_inst_22 : ContinuousConstSMul.{u1, u2} S₂ M₂ _inst_8 (SMulZeroClass.toSMul.{u1, u2} S₂ M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (DistribSMul.toSMulZeroClass.{u1, u2} S₂ M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (DistribMulAction.toDistribSMul.{u1, u2} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9) _inst_20)))] (c : S₂) (f : ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u3) (succ u2)} (LinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.toLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (HSMul.hSMul.{u1, max u3 u2, max u3 u2} S₂ (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (instHSMul.{u1, max u3 u2} S₂ (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (MulAction.toSMul.{u1, max u3 u2} S₂ (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) _inst_18 (ContinuousLinearMap.mulAction.{u5, u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 S₂ _inst_18 _inst_20 _inst_21 _inst_22))) c f)) (HSMul.hSMul.{u1, max u3 u2, max u3 u2} S₂ (LinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (instHSMul.{u1, max u3 u2} S₂ (LinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.instSMulLinearMap.{u5, u4, u1, u3, u2} R₁ R₂ S₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂ _inst_18 _inst_20 _inst_21)) c (ContinuousLinearMap.toLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_smul ContinuousLinearMap.coe_smulₓ'. -/
@[simp, norm_cast]
theorem coe_smul (c : S₂) (f : M₁ →SL[σ₁₂] M₂) : (↑(c • f) : M₁ →ₛₗ[σ₁₂] M₂) = c • f :=
  rfl
#align continuous_linear_map.coe_smul ContinuousLinearMap.coe_smul

/- warning: continuous_linear_map.coe_smul' -> ContinuousLinearMap.coe_smul' is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] {S₂ : Type.{u5}} [_inst_18 : Monoid.{u5} S₂] [_inst_20 : DistribMulAction.{u5, u4} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)] [_inst_21 : SMulCommClass.{u2, u5, u4} R₂ S₂ M₂ (SMulZeroClass.toHasSmul.{u2, u4} R₂ M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (SMulWithZero.toSmulZeroClass.{u2, u4} R₂ M₂ (MulZeroClass.toHasZero.{u2} R₂ (MulZeroOneClass.toMulZeroClass.{u2} R₂ (MonoidWithZero.toMulZeroOneClass.{u2} R₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2)))) (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (MulActionWithZero.toSMulWithZero.{u2, u4} R₂ M₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2) (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (Module.toMulActionWithZero.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)))) (SMulZeroClass.toHasSmul.{u5, u4} S₂ M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (DistribSMul.toSmulZeroClass.{u5, u4} S₂ M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)) (DistribMulAction.toDistribSMul.{u5, u4} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9) _inst_20)))] [_inst_22 : ContinuousConstSMul.{u5, u4} S₂ M₂ _inst_8 (SMulZeroClass.toHasSmul.{u5, u4} S₂ M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (DistribSMul.toSmulZeroClass.{u5, u4} S₂ M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)) (DistribMulAction.toDistribSMul.{u5, u4} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9) _inst_20)))] (c : S₂) (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{succ (max u3 u4)} (M₁ -> M₂) (coeFn.{succ (max u3 u4), succ (max u3 u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (SMul.smul.{u5, max u3 u4} S₂ (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (MulAction.toHasSmul.{u5, max u3 u4} S₂ (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) _inst_18 (ContinuousLinearMap.mulAction.{u1, u2, u3, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 S₂ _inst_18 _inst_20 _inst_21 _inst_22)) c f)) (SMul.smul.{u5, max u3 u4} S₂ (M₁ -> M₂) (Function.hasSMul.{u3, u5, u4} M₁ S₂ M₂ (SMulZeroClass.toHasSmul.{u5, u4} S₂ M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))) (DistribSMul.toSmulZeroClass.{u5, u4} S₂ M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)) (DistribMulAction.toDistribSMul.{u5, u4} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9) _inst_20)))) c (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f))
but is expected to have type
  forall {R₁ : Type.{u5}} {R₂ : Type.{u4}} [_inst_1 : Semiring.{u5} R₁] [_inst_2 : Semiring.{u4} R₂] {σ₁₂ : RingHom.{u5, u4} R₁ R₂ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u4} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] [_inst_14 : Module.{u5, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u4, u2} R₂ M₂ _inst_2 _inst_9] {S₂ : Type.{u1}} [_inst_18 : Monoid.{u1} S₂] [_inst_20 : DistribMulAction.{u1, u2} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)] [_inst_21 : SMulCommClass.{u4, u1, u2} R₂ S₂ M₂ (SMulZeroClass.toSMul.{u4, u2} R₂ M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (SMulWithZero.toSMulZeroClass.{u4, u2} R₂ M₂ (MonoidWithZero.toZero.{u4} R₂ (Semiring.toMonoidWithZero.{u4} R₂ _inst_2)) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (MulActionWithZero.toSMulWithZero.{u4, u2} R₂ M₂ (Semiring.toMonoidWithZero.{u4} R₂ _inst_2) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (Module.toMulActionWithZero.{u4, u2} R₂ M₂ _inst_2 _inst_9 _inst_16)))) (SMulZeroClass.toSMul.{u1, u2} S₂ M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (DistribSMul.toSMulZeroClass.{u1, u2} S₂ M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (DistribMulAction.toDistribSMul.{u1, u2} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9) _inst_20)))] [_inst_22 : ContinuousConstSMul.{u1, u2} S₂ M₂ _inst_8 (SMulZeroClass.toSMul.{u1, u2} S₂ M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (DistribSMul.toSMulZeroClass.{u1, u2} S₂ M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)) (DistribMulAction.toDistribSMul.{u1, u2} S₂ M₂ _inst_18 (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9) _inst_20)))] (c : S₂) (f : ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u3) (succ u2)} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) ᾰ) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u5, u4, u3, u2} (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) (HSMul.hSMul.{u1, max u3 u2, max u3 u2} S₂ (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (instHSMul.{u1, max u3 u2} S₂ (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (MulAction.toSMul.{u1, max u3 u2} S₂ (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) _inst_18 (ContinuousLinearMap.mulAction.{u5, u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 S₂ _inst_18 _inst_20 _inst_21 _inst_22))) c f)) (HSMul.hSMul.{u1, max u3 u2, max u3 u2} S₂ (forall (a : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) a) (forall (ᾰ : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) ᾰ) (instHSMul.{u1, max u3 u2} S₂ (forall (a : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) a) (Pi.instSMul.{u3, u2, u1} M₁ S₂ (fun (a : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) a) (fun (i : M₁) => SMulZeroClass.toSMul.{u1, u2} S₂ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) i) (AddMonoid.toZero.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) i) (AddCommMonoid.toAddMonoid.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) i) _inst_9)) (DistribSMul.toSMulZeroClass.{u1, u2} S₂ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) i) (AddMonoid.toAddZeroClass.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) i) (AddCommMonoid.toAddMonoid.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) i) _inst_9)) (DistribMulAction.toDistribSMul.{u1, u2} S₂ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) i) _inst_18 (AddCommMonoid.toAddMonoid.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) i) _inst_9) _inst_20))))) c (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u5, u4, u3, u2} (ContinuousLinearMap.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u5, u4, u3, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_smul' ContinuousLinearMap.coe_smul'ₓ'. -/
@[simp, norm_cast]
theorem coe_smul' (c : S₂) (f : M₁ →SL[σ₁₂] M₂) : ⇑(c • f) = c • f :=
  rfl
#align continuous_linear_map.coe_smul' ContinuousLinearMap.coe_smul'

instance [SMul S₂ T₂] [IsScalarTower S₂ T₂ M₂] : IsScalarTower S₂ T₂ (M₁ →SL[σ₁₂] M₂) :=
  ⟨fun a b f => ext fun x => smul_assoc a b (f x)⟩

instance [SMulCommClass S₂ T₂ M₂] : SMulCommClass S₂ T₂ (M₁ →SL[σ₁₂] M₂) :=
  ⟨fun a b f => ext fun x => smul_comm a b (f x)⟩

end SmulMonoid

/-- The continuous map that is constantly zero. -/
instance : Zero (M₁ →SL[σ₁₂] M₂) :=
  ⟨⟨0, continuous_zero⟩⟩

instance : Inhabited (M₁ →SL[σ₁₂] M₂) :=
  ⟨0⟩

/- warning: continuous_linear_map.default_def -> ContinuousLinearMap.default_def is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9], Eq.{max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (Inhabited.default.{max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.inhabited.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)) (OfNat.ofNat.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (OfNat.mk.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (Zero.zero.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.zero.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))))
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u1}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u1} R₂] {σ₁₂ : RingHom.{u2, u1} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2)} {M₁ : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M₁] [_inst_5 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u2, u4} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u1, u3} R₂ M₂ _inst_2 _inst_9], Eq.{max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (Inhabited.default.{max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.inhabited.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)) (OfNat.ofNat.{max u4 u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (Zero.toOfNat0.{max u4 u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.zero.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.default_def ContinuousLinearMap.default_defₓ'. -/
@[simp]
theorem default_def : (default : M₁ →SL[σ₁₂] M₂) = 0 :=
  rfl
#align continuous_linear_map.default_def ContinuousLinearMap.default_def

/- warning: continuous_linear_map.zero_apply -> ContinuousLinearMap.zero_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (x : M₁), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (OfNat.ofNat.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (OfNat.mk.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (Zero.zero.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.zero.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) x) (OfNat.ofNat.{u4} M₂ 0 (OfNat.mk.{u4} M₂ 0 (Zero.zero.{u4} M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))))))
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u1}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u1} R₂] {σ₁₂ : RingHom.{u2, u1} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u2, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u1, u4} R₂ M₂ _inst_2 _inst_9] (x : M₁), Eq.{succ u4} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u2, u1, u3, u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) (OfNat.ofNat.{max u3 u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (Zero.toOfNat0.{max u3 u4} (ContinuousLinearMap.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.zero.{u2, u1, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) x) (OfNat.ofNat.{u4} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) 0 (Zero.toOfNat0.{u4} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddMonoid.toZero.{u4} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u4} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_9))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.zero_apply ContinuousLinearMap.zero_applyₓ'. -/
@[simp]
theorem zero_apply (x : M₁) : (0 : M₁ →SL[σ₁₂] M₂) x = 0 :=
  rfl
#align continuous_linear_map.zero_apply ContinuousLinearMap.zero_apply

/- warning: continuous_linear_map.coe_zero -> ContinuousLinearMap.coe_zero is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9], Eq.{max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) (OfNat.ofNat.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (OfNat.mk.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (Zero.zero.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.zero.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))))) (OfNat.ofNat.{max u3 u4} (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) 0 (OfNat.mk.{max u3 u4} (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) 0 (Zero.zero.{max u3 u4} (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.hasZero.{u1, u2, u3, u4} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂))))
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u1}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u1} R₂] {σ₁₂ : RingHom.{u2, u1} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2)} {M₁ : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M₁] [_inst_5 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u2, u4} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u1, u3} R₂ M₂ _inst_2 _inst_9], Eq.{max (succ u4) (succ u3)} (LinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.toLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (OfNat.ofNat.{max u4 u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (Zero.toOfNat0.{max u4 u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.zero.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) (OfNat.ofNat.{max u4 u3} (LinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) 0 (Zero.toOfNat0.{max u4 u3} (LinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.instZeroLinearMap.{u2, u1, u4, u3} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_zero ContinuousLinearMap.coe_zeroₓ'. -/
@[simp, norm_cast]
theorem coe_zero : ((0 : M₁ →SL[σ₁₂] M₂) : M₁ →ₛₗ[σ₁₂] M₂) = 0 :=
  rfl
#align continuous_linear_map.coe_zero ContinuousLinearMap.coe_zero

/- warning: continuous_linear_map.coe_zero' -> ContinuousLinearMap.coe_zero' is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9], Eq.{succ (max u3 u4)} (M₁ -> M₂) (coeFn.{max (succ u3) (succ u4), succ (max u3 u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (OfNat.ofNat.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (OfNat.mk.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (Zero.zero.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.zero.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))))) (OfNat.ofNat.{max u3 u4} (M₁ -> M₂) 0 (OfNat.mk.{max u3 u4} (M₁ -> M₂) 0 (Zero.zero.{max u3 u4} (M₁ -> M₂) (Pi.instZero.{u3, u4} M₁ (fun (ᾰ : M₁) => M₂) (fun (i : M₁) => AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)))))))
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u1}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u1} R₂] {σ₁₂ : RingHom.{u2, u1} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2)} {M₁ : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M₁] [_inst_5 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u2, u4} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u1, u3} R₂ M₂ _inst_2 _inst_9], Eq.{max (succ u4) (succ u3)} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) ᾰ) (FunLike.coe.{max (succ u4) (succ u3), succ u4, succ u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u4 u3, u4, u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u3, u2, u1, u4, u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) (OfNat.ofNat.{max u4 u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (Zero.toOfNat0.{max u4 u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.zero.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) (OfNat.ofNat.{max u4 u3} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) ᾰ) 0 (Zero.toOfNat0.{max u4 u3} (forall (a : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) a) (Pi.instZero.{u4, u3} M₁ (fun (a : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) a) (fun (i : M₁) => AddMonoid.toZero.{u3} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) i) (AddCommMonoid.toAddMonoid.{u3} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) i) _inst_9)))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_zero' ContinuousLinearMap.coe_zero'ₓ'. -/
/- no simp attribute on the next line as simp does not always simplify `0 x` to `0`
when `0` is the zero function, while it does for the zero continuous linear map,
and this is the most important property we care about. -/
@[norm_cast]
theorem coe_zero' : ⇑(0 : M₁ →SL[σ₁₂] M₂) = 0 :=
  rfl
#align continuous_linear_map.coe_zero' ContinuousLinearMap.coe_zero'

#print ContinuousLinearMap.uniqueOfLeft /-
instance uniqueOfLeft [Subsingleton M₁] : Unique (M₁ →SL[σ₁₂] M₂) :=
  coe_injective.unique
#align continuous_linear_map.unique_of_left ContinuousLinearMap.uniqueOfLeft
-/

#print ContinuousLinearMap.uniqueOfRight /-
instance uniqueOfRight [Subsingleton M₂] : Unique (M₁ →SL[σ₁₂] M₂) :=
  coe_injective.unique
#align continuous_linear_map.unique_of_right ContinuousLinearMap.uniqueOfRight
-/

/- warning: continuous_linear_map.exists_ne_zero -> ContinuousLinearMap.exists_ne_zero is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] {f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16}, (Ne.{max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f (OfNat.ofNat.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (OfNat.mk.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (Zero.zero.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.zero.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))))) -> (Exists.{succ u3} M₁ (fun (x : M₁) => Ne.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f x) (OfNat.ofNat.{u4} M₂ 0 (OfNat.mk.{u4} M₂ 0 (Zero.zero.{u4} M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))))))))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] {f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16}, (Ne.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f (OfNat.ofNat.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (Zero.toOfNat0.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.zero.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) -> (Exists.{succ u2} M₁ (fun (x : M₁) => Ne.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f x) (OfNat.ofNat.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) 0 (Zero.toOfNat0.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddMonoid.toZero.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_9))))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.exists_ne_zero ContinuousLinearMap.exists_ne_zeroₓ'. -/
theorem exists_ne_zero {f : M₁ →SL[σ₁₂] M₂} (hf : f ≠ 0) : ∃ x, f x ≠ 0 :=
  by
  by_contra' h
  exact hf (ContinuousLinearMap.ext h)
#align continuous_linear_map.exists_ne_zero ContinuousLinearMap.exists_ne_zero

section

variable (R₁ M₁)

#print ContinuousLinearMap.id /-
/-- the identity map as a continuous linear map. -/
def id : M₁ →L[R₁] M₁ :=
  ⟨LinearMap.id, continuous_id⟩
#align continuous_linear_map.id ContinuousLinearMap.id
-/

end

instance : One (M₁ →L[R₁] M₁) :=
  ⟨id R₁ M₁⟩

#print ContinuousLinearMap.one_def /-
theorem one_def : (1 : M₁ →L[R₁] M₁) = id R₁ M₁ :=
  rfl
#align continuous_linear_map.one_def ContinuousLinearMap.one_def
-/

/- warning: continuous_linear_map.id_apply -> ContinuousLinearMap.id_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] (x : M₁), Eq.{succ u2} M₁ (coeFn.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) => M₁ -> M₁) (ContinuousLinearMap.toFun.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.id.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14) x) x
but is expected to have type
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] (x : M₁), Eq.{succ u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₁) x) (FunLike.coe.{succ u2, succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₁) _x) (ContinuousMapClass.toFunLike.{u2, u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ M₁ _inst_4 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{u2, u1, u1, u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14))) (ContinuousLinearMap.id.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14) x) x
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.id_apply ContinuousLinearMap.id_applyₓ'. -/
theorem id_apply (x : M₁) : id R₁ M₁ x = x :=
  rfl
#align continuous_linear_map.id_apply ContinuousLinearMap.id_apply

#print ContinuousLinearMap.coe_id /-
@[simp, norm_cast]
theorem coe_id : (id R₁ M₁ : M₁ →ₗ[R₁] M₁) = LinearMap.id :=
  rfl
#align continuous_linear_map.coe_id ContinuousLinearMap.coe_id
-/

/- warning: continuous_linear_map.coe_id' -> ContinuousLinearMap.coe_id' is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5], Eq.{succ u2} (M₁ -> M₁) (coeFn.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) => M₁ -> M₁) (ContinuousLinearMap.toFun.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.id.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14)) (id.{succ u2} M₁)
but is expected to have type
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5], Eq.{succ u2} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₁) ᾰ) (FunLike.coe.{succ u2, succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₁) _x) (ContinuousMapClass.toFunLike.{u2, u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ M₁ _inst_4 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{u2, u1, u1, u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14))) (ContinuousLinearMap.id.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14)) (id.{succ u2} M₁)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_id' ContinuousLinearMap.coe_id'ₓ'. -/
@[simp, norm_cast]
theorem coe_id' : ⇑(id R₁ M₁) = id :=
  rfl
#align continuous_linear_map.coe_id' ContinuousLinearMap.coe_id'

/- warning: continuous_linear_map.coe_eq_id -> ContinuousLinearMap.coe_eq_id is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] {f : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14}, Iff (Eq.{succ u2} (LinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₁ _inst_5 _inst_5 _inst_14 _inst_14) ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (LinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₁ _inst_5 _inst_5 _inst_14 _inst_14) (HasLiftT.mk.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (LinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₁ _inst_5 _inst_5 _inst_14 _inst_14) (CoeTCₓ.coe.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (LinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₁ _inst_5 _inst_5 _inst_14 _inst_14) (coeBase.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (LinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₁ _inst_5 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.LinearMap.coe.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14)))) f) (LinearMap.id.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) (Eq.{succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) f (ContinuousLinearMap.id.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14))
but is expected to have type
  forall {R₁ : Type.{u2}} [_inst_1 : Semiring.{u2} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] {f : ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14}, Iff (Eq.{succ u1} (LinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ M₁ _inst_5 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.toLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14 f) (LinearMap.id.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) (Eq.{succ u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) f (ContinuousLinearMap.id.{u2, u1} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_eq_id ContinuousLinearMap.coe_eq_idₓ'. -/
@[simp, norm_cast]
theorem coe_eq_id {f : M₁ →L[R₁] M₁} : (f : M₁ →ₗ[R₁] M₁) = LinearMap.id ↔ f = id _ _ := by
  rw [← coe_id, coe_inj]
#align continuous_linear_map.coe_eq_id ContinuousLinearMap.coe_eq_id

/- warning: continuous_linear_map.one_apply -> ContinuousLinearMap.one_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] (x : M₁), Eq.{succ u2} M₁ (coeFn.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) => M₁ -> M₁) (ContinuousLinearMap.toFun.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (OfNat.ofNat.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) 1 (OfNat.mk.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) 1 (One.one.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.one.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14)))) x) x
but is expected to have type
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] (x : M₁), Eq.{succ u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₁) x) (FunLike.coe.{succ u2, succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₁) _x) (ContinuousMapClass.toFunLike.{u2, u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ M₁ _inst_4 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{u2, u1, u1, u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14))) (OfNat.ofNat.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) 1 (One.toOfNat1.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.one.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14))) x) x
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.one_apply ContinuousLinearMap.one_applyₓ'. -/
@[simp]
theorem one_apply (x : M₁) : (1 : M₁ →L[R₁] M₁) x = x :=
  rfl
#align continuous_linear_map.one_apply ContinuousLinearMap.one_apply

section Add

variable [ContinuousAdd M₂]

instance : Add (M₁ →SL[σ₁₂] M₂) :=
  ⟨fun f g => ⟨f + g, f.2.add g.2⟩⟩

/- warning: continuous_linear_map.add_apply -> ContinuousLinearMap.add_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] [_inst_18 : ContinuousAdd.{u4} M₂ _inst_8 (AddZeroClass.toHasAdd.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)))] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (g : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (x : M₁), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (HAdd.hAdd.{max u3 u4, max u3 u4, max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (instHAdd.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.add.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_18)) f g) x) (HAdd.hAdd.{u4, u4, u4} M₂ M₂ M₂ (instHAdd.{u4} M₂ (AddZeroClass.toHasAdd.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)))) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f x) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) g x))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] [_inst_18 : ContinuousAdd.{u1} M₂ _inst_8 (AddZeroClass.toAdd.{u1} M₂ (AddMonoid.toAddZeroClass.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)))] (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (g : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (x : M₁), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) (HAdd.hAdd.{max u2 u1, max u2 u1, max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (instHAdd.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.add.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_18)) f g) x) (HAdd.hAdd.{u1, u1, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (instHAdd.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddZeroClass.toAdd.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddMonoid.toAddZeroClass.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_9)))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) g x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.add_apply ContinuousLinearMap.add_applyₓ'. -/
@[simp]
theorem add_apply (f g : M₁ →SL[σ₁₂] M₂) (x : M₁) : (f + g) x = f x + g x :=
  rfl
#align continuous_linear_map.add_apply ContinuousLinearMap.add_apply

/- warning: continuous_linear_map.coe_add -> ContinuousLinearMap.coe_add is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] [_inst_18 : ContinuousAdd.{u4} M₂ _inst_8 (AddZeroClass.toHasAdd.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)))] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (g : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) ((fun (a : Type.{max u3 u4}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{succ (max u3 u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{succ (max u3 u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{succ (max u3 u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{succ (max u3 u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) (HAdd.hAdd.{max u3 u4, max u3 u4, max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (instHAdd.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.add.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_18)) f g)) (HAdd.hAdd.{max u3 u4, max u3 u4, max u3 u4} (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (instHAdd.{max u3 u4} (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.hasAdd.{u1, u2, u3, u4} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂)) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) f) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) g))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] [_inst_18 : ContinuousAdd.{u1} M₂ _inst_8 (AddZeroClass.toAdd.{u1} M₂ (AddMonoid.toAddZeroClass.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)))] (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (g : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u2) (succ u1)} (LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (HAdd.hAdd.{max u2 u1, max u2 u1, max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (instHAdd.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.add.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_18)) f g)) (HAdd.hAdd.{max u2 u1, max u2 u1, max u2 u1} (LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (instHAdd.{max u2 u1} (LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (LinearMap.instAddLinearMap.{u4, u3, u2, u1} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂)) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 g))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_add ContinuousLinearMap.coe_addₓ'. -/
@[simp, norm_cast]
theorem coe_add (f g : M₁ →SL[σ₁₂] M₂) : (↑(f + g) : M₁ →ₛₗ[σ₁₂] M₂) = f + g :=
  rfl
#align continuous_linear_map.coe_add ContinuousLinearMap.coe_add

/- warning: continuous_linear_map.coe_add' -> ContinuousLinearMap.coe_add' is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] [_inst_18 : ContinuousAdd.{u4} M₂ _inst_8 (AddZeroClass.toHasAdd.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)))] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (g : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{succ (max u3 u4)} (M₁ -> M₂) (coeFn.{succ (max u3 u4), succ (max u3 u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (HAdd.hAdd.{max u3 u4, max u3 u4, max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (instHAdd.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.add.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_18)) f g)) (HAdd.hAdd.{max u3 u4, max u3 u4, max u3 u4} (M₁ -> M₂) (M₁ -> M₂) (M₁ -> M₂) (instHAdd.{max u3 u4} (M₁ -> M₂) (Pi.instAdd.{u3, u4} M₁ (fun (ᾰ : M₁) => M₂) (fun (i : M₁) => AddZeroClass.toHasAdd.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9))))) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) g))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] [_inst_18 : ContinuousAdd.{u1} M₂ _inst_8 (AddZeroClass.toAdd.{u1} M₂ (AddMonoid.toAddZeroClass.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)))] (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (g : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u2) (succ u1)} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) ᾰ) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) (HAdd.hAdd.{max u2 u1, max u2 u1, max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (instHAdd.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.add.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_18)) f g)) (HAdd.hAdd.{max u2 u1, max u2 u1, max u2 u1} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) ᾰ) (forall (ᾰ : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) ᾰ) (forall (ᾰ : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) ᾰ) (instHAdd.{max u2 u1} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) ᾰ) (Pi.instAdd.{u2, u1} M₁ (fun (ᾰ : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) ᾰ) (fun (i : M₁) => AddZeroClass.toAdd.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) i) (AddMonoid.toAddZeroClass.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) i) (AddCommMonoid.toAddMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) i) _inst_9))))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) g))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_add' ContinuousLinearMap.coe_add'ₓ'. -/
@[norm_cast]
theorem coe_add' (f g : M₁ →SL[σ₁₂] M₂) : ⇑(f + g) = f + g :=
  rfl
#align continuous_linear_map.coe_add' ContinuousLinearMap.coe_add'

instance : AddCommMonoid (M₁ →SL[σ₁₂] M₂)
    where
  zero := (0 : M₁ →SL[σ₁₂] M₂)
  add := (· + ·)
  zero_add := by
    intros <;> ext <;> apply_rules [zero_add, add_assoc, add_zero, add_left_neg, add_comm]
  add_zero := by
    intros <;> ext <;> apply_rules [zero_add, add_assoc, add_zero, add_left_neg, add_comm]
  add_comm := by
    intros <;> ext <;> apply_rules [zero_add, add_assoc, add_zero, add_left_neg, add_comm]
  add_assoc := by
    intros <;> ext <;> apply_rules [zero_add, add_assoc, add_zero, add_left_neg, add_comm]
  nsmul := (· • ·)
  nsmul_zero f := by
    ext
    simp
  nsmul_succ n f := by
    ext
    simp [Nat.succ_eq_one_add, add_smul]

/- warning: continuous_linear_map.coe_sum -> ContinuousLinearMap.coe_sum is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] [_inst_18 : ContinuousAdd.{u4} M₂ _inst_8 (AddZeroClass.toHasAdd.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)))] {ι : Type.{u5}} (t : Finset.{u5} ι) (f : ι -> (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)), Eq.{max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) ((fun (a : Type.{max u3 u4}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{succ (max u3 u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{succ (max u3 u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{succ (max u3 u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{succ (max u3 u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) (Finset.sum.{max u3 u4, u5} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) ι (ContinuousLinearMap.addCommMonoid.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_18) t (fun (d : ι) => f d))) (Finset.sum.{max u3 u4, u5} (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) ι (LinearMap.addCommMonoid.{u1, u2, u3, u4} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂) t (fun (d : ι) => (fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) (f d)))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] [_inst_18 : ContinuousAdd.{u1} M₂ _inst_8 (AddZeroClass.toAdd.{u1} M₂ (AddMonoid.toAddZeroClass.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)))] {ι : Type.{u5}} (t : Finset.{u5} ι) (f : ι -> (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)), Eq.{max (succ u2) (succ u1)} (LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (Finset.sum.{max u2 u1, u5} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) ι (ContinuousLinearMap.addCommMonoid.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_18) t (fun (d : ι) => f d))) (Finset.sum.{max u2 u1, u5} (LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) ι (LinearMap.addCommMonoid.{u4, u3, u2, u1} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂) t (fun (d : ι) => ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (f d)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_sum ContinuousLinearMap.coe_sumₓ'. -/
@[simp, norm_cast]
theorem coe_sum {ι : Type _} (t : Finset ι) (f : ι → M₁ →SL[σ₁₂] M₂) :
    ↑(∑ d in t, f d) = (∑ d in t, f d : M₁ →ₛₗ[σ₁₂] M₂) :=
  (AddMonoidHom.mk (coe : (M₁ →SL[σ₁₂] M₂) → M₁ →ₛₗ[σ₁₂] M₂) rfl fun _ _ => rfl).map_sum _ _
#align continuous_linear_map.coe_sum ContinuousLinearMap.coe_sum

/- warning: continuous_linear_map.coe_sum' -> ContinuousLinearMap.coe_sum' is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] [_inst_18 : ContinuousAdd.{u4} M₂ _inst_8 (AddZeroClass.toHasAdd.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)))] {ι : Type.{u5}} (t : Finset.{u5} ι) (f : ι -> (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)), Eq.{max (succ u3) (succ u4)} (M₁ -> M₂) (coeFn.{succ (max u3 u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (Finset.sum.{max u3 u4, u5} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) ι (ContinuousLinearMap.addCommMonoid.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_18) t (fun (d : ι) => f d))) (Finset.sum.{max u3 u4, u5} (M₁ -> M₂) ι (Pi.addCommMonoid.{u3, u4} M₁ (fun (ᾰ : M₁) => M₂) (fun (i : M₁) => _inst_9)) t (fun (d : ι) => coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (f d)))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] [_inst_18 : ContinuousAdd.{u1} M₂ _inst_8 (AddZeroClass.toAdd.{u1} M₂ (AddMonoid.toAddZeroClass.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)))] {ι : Type.{u5}} (t : Finset.{u5} ι) (f : ι -> (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)), Eq.{max (succ u2) (succ u1)} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) ᾰ) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) (Finset.sum.{max u2 u1, u5} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) ι (ContinuousLinearMap.addCommMonoid.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_18) t (fun (d : ι) => f d))) (Finset.sum.{max u2 u1, u5} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) ᾰ) ι (Pi.addCommMonoid.{u2, u1} M₁ (fun (ᾰ : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) ᾰ) (fun (i : M₁) => _inst_9)) t (fun (d : ι) => FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) (f d)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_sum' ContinuousLinearMap.coe_sum'ₓ'. -/
@[simp, norm_cast]
theorem coe_sum' {ι : Type _} (t : Finset ι) (f : ι → M₁ →SL[σ₁₂] M₂) :
    ⇑(∑ d in t, f d) = ∑ d in t, f d := by simp only [← coe_coe, coe_sum, LinearMap.coeFn_sum]
#align continuous_linear_map.coe_sum' ContinuousLinearMap.coe_sum'

/- warning: continuous_linear_map.sum_apply -> ContinuousLinearMap.sum_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] [_inst_18 : ContinuousAdd.{u4} M₂ _inst_8 (AddZeroClass.toHasAdd.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_9)))] {ι : Type.{u5}} (t : Finset.{u5} ι) (f : ι -> (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)) (b : M₁), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (Finset.sum.{max u3 u4, u5} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) ι (ContinuousLinearMap.addCommMonoid.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_18) t (fun (d : ι) => f d)) b) (Finset.sum.{u4, u5} M₂ ι _inst_9 t (fun (d : ι) => coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (f d) b))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] [_inst_18 : ContinuousAdd.{u1} M₂ _inst_8 (AddZeroClass.toAdd.{u1} M₂ (AddMonoid.toAddZeroClass.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)))] {ι : Type.{u5}} (t : Finset.{u5} ι) (f : ι -> (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)) (b : M₁), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) b) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) (Finset.sum.{max u2 u1, u5} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) ι (ContinuousLinearMap.addCommMonoid.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_18) t (fun (d : ι) => f d)) b) (Finset.sum.{u1, u5} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) b) ι _inst_9 t (fun (d : ι) => FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) (f d) b))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.sum_apply ContinuousLinearMap.sum_applyₓ'. -/
theorem sum_apply {ι : Type _} (t : Finset ι) (f : ι → M₁ →SL[σ₁₂] M₂) (b : M₁) :
    (∑ d in t, f d) b = ∑ d in t, f d b := by simp only [coe_sum', Finset.sum_apply]
#align continuous_linear_map.sum_apply ContinuousLinearMap.sum_apply

end Add

variable [RingHomCompTriple σ₁₂ σ₂₃ σ₁₃]

#print ContinuousLinearMap.comp /-
/-- Composition of bounded linear maps. -/
def comp (g : M₂ →SL[σ₂₃] M₃) (f : M₁ →SL[σ₁₂] M₂) : M₁ →SL[σ₁₃] M₃ :=
  ⟨(g : M₂ →ₛₗ[σ₂₃] M₃).comp ↑f, g.2.comp f.2⟩
#align continuous_linear_map.comp ContinuousLinearMap.comp
-/

-- mathport name: «expr ∘L »
infixr:80 " ∘L " =>
  @ContinuousLinearMap.comp _ _ _ _ _ _ (RingHom.id _) (RingHom.id _) (RingHom.id _) _ _ _ _ _ _ _ _
    _ _ _ _ RingHomCompTriple.ids

/- warning: continuous_linear_map.coe_comp -> ContinuousLinearMap.coe_comp is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} {R₃ : Type.{u3}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] [_inst_3 : Semiring.{u3} R₃] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₁₃ : RingHom.{u1, u3} R₁ R₃ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {M₁ : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M₁] [_inst_5 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u5}} [_inst_8 : TopologicalSpace.{u5} M₂] [_inst_9 : AddCommMonoid.{u5} M₂] {M₃ : Type.{u6}} [_inst_10 : TopologicalSpace.{u6} M₃] [_inst_11 : AddCommMonoid.{u6} M₃] [_inst_14 : Module.{u1, u4} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u5} R₂ M₂ _inst_2 _inst_9] [_inst_17 : Module.{u3, u6} R₃ M₃ _inst_3 _inst_11] [_inst_18 : RingHomCompTriple.{u1, u2, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] (h : ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (f : ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u4) (succ u6)} (LinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ M₃ _inst_5 _inst_11 _inst_14 _inst_17) ((fun (a : Sort.{max (succ u4) (succ u6)}) (b : Sort.{max (succ u4) (succ u6)}) [self : HasLiftT.{max (succ u4) (succ u6), max (succ u4) (succ u6)} a b] => self.0) (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (LinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ M₃ _inst_5 _inst_11 _inst_14 _inst_17) (HasLiftT.mk.{max (succ u4) (succ u6), max (succ u4) (succ u6)} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (LinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ M₃ _inst_5 _inst_11 _inst_14 _inst_17) (CoeTCₓ.coe.{max (succ u4) (succ u6), max (succ u4) (succ u6)} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (LinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ M₃ _inst_5 _inst_11 _inst_14 _inst_17) (coeBase.{max (succ u4) (succ u6), max (succ u4) (succ u6)} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (LinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ M₃ _inst_5 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.LinearMap.coe.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17)))) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 h f)) (LinearMap.comp.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ M₁ M₂ M₃ _inst_1 _inst_2 _inst_3 _inst_5 _inst_9 _inst_11 _inst_14 _inst_16 _inst_17 σ₁₂ σ₂₃ σ₁₃ _inst_18 ((fun (a : Sort.{max (succ u5) (succ u6)}) (b : Sort.{max (succ u5) (succ u6)}) [self : HasLiftT.{max (succ u5) (succ u6), max (succ u5) (succ u6)} a b] => self.0) (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (LinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ M₃ _inst_9 _inst_11 _inst_16 _inst_17) (HasLiftT.mk.{max (succ u5) (succ u6), max (succ u5) (succ u6)} (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (LinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ M₃ _inst_9 _inst_11 _inst_16 _inst_17) (CoeTCₓ.coe.{max (succ u5) (succ u6), max (succ u5) (succ u6)} (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (LinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ M₃ _inst_9 _inst_11 _inst_16 _inst_17) (coeBase.{max (succ u5) (succ u6), max (succ u5) (succ u6)} (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (LinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ M₃ _inst_9 _inst_11 _inst_16 _inst_17) (ContinuousLinearMap.LinearMap.coe.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17)))) h) ((fun (a : Sort.{max (succ u4) (succ u5)}) (b : Sort.{max (succ u4) (succ u5)}) [self : HasLiftT.{max (succ u4) (succ u5), max (succ u4) (succ u5)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) f))
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u6}} {R₃ : Type.{u5}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u6} R₂] [_inst_3 : Semiring.{u5} R₃] {σ₁₂ : RingHom.{u2, u6} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2)} {σ₂₃ : RingHom.{u6, u5} R₂ R₃ (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u5} R₃ _inst_3)} {σ₁₃ : RingHom.{u2, u5} R₁ R₃ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u5} R₃ _inst_3)} {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] {M₃ : Type.{u3}} [_inst_10 : TopologicalSpace.{u3} M₃] [_inst_11 : AddCommMonoid.{u3} M₃] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u6, u4} R₂ M₂ _inst_2 _inst_9] [_inst_17 : Module.{u5, u3} R₃ M₃ _inst_3 _inst_11] [_inst_18 : RingHomCompTriple.{u2, u6, u5} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] (h : ContinuousLinearMap.{u6, u5, u4, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (f : ContinuousLinearMap.{u2, u6, u1, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u1) (succ u3)} (LinearMap.{u2, u5, u1, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ M₃ _inst_5 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.toLinearMap.{u2, u5, u1, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17 (ContinuousLinearMap.comp.{u2, u6, u5, u1, u4, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 h f)) (LinearMap.comp.{u2, u6, u5, u1, u4, u3} R₁ R₂ R₃ M₁ M₂ M₃ _inst_1 _inst_2 _inst_3 _inst_5 _inst_9 _inst_11 _inst_14 _inst_16 _inst_17 σ₁₂ σ₂₃ σ₁₃ _inst_18 (ContinuousLinearMap.toLinearMap.{u6, u5, u4, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17 h) (ContinuousLinearMap.toLinearMap.{u2, u6, u1, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_comp ContinuousLinearMap.coe_compₓ'. -/
@[simp, norm_cast]
theorem coe_comp (h : M₂ →SL[σ₂₃] M₃) (f : M₁ →SL[σ₁₂] M₂) :
    (h.comp f : M₁ →ₛₗ[σ₁₃] M₃) = (h : M₂ →ₛₗ[σ₂₃] M₃).comp (f : M₁ →ₛₗ[σ₁₂] M₂) :=
  rfl
#align continuous_linear_map.coe_comp ContinuousLinearMap.coe_comp

include σ₁₃

/- warning: continuous_linear_map.coe_comp' -> ContinuousLinearMap.coe_comp' is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} {R₃ : Type.{u3}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] [_inst_3 : Semiring.{u3} R₃] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₁₃ : RingHom.{u1, u3} R₁ R₃ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {M₁ : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M₁] [_inst_5 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u5}} [_inst_8 : TopologicalSpace.{u5} M₂] [_inst_9 : AddCommMonoid.{u5} M₂] {M₃ : Type.{u6}} [_inst_10 : TopologicalSpace.{u6} M₃] [_inst_11 : AddCommMonoid.{u6} M₃] [_inst_14 : Module.{u1, u4} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u5} R₂ M₂ _inst_2 _inst_9] [_inst_17 : Module.{u3, u6} R₃ M₃ _inst_3 _inst_11] [_inst_18 : RingHomCompTriple.{u1, u2, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] (h : ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (f : ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u4) (succ u6)} (M₁ -> M₃) (coeFn.{max (succ u4) (succ u6), max (succ u4) (succ u6)} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (fun (_x : ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) => M₁ -> M₃) (ContinuousLinearMap.toFun.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 h f)) (Function.comp.{succ u4, succ u5, succ u6} M₁ M₂ M₃ (coeFn.{max (succ u5) (succ u6), max (succ u5) (succ u6)} (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (fun (_x : ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) => M₂ -> M₃) (ContinuousLinearMap.toFun.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) h) (coeFn.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f))
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u6}} {R₃ : Type.{u5}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u6} R₂] [_inst_3 : Semiring.{u5} R₃] {σ₁₂ : RingHom.{u2, u6} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2)} {σ₂₃ : RingHom.{u6, u5} R₂ R₃ (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u5} R₃ _inst_3)} {σ₁₃ : RingHom.{u2, u5} R₁ R₃ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u5} R₃ _inst_3)} {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] {M₃ : Type.{u3}} [_inst_10 : TopologicalSpace.{u3} M₃] [_inst_11 : AddCommMonoid.{u3} M₃] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u6, u4} R₂ M₂ _inst_2 _inst_9] [_inst_17 : Module.{u5, u3} R₃ M₃ _inst_3 _inst_11] [_inst_18 : RingHomCompTriple.{u2, u6, u5} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] (h : ContinuousLinearMap.{u6, u5, u4, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (f : ContinuousLinearMap.{u2, u6, u1, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u1) (succ u3)} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) ᾰ) (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (ContinuousLinearMap.{u2, u5, u1, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) _x) (ContinuousMapClass.toFunLike.{max u1 u3, u1, u3} (ContinuousLinearMap.{u2, u5, u1, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) M₁ M₃ _inst_4 _inst_10 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u3, u2, u5, u1, u3} (ContinuousLinearMap.{u2, u5, u1, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u5, u1, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17))) (ContinuousLinearMap.comp.{u2, u6, u5, u1, u4, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 h f)) (Function.comp.{succ u1, succ u4, succ u3} M₁ M₂ M₃ (FunLike.coe.{max (succ u4) (succ u3), succ u4, succ u3} (ContinuousLinearMap.{u6, u5, u4, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₃) _x) (ContinuousMapClass.toFunLike.{max u4 u3, u4, u3} (ContinuousLinearMap.{u6, u5, u4, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) M₂ M₃ _inst_8 _inst_10 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u3, u6, u5, u4, u3} (ContinuousLinearMap.{u6, u5, u4, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17 (ContinuousLinearMap.continuousSemilinearMapClass.{u6, u5, u4, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17))) h) (FunLike.coe.{max (succ u1) (succ u4), succ u1, succ u4} (ContinuousLinearMap.{u2, u6, u1, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u1 u4, u1, u4} (ContinuousLinearMap.{u2, u6, u1, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u4, u2, u6, u1, u4} (ContinuousLinearMap.{u2, u6, u1, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u6, u1, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_comp' ContinuousLinearMap.coe_comp'ₓ'. -/
@[simp, norm_cast]
theorem coe_comp' (h : M₂ →SL[σ₂₃] M₃) (f : M₁ →SL[σ₁₂] M₂) : ⇑(h.comp f) = h ∘ f :=
  rfl
#align continuous_linear_map.coe_comp' ContinuousLinearMap.coe_comp'

/- warning: continuous_linear_map.comp_apply -> ContinuousLinearMap.comp_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} {R₃ : Type.{u3}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] [_inst_3 : Semiring.{u3} R₃] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₁₃ : RingHom.{u1, u3} R₁ R₃ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {M₁ : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M₁] [_inst_5 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u5}} [_inst_8 : TopologicalSpace.{u5} M₂] [_inst_9 : AddCommMonoid.{u5} M₂] {M₃ : Type.{u6}} [_inst_10 : TopologicalSpace.{u6} M₃] [_inst_11 : AddCommMonoid.{u6} M₃] [_inst_14 : Module.{u1, u4} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u5} R₂ M₂ _inst_2 _inst_9] [_inst_17 : Module.{u3, u6} R₃ M₃ _inst_3 _inst_11] [_inst_18 : RingHomCompTriple.{u1, u2, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] (g : ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (f : ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (x : M₁), Eq.{succ u6} M₃ (coeFn.{max (succ u4) (succ u6), max (succ u4) (succ u6)} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (fun (_x : ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) => M₁ -> M₃) (ContinuousLinearMap.toFun.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 g f) x) (coeFn.{max (succ u5) (succ u6), max (succ u5) (succ u6)} (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (fun (_x : ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) => M₂ -> M₃) (ContinuousLinearMap.toFun.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) g (coeFn.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f x))
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u6}} {R₃ : Type.{u5}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u6} R₂] [_inst_3 : Semiring.{u5} R₃] {σ₁₂ : RingHom.{u2, u6} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2)} {σ₂₃ : RingHom.{u6, u5} R₂ R₃ (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u5} R₃ _inst_3)} {σ₁₃ : RingHom.{u2, u5} R₁ R₃ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u5} R₃ _inst_3)} {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] {M₃ : Type.{u3}} [_inst_10 : TopologicalSpace.{u3} M₃] [_inst_11 : AddCommMonoid.{u3} M₃] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u6, u4} R₂ M₂ _inst_2 _inst_9] [_inst_17 : Module.{u5, u3} R₃ M₃ _inst_3 _inst_11] [_inst_18 : RingHomCompTriple.{u2, u6, u5} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] (g : ContinuousLinearMap.{u6, u5, u4, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (f : ContinuousLinearMap.{u2, u6, u1, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (x : M₁), Eq.{succ u3} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) x) (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (ContinuousLinearMap.{u2, u5, u1, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) _x) (ContinuousMapClass.toFunLike.{max u1 u3, u1, u3} (ContinuousLinearMap.{u2, u5, u1, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) M₁ M₃ _inst_4 _inst_10 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u3, u2, u5, u1, u3} (ContinuousLinearMap.{u2, u5, u1, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u5, u1, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17))) (ContinuousLinearMap.comp.{u2, u6, u5, u1, u4, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 g f) x) (FunLike.coe.{max (succ u4) (succ u3), succ u4, succ u3} (ContinuousLinearMap.{u6, u5, u4, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₃) _x) (ContinuousMapClass.toFunLike.{max u4 u3, u4, u3} (ContinuousLinearMap.{u6, u5, u4, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) M₂ M₃ _inst_8 _inst_10 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u3, u6, u5, u4, u3} (ContinuousLinearMap.{u6, u5, u4, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17 (ContinuousLinearMap.continuousSemilinearMapClass.{u6, u5, u4, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17))) g (FunLike.coe.{max (succ u1) (succ u4), succ u1, succ u4} (ContinuousLinearMap.{u2, u6, u1, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u1 u4, u1, u4} (ContinuousLinearMap.{u2, u6, u1, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u4, u2, u6, u1, u4} (ContinuousLinearMap.{u2, u6, u1, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u6, u1, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.comp_apply ContinuousLinearMap.comp_applyₓ'. -/
theorem comp_apply (g : M₂ →SL[σ₂₃] M₃) (f : M₁ →SL[σ₁₂] M₂) (x : M₁) : (g.comp f) x = g (f x) :=
  rfl
#align continuous_linear_map.comp_apply ContinuousLinearMap.comp_apply

omit σ₁₃

/- warning: continuous_linear_map.comp_id -> ContinuousLinearMap.comp_id is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.comp.{u1, u1, u2, u3, u3, u4} R₁ R₁ R₂ _inst_1 _inst_1 _inst_2 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) σ₁₂ σ₁₂ M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_14 _inst_16 (RingHomCompTriple.ids.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂) f (ContinuousLinearMap.id.{u1, u3} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14)) f
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.comp.{u4, u4, u3, u2, u2, u1} R₁ R₁ R₂ _inst_1 _inst_1 _inst_2 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) σ₁₂ σ₁₂ M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_14 _inst_16 (RingHomCompTriple.ids.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂) f (ContinuousLinearMap.id.{u4, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14)) f
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.comp_id ContinuousLinearMap.comp_idₓ'. -/
@[simp]
theorem comp_id (f : M₁ →SL[σ₁₂] M₂) : f.comp (id R₁ M₁) = f :=
  ext fun x => rfl
#align continuous_linear_map.comp_id ContinuousLinearMap.comp_id

/- warning: continuous_linear_map.id_comp -> ContinuousLinearMap.id_comp is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.comp.{u1, u2, u2, u3, u4, u4} R₁ R₂ R₂ _inst_1 _inst_2 _inst_2 σ₁₂ (RingHom.id.{u2} R₂ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)) σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_16 (RingHomCompTriple.right_ids.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂) (ContinuousLinearMap.id.{u2, u4} R₂ _inst_2 M₂ _inst_8 _inst_9 _inst_16) f) f
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.comp.{u4, u3, u3, u2, u1, u1} R₁ R₂ R₂ _inst_1 _inst_2 _inst_2 σ₁₂ (RingHom.id.{u3} R₂ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)) σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_16 (RingHomCompTriple.right_ids.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂) (ContinuousLinearMap.id.{u3, u1} R₂ _inst_2 M₂ _inst_8 _inst_9 _inst_16) f) f
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.id_comp ContinuousLinearMap.id_compₓ'. -/
@[simp]
theorem id_comp (f : M₁ →SL[σ₁₂] M₂) : (id R₂ M₂).comp f = f :=
  ext fun x => rfl
#align continuous_linear_map.id_comp ContinuousLinearMap.id_comp

include σ₁₃

/- warning: continuous_linear_map.comp_zero -> ContinuousLinearMap.comp_zero is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} {R₃ : Type.{u3}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] [_inst_3 : Semiring.{u3} R₃] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₁₃ : RingHom.{u1, u3} R₁ R₃ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {M₁ : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M₁] [_inst_5 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u5}} [_inst_8 : TopologicalSpace.{u5} M₂] [_inst_9 : AddCommMonoid.{u5} M₂] {M₃ : Type.{u6}} [_inst_10 : TopologicalSpace.{u6} M₃] [_inst_11 : AddCommMonoid.{u6} M₃] [_inst_14 : Module.{u1, u4} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u5} R₂ M₂ _inst_2 _inst_9] [_inst_17 : Module.{u3, u6} R₃ M₃ _inst_3 _inst_11] [_inst_18 : RingHomCompTriple.{u1, u2, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] (g : ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17), Eq.{max (succ u4) (succ u6)} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 g (OfNat.ofNat.{max u4 u5} (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (OfNat.mk.{max u4 u5} (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (Zero.zero.{max u4 u5} (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.zero.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))))) (OfNat.ofNat.{max u4 u6} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) 0 (OfNat.mk.{max u4 u6} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) 0 (Zero.zero.{max u4 u6} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.zero.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17))))
but is expected to have type
  forall {R₁ : Type.{u1}} {R₂ : Type.{u6}} {R₃ : Type.{u5}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u6} R₂] [_inst_3 : Semiring.{u5} R₃] {σ₁₂ : RingHom.{u1, u6} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2)} {σ₂₃ : RingHom.{u6, u5} R₂ R₃ (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u5} R₃ _inst_3)} {σ₁₃ : RingHom.{u1, u5} R₁ R₃ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u5} R₃ _inst_3)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] {M₃ : Type.{u3}} [_inst_10 : TopologicalSpace.{u3} M₃] [_inst_11 : AddCommMonoid.{u3} M₃] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u6, u4} R₂ M₂ _inst_2 _inst_9] [_inst_17 : Module.{u5, u3} R₃ M₃ _inst_3 _inst_11] [_inst_18 : RingHomCompTriple.{u1, u6, u5} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] (g : ContinuousLinearMap.{u6, u5, u4, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17), Eq.{max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u5, u2, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.comp.{u1, u6, u5, u2, u4, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 g (OfNat.ofNat.{max u2 u4} (ContinuousLinearMap.{u1, u6, u2, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) 0 (Zero.toOfNat0.{max u2 u4} (ContinuousLinearMap.{u1, u6, u2, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.zero.{u1, u6, u2, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) (OfNat.ofNat.{max u2 u3} (ContinuousLinearMap.{u1, u5, u2, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) 0 (Zero.toOfNat0.{max u2 u3} (ContinuousLinearMap.{u1, u5, u2, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.zero.{u1, u5, u2, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.comp_zero ContinuousLinearMap.comp_zeroₓ'. -/
@[simp]
theorem comp_zero (g : M₂ →SL[σ₂₃] M₃) : g.comp (0 : M₁ →SL[σ₁₂] M₂) = 0 :=
  by
  ext
  simp
#align continuous_linear_map.comp_zero ContinuousLinearMap.comp_zero

/- warning: continuous_linear_map.zero_comp -> ContinuousLinearMap.zero_comp is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} {R₃ : Type.{u3}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] [_inst_3 : Semiring.{u3} R₃] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₁₃ : RingHom.{u1, u3} R₁ R₃ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {M₁ : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M₁] [_inst_5 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u5}} [_inst_8 : TopologicalSpace.{u5} M₂] [_inst_9 : AddCommMonoid.{u5} M₂] {M₃ : Type.{u6}} [_inst_10 : TopologicalSpace.{u6} M₃] [_inst_11 : AddCommMonoid.{u6} M₃] [_inst_14 : Module.{u1, u4} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u5} R₂ M₂ _inst_2 _inst_9] [_inst_17 : Module.{u3, u6} R₃ M₃ _inst_3 _inst_11] [_inst_18 : RingHomCompTriple.{u1, u2, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] (f : ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u4) (succ u6)} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 (OfNat.ofNat.{max u5 u6} (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) 0 (OfNat.mk.{max u5 u6} (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) 0 (Zero.zero.{max u5 u6} (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (ContinuousLinearMap.zero.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17)))) f) (OfNat.ofNat.{max u4 u6} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) 0 (OfNat.mk.{max u4 u6} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) 0 (Zero.zero.{max u4 u6} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.zero.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17))))
but is expected to have type
  forall {R₁ : Type.{u6}} {R₂ : Type.{u5}} {R₃ : Type.{u1}} [_inst_1 : Semiring.{u6} R₁] [_inst_2 : Semiring.{u5} R₂] [_inst_3 : Semiring.{u1} R₃] {σ₁₂ : RingHom.{u6, u5} R₁ R₂ (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2)} {σ₂₃ : RingHom.{u5, u1} R₂ R₃ (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₃ _inst_3)} {σ₁₃ : RingHom.{u6, u1} R₁ R₃ (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u1} R₃ _inst_3)} {M₁ : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M₁] [_inst_5 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u2}} [_inst_10 : TopologicalSpace.{u2} M₃] [_inst_11 : AddCommMonoid.{u2} M₃] [_inst_14 : Module.{u6, u4} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u5, u3} R₂ M₂ _inst_2 _inst_9] [_inst_17 : Module.{u1, u2} R₃ M₃ _inst_3 _inst_11] [_inst_18 : RingHomCompTriple.{u6, u5, u1} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] (f : ContinuousLinearMap.{u6, u5, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u4) (succ u2)} (ContinuousLinearMap.{u6, u1, u4, u2} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.comp.{u6, u5, u1, u4, u3, u2} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 (OfNat.ofNat.{max u3 u2} (ContinuousLinearMap.{u5, u1, u3, u2} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) 0 (Zero.toOfNat0.{max u3 u2} (ContinuousLinearMap.{u5, u1, u3, u2} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (ContinuousLinearMap.zero.{u5, u1, u3, u2} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17))) f) (OfNat.ofNat.{max u4 u2} (ContinuousLinearMap.{u6, u1, u4, u2} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) 0 (Zero.toOfNat0.{max u4 u2} (ContinuousLinearMap.{u6, u1, u4, u2} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.zero.{u6, u1, u4, u2} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.zero_comp ContinuousLinearMap.zero_compₓ'. -/
@[simp]
theorem zero_comp (f : M₁ →SL[σ₁₂] M₂) : (0 : M₂ →SL[σ₂₃] M₃).comp f = 0 :=
  by
  ext
  simp
#align continuous_linear_map.zero_comp ContinuousLinearMap.zero_comp

/- warning: continuous_linear_map.comp_add -> ContinuousLinearMap.comp_add is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} {R₃ : Type.{u3}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] [_inst_3 : Semiring.{u3} R₃] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₁₃ : RingHom.{u1, u3} R₁ R₃ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {M₁ : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M₁] [_inst_5 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u5}} [_inst_8 : TopologicalSpace.{u5} M₂] [_inst_9 : AddCommMonoid.{u5} M₂] {M₃ : Type.{u6}} [_inst_10 : TopologicalSpace.{u6} M₃] [_inst_11 : AddCommMonoid.{u6} M₃] [_inst_14 : Module.{u1, u4} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u5} R₂ M₂ _inst_2 _inst_9] [_inst_17 : Module.{u3, u6} R₃ M₃ _inst_3 _inst_11] [_inst_18 : RingHomCompTriple.{u1, u2, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] [_inst_19 : ContinuousAdd.{u5} M₂ _inst_8 (AddZeroClass.toHasAdd.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_9)))] [_inst_20 : ContinuousAdd.{u6} M₃ _inst_10 (AddZeroClass.toHasAdd.{u6} M₃ (AddMonoid.toAddZeroClass.{u6} M₃ (AddCommMonoid.toAddMonoid.{u6} M₃ _inst_11)))] (g : ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (f₁ : ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (f₂ : ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u4) (succ u6)} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 g (HAdd.hAdd.{max u4 u5, max u4 u5, max u4 u5} (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (instHAdd.{max u4 u5} (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.add.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_19)) f₁ f₂)) (HAdd.hAdd.{max u4 u6, max u4 u6, max u4 u6} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (instHAdd.{max u4 u6} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.add.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17 _inst_20)) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 g f₁) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 g f₂))
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u4}} {R₃ : Type.{u3}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u4} R₂] [_inst_3 : Semiring.{u3} R₃] {σ₁₂ : RingHom.{u2, u4} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u4} R₂ _inst_2)} {σ₂₃ : RingHom.{u4, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u4} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₁₃ : RingHom.{u2, u3} R₁ R₃ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u6}} [_inst_8 : TopologicalSpace.{u6} M₂] [_inst_9 : AddCommMonoid.{u6} M₂] {M₃ : Type.{u5}} [_inst_10 : TopologicalSpace.{u5} M₃] [_inst_11 : AddCommMonoid.{u5} M₃] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u4, u6} R₂ M₂ _inst_2 _inst_9] [_inst_17 : Module.{u3, u5} R₃ M₃ _inst_3 _inst_11] [_inst_18 : RingHomCompTriple.{u2, u4, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] [_inst_19 : ContinuousAdd.{u6} M₂ _inst_8 (AddZeroClass.toAdd.{u6} M₂ (AddMonoid.toAddZeroClass.{u6} M₂ (AddCommMonoid.toAddMonoid.{u6} M₂ _inst_9)))] [_inst_20 : ContinuousAdd.{u5} M₃ _inst_10 (AddZeroClass.toAdd.{u5} M₃ (AddMonoid.toAddZeroClass.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_11)))] (g : ContinuousLinearMap.{u4, u3, u6, u5} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (f₁ : ContinuousLinearMap.{u2, u4, u1, u6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (f₂ : ContinuousLinearMap.{u2, u4, u1, u6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u1) (succ u5)} (ContinuousLinearMap.{u2, u3, u1, u5} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.comp.{u2, u4, u3, u1, u6, u5} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 g (HAdd.hAdd.{max u1 u6, max u1 u6, max u1 u6} (ContinuousLinearMap.{u2, u4, u1, u6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u2, u4, u1, u6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.{u2, u4, u1, u6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (instHAdd.{max u1 u6} (ContinuousLinearMap.{u2, u4, u1, u6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.add.{u2, u4, u1, u6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_19)) f₁ f₂)) (HAdd.hAdd.{max u1 u5, max u1 u5, max u1 u5} (ContinuousLinearMap.{u2, u3, u1, u5} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.{u2, u3, u1, u5} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.{u2, u3, u1, u5} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (instHAdd.{max u1 u5} (ContinuousLinearMap.{u2, u3, u1, u5} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.add.{u2, u3, u1, u5} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17 _inst_20)) (ContinuousLinearMap.comp.{u2, u4, u3, u1, u6, u5} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 g f₁) (ContinuousLinearMap.comp.{u2, u4, u3, u1, u6, u5} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 g f₂))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.comp_add ContinuousLinearMap.comp_addₓ'. -/
@[simp]
theorem comp_add [ContinuousAdd M₂] [ContinuousAdd M₃] (g : M₂ →SL[σ₂₃] M₃)
    (f₁ f₂ : M₁ →SL[σ₁₂] M₂) : g.comp (f₁ + f₂) = g.comp f₁ + g.comp f₂ :=
  by
  ext
  simp
#align continuous_linear_map.comp_add ContinuousLinearMap.comp_add

/- warning: continuous_linear_map.add_comp -> ContinuousLinearMap.add_comp is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} {R₃ : Type.{u3}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] [_inst_3 : Semiring.{u3} R₃] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₁₃ : RingHom.{u1, u3} R₁ R₃ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {M₁ : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M₁] [_inst_5 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u5}} [_inst_8 : TopologicalSpace.{u5} M₂] [_inst_9 : AddCommMonoid.{u5} M₂] {M₃ : Type.{u6}} [_inst_10 : TopologicalSpace.{u6} M₃] [_inst_11 : AddCommMonoid.{u6} M₃] [_inst_14 : Module.{u1, u4} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u5} R₂ M₂ _inst_2 _inst_9] [_inst_17 : Module.{u3, u6} R₃ M₃ _inst_3 _inst_11] [_inst_18 : RingHomCompTriple.{u1, u2, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] [_inst_19 : ContinuousAdd.{u6} M₃ _inst_10 (AddZeroClass.toHasAdd.{u6} M₃ (AddMonoid.toAddZeroClass.{u6} M₃ (AddCommMonoid.toAddMonoid.{u6} M₃ _inst_11)))] (g₁ : ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (g₂ : ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (f : ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u4) (succ u6)} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 (HAdd.hAdd.{max u5 u6, max u5 u6, max u5 u6} (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (instHAdd.{max u5 u6} (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (ContinuousLinearMap.add.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17 _inst_19)) g₁ g₂) f) (HAdd.hAdd.{max u4 u6, max u4 u6, max u4 u6} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (instHAdd.{max u4 u6} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.add.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17 _inst_19)) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 g₁ f) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 g₂ f))
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u5}} {R₃ : Type.{u4}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u5} R₂] [_inst_3 : Semiring.{u4} R₃] {σ₁₂ : RingHom.{u2, u5} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2)} {σ₂₃ : RingHom.{u5, u4} R₂ R₃ (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₃ _inst_3)} {σ₁₃ : RingHom.{u2, u4} R₁ R₃ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u4} R₃ _inst_3)} {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u6}} [_inst_10 : TopologicalSpace.{u6} M₃] [_inst_11 : AddCommMonoid.{u6} M₃] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u5, u3} R₂ M₂ _inst_2 _inst_9] [_inst_17 : Module.{u4, u6} R₃ M₃ _inst_3 _inst_11] [_inst_18 : RingHomCompTriple.{u2, u5, u4} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] [_inst_19 : ContinuousAdd.{u6} M₃ _inst_10 (AddZeroClass.toAdd.{u6} M₃ (AddMonoid.toAddZeroClass.{u6} M₃ (AddCommMonoid.toAddMonoid.{u6} M₃ _inst_11)))] (g₁ : ContinuousLinearMap.{u5, u4, u3, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (g₂ : ContinuousLinearMap.{u5, u4, u3, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (f : ContinuousLinearMap.{u2, u5, u1, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u1) (succ u6)} (ContinuousLinearMap.{u2, u4, u1, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.comp.{u2, u5, u4, u1, u3, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 (HAdd.hAdd.{max u3 u6, max u3 u6, max u3 u6} (ContinuousLinearMap.{u5, u4, u3, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (ContinuousLinearMap.{u5, u4, u3, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (ContinuousLinearMap.{u5, u4, u3, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (instHAdd.{max u3 u6} (ContinuousLinearMap.{u5, u4, u3, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (ContinuousLinearMap.add.{u5, u4, u3, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17 _inst_19)) g₁ g₂) f) (HAdd.hAdd.{max u1 u6, max u1 u6, max u1 u6} (ContinuousLinearMap.{u2, u4, u1, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.{u2, u4, u1, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.{u2, u4, u1, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (instHAdd.{max u1 u6} (ContinuousLinearMap.{u2, u4, u1, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17) (ContinuousLinearMap.add.{u2, u4, u1, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_17 _inst_19)) (ContinuousLinearMap.comp.{u2, u5, u4, u1, u3, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 g₁ f) (ContinuousLinearMap.comp.{u2, u5, u4, u1, u3, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 g₂ f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.add_comp ContinuousLinearMap.add_compₓ'. -/
@[simp]
theorem add_comp [ContinuousAdd M₃] (g₁ g₂ : M₂ →SL[σ₂₃] M₃) (f : M₁ →SL[σ₁₂] M₂) :
    (g₁ + g₂).comp f = g₁.comp f + g₂.comp f := by
  ext
  simp
#align continuous_linear_map.add_comp ContinuousLinearMap.add_comp

omit σ₁₃

/- warning: continuous_linear_map.comp_assoc -> ContinuousLinearMap.comp_assoc is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} {R₃ : Type.{u3}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] [_inst_3 : Semiring.{u3} R₃] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₁₃ : RingHom.{u1, u3} R₁ R₃ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {M₁ : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M₁] [_inst_5 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u5}} [_inst_8 : TopologicalSpace.{u5} M₂] [_inst_9 : AddCommMonoid.{u5} M₂] {M₃ : Type.{u6}} [_inst_10 : TopologicalSpace.{u6} M₃] [_inst_11 : AddCommMonoid.{u6} M₃] {M₄ : Type.{u7}} [_inst_12 : TopologicalSpace.{u7} M₄] [_inst_13 : AddCommMonoid.{u7} M₄] [_inst_14 : Module.{u1, u4} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u5} R₂ M₂ _inst_2 _inst_9] [_inst_17 : Module.{u3, u6} R₃ M₃ _inst_3 _inst_11] [_inst_18 : RingHomCompTriple.{u1, u2, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] {R₄ : Type.{u8}} [_inst_19 : Semiring.{u8} R₄] [_inst_20 : Module.{u8, u7} R₄ M₄ _inst_19 _inst_13] {σ₁₄ : RingHom.{u1, u8} R₁ R₄ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u8} R₄ _inst_19)} {σ₂₄ : RingHom.{u2, u8} R₂ R₄ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u8} R₄ _inst_19)} {σ₃₄ : RingHom.{u3, u8} R₃ R₄ (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u8} R₄ _inst_19)} [_inst_21 : RingHomCompTriple.{u1, u3, u8} R₁ R₃ R₄ _inst_1 _inst_3 _inst_19 σ₁₃ σ₃₄ σ₁₄] [_inst_22 : RingHomCompTriple.{u2, u3, u8} R₂ R₃ R₄ _inst_2 _inst_3 _inst_19 σ₂₃ σ₃₄ σ₂₄] [_inst_23 : RingHomCompTriple.{u1, u2, u8} R₁ R₂ R₄ _inst_1 _inst_2 _inst_19 σ₁₂ σ₂₄ σ₁₄] (h : ContinuousLinearMap.{u3, u8, u6, u7} R₃ R₄ _inst_3 _inst_19 σ₃₄ M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_17 _inst_20) (g : ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (f : ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u4) (succ u7)} (ContinuousLinearMap.{u1, u8, u4, u7} R₁ R₄ _inst_1 _inst_19 σ₁₄ M₁ _inst_4 _inst_5 M₄ _inst_12 _inst_13 _inst_14 _inst_20) (ContinuousLinearMap.comp.{u1, u2, u8, u4, u5, u7} R₁ R₂ R₄ _inst_1 _inst_2 _inst_19 σ₁₂ σ₂₄ σ₁₄ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₄ _inst_12 _inst_13 _inst_14 _inst_16 _inst_20 _inst_23 (ContinuousLinearMap.comp.{u2, u3, u8, u5, u6, u7} R₂ R₃ R₄ _inst_2 _inst_3 _inst_19 σ₂₃ σ₃₄ σ₂₄ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_16 _inst_17 _inst_20 _inst_22 h g) f) (ContinuousLinearMap.comp.{u1, u3, u8, u4, u6, u7} R₁ R₃ R₄ _inst_1 _inst_3 _inst_19 σ₁₃ σ₃₄ σ₁₄ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_14 _inst_17 _inst_20 _inst_21 h (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 g f))
but is expected to have type
  forall {R₁ : Type.{u6}} {R₂ : Type.{u5}} {R₃ : Type.{u4}} [_inst_1 : Semiring.{u6} R₁] [_inst_2 : Semiring.{u5} R₂] [_inst_3 : Semiring.{u4} R₃] {σ₁₂ : RingHom.{u6, u5} R₁ R₂ (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2)} {σ₂₃ : RingHom.{u5, u4} R₂ R₃ (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₃ _inst_3)} {σ₁₃ : RingHom.{u6, u4} R₁ R₃ (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u4} R₃ _inst_3)} {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] {M₃ : Type.{u3}} [_inst_10 : TopologicalSpace.{u3} M₃] [_inst_11 : AddCommMonoid.{u3} M₃] {M₄ : Type.{u7}} [_inst_12 : TopologicalSpace.{u7} M₄] [_inst_13 : AddCommMonoid.{u7} M₄] [_inst_14 : Module.{u6, u1} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u5, u2} R₂ M₂ _inst_2 _inst_9] [_inst_17 : Module.{u4, u3} R₃ M₃ _inst_3 _inst_11] [_inst_18 : RingHomCompTriple.{u6, u5, u4} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] {R₄ : Type.{u8}} [_inst_19 : Semiring.{u8} R₄] [_inst_20 : Module.{u8, u7} R₄ M₄ _inst_19 _inst_13] {σ₁₄ : RingHom.{u6, u8} R₁ R₄ (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u8} R₄ _inst_19)} {σ₂₄ : RingHom.{u5, u8} R₂ R₄ (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u8} R₄ _inst_19)} {σ₃₄ : RingHom.{u4, u8} R₃ R₄ (Semiring.toNonAssocSemiring.{u4} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u8} R₄ _inst_19)} [_inst_21 : RingHomCompTriple.{u6, u4, u8} R₁ R₃ R₄ _inst_1 _inst_3 _inst_19 σ₁₃ σ₃₄ σ₁₄] [_inst_22 : RingHomCompTriple.{u5, u4, u8} R₂ R₃ R₄ _inst_2 _inst_3 _inst_19 σ₂₃ σ₃₄ σ₂₄] [_inst_23 : RingHomCompTriple.{u6, u5, u8} R₁ R₂ R₄ _inst_1 _inst_2 _inst_19 σ₁₂ σ₂₄ σ₁₄] (h : ContinuousLinearMap.{u4, u8, u3, u7} R₃ R₄ _inst_3 _inst_19 σ₃₄ M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_17 _inst_20) (g : ContinuousLinearMap.{u5, u4, u2, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_16 _inst_17) (f : ContinuousLinearMap.{u6, u5, u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16), Eq.{max (succ u1) (succ u7)} (ContinuousLinearMap.{u6, u8, u1, u7} R₁ R₄ _inst_1 _inst_19 σ₁₄ M₁ _inst_4 _inst_5 M₄ _inst_12 _inst_13 _inst_14 _inst_20) (ContinuousLinearMap.comp.{u6, u5, u8, u1, u2, u7} R₁ R₂ R₄ _inst_1 _inst_2 _inst_19 σ₁₂ σ₂₄ σ₁₄ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₄ _inst_12 _inst_13 _inst_14 _inst_16 _inst_20 _inst_23 (ContinuousLinearMap.comp.{u5, u4, u8, u2, u3, u7} R₂ R₃ R₄ _inst_2 _inst_3 _inst_19 σ₂₃ σ₃₄ σ₂₄ M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_16 _inst_17 _inst_20 _inst_22 h g) f) (ContinuousLinearMap.comp.{u6, u4, u8, u1, u3, u7} R₁ R₃ R₄ _inst_1 _inst_3 _inst_19 σ₁₃ σ₃₄ σ₁₄ M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_14 _inst_17 _inst_20 _inst_21 h (ContinuousLinearMap.comp.{u6, u5, u4, u1, u2, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_16 _inst_17 _inst_18 g f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.comp_assoc ContinuousLinearMap.comp_assocₓ'. -/
theorem comp_assoc {R₄ : Type _} [Semiring R₄] [Module R₄ M₄] {σ₁₄ : R₁ →+* R₄} {σ₂₄ : R₂ →+* R₄}
    {σ₃₄ : R₃ →+* R₄} [RingHomCompTriple σ₁₃ σ₃₄ σ₁₄] [RingHomCompTriple σ₂₃ σ₃₄ σ₂₄]
    [RingHomCompTriple σ₁₂ σ₂₄ σ₁₄] (h : M₃ →SL[σ₃₄] M₄) (g : M₂ →SL[σ₂₃] M₃) (f : M₁ →SL[σ₁₂] M₂) :
    (h.comp g).comp f = h.comp (g.comp f) :=
  rfl
#align continuous_linear_map.comp_assoc ContinuousLinearMap.comp_assoc

instance : Mul (M₁ →L[R₁] M₁) :=
  ⟨comp⟩

/- warning: continuous_linear_map.mul_def -> ContinuousLinearMap.mul_def is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] (f : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (g : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14), Eq.{succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (HMul.hMul.{u2, u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (instHMul.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.instMul.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14)) f g) (ContinuousLinearMap.comp.{u1, u1, u1, u2, u2, u2} R₁ R₁ R₁ _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14 _inst_14 (RingHomCompTriple.right_ids.{u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) f g)
but is expected to have type
  forall {R₁ : Type.{u2}} [_inst_1 : Semiring.{u2} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] (f : ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (g : ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14), Eq.{succ u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (HMul.hMul.{u1, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (instHMul.{u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.instMul.{u2, u1} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14)) f g) (ContinuousLinearMap.comp.{u2, u2, u2, u1, u1, u1} R₁ R₁ R₁ _inst_1 _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14 _inst_14 (RingHomCompTriple.ids.{u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) f g)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.mul_def ContinuousLinearMap.mul_defₓ'. -/
theorem mul_def (f g : M₁ →L[R₁] M₁) : f * g = f.comp g :=
  rfl
#align continuous_linear_map.mul_def ContinuousLinearMap.mul_def

/- warning: continuous_linear_map.coe_mul -> ContinuousLinearMap.coe_mul is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] (f : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (g : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14), Eq.{succ u2} (M₁ -> M₁) (coeFn.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) => M₁ -> M₁) (ContinuousLinearMap.toFun.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (HMul.hMul.{u2, u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (instHMul.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.instMul.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14)) f g)) (Function.comp.{succ u2, succ u2, succ u2} M₁ M₁ M₁ (coeFn.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) => M₁ -> M₁) (ContinuousLinearMap.toFun.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) f) (coeFn.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) => M₁ -> M₁) (ContinuousLinearMap.toFun.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) g))
but is expected to have type
  forall {R₁ : Type.{u2}} [_inst_1 : Semiring.{u2} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] (f : ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (g : ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14), Eq.{succ u1} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₁) ᾰ) (FunLike.coe.{succ u1, succ u1, succ u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₁) _x) (ContinuousMapClass.toFunLike.{u1, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ M₁ _inst_4 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{u1, u2, u2, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14))) (HMul.hMul.{u1, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (instHMul.{u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.instMul.{u2, u1} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14)) f g)) (Function.comp.{succ u1, succ u1, succ u1} M₁ M₁ M₁ (FunLike.coe.{succ u1, succ u1, succ u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₁) _x) (ContinuousMapClass.toFunLike.{u1, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ M₁ _inst_4 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{u1, u2, u2, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14))) f) (FunLike.coe.{succ u1, succ u1, succ u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₁) _x) (ContinuousMapClass.toFunLike.{u1, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ M₁ _inst_4 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{u1, u2, u2, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14))) g))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_mul ContinuousLinearMap.coe_mulₓ'. -/
@[simp]
theorem coe_mul (f g : M₁ →L[R₁] M₁) : ⇑(f * g) = f ∘ g :=
  rfl
#align continuous_linear_map.coe_mul ContinuousLinearMap.coe_mul

/- warning: continuous_linear_map.mul_apply -> ContinuousLinearMap.mul_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] (f : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (g : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (x : M₁), Eq.{succ u2} M₁ (coeFn.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) => M₁ -> M₁) (ContinuousLinearMap.toFun.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (HMul.hMul.{u2, u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (instHMul.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.instMul.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14)) f g) x) (coeFn.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) => M₁ -> M₁) (ContinuousLinearMap.toFun.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) f (coeFn.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) => M₁ -> M₁) (ContinuousLinearMap.toFun.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) g x))
but is expected to have type
  forall {R₁ : Type.{u2}} [_inst_1 : Semiring.{u2} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] (f : ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (g : ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (x : M₁), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₁) x) (FunLike.coe.{succ u1, succ u1, succ u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₁) _x) (ContinuousMapClass.toFunLike.{u1, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ M₁ _inst_4 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{u1, u2, u2, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14))) (HMul.hMul.{u1, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (instHMul.{u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.instMul.{u2, u1} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14)) f g) x) (FunLike.coe.{succ u1, succ u1, succ u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₁) _x) (ContinuousMapClass.toFunLike.{u1, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ M₁ _inst_4 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{u1, u2, u2, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14))) f (FunLike.coe.{succ u1, succ u1, succ u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₁) _x) (ContinuousMapClass.toFunLike.{u1, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ M₁ _inst_4 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{u1, u2, u2, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14))) g x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.mul_apply ContinuousLinearMap.mul_applyₓ'. -/
theorem mul_apply (f g : M₁ →L[R₁] M₁) (x : M₁) : (f * g) x = f (g x) :=
  rfl
#align continuous_linear_map.mul_apply ContinuousLinearMap.mul_apply

instance : MonoidWithZero (M₁ →L[R₁] M₁)
    where
  mul := (· * ·)
  one := 1
  zero := 0
  mul_zero f := ext fun _ => map_zero f
  zero_mul _ := ext fun _ => rfl
  mul_one _ := ext fun _ => rfl
  one_mul _ := ext fun _ => rfl
  mul_assoc _ _ _ := ext fun _ => rfl

instance [ContinuousAdd M₁] : Semiring (M₁ →L[R₁] M₁) :=
  { ContinuousLinearMap.monoidWithZero,
    ContinuousLinearMap.addCommMonoid with
    mul := (· * ·)
    one := 1
    left_distrib := fun f g h => ext fun x => map_add f (g x) (h x)
    right_distrib := fun _ _ _ => ext fun _ => LinearMap.add_apply _ _ _ }

/- warning: continuous_linear_map.to_linear_map_ring_hom -> ContinuousLinearMap.toLinearMapRingHom is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : ContinuousAdd.{u2} M₁ _inst_4 (AddZeroClass.toHasAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)))], RingHom.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (LinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₁ _inst_5 _inst_5 _inst_14 _inst_14) (Semiring.toNonAssocSemiring.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19)) (Semiring.toNonAssocSemiring.{u2} (LinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₁ _inst_5 _inst_5 _inst_14 _inst_14) (Module.End.semiring.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14))
but is expected to have type
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : ContinuousAdd.{u2} M₁ _inst_4 (AddZeroClass.toAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)))], RingHom.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (LinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₁ _inst_5 _inst_5 _inst_14 _inst_14) (Semiring.toNonAssocSemiring.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19)) (Semiring.toNonAssocSemiring.{u2} (LinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₁ _inst_5 _inst_5 _inst_14 _inst_14) (Module.End.semiring.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.to_linear_map_ring_hom ContinuousLinearMap.toLinearMapRingHomₓ'. -/
/-- `continuous_linear_map.to_linear_map` as a `ring_hom`.-/
@[simps]
def toLinearMapRingHom [ContinuousAdd M₁] : (M₁ →L[R₁] M₁) →+* M₁ →ₗ[R₁] M₁
    where
  toFun := toLinearMap
  map_zero' := rfl
  map_one' := rfl
  map_add' _ _ := rfl
  map_mul' _ _ := rfl
#align continuous_linear_map.to_linear_map_ring_hom ContinuousLinearMap.toLinearMapRingHom

section ApplyAction

variable [ContinuousAdd M₁]

/- warning: continuous_linear_map.apply_module -> ContinuousLinearMap.applyModule is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : ContinuousAdd.{u2} M₁ _inst_4 (AddZeroClass.toHasAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)))], Module.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19) _inst_5
but is expected to have type
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : ContinuousAdd.{u2} M₁ _inst_4 (AddZeroClass.toAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)))], Module.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19) _inst_5
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.apply_module ContinuousLinearMap.applyModuleₓ'. -/
/-- The tautological action by `M₁ →L[R₁] M₁` on `M`.

This generalizes `function.End.apply_mul_action`. -/
instance applyModule : Module (M₁ →L[R₁] M₁) M₁ :=
  Module.compHom _ toLinearMapRingHom
#align continuous_linear_map.apply_module ContinuousLinearMap.applyModule

/- warning: continuous_linear_map.smul_def -> ContinuousLinearMap.smul_def is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : ContinuousAdd.{u2} M₁ _inst_4 (AddZeroClass.toHasAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)))] (f : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (a : M₁), Eq.{succ u2} M₁ (SMul.smul.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (SMulZeroClass.toHasSmul.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (MulZeroClass.toHasZero.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (MulZeroOneClass.toMulZeroClass.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (MonoidWithZero.toMulZeroOneClass.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (Semiring.toMonoidWithZero.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19))))) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (Semiring.toMonoidWithZero.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19)) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (Module.toMulActionWithZero.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19) _inst_5 (ContinuousLinearMap.applyModule.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19))))) f a) (coeFn.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) => M₁ -> M₁) (ContinuousLinearMap.toFun.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) f a)
but is expected to have type
  forall {R₁ : Type.{u2}} [_inst_1 : Semiring.{u2} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : ContinuousAdd.{u1} M₁ _inst_4 (AddZeroClass.toAdd.{u1} M₁ (AddMonoid.toAddZeroClass.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_5)))] (f : ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (a : M₁), Eq.{succ u1} M₁ (HSMul.hSMul.{u1, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ M₁ (instHSMul.{u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (SMulZeroClass.toSMul.{u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (AddMonoid.toZero.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_5)) (SMulWithZero.toSMulZeroClass.{u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.zero.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (AddMonoid.toZero.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_5)) (MulActionWithZero.toSMulWithZero.{u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.monoidWithZero.{u2, u1} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14) (AddMonoid.toZero.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_5)) (Module.toMulActionWithZero.{u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.semiring.{u2, u1} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19) _inst_5 (ContinuousLinearMap.applyModule.{u2, u1} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19)))))) f a) (FunLike.coe.{succ u1, succ u1, succ u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₁) _x) (ContinuousMapClass.toFunLike.{u1, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ M₁ _inst_4 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{u1, u2, u2, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14))) f a)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.smul_def ContinuousLinearMap.smul_defₓ'. -/
@[simp]
protected theorem smul_def (f : M₁ →L[R₁] M₁) (a : M₁) : f • a = f a :=
  rfl
#align continuous_linear_map.smul_def ContinuousLinearMap.smul_def

/- warning: continuous_linear_map.apply_has_faithful_smul -> ContinuousLinearMap.applyFaithfulSMul is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : ContinuousAdd.{u2} M₁ _inst_4 (AddZeroClass.toHasAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)))], FaithfulSMul.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (SMulZeroClass.toHasSmul.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (MulZeroClass.toHasZero.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (MulZeroOneClass.toMulZeroClass.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (MonoidWithZero.toMulZeroOneClass.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (Semiring.toMonoidWithZero.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19))))) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (Semiring.toMonoidWithZero.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19)) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (Module.toMulActionWithZero.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19) _inst_5 (ContinuousLinearMap.applyModule.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19)))))
but is expected to have type
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : ContinuousAdd.{u2} M₁ _inst_4 (AddZeroClass.toAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)))], FaithfulSMul.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (SMulZeroClass.toSMul.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (SMulWithZero.toSMulZeroClass.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.zero.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (MulActionWithZero.toSMulWithZero.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.monoidWithZero.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (Module.toMulActionWithZero.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19) _inst_5 (ContinuousLinearMap.applyModule.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19)))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.apply_has_faithful_smul ContinuousLinearMap.applyFaithfulSMulₓ'. -/
/-- `continuous_linear_map.apply_module` is faithful. -/
instance applyFaithfulSMul : FaithfulSMul (M₁ →L[R₁] M₁) M₁ :=
  ⟨fun _ _ => ContinuousLinearMap.ext⟩
#align continuous_linear_map.apply_has_faithful_smul ContinuousLinearMap.applyFaithfulSMul

/- warning: continuous_linear_map.apply_smul_comm_class -> ContinuousLinearMap.applySMulCommClass is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : ContinuousAdd.{u2} M₁ _inst_4 (AddZeroClass.toHasAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)))], SMulCommClass.{u1, u2, u2} R₁ (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (SMulZeroClass.toHasSmul.{u1, u2} R₁ M₁ (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (SMulWithZero.toSmulZeroClass.{u1, u2} R₁ M₁ (MulZeroClass.toHasZero.{u1} R₁ (MulZeroOneClass.toMulZeroClass.{u1} R₁ (MonoidWithZero.toMulZeroOneClass.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)))) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (MulActionWithZero.toSMulWithZero.{u1, u2} R₁ M₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (Module.toMulActionWithZero.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)))) (SMulZeroClass.toHasSmul.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (MulZeroClass.toHasZero.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (MulZeroOneClass.toMulZeroClass.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (MonoidWithZero.toMulZeroOneClass.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (Semiring.toMonoidWithZero.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19))))) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (Semiring.toMonoidWithZero.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19)) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (Module.toMulActionWithZero.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19) _inst_5 (ContinuousLinearMap.applyModule.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19)))))
but is expected to have type
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : ContinuousAdd.{u2} M₁ _inst_4 (AddZeroClass.toAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)))], SMulCommClass.{u1, u2, u2} R₁ (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (SMulZeroClass.toSMul.{u1, u2} R₁ M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (SMulWithZero.toSMulZeroClass.{u1, u2} R₁ M₁ (MonoidWithZero.toZero.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (MulActionWithZero.toSMulWithZero.{u1, u2} R₁ M₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (Module.toMulActionWithZero.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)))) (SMulZeroClass.toSMul.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (SMulWithZero.toSMulZeroClass.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.zero.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (MulActionWithZero.toSMulWithZero.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.monoidWithZero.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (Module.toMulActionWithZero.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19) _inst_5 (ContinuousLinearMap.applyModule.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19)))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.apply_smul_comm_class ContinuousLinearMap.applySMulCommClassₓ'. -/
instance applySMulCommClass : SMulCommClass R₁ (M₁ →L[R₁] M₁) M₁
    where smul_comm r e m := (e.map_smul r m).symm
#align continuous_linear_map.apply_smul_comm_class ContinuousLinearMap.applySMulCommClass

/- warning: continuous_linear_map.apply_smul_comm_class' -> ContinuousLinearMap.applySMulCommClass' is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : ContinuousAdd.{u2} M₁ _inst_4 (AddZeroClass.toHasAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)))], SMulCommClass.{u2, u1, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) R₁ M₁ (SMulZeroClass.toHasSmul.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (MulZeroClass.toHasZero.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (MulZeroOneClass.toMulZeroClass.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (MonoidWithZero.toMulZeroOneClass.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (Semiring.toMonoidWithZero.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19))))) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (Semiring.toMonoidWithZero.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19)) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (Module.toMulActionWithZero.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19) _inst_5 (ContinuousLinearMap.applyModule.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19))))) (SMulZeroClass.toHasSmul.{u1, u2} R₁ M₁ (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (SMulWithZero.toSmulZeroClass.{u1, u2} R₁ M₁ (MulZeroClass.toHasZero.{u1} R₁ (MulZeroOneClass.toMulZeroClass.{u1} R₁ (MonoidWithZero.toMulZeroOneClass.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)))) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (MulActionWithZero.toSMulWithZero.{u1, u2} R₁ M₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5))) (Module.toMulActionWithZero.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14))))
but is expected to have type
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : ContinuousAdd.{u2} M₁ _inst_4 (AddZeroClass.toAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)))], SMulCommClass.{u2, u1, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) R₁ M₁ (SMulZeroClass.toSMul.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (SMulWithZero.toSMulZeroClass.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.zero.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (MulActionWithZero.toSMulWithZero.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.monoidWithZero.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (Module.toMulActionWithZero.{u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₁ _inst_4 _inst_5 _inst_14 _inst_14) M₁ (ContinuousLinearMap.semiring.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19) _inst_5 (ContinuousLinearMap.applyModule.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 _inst_19))))) (SMulZeroClass.toSMul.{u1, u2} R₁ M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (SMulWithZero.toSMulZeroClass.{u1, u2} R₁ M₁ (MonoidWithZero.toZero.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (MulActionWithZero.toSMulWithZero.{u1, u2} R₁ M₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)) (Module.toMulActionWithZero.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.apply_smul_comm_class' ContinuousLinearMap.applySMulCommClass'ₓ'. -/
instance applySMulCommClass' : SMulCommClass (M₁ →L[R₁] M₁) R₁ M₁
    where smul_comm := ContinuousLinearMap.map_smul
#align continuous_linear_map.apply_smul_comm_class' ContinuousLinearMap.applySMulCommClass'

instance : ContinuousConstSMul (M₁ →L[R₁] M₁) M₁ :=
  ⟨ContinuousLinearMap.continuous⟩

end ApplyAction

/- warning: continuous_linear_map.prod -> ContinuousLinearMap.prod is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_10 : TopologicalSpace.{u4} M₃] [_inst_11 : AddCommMonoid.{u4} M₃] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_11], (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) -> (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) -> (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_8 _inst_10) (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20))
but is expected to have type
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_10 : TopologicalSpace.{u4} M₃] [_inst_11 : AddCommMonoid.{u4} M₃] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_11], (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) -> (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) -> (ContinuousLinearMap.{u1, u1, u2, max u4 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u4} M₂ M₃) (instTopologicalSpaceProd.{u3, u4} M₂ M₃ _inst_8 _inst_10) (Prod.instAddCommMonoidSum.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.prod ContinuousLinearMap.prodₓ'. -/
/-- The cartesian product of two bounded linear maps, as a bounded linear map. -/
protected def prod [Module R₁ M₂] [Module R₁ M₃] (f₁ : M₁ →L[R₁] M₂) (f₂ : M₁ →L[R₁] M₃) :
    M₁ →L[R₁] M₂ × M₃ :=
  ⟨(f₁ : M₁ →ₗ[R₁] M₂).Prod f₂, f₁.2.prod_mk f₂.2⟩
#align continuous_linear_map.prod ContinuousLinearMap.prod

/- warning: continuous_linear_map.coe_prod -> ContinuousLinearMap.coe_prod is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_10 : TopologicalSpace.{u4} M₃] [_inst_11 : AddCommMonoid.{u4} M₃] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_11] (f₁ : ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (f₂ : ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20), Eq.{max (succ u2) (succ (max u3 u4))} (LinearMap.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ (Prod.{u3, u4} M₂ M₃) _inst_5 (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) ((fun (a : Sort.{max (succ u2) (succ (max u3 u4))}) (b : Sort.{max (succ u2) (succ (max u3 u4))}) [self : HasLiftT.{max (succ u2) (succ (max u3 u4)), max (succ u2) (succ (max u3 u4))} a b] => self.0) (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_8 _inst_10) (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) (LinearMap.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ (Prod.{u3, u4} M₂ M₃) _inst_5 (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) (HasLiftT.mk.{max (succ u2) (succ (max u3 u4)), max (succ u2) (succ (max u3 u4))} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_8 _inst_10) (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) (LinearMap.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ (Prod.{u3, u4} M₂ M₃) _inst_5 (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) (CoeTCₓ.coe.{max (succ u2) (succ (max u3 u4)), max (succ u2) (succ (max u3 u4))} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_8 _inst_10) (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) (LinearMap.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ (Prod.{u3, u4} M₂ M₃) _inst_5 (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) (coeBase.{max (succ u2) (succ (max u3 u4)), max (succ u2) (succ (max u3 u4))} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_8 _inst_10) (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) (LinearMap.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ (Prod.{u3, u4} M₂ M₃) _inst_5 (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) (ContinuousLinearMap.LinearMap.coe.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_8 _inst_10) (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20))))) (ContinuousLinearMap.prod.{u1, u2, u3, u4} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_19 _inst_20 f₁ f₂)) (LinearMap.prod.{u1, u2, u3, u4} R₁ M₁ M₂ M₃ _inst_1 _inst_5 _inst_9 _inst_11 _inst_14 _inst_19 _inst_20 ((fun (a : Sort.{max (succ u2) (succ u3)}) (b : Sort.{max (succ u2) (succ u3)}) [self : HasLiftT.{max (succ u2) (succ u3), max (succ u2) (succ u3)} a b] => self.0) (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (LinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_19) (HasLiftT.mk.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (LinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_19) (CoeTCₓ.coe.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (LinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_19) (coeBase.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (LinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_19) (ContinuousLinearMap.LinearMap.coe.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)))) f₁) ((fun (a : Sort.{max (succ u2) (succ u4)}) (b : Sort.{max (succ u2) (succ u4)}) [self : HasLiftT.{max (succ u2) (succ u4), max (succ u2) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (LinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₃ _inst_5 _inst_11 _inst_14 _inst_20) (HasLiftT.mk.{max (succ u2) (succ u4), max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (LinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₃ _inst_5 _inst_11 _inst_14 _inst_20) (CoeTCₓ.coe.{max (succ u2) (succ u4), max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (LinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₃ _inst_5 _inst_11 _inst_14 _inst_20) (coeBase.{max (succ u2) (succ u4), max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (LinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₃ _inst_5 _inst_11 _inst_14 _inst_20) (ContinuousLinearMap.LinearMap.coe.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20)))) f₂))
but is expected to have type
  forall {R₁ : Type.{u4}} [_inst_1 : Semiring.{u4} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u2}} [_inst_10 : TopologicalSpace.{u2} M₃] [_inst_11 : AddCommMonoid.{u2} M₃] [_inst_14 : Module.{u4, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u4, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u4, u2} R₁ M₃ _inst_1 _inst_11] (f₁ : ContinuousLinearMap.{u4, u4, u1, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (f₂ : ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20), Eq.{max (max (succ u1) (succ u3)) (succ u2)} (LinearMap.{u4, u4, u1, max u3 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ (Prod.{u3, u2} M₂ M₃) _inst_5 (Prod.instAddCommMonoidSum.{u3, u2} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u4, u3, u2} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) (ContinuousLinearMap.toLinearMap.{u4, u4, u1, max u3 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u2} M₂ M₃) (instTopologicalSpaceProd.{u3, u2} M₂ M₃ _inst_8 _inst_10) (Prod.instAddCommMonoidSum.{u3, u2} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u4, u3, u2} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20) (ContinuousLinearMap.prod.{u4, u1, u3, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_19 _inst_20 f₁ f₂)) (LinearMap.prod.{u4, u1, u3, u2} R₁ M₁ M₂ M₃ _inst_1 _inst_5 _inst_9 _inst_11 _inst_14 _inst_19 _inst_20 (ContinuousLinearMap.toLinearMap.{u4, u4, u1, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19 f₁) (ContinuousLinearMap.toLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20 f₂))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_prod ContinuousLinearMap.coe_prodₓ'. -/
@[simp, norm_cast]
theorem coe_prod [Module R₁ M₂] [Module R₁ M₃] (f₁ : M₁ →L[R₁] M₂) (f₂ : M₁ →L[R₁] M₃) :
    (f₁.Prod f₂ : M₁ →ₗ[R₁] M₂ × M₃) = LinearMap.prod f₁ f₂ :=
  rfl
#align continuous_linear_map.coe_prod ContinuousLinearMap.coe_prod

/- warning: continuous_linear_map.prod_apply -> ContinuousLinearMap.prod_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_10 : TopologicalSpace.{u4} M₃] [_inst_11 : AddCommMonoid.{u4} M₃] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_11] (f₁ : ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (f₂ : ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (x : M₁), Eq.{max (succ u3) (succ u4)} (Prod.{u3, u4} M₂ M₃) (coeFn.{max (succ u2) (succ (max u3 u4)), max (succ u2) (succ (max u3 u4))} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_8 _inst_10) (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) (fun (_x : ContinuousLinearMap.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_8 _inst_10) (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) => M₁ -> (Prod.{u3, u4} M₂ M₃)) (ContinuousLinearMap.toFun.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_8 _inst_10) (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) (ContinuousLinearMap.prod.{u1, u2, u3, u4} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_19 _inst_20 f₁ f₂) x) (Prod.mk.{u3, u4} M₂ M₃ (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) f₁ x) (coeFn.{max (succ u2) (succ u4), max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) => M₁ -> M₃) (ContinuousLinearMap.toFun.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) f₂ x))
but is expected to have type
  forall {R₁ : Type.{u4}} [_inst_1 : Semiring.{u4} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u2}} [_inst_10 : TopologicalSpace.{u2} M₃] [_inst_11 : AddCommMonoid.{u2} M₃] [_inst_14 : Module.{u4, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u4, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u4, u2} R₁ M₃ _inst_1 _inst_11] (f₁ : ContinuousLinearMap.{u4, u4, u1, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (f₂ : ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (x : M₁), Eq.{max (succ u3) (succ u2)} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => Prod.{u3, u2} M₂ M₃) x) (FunLike.coe.{max (max (succ u1) (succ u3)) (succ u2), succ u1, max (succ u3) (succ u2)} (ContinuousLinearMap.{u4, u4, u1, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u2} M₂ M₃) (instTopologicalSpaceProd.{u3, u2} M₂ M₃ _inst_8 _inst_10) (Prod.instAddCommMonoidSum.{u3, u2} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u4, u3, u2} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => Prod.{u3, u2} M₂ M₃) _x) (ContinuousMapClass.toFunLike.{max (max u1 u3) u2, u1, max u3 u2} (ContinuousLinearMap.{u4, u4, u1, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u2} M₂ M₃) (instTopologicalSpaceProd.{u3, u2} M₂ M₃ _inst_8 _inst_10) (Prod.instAddCommMonoidSum.{u3, u2} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u4, u3, u2} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) M₁ (Prod.{u3, u2} M₂ M₃) _inst_4 (instTopologicalSpaceProd.{u3, u2} M₂ M₃ _inst_8 _inst_10) (ContinuousSemilinearMapClass.toContinuousMapClass.{max (max u1 u3) u2, u4, u4, u1, max u3 u2} (ContinuousLinearMap.{u4, u4, u1, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u2} M₂ M₃) (instTopologicalSpaceProd.{u3, u2} M₂ M₃ _inst_8 _inst_10) (Prod.instAddCommMonoidSum.{u3, u2} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u4, u3, u2} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u2} M₂ M₃) (instTopologicalSpaceProd.{u3, u2} M₂ M₃ _inst_8 _inst_10) (Prod.instAddCommMonoidSum.{u3, u2} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u4, u3, u2} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20) (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u1, max u3 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u2} M₂ M₃) (instTopologicalSpaceProd.{u3, u2} M₂ M₃ _inst_8 _inst_10) (Prod.instAddCommMonoidSum.{u3, u2} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u4, u3, u2} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)))) (ContinuousLinearMap.prod.{u4, u1, u3, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_19 _inst_20 f₁ f₂) x) (Prod.mk.{u3, u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) x) (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (ContinuousLinearMap.{u4, u4, u1, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u1 u3, u1, u3} (ContinuousLinearMap.{u4, u4, u1, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u3, u4, u4, u1, u3} (ContinuousLinearMap.{u4, u4, u1, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u1, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19))) f₁ x) (FunLike.coe.{max (succ u1) (succ u2), succ u1, succ u2} (ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) _x) (ContinuousMapClass.toFunLike.{max u1 u2, u1, u2} (ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) M₁ M₃ _inst_4 _inst_10 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u2, u4, u4, u1, u2} (ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20))) f₂ x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.prod_apply ContinuousLinearMap.prod_applyₓ'. -/
@[simp, norm_cast]
theorem prod_apply [Module R₁ M₂] [Module R₁ M₃] (f₁ : M₁ →L[R₁] M₂) (f₂ : M₁ →L[R₁] M₃) (x : M₁) :
    f₁.Prod f₂ x = (f₁ x, f₂ x) :=
  rfl
#align continuous_linear_map.prod_apply ContinuousLinearMap.prod_apply

section

variable (R₁ M₁ M₂)

/- warning: continuous_linear_map.inl -> ContinuousLinearMap.inl is a dubious translation:
lean 3 declaration is
  forall (R₁ : Type.{u1}) [_inst_1 : Semiring.{u1} R₁] (M₁ : Type.{u2}) [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] (M₂ : Type.{u3}) [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9], ContinuousLinearMap.{u1, u1, u2, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)
but is expected to have type
  forall (R₁ : Type.{u1}) [_inst_1 : Semiring.{u1} R₁] (M₁ : Type.{u2}) [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] (M₂ : Type.{u3}) [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9], ContinuousLinearMap.{u1, u1, u2, max u3 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u2, u3} M₁ M₂) (instTopologicalSpaceProd.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.inl ContinuousLinearMap.inlₓ'. -/
/-- The left injection into a product is a continuous linear map. -/
def inl [Module R₁ M₂] : M₁ →L[R₁] M₁ × M₂ :=
  (id R₁ M₁).Prod 0
#align continuous_linear_map.inl ContinuousLinearMap.inl

/- warning: continuous_linear_map.inr -> ContinuousLinearMap.inr is a dubious translation:
lean 3 declaration is
  forall (R₁ : Type.{u1}) [_inst_1 : Semiring.{u1} R₁] (M₁ : Type.{u2}) [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] (M₂ : Type.{u3}) [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9], ContinuousLinearMap.{u1, u1, u3, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)
but is expected to have type
  forall (R₁ : Type.{u1}) [_inst_1 : Semiring.{u1} R₁] (M₁ : Type.{u2}) [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] (M₂ : Type.{u3}) [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9], ContinuousLinearMap.{u1, u1, u3, max u3 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 (Prod.{u2, u3} M₁ M₂) (instTopologicalSpaceProd.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.inr ContinuousLinearMap.inrₓ'. -/
/-- The right injection into a product is a continuous linear map. -/
def inr [Module R₁ M₂] : M₂ →L[R₁] M₁ × M₂ :=
  (0 : M₂ →L[R₁] M₁).Prod (id R₁ M₂)
#align continuous_linear_map.inr ContinuousLinearMap.inr

end

variable {F : Type _}

/- warning: continuous_linear_map.inl_apply -> ContinuousLinearMap.inl_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] (x : M₁), Eq.{max (succ u2) (succ u3)} (Prod.{u2, u3} M₁ M₂) (coeFn.{max (succ u2) (succ (max u2 u3)), max (succ u2) (succ (max u2 u3))} (ContinuousLinearMap.{u1, u1, u2, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (fun (_x : ContinuousLinearMap.{u1, u1, u2, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) => M₁ -> (Prod.{u2, u3} M₁ M₂)) (ContinuousLinearMap.toFun.{u1, u1, u2, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (ContinuousLinearMap.inl.{u1, u2, u3} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) x) (Prod.mk.{u2, u3} M₁ M₂ x (OfNat.ofNat.{u3} M₂ 0 (OfNat.mk.{u3} M₂ 0 (Zero.zero.{u3} M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ _inst_9)))))))
but is expected to have type
  forall {R₁ : Type.{u3}} [_inst_1 : Semiring.{u3} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] [_inst_14 : Module.{u3, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u3, u2} R₁ M₂ _inst_1 _inst_9] (x : M₁), Eq.{max (succ u1) (succ u2)} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => Prod.{u1, u2} M₁ M₂) x) (FunLike.coe.{max (succ u1) (succ u2), succ u1, max (succ u1) (succ u2)} (ContinuousLinearMap.{u3, u3, u1, max u2 u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => Prod.{u1, u2} M₁ M₂) _x) (ContinuousMapClass.toFunLike.{max u1 u2, u1, max u1 u2} (ContinuousLinearMap.{u3, u3, u1, max u2 u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) M₁ (Prod.{u1, u2} M₁ M₂) _inst_4 (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u2, u3, u3, u1, max u1 u2} (ContinuousLinearMap.{u3, u3, u1, max u2 u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u1, max u1 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)))) (ContinuousLinearMap.inl.{u3, u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) x) (Prod.mk.{u1, u2} M₁ M₂ x (OfNat.ofNat.{u2} M₂ 0 (Zero.toOfNat0.{u2} M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9)))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.inl_apply ContinuousLinearMap.inl_applyₓ'. -/
@[simp]
theorem inl_apply [Module R₁ M₂] (x : M₁) : inl R₁ M₁ M₂ x = (x, 0) :=
  rfl
#align continuous_linear_map.inl_apply ContinuousLinearMap.inl_apply

/- warning: continuous_linear_map.inr_apply -> ContinuousLinearMap.inr_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] (x : M₂), Eq.{max (succ u2) (succ u3)} (Prod.{u2, u3} M₁ M₂) (coeFn.{max (succ u3) (succ (max u2 u3)), max (succ u3) (succ (max u2 u3))} (ContinuousLinearMap.{u1, u1, u3, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (fun (_x : ContinuousLinearMap.{u1, u1, u3, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) => M₂ -> (Prod.{u2, u3} M₁ M₂)) (ContinuousLinearMap.toFun.{u1, u1, u3, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (ContinuousLinearMap.inr.{u1, u2, u3} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) x) (Prod.mk.{u2, u3} M₁ M₂ (OfNat.ofNat.{u2} M₁ 0 (OfNat.mk.{u2} M₁ 0 (Zero.zero.{u2} M₁ (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_5)))))) x)
but is expected to have type
  forall {R₁ : Type.{u3}} [_inst_1 : Semiring.{u3} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] [_inst_14 : Module.{u3, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u3, u2} R₁ M₂ _inst_1 _inst_9] (x : M₂), Eq.{max (succ u1) (succ u2)} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => Prod.{u1, u2} M₁ M₂) x) (FunLike.coe.{max (succ u1) (succ u2), succ u2, max (succ u1) (succ u2)} (ContinuousLinearMap.{u3, u3, u2, max u2 u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₂ _inst_8 _inst_9 (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => Prod.{u1, u2} M₁ M₂) _x) (ContinuousMapClass.toFunLike.{max u1 u2, u2, max u1 u2} (ContinuousLinearMap.{u3, u3, u2, max u2 u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₂ _inst_8 _inst_9 (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) M₂ (Prod.{u1, u2} M₁ M₂) _inst_8 (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u2, u3, u3, u2, max u1 u2} (ContinuousLinearMap.{u3, u3, u2, max u2 u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₂ _inst_8 _inst_9 (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₂ _inst_8 _inst_9 (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, max u1 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₂ _inst_8 _inst_9 (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)))) (ContinuousLinearMap.inr.{u3, u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) x) (Prod.mk.{u1, u2} M₁ M₂ (OfNat.ofNat.{u1} M₁ 0 (Zero.toOfNat0.{u1} M₁ (AddMonoid.toZero.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_5)))) x)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.inr_apply ContinuousLinearMap.inr_applyₓ'. -/
@[simp]
theorem inr_apply [Module R₁ M₂] (x : M₂) : inr R₁ M₁ M₂ x = (0, x) :=
  rfl
#align continuous_linear_map.inr_apply ContinuousLinearMap.inr_apply

/- warning: continuous_linear_map.coe_inl -> ContinuousLinearMap.coe_inl is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9], Eq.{max (succ u2) (succ (max u2 u3))} (LinearMap.{u1, u1, u2, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ (Prod.{u2, u3} M₁ M₂) _inst_5 (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) ((fun (a : Sort.{max (succ u2) (succ (max u2 u3))}) (b : Sort.{max (succ u2) (succ (max u2 u3))}) [self : HasLiftT.{max (succ u2) (succ (max u2 u3)), max (succ u2) (succ (max u2 u3))} a b] => self.0) (ContinuousLinearMap.{u1, u1, u2, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (LinearMap.{u1, u1, u2, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ (Prod.{u2, u3} M₁ M₂) _inst_5 (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (HasLiftT.mk.{max (succ u2) (succ (max u2 u3)), max (succ u2) (succ (max u2 u3))} (ContinuousLinearMap.{u1, u1, u2, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (LinearMap.{u1, u1, u2, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ (Prod.{u2, u3} M₁ M₂) _inst_5 (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (CoeTCₓ.coe.{max (succ u2) (succ (max u2 u3)), max (succ u2) (succ (max u2 u3))} (ContinuousLinearMap.{u1, u1, u2, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (LinearMap.{u1, u1, u2, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ (Prod.{u2, u3} M₁ M₂) _inst_5 (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (coeBase.{max (succ u2) (succ (max u2 u3)), max (succ u2) (succ (max u2 u3))} (ContinuousLinearMap.{u1, u1, u2, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (LinearMap.{u1, u1, u2, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ (Prod.{u2, u3} M₁ M₂) _inst_5 (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (ContinuousLinearMap.LinearMap.coe.{u1, u1, u2, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19))))) (ContinuousLinearMap.inl.{u1, u2, u3} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)) (LinearMap.inl.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)
but is expected to have type
  forall {R₁ : Type.{u3}} [_inst_1 : Semiring.{u3} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] [_inst_14 : Module.{u3, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u3, u2} R₁ M₂ _inst_1 _inst_9], Eq.{max (succ u1) (succ u2)} (LinearMap.{u3, u3, u1, max u1 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ (Prod.{u1, u2} M₁ M₂) _inst_5 (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (ContinuousLinearMap.toLinearMap.{u3, u3, u1, max u1 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) _inst_14 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) (ContinuousLinearMap.inl.{u3, u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)) (LinearMap.inl.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_inl ContinuousLinearMap.coe_inlₓ'. -/
@[simp, norm_cast]
theorem coe_inl [Module R₁ M₂] : (inl R₁ M₁ M₂ : M₁ →ₗ[R₁] M₁ × M₂) = LinearMap.inl R₁ M₁ M₂ :=
  rfl
#align continuous_linear_map.coe_inl ContinuousLinearMap.coe_inl

/- warning: continuous_linear_map.coe_inr -> ContinuousLinearMap.coe_inr is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9], Eq.{max (succ u3) (succ (max u2 u3))} (LinearMap.{u1, u1, u3, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ (Prod.{u2, u3} M₁ M₂) _inst_9 (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) ((fun (a : Sort.{max (succ u3) (succ (max u2 u3))}) (b : Sort.{max (succ u3) (succ (max u2 u3))}) [self : HasLiftT.{max (succ u3) (succ (max u2 u3)), max (succ u3) (succ (max u2 u3))} a b] => self.0) (ContinuousLinearMap.{u1, u1, u3, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (LinearMap.{u1, u1, u3, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ (Prod.{u2, u3} M₁ M₂) _inst_9 (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (HasLiftT.mk.{max (succ u3) (succ (max u2 u3)), max (succ u3) (succ (max u2 u3))} (ContinuousLinearMap.{u1, u1, u3, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (LinearMap.{u1, u1, u3, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ (Prod.{u2, u3} M₁ M₂) _inst_9 (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (CoeTCₓ.coe.{max (succ u3) (succ (max u2 u3)), max (succ u3) (succ (max u2 u3))} (ContinuousLinearMap.{u1, u1, u3, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (LinearMap.{u1, u1, u3, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ (Prod.{u2, u3} M₁ M₂) _inst_9 (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (coeBase.{max (succ u3) (succ (max u2 u3)), max (succ u3) (succ (max u2 u3))} (ContinuousLinearMap.{u1, u1, u3, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (LinearMap.{u1, u1, u3, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ (Prod.{u2, u3} M₁ M₂) _inst_9 (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (ContinuousLinearMap.LinearMap.coe.{u1, u1, u3, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19))))) (ContinuousLinearMap.inr.{u1, u2, u3} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)) (LinearMap.inr.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)
but is expected to have type
  forall {R₁ : Type.{u3}} [_inst_1 : Semiring.{u3} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] [_inst_14 : Module.{u3, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u3, u2} R₁ M₂ _inst_1 _inst_9], Eq.{max (succ u1) (succ u2)} (LinearMap.{u3, u3, u2, max u1 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₂ (Prod.{u1, u2} M₁ M₂) _inst_9 (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (ContinuousLinearMap.toLinearMap.{u3, u3, u2, max u1 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₂ _inst_8 _inst_9 (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) _inst_19 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) (ContinuousLinearMap.inr.{u3, u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)) (LinearMap.inr.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_inr ContinuousLinearMap.coe_inrₓ'. -/
@[simp, norm_cast]
theorem coe_inr [Module R₁ M₂] : (inr R₁ M₁ M₂ : M₂ →ₗ[R₁] M₁ × M₂) = LinearMap.inr R₁ M₁ M₂ :=
  rfl
#align continuous_linear_map.coe_inr ContinuousLinearMap.coe_inr

/- warning: continuous_linear_map.is_closed_ker -> ContinuousLinearMap.isClosed_ker is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] {F : Type.{u5}} [_inst_19 : T1Space.{u4} M₂ _inst_8] [_inst_20 : ContinuousSemilinearMapClass.{u5, u1, u2, u3, u4} F R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16] (f : F), IsClosed.{u3} M₁ _inst_4 ((fun (a : Type.{u3}) (b : Type.{u3}) [self : HasLiftT.{succ u3, succ u3} a b] => self.0) (Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) (Set.{u3} M₁) (HasLiftT.mk.{succ u3, succ u3} (Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) (Set.{u3} M₁) (CoeTCₓ.coe.{succ u3, succ u3} (Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) (Set.{u3} M₁) (SetLike.Set.hasCoeT.{u3, u3} (Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14)))) (LinearMap.ker.{u1, u2, u3, u4, u5} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂ F (ContinuousSemilinearMapClass.toSemilinearMapClass.{u5, u1, u2, u3, u4} F R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_20) f))
but is expected to have type
  forall {R₁ : Type.{u3}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u3} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u3, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u5}} [_inst_8 : TopologicalSpace.{u5} M₂] [_inst_9 : AddCommMonoid.{u5} M₂] [_inst_14 : Module.{u3, u1} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u5} R₂ M₂ _inst_2 _inst_9] {F : Type.{u4}} [_inst_19 : T1Space.{u5} M₂ _inst_8] [_inst_20 : ContinuousSemilinearMapClass.{u4, u3, u2, u1, u5} F R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16] (f : F), IsClosed.{u1} M₁ _inst_4 (SetLike.coe.{u1, u1} (Submodule.{u3, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u3, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (LinearMap.ker.{u3, u2, u1, u5, u4} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂ F (ContinuousSemilinearMapClass.toSemilinearMapClass.{u4, u3, u2, u1, u5} F R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 _inst_20) f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.is_closed_ker ContinuousLinearMap.isClosed_kerₓ'. -/
theorem isClosed_ker [T1Space M₂] [ContinuousSemilinearMapClass F σ₁₂ M₁ M₂] (f : F) :
    IsClosed (ker f : Set M₁) :=
  continuous_iff_isClosed.1 (map_continuous f) _ isClosed_singleton
#align continuous_linear_map.is_closed_ker ContinuousLinearMap.isClosed_ker

/- warning: continuous_linear_map.is_complete_ker -> ContinuousLinearMap.isComplete_ker is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_16 : Module.{u2, u3} R₂ M₂ _inst_2 _inst_9] {F : Type.{u4}} {M' : Type.{u5}} [_inst_19 : UniformSpace.{u5} M'] [_inst_20 : CompleteSpace.{u5} M' _inst_19] [_inst_21 : AddCommMonoid.{u5} M'] [_inst_22 : Module.{u1, u5} R₁ M' _inst_1 _inst_21] [_inst_23 : T1Space.{u3} M₂ _inst_8] [_inst_24 : ContinuousSemilinearMapClass.{u4, u1, u2, u5, u3} F R₁ R₂ _inst_1 _inst_2 σ₁₂ M' (UniformSpace.toTopologicalSpace.{u5} M' _inst_19) _inst_21 M₂ _inst_8 _inst_9 _inst_22 _inst_16] (f : F), IsComplete.{u5} M' _inst_19 ((fun (a : Type.{u5}) (b : Type.{u5}) [self : HasLiftT.{succ u5, succ u5} a b] => self.0) (Submodule.{u1, u5} R₁ M' _inst_1 _inst_21 _inst_22) (Set.{u5} M') (HasLiftT.mk.{succ u5, succ u5} (Submodule.{u1, u5} R₁ M' _inst_1 _inst_21 _inst_22) (Set.{u5} M') (CoeTCₓ.coe.{succ u5, succ u5} (Submodule.{u1, u5} R₁ M' _inst_1 _inst_21 _inst_22) (Set.{u5} M') (SetLike.Set.hasCoeT.{u5, u5} (Submodule.{u1, u5} R₁ M' _inst_1 _inst_21 _inst_22) M' (Submodule.setLike.{u1, u5} R₁ M' _inst_1 _inst_21 _inst_22)))) (LinearMap.ker.{u1, u2, u5, u3, u4} R₁ R₂ M' M₂ _inst_1 _inst_2 _inst_21 _inst_9 _inst_22 _inst_16 σ₁₂ F (ContinuousSemilinearMapClass.toSemilinearMapClass.{u4, u1, u2, u5, u3} F R₁ R₂ _inst_1 _inst_2 σ₁₂ M' (UniformSpace.toTopologicalSpace.{u5} M' _inst_19) _inst_21 M₂ _inst_8 _inst_9 _inst_22 _inst_16 _inst_24) f))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u1}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u1} R₂] {σ₁₂ : RingHom.{u4, u1} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2)} {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_16 : Module.{u1, u3} R₂ M₂ _inst_2 _inst_9] {F : Type.{u2}} {M' : Type.{u5}} [_inst_19 : UniformSpace.{u5} M'] [_inst_20 : CompleteSpace.{u5} M' _inst_19] [_inst_21 : AddCommMonoid.{u5} M'] [_inst_22 : Module.{u4, u5} R₁ M' _inst_1 _inst_21] [_inst_23 : T1Space.{u3} M₂ _inst_8] [_inst_24 : ContinuousSemilinearMapClass.{u2, u4, u1, u5, u3} F R₁ R₂ _inst_1 _inst_2 σ₁₂ M' (UniformSpace.toTopologicalSpace.{u5} M' _inst_19) _inst_21 M₂ _inst_8 _inst_9 _inst_22 _inst_16] (f : F), IsComplete.{u5} M' _inst_19 (SetLike.coe.{u5, u5} (Submodule.{u4, u5} R₁ M' _inst_1 _inst_21 _inst_22) M' (Submodule.setLike.{u4, u5} R₁ M' _inst_1 _inst_21 _inst_22) (LinearMap.ker.{u4, u1, u5, u3, u2} R₁ R₂ M' M₂ _inst_1 _inst_2 _inst_21 _inst_9 _inst_22 _inst_16 σ₁₂ F (ContinuousSemilinearMapClass.toSemilinearMapClass.{u2, u4, u1, u5, u3} F R₁ R₂ _inst_1 _inst_2 σ₁₂ M' (UniformSpace.toTopologicalSpace.{u5} M' _inst_19) _inst_21 M₂ _inst_8 _inst_9 _inst_22 _inst_16 _inst_24) f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.is_complete_ker ContinuousLinearMap.isComplete_kerₓ'. -/
theorem isComplete_ker {M' : Type _} [UniformSpace M'] [CompleteSpace M'] [AddCommMonoid M']
    [Module R₁ M'] [T1Space M₂] [ContinuousSemilinearMapClass F σ₁₂ M' M₂] (f : F) :
    IsComplete (ker f : Set M') :=
  (isClosed_ker f).IsComplete
#align continuous_linear_map.is_complete_ker ContinuousLinearMap.isComplete_ker

#print ContinuousLinearMap.completeSpace_ker /-
instance (priority := 100) completeSpace_ker {M' : Type _} [UniformSpace M'] [CompleteSpace M']
    [AddCommMonoid M'] [Module R₁ M'] [T1Space M₂] [ContinuousSemilinearMapClass F σ₁₂ M' M₂]
    (f : F) : CompleteSpace (ker f) :=
  (isClosed_ker f).completeSpace_coe
#align continuous_linear_map.complete_space_ker ContinuousLinearMap.completeSpace_ker
-/

/- warning: continuous_linear_map.ker_prod -> ContinuousLinearMap.ker_prod is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_10 : TopologicalSpace.{u4} M₃] [_inst_11 : AddCommMonoid.{u4} M₃] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_11] (f : ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (g : ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20), Eq.{succ u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (LinearMap.ker.{u1, u1, u2, max u3 u4, max u2 u3 u4} R₁ R₁ M₁ (Prod.{u3, u4} M₂ M₃) _inst_1 _inst_1 _inst_5 (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_8 _inst_10) (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3 u4, u1, u1, u2, max u3 u4} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_8 _inst_10) (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_8 _inst_10) (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, max u3 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_8 _inst_10) (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20))) (ContinuousLinearMap.prod.{u1, u2, u3, u4} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_19 _inst_20 f g)) (Inf.inf.{u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (Submodule.hasInf.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R₁ R₁ M₁ M₂ _inst_1 _inst_1 _inst_5 _inst_9 _inst_14 _inst_19 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)) f) (LinearMap.ker.{u1, u1, u2, u4, max u2 u4} R₁ R₁ M₁ M₃ _inst_1 _inst_1 _inst_5 _inst_11 _inst_14 _inst_20 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u4, u1, u1, u2, u4} (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20)) g))
but is expected to have type
  forall {R₁ : Type.{u4}} [_inst_1 : Semiring.{u4} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u2}} [_inst_10 : TopologicalSpace.{u2} M₃] [_inst_11 : AddCommMonoid.{u2} M₃] [_inst_14 : Module.{u4, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u4, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u4, u2} R₁ M₃ _inst_1 _inst_11] (f : ContinuousLinearMap.{u4, u4, u1, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (g : ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20), Eq.{succ u1} (Submodule.{u4, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (LinearMap.ker.{u4, u4, u1, max u3 u2, max (max u1 u3) u2} R₁ R₁ M₁ (Prod.{u3, u2} M₂ M₃) _inst_1 _inst_1 _inst_5 (Prod.instAddCommMonoidSum.{u3, u2} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u4, u3, u2} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20) (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (ContinuousLinearMap.{u4, u4, u1, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u2} M₂ M₃) (instTopologicalSpaceProd.{u3, u2} M₂ M₃ _inst_8 _inst_10) (Prod.instAddCommMonoidSum.{u3, u2} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u4, u3, u2} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max (max u1 u3) u2, u4, u4, u1, max u3 u2} (ContinuousLinearMap.{u4, u4, u1, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u2} M₂ M₃) (instTopologicalSpaceProd.{u3, u2} M₂ M₃ _inst_8 _inst_10) (Prod.instAddCommMonoidSum.{u3, u2} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u4, u3, u2} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20)) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u2} M₂ M₃) (instTopologicalSpaceProd.{u3, u2} M₂ M₃ _inst_8 _inst_10) (Prod.instAddCommMonoidSum.{u3, u2} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u4, u3, u2} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20) (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u1, max u3 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u2} M₂ M₃) (instTopologicalSpaceProd.{u3, u2} M₂ M₃ _inst_8 _inst_10) (Prod.instAddCommMonoidSum.{u3, u2} M₂ M₃ _inst_9 _inst_11) _inst_14 (Prod.module.{u4, u3, u2} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20))) (ContinuousLinearMap.prod.{u4, u1, u3, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_19 _inst_20 f g)) (Inf.inf.{u1} (Submodule.{u4, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (Submodule.instInfSubmodule.{u4, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (LinearMap.ker.{u4, u4, u1, u3, max u1 u3} R₁ R₁ M₁ M₂ _inst_1 _inst_1 _inst_5 _inst_9 _inst_14 _inst_19 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (ContinuousLinearMap.{u4, u4, u1, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u1 u3, u4, u4, u1, u3} (ContinuousLinearMap.{u4, u4, u1, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u1, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)) f) (LinearMap.ker.{u4, u4, u1, u2, max u1 u2} R₁ R₁ M₁ M₃ _inst_1 _inst_1 _inst_5 _inst_11 _inst_14 _inst_20 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u1 u2, u4, u4, u1, u2} (ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20)) g))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.ker_prod ContinuousLinearMap.ker_prodₓ'. -/
@[simp]
theorem ker_prod [Module R₁ M₂] [Module R₁ M₃] (f : M₁ →L[R₁] M₂) (g : M₁ →L[R₁] M₃) :
    ker (f.Prod g) = ker f ⊓ ker g :=
  LinearMap.ker_prod f g
#align continuous_linear_map.ker_prod ContinuousLinearMap.ker_prod

/- warning: continuous_linear_map.cod_restrict -> ContinuousLinearMap.codRestrict is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (p : Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16), (forall (x : M₁), Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f x) p) -> (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) (Subtype.topologicalSpace.{u4} M₂ (fun (x : M₂) => Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p))
but is expected to have type
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (p : Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16), (forall (x : M₁), Membership.mem.{u4, u4} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f x) p) -> (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (Subtype.{succ u4} M₂ (fun (x : M₂) => Membership.mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p)) (instTopologicalSpaceSubtype.{u4} M₂ (fun (x : M₂) => Membership.mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.cod_restrict ContinuousLinearMap.codRestrictₓ'. -/
/-- Restrict codomain of a continuous linear map. -/
def codRestrict (f : M₁ →SL[σ₁₂] M₂) (p : Submodule R₂ M₂) (h : ∀ x, f x ∈ p) : M₁ →SL[σ₁₂] p
    where
  cont := f.Continuous.subtype_mk _
  toLinearMap := (f : M₁ →ₛₗ[σ₁₂] M₂).codRestrict p h
#align continuous_linear_map.cod_restrict ContinuousLinearMap.codRestrict

/- warning: continuous_linear_map.coe_cod_restrict -> ContinuousLinearMap.coe_codRestrict is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (p : Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (h : forall (x : M₁), Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f x) p), Eq.{max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) _inst_5 (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) (Subtype.topologicalSpace.{u4} M₂ (fun (x : M₂) => Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) _inst_5 (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) (Subtype.topologicalSpace.{u4} M₂ (fun (x : M₂) => Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) _inst_5 (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) (Subtype.topologicalSpace.{u4} M₂ (fun (x : M₂) => Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) _inst_5 (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) (Subtype.topologicalSpace.{u4} M₂ (fun (x : M₂) => Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) _inst_5 (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) (Subtype.topologicalSpace.{u4} M₂ (fun (x : M₂) => Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p))))) (ContinuousLinearMap.codRestrict.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f p h)) (LinearMap.codRestrict.{u1, u2, u3, u4} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂ p ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (LinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_16) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)))) f) h)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (p : Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (h : forall (x : M₁), Membership.mem.{u1, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f x) p), Eq.{max (succ u2) (succ u1)} (LinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ (Subtype.{succ u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p)) _inst_5 (Submodule.addCommMonoid.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (Subtype.{succ u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p)) (instTopologicalSpaceSubtype.{u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p) (ContinuousLinearMap.codRestrict.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f p h)) (LinearMap.codRestrict.{u4, u3, u2, u1} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂ p (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f) h)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_cod_restrict ContinuousLinearMap.coe_codRestrictₓ'. -/
@[norm_cast]
theorem coe_codRestrict (f : M₁ →SL[σ₁₂] M₂) (p : Submodule R₂ M₂) (h : ∀ x, f x ∈ p) :
    (f.codRestrict p h : M₁ →ₛₗ[σ₁₂] p) = (f : M₁ →ₛₗ[σ₁₂] M₂).codRestrict p h :=
  rfl
#align continuous_linear_map.coe_cod_restrict ContinuousLinearMap.coe_codRestrict

/- warning: continuous_linear_map.coe_cod_restrict_apply -> ContinuousLinearMap.coe_codRestrict_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (p : Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (h : forall (x : M₁), Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f x) p) (x : M₁), Eq.{succ u4} M₂ ((fun (a : Type.{u4}) (b : Type.{u4}) [self : HasLiftT.{succ u4, succ u4} a b] => self.0) (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) M₂ (HasLiftT.mk.{succ u4, succ u4} (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) M₂ (CoeTCₓ.coe.{succ u4, succ u4} (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) M₂ (coeBase.{succ u4, succ u4} (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) M₂ (coeSubtype.{succ u4} M₂ (fun (x : M₂) => Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p))))) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) (Subtype.topologicalSpace.{u4} M₂ (fun (x : M₂) => Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) (Subtype.topologicalSpace.{u4} M₂ (fun (x : M₂) => Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) => M₁ -> (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p)) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) (Subtype.topologicalSpace.{u4} M₂ (fun (x : M₂) => Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) (ContinuousLinearMap.codRestrict.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f p h) x)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f x)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (p : Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (h : forall (x : M₁), Membership.mem.{u1, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f x) p) (x : M₁), Eq.{succ u1} M₂ (Subtype.val.{succ u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Set.{u1} M₂) (Set.instMembershipSet.{u1} M₂) x (SetLike.coe.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) p)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (Subtype.{succ u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p)) (instTopologicalSpaceSubtype.{u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => Subtype.{succ u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p)) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (Subtype.{succ u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p)) (instTopologicalSpaceSubtype.{u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) M₁ (Subtype.{succ u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p)) _inst_4 (instTopologicalSpaceSubtype.{u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (Subtype.{succ u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p)) (instTopologicalSpaceSubtype.{u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (Subtype.{succ u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p)) (instTopologicalSpaceSubtype.{u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p) (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (Subtype.{succ u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p)) (instTopologicalSpaceSubtype.{u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p)))) (ContinuousLinearMap.codRestrict.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f p h) x)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f x)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_cod_restrict_apply ContinuousLinearMap.coe_codRestrict_applyₓ'. -/
@[simp]
theorem coe_codRestrict_apply (f : M₁ →SL[σ₁₂] M₂) (p : Submodule R₂ M₂) (h : ∀ x, f x ∈ p) (x) :
    (f.codRestrict p h x : M₂) = f x :=
  rfl
#align continuous_linear_map.coe_cod_restrict_apply ContinuousLinearMap.coe_codRestrict_apply

/- warning: continuous_linear_map.ker_cod_restrict -> ContinuousLinearMap.ker_codRestrict is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] [_inst_14 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (p : Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (h : forall (x : M₁), Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) f x) p), Eq.{succ u3} (Submodule.{u1, u3} R₁ M₁ _inst_1 _inst_5 _inst_14) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R₁ R₂ M₁ (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) _inst_1 _inst_2 _inst_5 (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) (Subtype.topologicalSpace.{u4} M₂ (fun (x : M₂) => Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) (Subtype.topologicalSpace.{u4} M₂ (fun (x : M₂) => Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) (Subtype.topologicalSpace.{u4} M₂ (fun (x : M₂) => Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (coeSort.{succ u4, succ (succ u4)} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) Type.{u4} (SetLike.hasCoeToSort.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) p) (Subtype.topologicalSpace.{u4} M₂ (fun (x : M₂) => Membership.Mem.{u4, u4} M₂ (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.hasMem.{u4, u4} (Submodule.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u2, u4} R₂ M₂ _inst_2 _inst_9 _inst_16 p))) (ContinuousLinearMap.codRestrict.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f p h)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)) f)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_14 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_5] [_inst_16 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_9] (f : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (p : Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (h : forall (x : M₁), Membership.mem.{u1, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16))) f x) p), Eq.{succ u2} (Submodule.{u4, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (LinearMap.ker.{u4, u3, u2, u1, max u2 u1} R₁ R₂ M₁ (Subtype.{succ u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p)) _inst_1 _inst_2 _inst_5 (Submodule.addCommMonoid.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p) σ₁₂ (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (Subtype.{succ u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p)) (instTopologicalSpaceSubtype.{u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (Subtype.{succ u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p)) (instTopologicalSpaceSubtype.{u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p)) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (Subtype.{succ u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p)) (instTopologicalSpaceSubtype.{u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p) (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 (Subtype.{succ u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p)) (instTopologicalSpaceSubtype.{u1} M₂ (fun (x : M₂) => Membership.mem.{u1, u1} M₂ (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) (SetLike.instMembership.{u1, u1} (Submodule.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16) M₂ (Submodule.setLike.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16)) x p) _inst_8) (Submodule.addCommMonoid.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p) _inst_14 (Submodule.module.{u3, u1} R₂ M₂ _inst_2 _inst_9 _inst_16 p))) (ContinuousLinearMap.codRestrict.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 f p h)) (LinearMap.ker.{u4, u3, u2, u1, max u2 u1} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_5 _inst_9 _inst_14 _inst_16 σ₁₂ (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_16)) f)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.ker_cod_restrict ContinuousLinearMap.ker_codRestrictₓ'. -/
@[simp]
theorem ker_codRestrict (f : M₁ →SL[σ₁₂] M₂) (p : Submodule R₂ M₂) (h : ∀ x, f x ∈ p) :
    ker (f.codRestrict p h) = ker f :=
  (f : M₁ →ₛₗ[σ₁₂] M₂).ker_codRestrict p h
#align continuous_linear_map.ker_cod_restrict ContinuousLinearMap.ker_codRestrict

#print Submodule.subtypeL /-
/-- `submodule.subtype` as a `continuous_linear_map`. -/
def Submodule.subtypeL (p : Submodule R₁ M₁) : p →L[R₁] M₁
    where
  cont := continuous_subtype_val
  toLinearMap := p.Subtype
#align submodule.subtypeL Submodule.subtypeL
-/

/- warning: submodule.coe_subtypeL -> Submodule.coe_subtypeL is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] (p : Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14), Eq.{succ u2} (LinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) M₁ (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (LinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) M₁ (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (HasLiftT.mk.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (LinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) M₁ (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (CoeTCₓ.coe.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (LinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) M₁ (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (coeBase.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (LinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) M₁ (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (ContinuousLinearMap.LinearMap.coe.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14)))) (Submodule.subtypeL.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 p)) (Submodule.subtype.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p)
but is expected to have type
  forall {R₁ : Type.{u2}} [_inst_1 : Semiring.{u2} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] (p : Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14), Eq.{succ u1} (LinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) M₁ (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (ContinuousLinearMap.toLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14 (Submodule.subtypeL.{u2, u1} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 p)) (Submodule.subtype.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p)
Case conversion may be inaccurate. Consider using '#align submodule.coe_subtypeL Submodule.coe_subtypeLₓ'. -/
@[simp, norm_cast]
theorem Submodule.coe_subtypeL (p : Submodule R₁ M₁) : (p.subtypeL : p →ₗ[R₁] M₁) = p.Subtype :=
  rfl
#align submodule.coe_subtypeL Submodule.coe_subtypeL

/- warning: submodule.coe_subtypeL' -> Submodule.coe_subtypeL' is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] (p : Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14), Eq.{succ u2} ((coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) -> M₁) (coeFn.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) => (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) -> M₁) (ContinuousLinearMap.toFun.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (Submodule.subtypeL.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 p)) (coeFn.{succ u2, succ u2} (LinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) M₁ (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (fun (_x : LinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) M₁ (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) => (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) -> M₁) (LinearMap.hasCoeToFun.{u1, u1, u2, u2} R₁ R₁ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) M₁ _inst_1 _inst_1 (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Submodule.subtype.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p))
but is expected to have type
  forall {R₁ : Type.{u2}} [_inst_1 : Semiring.{u2} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] (p : Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14), Eq.{succ u1} (forall (ᾰ : Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) => M₁) ᾰ) (FunLike.coe.{succ u1, succ u1, succ u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (fun (_x : Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) => M₁) _x) (ContinuousMapClass.toFunLike.{u1, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) M₁ (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{u1, u2, u2, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14))) (Submodule.subtypeL.{u2, u1} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 p)) (FunLike.coe.{succ u1, succ u1, succ u1} (LinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) M₁ (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (fun (_x : Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) => M₁) _x) (LinearMap.instFunLikeLinearMap.{u2, u2, u1, u1} R₁ R₁ (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) M₁ _inst_1 _inst_1 (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Submodule.subtype.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p))
Case conversion may be inaccurate. Consider using '#align submodule.coe_subtypeL' Submodule.coe_subtypeL'ₓ'. -/
@[simp]
theorem Submodule.coe_subtypeL' (p : Submodule R₁ M₁) : ⇑p.subtypeL = p.Subtype :=
  rfl
#align submodule.coe_subtypeL' Submodule.coe_subtypeL'

/- warning: submodule.subtypeL_apply -> Submodule.subtypeL_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] (p : Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (x : coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p), Eq.{succ u2} M₁ (coeFn.{succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) => (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) -> M₁) (ContinuousLinearMap.toFun.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (Submodule.subtypeL.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 p) x) ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) M₁ (HasLiftT.mk.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) M₁ (CoeTCₓ.coe.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) M₁ (coeBase.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) M₁ (coeSubtype.{succ u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p))))) x)
but is expected to have type
  forall {R₁ : Type.{u2}} [_inst_1 : Semiring.{u2} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] (p : Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (x : Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) => M₁) x) (FunLike.coe.{succ u1, succ u1, succ u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (fun (_x : Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) => M₁) _x) (ContinuousMapClass.toFunLike.{u1, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) M₁ (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{u1, u2, u2, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14))) (Submodule.subtypeL.{u2, u1} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 p) x) (Subtype.val.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Set.{u1} M₁) (Set.instMembershipSet.{u1} M₁) x (SetLike.coe.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) p)) x)
Case conversion may be inaccurate. Consider using '#align submodule.subtypeL_apply Submodule.subtypeL_applyₓ'. -/
@[simp, norm_cast]
theorem Submodule.subtypeL_apply (p : Submodule R₁ M₁) (x : p) : p.subtypeL x = x :=
  rfl
#align submodule.subtypeL_apply Submodule.subtypeL_apply

/- warning: submodule.range_subtypeL -> Submodule.range_subtypeL is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] (p : Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14), Eq.{succ u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (LinearMap.range.{u1, u1, u2, u2, u2} R₁ R₁ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) M₁ _inst_1 _inst_1 (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (ContinuousSemilinearMapClass.toSemilinearMapClass.{u2, u1, u1, u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14)) (RingHomSurjective.ids.{u1} R₁ _inst_1) (Submodule.subtypeL.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 p)) p
but is expected to have type
  forall {R₁ : Type.{u2}} [_inst_1 : Semiring.{u2} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] (p : Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14), Eq.{succ u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (LinearMap.range.{u2, u2, u1, u1, u1} R₁ R₁ (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) M₁ _inst_1 _inst_1 (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (ContinuousSemilinearMapClass.toSemilinearMapClass.{u1, u2, u2, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14)) (RingHomSurjective.ids.{u2} R₁ _inst_1) (Submodule.subtypeL.{u2, u1} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 p)) p
Case conversion may be inaccurate. Consider using '#align submodule.range_subtypeL Submodule.range_subtypeLₓ'. -/
@[simp]
theorem Submodule.range_subtypeL (p : Submodule R₁ M₁) : range p.subtypeL = p :=
  Submodule.range_subtype _
#align submodule.range_subtypeL Submodule.range_subtypeL

/- warning: submodule.ker_subtypeL -> Submodule.ker_subtypeL is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] (p : Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14), Eq.{succ u2} (Submodule.{u1, u2} R₁ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) _inst_1 (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p)) (LinearMap.ker.{u1, u1, u2, u2, u2} R₁ R₁ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) M₁ _inst_1 _inst_1 (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (ContinuousSemilinearMapClass.toSemilinearMapClass.{u2, u1, u1, u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) (Subtype.topologicalSpace.{u2} M₁ (fun (x : M₁) => Membership.Mem.{u2, u2} M₁ (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14)) (Submodule.subtypeL.{u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 p)) (Bot.bot.{u2} (Submodule.{u1, u2} R₁ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) _inst_1 (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p)) (Submodule.hasBot.{u1, u2} R₁ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14)) p) _inst_1 (Submodule.addCommMonoid.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p) (Submodule.module.{u1, u2} R₁ M₁ _inst_1 _inst_5 _inst_14 p)))
but is expected to have type
  forall {R₁ : Type.{u2}} [_inst_1 : Semiring.{u2} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] [_inst_14 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_5] (p : Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14), Eq.{succ u1} (Submodule.{u2, u1} R₁ (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) _inst_1 (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p)) (LinearMap.ker.{u2, u2, u1, u1, u1} R₁ R₁ (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) M₁ _inst_1 _inst_1 (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) (ContinuousSemilinearMapClass.toSemilinearMapClass.{u1, u2, u2, u1, u1} (ContinuousLinearMap.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) (instTopologicalSpaceSubtype.{u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p) _inst_4) (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) M₁ _inst_4 _inst_5 (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) _inst_14)) (Submodule.subtypeL.{u2, u1} R₁ _inst_1 M₁ _inst_4 _inst_5 _inst_14 p)) (Bot.bot.{u1} (Submodule.{u2, u1} R₁ (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) _inst_1 (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p)) (Submodule.instBotSubmodule.{u2, u1} R₁ (Subtype.{succ u1} M₁ (fun (x : M₁) => Membership.mem.{u1, u1} M₁ (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14) M₁ (Submodule.setLike.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14)) x p)) _inst_1 (Submodule.addCommMonoid.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p) (Submodule.module.{u2, u1} R₁ M₁ _inst_1 _inst_5 _inst_14 p)))
Case conversion may be inaccurate. Consider using '#align submodule.ker_subtypeL Submodule.ker_subtypeLₓ'. -/
@[simp]
theorem Submodule.ker_subtypeL (p : Submodule R₁ M₁) : ker p.subtypeL = ⊥ :=
  Submodule.ker_subtype _
#align submodule.ker_subtypeL Submodule.ker_subtypeL

variable (R₁ M₁ M₂)

/- warning: continuous_linear_map.fst -> ContinuousLinearMap.fst is a dubious translation:
lean 3 declaration is
  forall (R₁ : Type.{u1}) [_inst_1 : Semiring.{u1} R₁] (M₁ : Type.{u2}) [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] (M₂ : Type.{u3}) [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9], ContinuousLinearMap.{u1, u1, max u2 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14
but is expected to have type
  forall (R₁ : Type.{u1}) [_inst_1 : Semiring.{u1} R₁] (M₁ : Type.{u2}) [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] (M₂ : Type.{u3}) [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9], ContinuousLinearMap.{u1, u1, max u3 u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (instTopologicalSpaceProd.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.fst ContinuousLinearMap.fstₓ'. -/
/-- `prod.fst` as a `continuous_linear_map`. -/
def fst [Module R₁ M₂] : M₁ × M₂ →L[R₁] M₁
    where
  cont := continuous_fst
  toLinearMap := LinearMap.fst R₁ M₁ M₂
#align continuous_linear_map.fst ContinuousLinearMap.fst

/- warning: continuous_linear_map.snd -> ContinuousLinearMap.snd is a dubious translation:
lean 3 declaration is
  forall (R₁ : Type.{u1}) [_inst_1 : Semiring.{u1} R₁] (M₁ : Type.{u2}) [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] (M₂ : Type.{u3}) [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9], ContinuousLinearMap.{u1, u1, max u2 u3, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₂ _inst_8 _inst_9 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19
but is expected to have type
  forall (R₁ : Type.{u1}) [_inst_1 : Semiring.{u1} R₁] (M₁ : Type.{u2}) [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] (M₂ : Type.{u3}) [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9], ContinuousLinearMap.{u1, u1, max u3 u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (instTopologicalSpaceProd.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₂ _inst_8 _inst_9 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.snd ContinuousLinearMap.sndₓ'. -/
/-- `prod.snd` as a `continuous_linear_map`. -/
def snd [Module R₁ M₂] : M₁ × M₂ →L[R₁] M₂
    where
  cont := continuous_snd
  toLinearMap := LinearMap.snd R₁ M₁ M₂
#align continuous_linear_map.snd ContinuousLinearMap.snd

variable {R₁ M₁ M₂}

/- warning: continuous_linear_map.coe_fst -> ContinuousLinearMap.coe_fst is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9], Eq.{max (succ (max u2 u3)) (succ u2)} (LinearMap.{u1, u1, max u2 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) M₁ (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_5 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14) ((fun (a : Sort.{max (succ (max u2 u3)) (succ u2)}) (b : Sort.{max (succ (max u2 u3)) (succ u2)}) [self : HasLiftT.{max (succ (max u2 u3)) (succ u2), max (succ (max u2 u3)) (succ u2)} a b] => self.0) (ContinuousLinearMap.{u1, u1, max u2 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14) (LinearMap.{u1, u1, max u2 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) M₁ (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_5 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14) (HasLiftT.mk.{max (succ (max u2 u3)) (succ u2), max (succ (max u2 u3)) (succ u2)} (ContinuousLinearMap.{u1, u1, max u2 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14) (LinearMap.{u1, u1, max u2 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) M₁ (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_5 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14) (CoeTCₓ.coe.{max (succ (max u2 u3)) (succ u2), max (succ (max u2 u3)) (succ u2)} (ContinuousLinearMap.{u1, u1, max u2 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14) (LinearMap.{u1, u1, max u2 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) M₁ (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_5 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14) (coeBase.{max (succ (max u2 u3)) (succ u2), max (succ (max u2 u3)) (succ u2)} (ContinuousLinearMap.{u1, u1, max u2 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14) (LinearMap.{u1, u1, max u2 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) M₁ (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_5 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14) (ContinuousLinearMap.LinearMap.coe.{u1, u1, max u2 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14)))) (ContinuousLinearMap.fst.{u1, u2, u3} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)) (LinearMap.fst.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)
but is expected to have type
  forall {R₁ : Type.{u3}} [_inst_1 : Semiring.{u3} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] [_inst_14 : Module.{u3, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u3, u2} R₁ M₂ _inst_1 _inst_9], Eq.{max (succ u1) (succ u2)} (LinearMap.{u3, u3, max u2 u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (Prod.{u1, u2} M₁ M₂) M₁ (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) _inst_5 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14) (ContinuousLinearMap.toLinearMap.{u3, u3, max u1 u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14 (ContinuousLinearMap.fst.{u3, u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)) (LinearMap.fst.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_fst ContinuousLinearMap.coe_fstₓ'. -/
@[simp, norm_cast]
theorem coe_fst [Module R₁ M₂] : ↑(fst R₁ M₁ M₂) = LinearMap.fst R₁ M₁ M₂ :=
  rfl
#align continuous_linear_map.coe_fst ContinuousLinearMap.coe_fst

/- warning: continuous_linear_map.coe_fst' -> ContinuousLinearMap.coe_fst' is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9], Eq.{max (succ (max u2 u3)) (succ u2)} ((Prod.{u2, u3} M₁ M₂) -> M₁) (coeFn.{max (succ (max u2 u3)) (succ u2), max (succ (max u2 u3)) (succ u2)} (ContinuousLinearMap.{u1, u1, max u2 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14) (fun (_x : ContinuousLinearMap.{u1, u1, max u2 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14) => (Prod.{u2, u3} M₁ M₂) -> M₁) (ContinuousLinearMap.toFun.{u1, u1, max u2 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14) (ContinuousLinearMap.fst.{u1, u2, u3} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)) (Prod.fst.{u2, u3} M₁ M₂)
but is expected to have type
  forall {R₁ : Type.{u3}} [_inst_1 : Semiring.{u3} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] [_inst_14 : Module.{u3, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u3, u2} R₁ M₂ _inst_1 _inst_9], Eq.{max (succ u1) (succ u2)} (forall (ᾰ : Prod.{u1, u2} M₁ M₂), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Prod.{u1, u2} M₁ M₂) => M₁) ᾰ) (FunLike.coe.{max (succ u1) (succ u2), max (succ u1) (succ u2), succ u1} (ContinuousLinearMap.{u3, u3, max u2 u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14) (Prod.{u1, u2} M₁ M₂) (fun (_x : Prod.{u1, u2} M₁ M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Prod.{u1, u2} M₁ M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u1 u2, max u1 u2, u1} (ContinuousLinearMap.{u3, u3, max u2 u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14) (Prod.{u1, u2} M₁ M₂) M₁ (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u2, u3, u3, max u1 u2, u1} (ContinuousLinearMap.{u3, u3, max u2 u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, max u1 u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14))) (ContinuousLinearMap.fst.{u3, u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)) (Prod.fst.{u1, u2} M₁ M₂)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_fst' ContinuousLinearMap.coe_fst'ₓ'. -/
@[simp, norm_cast]
theorem coe_fst' [Module R₁ M₂] : ⇑(fst R₁ M₁ M₂) = Prod.fst :=
  rfl
#align continuous_linear_map.coe_fst' ContinuousLinearMap.coe_fst'

/- warning: continuous_linear_map.coe_snd -> ContinuousLinearMap.coe_snd is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9], Eq.{max (succ (max u2 u3)) (succ u3)} (LinearMap.{u1, u1, max u2 u3, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) M₂ (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_9 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19) ((fun (a : Sort.{max (succ (max u2 u3)) (succ u3)}) (b : Sort.{max (succ (max u2 u3)) (succ u3)}) [self : HasLiftT.{max (succ (max u2 u3)) (succ u3), max (succ (max u2 u3)) (succ u3)} a b] => self.0) (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₂ _inst_8 _inst_9 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19) (LinearMap.{u1, u1, max u2 u3, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) M₂ (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_9 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19) (HasLiftT.mk.{max (succ (max u2 u3)) (succ u3), max (succ (max u2 u3)) (succ u3)} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₂ _inst_8 _inst_9 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19) (LinearMap.{u1, u1, max u2 u3, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) M₂ (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_9 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19) (CoeTCₓ.coe.{max (succ (max u2 u3)) (succ u3), max (succ (max u2 u3)) (succ u3)} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₂ _inst_8 _inst_9 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19) (LinearMap.{u1, u1, max u2 u3, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) M₂ (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_9 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19) (coeBase.{max (succ (max u2 u3)) (succ u3), max (succ (max u2 u3)) (succ u3)} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₂ _inst_8 _inst_9 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19) (LinearMap.{u1, u1, max u2 u3, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) M₂ (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_9 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19) (ContinuousLinearMap.LinearMap.coe.{u1, u1, max u2 u3, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₂ _inst_8 _inst_9 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19)))) (ContinuousLinearMap.snd.{u1, u2, u3} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)) (LinearMap.snd.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)
but is expected to have type
  forall {R₁ : Type.{u3}} [_inst_1 : Semiring.{u3} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] [_inst_14 : Module.{u3, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u3, u2} R₁ M₂ _inst_1 _inst_9], Eq.{max (succ u1) (succ u2)} (LinearMap.{u3, u3, max u2 u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (Prod.{u1, u2} M₁ M₂) M₂ (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) _inst_9 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19) (ContinuousLinearMap.toLinearMap.{u3, u3, max u1 u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) M₂ _inst_8 _inst_9 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19 (ContinuousLinearMap.snd.{u3, u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)) (LinearMap.snd.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_snd ContinuousLinearMap.coe_sndₓ'. -/
@[simp, norm_cast]
theorem coe_snd [Module R₁ M₂] : ↑(snd R₁ M₁ M₂) = LinearMap.snd R₁ M₁ M₂ :=
  rfl
#align continuous_linear_map.coe_snd ContinuousLinearMap.coe_snd

/- warning: continuous_linear_map.coe_snd' -> ContinuousLinearMap.coe_snd' is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9], Eq.{max (succ (max u2 u3)) (succ u3)} ((Prod.{u2, u3} M₁ M₂) -> M₂) (coeFn.{max (succ (max u2 u3)) (succ u3), max (succ (max u2 u3)) (succ u3)} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₂ _inst_8 _inst_9 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19) (fun (_x : ContinuousLinearMap.{u1, u1, max u2 u3, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₂ _inst_8 _inst_9 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19) => (Prod.{u2, u3} M₁ M₂) -> M₂) (ContinuousLinearMap.toFun.{u1, u1, max u2 u3, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₂ _inst_8 _inst_9 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19) (ContinuousLinearMap.snd.{u1, u2, u3} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)) (Prod.snd.{u2, u3} M₁ M₂)
but is expected to have type
  forall {R₁ : Type.{u3}} [_inst_1 : Semiring.{u3} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] [_inst_14 : Module.{u3, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u3, u2} R₁ M₂ _inst_1 _inst_9], Eq.{max (succ u1) (succ u2)} (forall (ᾰ : Prod.{u1, u2} M₁ M₂), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Prod.{u1, u2} M₁ M₂) => M₂) ᾰ) (FunLike.coe.{max (succ u1) (succ u2), max (succ u1) (succ u2), succ u2} (ContinuousLinearMap.{u3, u3, max u2 u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) M₂ _inst_8 _inst_9 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19) (Prod.{u1, u2} M₁ M₂) (fun (_x : Prod.{u1, u2} M₁ M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Prod.{u1, u2} M₁ M₂) => M₂) _x) (ContinuousMapClass.toFunLike.{max u1 u2, max u1 u2, u2} (ContinuousLinearMap.{u3, u3, max u2 u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) M₂ _inst_8 _inst_9 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19) (Prod.{u1, u2} M₁ M₂) M₂ (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u2, u3, u3, max u1 u2, u2} (ContinuousLinearMap.{u3, u3, max u2 u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) M₂ _inst_8 _inst_9 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) M₂ _inst_8 _inst_9 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, max u1 u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) M₂ _inst_8 _inst_9 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_19))) (ContinuousLinearMap.snd.{u3, u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)) (Prod.snd.{u1, u2} M₁ M₂)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_snd' ContinuousLinearMap.coe_snd'ₓ'. -/
@[simp, norm_cast]
theorem coe_snd' [Module R₁ M₂] : ⇑(snd R₁ M₁ M₂) = Prod.snd :=
  rfl
#align continuous_linear_map.coe_snd' ContinuousLinearMap.coe_snd'

/- warning: continuous_linear_map.fst_prod_snd -> ContinuousLinearMap.fst_prod_snd is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9], Eq.{succ (max u2 u3)} (ContinuousLinearMap.{u1, u1, max u2 u3, max u2 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (ContinuousLinearMap.prod.{u1, max u2 u3, u2, u3} R₁ _inst_1 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14 _inst_19 (ContinuousLinearMap.fst.{u1, u2, u3} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (ContinuousLinearMap.snd.{u1, u2, u3} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)) (ContinuousLinearMap.id.{u1, max u2 u3} R₁ _inst_1 (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19))
but is expected to have type
  forall {R₁ : Type.{u3}} [_inst_1 : Semiring.{u3} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] [_inst_14 : Module.{u3, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u3, u2} R₁ M₂ _inst_1 _inst_9], Eq.{max (succ u1) (succ u2)} (ContinuousLinearMap.{u3, u3, max u1 u2, max u2 u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19)) (ContinuousLinearMap.prod.{u3, max u1 u2, u1, u2} R₁ _inst_1 (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_14 _inst_19 (ContinuousLinearMap.fst.{u3, u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (ContinuousLinearMap.snd.{u3, u1, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)) (ContinuousLinearMap.id.{u3, max u2 u1} R₁ _inst_1 (Prod.{u1, u2} M₁ M₂) (instTopologicalSpaceProd.{u1, u2} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u2} M₁ M₂ _inst_5 _inst_9) (Prod.module.{u3, u1, u2} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.fst_prod_snd ContinuousLinearMap.fst_prod_sndₓ'. -/
@[simp]
theorem fst_prod_snd [Module R₁ M₂] : (fst R₁ M₁ M₂).Prod (snd R₁ M₁ M₂) = id R₁ (M₁ × M₂) :=
  ext fun ⟨x, y⟩ => rfl
#align continuous_linear_map.fst_prod_snd ContinuousLinearMap.fst_prod_snd

/- warning: continuous_linear_map.fst_comp_prod -> ContinuousLinearMap.fst_comp_prod is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_10 : TopologicalSpace.{u4} M₃] [_inst_11 : AddCommMonoid.{u4} M₃] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_11] (f : ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (g : ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20), Eq.{max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (ContinuousLinearMap.comp.{u1, u1, u1, u2, max u3 u4, u3} R₁ R₁ R₁ _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_8 _inst_10) (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) M₂ _inst_8 _inst_9 _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20) _inst_19 (RingHomCompTriple.right_ids.{u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (ContinuousLinearMap.fst.{u1, u3, u4} R₁ _inst_1 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) (ContinuousLinearMap.prod.{u1, u2, u3, u4} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_19 _inst_20 f g)) f
but is expected to have type
  forall {R₁ : Type.{u4}} [_inst_1 : Semiring.{u4} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u2}} [_inst_10 : TopologicalSpace.{u2} M₃] [_inst_11 : AddCommMonoid.{u2} M₃] [_inst_14 : Module.{u4, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u4, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u4, u2} R₁ M₃ _inst_1 _inst_11] (f : ContinuousLinearMap.{u4, u4, u1, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (g : ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20), Eq.{max (succ u1) (succ u3)} (ContinuousLinearMap.{u4, u4, u1, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (ContinuousLinearMap.comp.{u4, u4, u4, u1, max u3 u2, u3} R₁ R₁ R₁ _inst_1 _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u2} M₂ M₃) (instTopologicalSpaceProd.{u3, u2} M₂ M₃ _inst_8 _inst_10) (Prod.instAddCommMonoidSum.{u3, u2} M₂ M₃ _inst_9 _inst_11) M₂ _inst_8 _inst_9 _inst_14 (Prod.module.{u4, u3, u2} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20) _inst_19 (RingHomCompTriple.ids.{u4, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1))) (ContinuousLinearMap.fst.{u4, u3, u2} R₁ _inst_1 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) (ContinuousLinearMap.prod.{u4, u1, u3, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_19 _inst_20 f g)) f
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.fst_comp_prod ContinuousLinearMap.fst_comp_prodₓ'. -/
@[simp]
theorem fst_comp_prod [Module R₁ M₂] [Module R₁ M₃] (f : M₁ →L[R₁] M₂) (g : M₁ →L[R₁] M₃) :
    (fst R₁ M₂ M₃).comp (f.Prod g) = f :=
  ext fun x => rfl
#align continuous_linear_map.fst_comp_prod ContinuousLinearMap.fst_comp_prod

/- warning: continuous_linear_map.snd_comp_prod -> ContinuousLinearMap.snd_comp_prod is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_10 : TopologicalSpace.{u4} M₃] [_inst_11 : AddCommMonoid.{u4} M₃] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_11] (f : ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (g : ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20), Eq.{max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (ContinuousLinearMap.comp.{u1, u1, u1, u2, max u3 u4, u4} R₁ R₁ R₁ _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_8 _inst_10) (Prod.addCommMonoid.{u3, u4} M₂ M₃ _inst_9 _inst_11) M₃ _inst_10 _inst_11 _inst_14 (Prod.module.{u1, u3, u4} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20) _inst_20 (RingHomCompTriple.right_ids.{u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (ContinuousLinearMap.snd.{u1, u3, u4} R₁ _inst_1 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) (ContinuousLinearMap.prod.{u1, u2, u3, u4} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_19 _inst_20 f g)) g
but is expected to have type
  forall {R₁ : Type.{u4}} [_inst_1 : Semiring.{u4} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u2}} [_inst_10 : TopologicalSpace.{u2} M₃] [_inst_11 : AddCommMonoid.{u2} M₃] [_inst_14 : Module.{u4, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u4, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u4, u2} R₁ M₃ _inst_1 _inst_11] (f : ContinuousLinearMap.{u4, u4, u1, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (g : ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20), Eq.{max (succ u1) (succ u2)} (ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (ContinuousLinearMap.comp.{u4, u4, u4, u1, max u3 u2, u2} R₁ R₁ R₁ _inst_1 _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 (Prod.{u3, u2} M₂ M₃) (instTopologicalSpaceProd.{u3, u2} M₂ M₃ _inst_8 _inst_10) (Prod.instAddCommMonoidSum.{u3, u2} M₂ M₃ _inst_9 _inst_11) M₃ _inst_10 _inst_11 _inst_14 (Prod.module.{u4, u3, u2} R₁ M₂ M₃ _inst_1 _inst_9 _inst_11 _inst_19 _inst_20) _inst_20 (RingHomCompTriple.ids.{u4, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1))) (ContinuousLinearMap.snd.{u4, u3, u2} R₁ _inst_1 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) (ContinuousLinearMap.prod.{u4, u1, u3, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_19 _inst_20 f g)) g
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.snd_comp_prod ContinuousLinearMap.snd_comp_prodₓ'. -/
@[simp]
theorem snd_comp_prod [Module R₁ M₂] [Module R₁ M₃] (f : M₁ →L[R₁] M₂) (g : M₁ →L[R₁] M₃) :
    (snd R₁ M₂ M₃).comp (f.Prod g) = g :=
  ext fun x => rfl
#align continuous_linear_map.snd_comp_prod ContinuousLinearMap.snd_comp_prod

/- warning: continuous_linear_map.prod_map -> ContinuousLinearMap.prodMap is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_10 : TopologicalSpace.{u4} M₃] [_inst_11 : AddCommMonoid.{u4} M₃] {M₄ : Type.{u5}} [_inst_12 : TopologicalSpace.{u5} M₄] [_inst_13 : AddCommMonoid.{u5} M₄] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_11] [_inst_21 : Module.{u1, u5} R₁ M₄ _inst_1 _inst_13], (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) -> (ContinuousLinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21) -> (ContinuousLinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_4 _inst_10) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_5 _inst_11) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_8 _inst_12) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21))
but is expected to have type
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_10 : TopologicalSpace.{u4} M₃] [_inst_11 : AddCommMonoid.{u4} M₃] {M₄ : Type.{u5}} [_inst_12 : TopologicalSpace.{u5} M₄] [_inst_13 : AddCommMonoid.{u5} M₄] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_11] [_inst_21 : Module.{u1, u5} R₁ M₄ _inst_1 _inst_13], (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) -> (ContinuousLinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21) -> (ContinuousLinearMap.{u1, u1, max u4 u2, max u5 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (instTopologicalSpaceProd.{u2, u4} M₁ M₃ _inst_4 _inst_10) (Prod.instAddCommMonoidSum.{u2, u4} M₁ M₃ _inst_5 _inst_11) (Prod.{u3, u5} M₂ M₄) (instTopologicalSpaceProd.{u3, u5} M₂ M₄ _inst_8 _inst_12) (Prod.instAddCommMonoidSum.{u3, u5} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.prod_map ContinuousLinearMap.prodMapₓ'. -/
/-- `prod.map` of two continuous linear maps. -/
def prodMap [Module R₁ M₂] [Module R₁ M₃] [Module R₁ M₄] (f₁ : M₁ →L[R₁] M₂) (f₂ : M₃ →L[R₁] M₄) :
    M₁ × M₃ →L[R₁] M₂ × M₄ :=
  (f₁.comp (fst R₁ M₁ M₃)).Prod (f₂.comp (snd R₁ M₁ M₃))
#align continuous_linear_map.prod_map ContinuousLinearMap.prodMap

/- warning: continuous_linear_map.coe_prod_map -> ContinuousLinearMap.coe_prodMap is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_10 : TopologicalSpace.{u4} M₃] [_inst_11 : AddCommMonoid.{u4} M₃] {M₄ : Type.{u5}} [_inst_12 : TopologicalSpace.{u5} M₄] [_inst_13 : AddCommMonoid.{u5} M₄] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_11] [_inst_21 : Module.{u1, u5} R₁ M₄ _inst_1 _inst_13] (f₁ : ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (f₂ : ContinuousLinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21), Eq.{max (succ (max u2 u4)) (succ (max u3 u5))} (LinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.{u3, u5} M₂ M₄) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_5 _inst_11) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)) ((fun (a : Sort.{max (succ (max u2 u4)) (succ (max u3 u5))}) (b : Sort.{max (succ (max u2 u4)) (succ (max u3 u5))}) [self : HasLiftT.{max (succ (max u2 u4)) (succ (max u3 u5)), max (succ (max u2 u4)) (succ (max u3 u5))} a b] => self.0) (ContinuousLinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_4 _inst_10) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_5 _inst_11) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_8 _inst_12) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)) (LinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.{u3, u5} M₂ M₄) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_5 _inst_11) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)) (HasLiftT.mk.{max (succ (max u2 u4)) (succ (max u3 u5)), max (succ (max u2 u4)) (succ (max u3 u5))} (ContinuousLinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_4 _inst_10) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_5 _inst_11) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_8 _inst_12) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)) (LinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.{u3, u5} M₂ M₄) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_5 _inst_11) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)) (CoeTCₓ.coe.{max (succ (max u2 u4)) (succ (max u3 u5)), max (succ (max u2 u4)) (succ (max u3 u5))} (ContinuousLinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_4 _inst_10) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_5 _inst_11) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_8 _inst_12) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)) (LinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.{u3, u5} M₂ M₄) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_5 _inst_11) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)) (coeBase.{max (succ (max u2 u4)) (succ (max u3 u5)), max (succ (max u2 u4)) (succ (max u3 u5))} (ContinuousLinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_4 _inst_10) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_5 _inst_11) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_8 _inst_12) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)) (LinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.{u3, u5} M₂ M₄) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_5 _inst_11) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)) (ContinuousLinearMap.LinearMap.coe.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_4 _inst_10) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_5 _inst_11) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_8 _inst_12) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21))))) (ContinuousLinearMap.prodMap.{u1, u2, u3, u4, u5} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_14 _inst_19 _inst_20 _inst_21 f₁ f₂)) (LinearMap.prodMap.{u1, u2, u4, u3, u5} R₁ M₁ M₃ M₂ M₄ _inst_1 _inst_5 _inst_11 _inst_9 _inst_13 _inst_14 _inst_20 _inst_19 _inst_21 ((fun (a : Sort.{max (succ u2) (succ u3)}) (b : Sort.{max (succ u2) (succ u3)}) [self : HasLiftT.{max (succ u2) (succ u3), max (succ u2) (succ u3)} a b] => self.0) (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (LinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_19) (HasLiftT.mk.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (LinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_19) (CoeTCₓ.coe.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (LinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_19) (coeBase.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (LinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₂ _inst_5 _inst_9 _inst_14 _inst_19) (ContinuousLinearMap.LinearMap.coe.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19)))) f₁) ((fun (a : Sort.{max (succ u4) (succ u5)}) (b : Sort.{max (succ u4) (succ u5)}) [self : HasLiftT.{max (succ u4) (succ u5), max (succ u4) (succ u5)} a b] => self.0) (ContinuousLinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21) (LinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ M₄ _inst_11 _inst_13 _inst_20 _inst_21) (HasLiftT.mk.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21) (LinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ M₄ _inst_11 _inst_13 _inst_20 _inst_21) (CoeTCₓ.coe.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21) (LinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ M₄ _inst_11 _inst_13 _inst_20 _inst_21) (coeBase.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21) (LinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ M₄ _inst_11 _inst_13 _inst_20 _inst_21) (ContinuousLinearMap.LinearMap.coe.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21)))) f₂))
but is expected to have type
  forall {R₁ : Type.{u5}} [_inst_1 : Semiring.{u5} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] {M₃ : Type.{u3}} [_inst_10 : TopologicalSpace.{u3} M₃] [_inst_11 : AddCommMonoid.{u3} M₃] {M₄ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₄] [_inst_13 : AddCommMonoid.{u2} M₄] [_inst_14 : Module.{u5, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u5, u4} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u5, u3} R₁ M₃ _inst_1 _inst_11] [_inst_21 : Module.{u5, u2} R₁ M₄ _inst_1 _inst_13] (f₁ : ContinuousLinearMap.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (f₂ : ContinuousLinearMap.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21), Eq.{max (max (max (succ u1) (succ u4)) (succ u3)) (succ u2)} (LinearMap.{u5, u5, max u3 u1, max u2 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₃) (Prod.{u4, u2} M₂ M₄) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_5 _inst_11) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)) (ContinuousLinearMap.toLinearMap.{u5, u5, max u1 u3, max u4 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_4 _inst_10) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_5 _inst_11) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_8 _inst_12) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21) (ContinuousLinearMap.prodMap.{u5, u1, u4, u3, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_14 _inst_19 _inst_20 _inst_21 f₁ f₂)) (LinearMap.prodMap.{u5, u1, u3, u4, u2} R₁ M₁ M₃ M₂ M₄ _inst_1 _inst_5 _inst_11 _inst_9 _inst_13 _inst_14 _inst_20 _inst_19 _inst_21 (ContinuousLinearMap.toLinearMap.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19 f₁) (ContinuousLinearMap.toLinearMap.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21 f₂))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_prod_map ContinuousLinearMap.coe_prodMapₓ'. -/
@[simp, norm_cast]
theorem coe_prodMap [Module R₁ M₂] [Module R₁ M₃] [Module R₁ M₄] (f₁ : M₁ →L[R₁] M₂)
    (f₂ : M₃ →L[R₁] M₄) : ↑(f₁.Prod_map f₂) = (f₁ : M₁ →ₗ[R₁] M₂).Prod_map (f₂ : M₃ →ₗ[R₁] M₄) :=
  rfl
#align continuous_linear_map.coe_prod_map ContinuousLinearMap.coe_prodMap

/- warning: continuous_linear_map.coe_prod_map' -> ContinuousLinearMap.coe_prodMap' is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_10 : TopologicalSpace.{u4} M₃] [_inst_11 : AddCommMonoid.{u4} M₃] {M₄ : Type.{u5}} [_inst_12 : TopologicalSpace.{u5} M₄] [_inst_13 : AddCommMonoid.{u5} M₄] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_11] [_inst_21 : Module.{u1, u5} R₁ M₄ _inst_1 _inst_13] (f₁ : ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (f₂ : ContinuousLinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21), Eq.{max (succ (max u2 u4)) (succ (max u3 u5))} ((Prod.{u2, u4} M₁ M₃) -> (Prod.{u3, u5} M₂ M₄)) (coeFn.{max (succ (max u2 u4)) (succ (max u3 u5)), max (succ (max u2 u4)) (succ (max u3 u5))} (ContinuousLinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_4 _inst_10) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_5 _inst_11) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_8 _inst_12) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)) (fun (_x : ContinuousLinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_4 _inst_10) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_5 _inst_11) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_8 _inst_12) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)) => (Prod.{u2, u4} M₁ M₃) -> (Prod.{u3, u5} M₂ M₄)) (ContinuousLinearMap.toFun.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_4 _inst_10) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_5 _inst_11) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_8 _inst_12) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)) (ContinuousLinearMap.prodMap.{u1, u2, u3, u4, u5} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_14 _inst_19 _inst_20 _inst_21 f₁ f₂)) (Prod.map.{u2, u3, u4, u5} M₁ M₂ M₃ M₄ (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) f₁) (coeFn.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21) (fun (_x : ContinuousLinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21) => M₃ -> M₄) (ContinuousLinearMap.toFun.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21) f₂))
but is expected to have type
  forall {R₁ : Type.{u5}} [_inst_1 : Semiring.{u5} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₂] [_inst_9 : AddCommMonoid.{u4} M₂] {M₃ : Type.{u3}} [_inst_10 : TopologicalSpace.{u3} M₃] [_inst_11 : AddCommMonoid.{u3} M₃] {M₄ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₄] [_inst_13 : AddCommMonoid.{u2} M₄] [_inst_14 : Module.{u5, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u5, u4} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u5, u3} R₁ M₃ _inst_1 _inst_11] [_inst_21 : Module.{u5, u2} R₁ M₄ _inst_1 _inst_13] (f₁ : ContinuousLinearMap.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) (f₂ : ContinuousLinearMap.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21), Eq.{max (max (max (succ u1) (succ u4)) (succ u3)) (succ u2)} (forall (ᾰ : Prod.{u1, u3} M₁ M₃), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Prod.{u1, u3} M₁ M₃) => Prod.{u4, u2} M₂ M₄) ᾰ) (FunLike.coe.{max (max (max (succ u1) (succ u4)) (succ u3)) (succ u2), max (succ u1) (succ u3), max (succ u4) (succ u2)} (ContinuousLinearMap.{u5, u5, max u3 u1, max u2 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_4 _inst_10) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_5 _inst_11) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_8 _inst_12) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)) (Prod.{u1, u3} M₁ M₃) (fun (_x : Prod.{u1, u3} M₁ M₃) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Prod.{u1, u3} M₁ M₃) => Prod.{u4, u2} M₂ M₄) _x) (ContinuousMapClass.toFunLike.{max (max (max u1 u4) u3) u2, max u1 u3, max u4 u2} (ContinuousLinearMap.{u5, u5, max u3 u1, max u2 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_4 _inst_10) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_5 _inst_11) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_8 _inst_12) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)) (Prod.{u1, u3} M₁ M₃) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_4 _inst_10) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_8 _inst_12) (ContinuousSemilinearMapClass.toContinuousMapClass.{max (max (max u1 u4) u3) u2, u5, u5, max u1 u3, max u4 u2} (ContinuousLinearMap.{u5, u5, max u3 u1, max u2 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_4 _inst_10) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_5 _inst_11) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_8 _inst_12) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_4 _inst_10) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_5 _inst_11) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_8 _inst_12) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21) (ContinuousLinearMap.continuousSemilinearMapClass.{u5, u5, max u1 u3, max u4 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_4 _inst_10) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_5 _inst_11) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_8 _inst_12) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_9 _inst_13) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_5 _inst_11 _inst_14 _inst_20) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_9 _inst_13 _inst_19 _inst_21)))) (ContinuousLinearMap.prodMap.{u5, u1, u4, u3, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_14 _inst_19 _inst_20 _inst_21 f₁ f₂)) (Prod.map.{u1, u4, u3, u2} M₁ M₂ M₃ M₄ (FunLike.coe.{max (succ u1) (succ u4), succ u1, succ u4} (ContinuousLinearMap.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u1 u4, u1, u4} (ContinuousLinearMap.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u4, u5, u5, u1, u4} (ContinuousLinearMap.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19 (ContinuousLinearMap.continuousSemilinearMapClass.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_14 _inst_19))) f₁) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearMap.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21) M₃ (fun (_x : M₃) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₃) => M₄) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearMap.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21) M₃ M₄ _inst_10 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u5, u5, u3, u2} (ContinuousLinearMap.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21 (ContinuousLinearMap.continuousSemilinearMapClass.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₃ _inst_10 _inst_11 M₄ _inst_12 _inst_13 _inst_20 _inst_21))) f₂))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_prod_map' ContinuousLinearMap.coe_prodMap'ₓ'. -/
@[simp, norm_cast]
theorem coe_prodMap' [Module R₁ M₂] [Module R₁ M₃] [Module R₁ M₄] (f₁ : M₁ →L[R₁] M₂)
    (f₂ : M₃ →L[R₁] M₄) : ⇑(f₁.Prod_map f₂) = Prod.map f₁ f₂ :=
  rfl
#align continuous_linear_map.coe_prod_map' ContinuousLinearMap.coe_prodMap'

/- warning: continuous_linear_map.coprod -> ContinuousLinearMap.coprod is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_10 : TopologicalSpace.{u4} M₃] [_inst_11 : AddCommMonoid.{u4} M₃] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_11] [_inst_21 : ContinuousAdd.{u4} M₃ _inst_10 (AddZeroClass.toHasAdd.{u4} M₃ (AddMonoid.toAddZeroClass.{u4} M₃ (AddCommMonoid.toAddMonoid.{u4} M₃ _inst_11)))], (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) -> (ContinuousLinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) -> (ContinuousLinearMap.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20)
but is expected to have type
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_10 : TopologicalSpace.{u4} M₃] [_inst_11 : AddCommMonoid.{u4} M₃] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_11] [_inst_21 : ContinuousAdd.{u4} M₃ _inst_10 (AddZeroClass.toAdd.{u4} M₃ (AddMonoid.toAddZeroClass.{u4} M₃ (AddCommMonoid.toAddMonoid.{u4} M₃ _inst_11)))], (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) -> (ContinuousLinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) -> (ContinuousLinearMap.{u1, u1, max u3 u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (instTopologicalSpaceProd.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coprod ContinuousLinearMap.coprodₓ'. -/
/-- The continuous linear map given by `(x, y) ↦ f₁ x + f₂ y`. -/
def coprod [Module R₁ M₂] [Module R₁ M₃] [ContinuousAdd M₃] (f₁ : M₁ →L[R₁] M₃)
    (f₂ : M₂ →L[R₁] M₃) : M₁ × M₂ →L[R₁] M₃ :=
  ⟨LinearMap.coprod f₁ f₂, (f₁.cont.comp continuous_fst).add (f₂.cont.comp continuous_snd)⟩
#align continuous_linear_map.coprod ContinuousLinearMap.coprod

/- warning: continuous_linear_map.coe_coprod -> ContinuousLinearMap.coe_coprod is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_10 : TopologicalSpace.{u4} M₃] [_inst_11 : AddCommMonoid.{u4} M₃] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_11] [_inst_21 : ContinuousAdd.{u4} M₃ _inst_10 (AddZeroClass.toHasAdd.{u4} M₃ (AddMonoid.toAddZeroClass.{u4} M₃ (AddCommMonoid.toAddMonoid.{u4} M₃ _inst_11)))] (f₁ : ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (f₂ : ContinuousLinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20), Eq.{max (succ (max u2 u3)) (succ u4)} (LinearMap.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) M₃ (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) ((fun (a : Sort.{max (succ (max u2 u3)) (succ u4)}) (b : Sort.{max (succ (max u2 u3)) (succ u4)}) [self : HasLiftT.{max (succ (max u2 u3)) (succ u4), max (succ (max u2 u3)) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) (LinearMap.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) M₃ (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) (HasLiftT.mk.{max (succ (max u2 u3)) (succ u4), max (succ (max u2 u3)) (succ u4)} (ContinuousLinearMap.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) (LinearMap.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) M₃ (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) (CoeTCₓ.coe.{max (succ (max u2 u3)) (succ u4), max (succ (max u2 u3)) (succ u4)} (ContinuousLinearMap.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) (LinearMap.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) M₃ (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) (coeBase.{max (succ (max u2 u3)) (succ u4), max (succ (max u2 u3)) (succ u4)} (ContinuousLinearMap.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) (LinearMap.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) M₃ (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) (ContinuousLinearMap.LinearMap.coe.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20)))) (ContinuousLinearMap.coprod.{u1, u2, u3, u4} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_19 _inst_20 _inst_21 f₁ f₂)) (LinearMap.coprod.{u1, u2, u3, u4} R₁ M₁ M₂ M₃ _inst_1 _inst_5 _inst_9 _inst_11 _inst_14 _inst_19 _inst_20 ((fun (a : Sort.{max (succ u2) (succ u4)}) (b : Sort.{max (succ u2) (succ u4)}) [self : HasLiftT.{max (succ u2) (succ u4), max (succ u2) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (LinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₃ _inst_5 _inst_11 _inst_14 _inst_20) (HasLiftT.mk.{max (succ u2) (succ u4), max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (LinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₃ _inst_5 _inst_11 _inst_14 _inst_20) (CoeTCₓ.coe.{max (succ u2) (succ u4), max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (LinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₃ _inst_5 _inst_11 _inst_14 _inst_20) (coeBase.{max (succ u2) (succ u4), max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (LinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ M₃ _inst_5 _inst_11 _inst_14 _inst_20) (ContinuousLinearMap.LinearMap.coe.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20)))) f₁) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) (LinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ M₃ _inst_9 _inst_11 _inst_19 _inst_20) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) (LinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ M₃ _inst_9 _inst_11 _inst_19 _inst_20) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) (LinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ M₃ _inst_9 _inst_11 _inst_19 _inst_20) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) (LinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ M₃ _inst_9 _inst_11 _inst_19 _inst_20) (ContinuousLinearMap.LinearMap.coe.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20)))) f₂))
but is expected to have type
  forall {R₁ : Type.{u4}} [_inst_1 : Semiring.{u4} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u2}} [_inst_10 : TopologicalSpace.{u2} M₃] [_inst_11 : AddCommMonoid.{u2} M₃] [_inst_14 : Module.{u4, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u4, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u4, u2} R₁ M₃ _inst_1 _inst_11] [_inst_21 : ContinuousAdd.{u2} M₃ _inst_10 (AddZeroClass.toAdd.{u2} M₃ (AddMonoid.toAddZeroClass.{u2} M₃ (AddCommMonoid.toAddMonoid.{u2} M₃ _inst_11)))] (f₁ : ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (f₂ : ContinuousLinearMap.{u4, u4, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20), Eq.{max (max (succ u1) (succ u3)) (succ u2)} (LinearMap.{u4, u4, max u1 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₂) M₃ (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₂ _inst_5 _inst_9) _inst_11 (Prod.module.{u4, u1, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) (ContinuousLinearMap.toLinearMap.{u4, u4, max u1 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₂) (instTopologicalSpaceProd.{u1, u3} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u4, u1, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20 (ContinuousLinearMap.coprod.{u4, u1, u3, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_19 _inst_20 _inst_21 f₁ f₂)) (LinearMap.coprod.{u4, u1, u3, u2} R₁ M₁ M₂ M₃ _inst_1 _inst_5 _inst_9 _inst_11 _inst_14 _inst_19 _inst_20 (ContinuousLinearMap.toLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20 f₁) (ContinuousLinearMap.toLinearMap.{u4, u4, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20 f₂))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_coprod ContinuousLinearMap.coe_coprodₓ'. -/
@[norm_cast, simp]
theorem coe_coprod [Module R₁ M₂] [Module R₁ M₃] [ContinuousAdd M₃] (f₁ : M₁ →L[R₁] M₃)
    (f₂ : M₂ →L[R₁] M₃) : (f₁.coprod f₂ : M₁ × M₂ →ₗ[R₁] M₃) = LinearMap.coprod f₁ f₂ :=
  rfl
#align continuous_linear_map.coe_coprod ContinuousLinearMap.coe_coprod

/- warning: continuous_linear_map.coprod_apply -> ContinuousLinearMap.coprod_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_10 : TopologicalSpace.{u4} M₃] [_inst_11 : AddCommMonoid.{u4} M₃] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_11] [_inst_21 : ContinuousAdd.{u4} M₃ _inst_10 (AddZeroClass.toHasAdd.{u4} M₃ (AddMonoid.toAddZeroClass.{u4} M₃ (AddCommMonoid.toAddMonoid.{u4} M₃ _inst_11)))] (f₁ : ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (f₂ : ContinuousLinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) (x : Prod.{u2, u3} M₁ M₂), Eq.{succ u4} M₃ (coeFn.{max (succ (max u2 u3)) (succ u4), max (succ (max u2 u3)) (succ u4)} (ContinuousLinearMap.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) (fun (_x : ContinuousLinearMap.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) => (Prod.{u2, u3} M₁ M₂) -> M₃) (ContinuousLinearMap.toFun.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) (ContinuousLinearMap.coprod.{u1, u2, u3, u4} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_19 _inst_20 _inst_21 f₁ f₂) x) (HAdd.hAdd.{u4, u4, u4} M₃ M₃ M₃ (instHAdd.{u4} M₃ (AddZeroClass.toHasAdd.{u4} M₃ (AddMonoid.toAddZeroClass.{u4} M₃ (AddCommMonoid.toAddMonoid.{u4} M₃ _inst_11)))) (coeFn.{max (succ u2) (succ u4), max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) => M₁ -> M₃) (ContinuousLinearMap.toFun.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) f₁ (Prod.fst.{u2, u3} M₁ M₂ x)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) => M₂ -> M₃) (ContinuousLinearMap.toFun.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) f₂ (Prod.snd.{u2, u3} M₁ M₂ x)))
but is expected to have type
  forall {R₁ : Type.{u4}} [_inst_1 : Semiring.{u4} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u2}} [_inst_10 : TopologicalSpace.{u2} M₃] [_inst_11 : AddCommMonoid.{u2} M₃] [_inst_14 : Module.{u4, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u4, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u4, u2} R₁ M₃ _inst_1 _inst_11] [_inst_21 : ContinuousAdd.{u2} M₃ _inst_10 (AddZeroClass.toAdd.{u2} M₃ (AddMonoid.toAddZeroClass.{u2} M₃ (AddCommMonoid.toAddMonoid.{u2} M₃ _inst_11)))] (f₁ : ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (f₂ : ContinuousLinearMap.{u4, u4, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) (x : Prod.{u1, u3} M₁ M₂), Eq.{succ u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Prod.{u1, u3} M₁ M₂) => M₃) x) (FunLike.coe.{max (max (succ u1) (succ u3)) (succ u2), max (succ u1) (succ u3), succ u2} (ContinuousLinearMap.{u4, u4, max u3 u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₂) (instTopologicalSpaceProd.{u1, u3} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u4, u1, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) (Prod.{u1, u3} M₁ M₂) (fun (_x : Prod.{u1, u3} M₁ M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Prod.{u1, u3} M₁ M₂) => M₃) _x) (ContinuousMapClass.toFunLike.{max (max u1 u3) u2, max u1 u3, u2} (ContinuousLinearMap.{u4, u4, max u3 u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₂) (instTopologicalSpaceProd.{u1, u3} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u4, u1, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) (Prod.{u1, u3} M₁ M₂) M₃ (instTopologicalSpaceProd.{u1, u3} M₁ M₂ _inst_4 _inst_8) _inst_10 (ContinuousSemilinearMapClass.toContinuousMapClass.{max (max u1 u3) u2, u4, u4, max u1 u3, u2} (ContinuousLinearMap.{u4, u4, max u3 u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₂) (instTopologicalSpaceProd.{u1, u3} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u4, u1, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₂) (instTopologicalSpaceProd.{u1, u3} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u4, u1, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, max u1 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₂) (instTopologicalSpaceProd.{u1, u3} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u4, u1, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20))) (ContinuousLinearMap.coprod.{u4, u1, u3, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_19 _inst_20 _inst_21 f₁ f₂) x) (HAdd.hAdd.{u2, u2, u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) (Prod.fst.{u1, u3} M₁ M₂ x)) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₃) (Prod.snd.{u1, u3} M₁ M₂ x)) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) (Prod.fst.{u1, u3} M₁ M₂ x)) (instHAdd.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) (Prod.fst.{u1, u3} M₁ M₂ x)) (AddZeroClass.toAdd.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) (Prod.fst.{u1, u3} M₁ M₂ x)) (AddMonoid.toAddZeroClass.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) (Prod.fst.{u1, u3} M₁ M₂ x)) (AddCommMonoid.toAddMonoid.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) (Prod.fst.{u1, u3} M₁ M₂ x)) _inst_11)))) (FunLike.coe.{max (succ u1) (succ u2), succ u1, succ u2} (ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) _x) (ContinuousMapClass.toFunLike.{max u1 u2, u1, u2} (ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) M₁ M₃ _inst_4 _inst_10 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u2, u4, u4, u1, u2} (ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20))) f₁ (Prod.fst.{u1, u3} M₁ M₂ x)) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearMap.{u4, u4, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₃) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearMap.{u4, u4, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) M₂ M₃ _inst_8 _inst_10 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u4, u4, u3, u2} (ContinuousLinearMap.{u4, u4, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20))) f₂ (Prod.snd.{u1, u3} M₁ M₂ x)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coprod_apply ContinuousLinearMap.coprod_applyₓ'. -/
@[simp]
theorem coprod_apply [Module R₁ M₂] [Module R₁ M₃] [ContinuousAdd M₃] (f₁ : M₁ →L[R₁] M₃)
    (f₂ : M₂ →L[R₁] M₃) (x) : f₁.coprod f₂ x = f₁ x.1 + f₂ x.2 :=
  rfl
#align continuous_linear_map.coprod_apply ContinuousLinearMap.coprod_apply

/- warning: continuous_linear_map.range_coprod -> ContinuousLinearMap.range_coprod is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M₁] [_inst_5 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_10 : TopologicalSpace.{u4} M₃] [_inst_11 : AddCommMonoid.{u4} M₃] [_inst_14 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_11] [_inst_21 : ContinuousAdd.{u4} M₃ _inst_10 (AddZeroClass.toHasAdd.{u4} M₃ (AddMonoid.toAddZeroClass.{u4} M₃ (AddCommMonoid.toAddMonoid.{u4} M₃ _inst_11)))] (f₁ : ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (f₂ : ContinuousLinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20), Eq.{succ u4} (Submodule.{u1, u4} R₁ M₃ _inst_1 _inst_11 _inst_20) (LinearMap.range.{u1, u1, max u2 u3, u4, max (max u2 u3) u4} R₁ R₁ (Prod.{u2, u3} M₁ M₂) M₃ _inst_1 _inst_1 (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (ContinuousLinearMap.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max (max u2 u3) u4, u1, u1, max u2 u3, u4} (ContinuousLinearMap.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, max u2 u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u3} M₁ M₂) (Prod.topologicalSpace.{u2, u3} M₁ M₂ _inst_4 _inst_8) (Prod.addCommMonoid.{u2, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u1, u2, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20)) (RingHomSurjective.ids.{u1} R₁ _inst_1) (ContinuousLinearMap.coprod.{u1, u2, u3, u4} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_19 _inst_20 _inst_21 f₁ f₂)) (Sup.sup.{u4} (Submodule.{u1, u4} R₁ M₃ _inst_1 _inst_11 _inst_20) (SemilatticeSup.toHasSup.{u4} (Submodule.{u1, u4} R₁ M₃ _inst_1 _inst_11 _inst_20) (Lattice.toSemilatticeSup.{u4} (Submodule.{u1, u4} R₁ M₃ _inst_1 _inst_11 _inst_20) (ConditionallyCompleteLattice.toLattice.{u4} (Submodule.{u1, u4} R₁ M₃ _inst_1 _inst_11 _inst_20) (CompleteLattice.toConditionallyCompleteLattice.{u4} (Submodule.{u1, u4} R₁ M₃ _inst_1 _inst_11 _inst_20) (Submodule.completeLattice.{u1, u4} R₁ M₃ _inst_1 _inst_11 _inst_20))))) (LinearMap.range.{u1, u1, u2, u4, max u2 u4} R₁ R₁ M₁ M₃ _inst_1 _inst_1 _inst_5 _inst_11 _inst_14 _inst_20 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u4, u1, u1, u2, u4} (ContinuousLinearMap.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20)) (RingHomSurjective.ids.{u1} R₁ _inst_1) f₁) (LinearMap.range.{u1, u1, u3, u4, max u3 u4} R₁ R₁ M₂ M₃ _inst_1 _inst_1 _inst_9 _inst_11 _inst_19 _inst_20 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (ContinuousLinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u1, u3, u4} (ContinuousLinearMap.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u3, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20)) (RingHomSurjective.ids.{u1} R₁ _inst_1) f₂))
but is expected to have type
  forall {R₁ : Type.{u4}} [_inst_1 : Semiring.{u4} R₁] {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₂] [_inst_9 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u2}} [_inst_10 : TopologicalSpace.{u2} M₃] [_inst_11 : AddCommMonoid.{u2} M₃] [_inst_14 : Module.{u4, u1} R₁ M₁ _inst_1 _inst_5] [_inst_19 : Module.{u4, u3} R₁ M₂ _inst_1 _inst_9] [_inst_20 : Module.{u4, u2} R₁ M₃ _inst_1 _inst_11] [_inst_21 : ContinuousAdd.{u2} M₃ _inst_10 (AddZeroClass.toAdd.{u2} M₃ (AddMonoid.toAddZeroClass.{u2} M₃ (AddCommMonoid.toAddMonoid.{u2} M₃ _inst_11)))] (f₁ : ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (f₂ : ContinuousLinearMap.{u4, u4, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20), Eq.{succ u2} (Submodule.{u4, u2} R₁ M₃ _inst_1 _inst_11 _inst_20) (LinearMap.range.{u4, u4, max u1 u3, u2, max (max u1 u2) u3} R₁ R₁ (Prod.{u1, u3} M₁ M₂) M₃ _inst_1 _inst_1 (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₂ _inst_5 _inst_9) _inst_11 (Prod.module.{u4, u1, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (ContinuousLinearMap.{u4, u4, max u3 u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₂) (instTopologicalSpaceProd.{u1, u3} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u4, u1, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max (max u1 u3) u2, u4, u4, max u1 u3, u2} (ContinuousLinearMap.{u4, u4, max u3 u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₂) (instTopologicalSpaceProd.{u1, u3} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u4, u1, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₂) (instTopologicalSpaceProd.{u1, u3} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u4, u1, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, max u1 u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₂) (instTopologicalSpaceProd.{u1, u3} M₁ M₂ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₂ _inst_5 _inst_9) M₃ _inst_10 _inst_11 (Prod.module.{u4, u1, u3} R₁ M₁ M₂ _inst_1 _inst_5 _inst_9 _inst_14 _inst_19) _inst_20)) (RingHomSurjective.ids.{u4} R₁ _inst_1) (ContinuousLinearMap.coprod.{u4, u1, u3, u2} R₁ _inst_1 M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_14 _inst_19 _inst_20 _inst_21 f₁ f₂)) (Sup.sup.{u2} (Submodule.{u4, u2} R₁ M₃ _inst_1 _inst_11 _inst_20) (SemilatticeSup.toSup.{u2} (Submodule.{u4, u2} R₁ M₃ _inst_1 _inst_11 _inst_20) (Lattice.toSemilatticeSup.{u2} (Submodule.{u4, u2} R₁ M₃ _inst_1 _inst_11 _inst_20) (ConditionallyCompleteLattice.toLattice.{u2} (Submodule.{u4, u2} R₁ M₃ _inst_1 _inst_11 _inst_20) (CompleteLattice.toConditionallyCompleteLattice.{u2} (Submodule.{u4, u2} R₁ M₃ _inst_1 _inst_11 _inst_20) (Submodule.completeLattice.{u4, u2} R₁ M₃ _inst_1 _inst_11 _inst_20))))) (LinearMap.range.{u4, u4, u1, u2, max u1 u2} R₁ R₁ M₁ M₃ _inst_1 _inst_1 _inst_5 _inst_11 _inst_14 _inst_20 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u1 u2, u4, u4, u1, u2} (ContinuousLinearMap.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_4 _inst_5 M₃ _inst_10 _inst_11 _inst_14 _inst_20)) (RingHomSurjective.ids.{u4} R₁ _inst_1) f₁) (LinearMap.range.{u4, u4, u3, u2, max u3 u2} R₁ R₁ M₂ M₃ _inst_1 _inst_1 _inst_9 _inst_11 _inst_19 _inst_20 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (ContinuousLinearMap.{u4, u4, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u2, u4, u4, u3, u2} (ContinuousLinearMap.{u4, u4, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₂ _inst_8 _inst_9 M₃ _inst_10 _inst_11 _inst_19 _inst_20)) (RingHomSurjective.ids.{u4} R₁ _inst_1) f₂))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.range_coprod ContinuousLinearMap.range_coprodₓ'. -/
theorem range_coprod [Module R₁ M₂] [Module R₁ M₃] [ContinuousAdd M₃] (f₁ : M₁ →L[R₁] M₃)
    (f₂ : M₂ →L[R₁] M₃) : range (f₁.coprod f₂) = range f₁ ⊔ range f₂ :=
  LinearMap.range_coprod _ _
#align continuous_linear_map.range_coprod ContinuousLinearMap.range_coprod

section

variable {R S : Type _} [Semiring R] [Semiring S] [Module R M₁] [Module R M₂] [Module R S]
  [Module S M₂] [IsScalarTower R S M₂] [TopologicalSpace S] [ContinuousSMul S M₂]

#print ContinuousLinearMap.smulRight /-
/-- The linear map `λ x, c x • f`.  Associates to a scalar-valued linear map and an element of
`M₂` the `M₂`-valued linear map obtained by multiplying the two (a.k.a. tensoring by `M₂`).
See also `continuous_linear_map.smul_rightₗ` and `continuous_linear_map.smul_rightL`. -/
def smulRight (c : M₁ →L[R] S) (f : M₂) : M₁ →L[R] M₂ :=
  { c.toLinearMap.smul_right f with cont := c.2.smul continuous_const }
#align continuous_linear_map.smul_right ContinuousLinearMap.smulRight
-/

/- warning: continuous_linear_map.smul_right_apply -> ContinuousLinearMap.smulRight_apply is a dubious translation:
lean 3 declaration is
  forall {M₁ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₁] [_inst_5 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] {R : Type.{u3}} {S : Type.{u4}} [_inst_19 : Semiring.{u3} R] [_inst_20 : Semiring.{u4} S] [_inst_21 : Module.{u3, u1} R M₁ _inst_19 _inst_5] [_inst_22 : Module.{u3, u2} R M₂ _inst_19 _inst_9] [_inst_23 : Module.{u3, u4} R S _inst_19 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u4} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u4} S (Semiring.toNonAssocSemiring.{u4} S _inst_20)))] [_inst_24 : Module.{u4, u2} S M₂ _inst_20 _inst_9] [_inst_25 : IsScalarTower.{u3, u4, u2} R S M₂ (SMulZeroClass.toHasSmul.{u3, u4} R S (AddZeroClass.toHasZero.{u4} S (AddMonoid.toAddZeroClass.{u4} S (AddCommMonoid.toAddMonoid.{u4} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u4} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u4} S (Semiring.toNonAssocSemiring.{u4} S _inst_20)))))) (SMulWithZero.toSmulZeroClass.{u3, u4} R S (MulZeroClass.toHasZero.{u3} R (MulZeroOneClass.toMulZeroClass.{u3} R (MonoidWithZero.toMulZeroOneClass.{u3} R (Semiring.toMonoidWithZero.{u3} R _inst_19)))) (AddZeroClass.toHasZero.{u4} S (AddMonoid.toAddZeroClass.{u4} S (AddCommMonoid.toAddMonoid.{u4} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u4} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u4} S (Semiring.toNonAssocSemiring.{u4} S _inst_20)))))) (MulActionWithZero.toSMulWithZero.{u3, u4} R S (Semiring.toMonoidWithZero.{u3} R _inst_19) (AddZeroClass.toHasZero.{u4} S (AddMonoid.toAddZeroClass.{u4} S (AddCommMonoid.toAddMonoid.{u4} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u4} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u4} S (Semiring.toNonAssocSemiring.{u4} S _inst_20)))))) (Module.toMulActionWithZero.{u3, u4} R S _inst_19 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u4} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u4} S (Semiring.toNonAssocSemiring.{u4} S _inst_20))) _inst_23)))) (SMulZeroClass.toHasSmul.{u4, u2} S M₂ (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (SMulWithZero.toSmulZeroClass.{u4, u2} S M₂ (MulZeroClass.toHasZero.{u4} S (MulZeroOneClass.toMulZeroClass.{u4} S (MonoidWithZero.toMulZeroOneClass.{u4} S (Semiring.toMonoidWithZero.{u4} S _inst_20)))) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (MulActionWithZero.toSMulWithZero.{u4, u2} S M₂ (Semiring.toMonoidWithZero.{u4} S _inst_20) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (Module.toMulActionWithZero.{u4, u2} S M₂ _inst_20 _inst_9 _inst_24)))) (SMulZeroClass.toHasSmul.{u3, u2} R M₂ (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (SMulWithZero.toSmulZeroClass.{u3, u2} R M₂ (MulZeroClass.toHasZero.{u3} R (MulZeroOneClass.toMulZeroClass.{u3} R (MonoidWithZero.toMulZeroOneClass.{u3} R (Semiring.toMonoidWithZero.{u3} R _inst_19)))) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (MulActionWithZero.toSMulWithZero.{u3, u2} R M₂ (Semiring.toMonoidWithZero.{u3} R _inst_19) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (Module.toMulActionWithZero.{u3, u2} R M₂ _inst_19 _inst_9 _inst_22))))] [_inst_26 : TopologicalSpace.{u4} S] [_inst_27 : ContinuousSMul.{u4, u2} S M₂ (SMulZeroClass.toHasSmul.{u4, u2} S M₂ (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (SMulWithZero.toSmulZeroClass.{u4, u2} S M₂ (MulZeroClass.toHasZero.{u4} S (MulZeroOneClass.toMulZeroClass.{u4} S (MonoidWithZero.toMulZeroOneClass.{u4} S (Semiring.toMonoidWithZero.{u4} S _inst_20)))) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (MulActionWithZero.toSMulWithZero.{u4, u2} S M₂ (Semiring.toMonoidWithZero.{u4} S _inst_20) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (Module.toMulActionWithZero.{u4, u2} S M₂ _inst_20 _inst_9 _inst_24)))) _inst_26 _inst_8] {c : ContinuousLinearMap.{u3, u3, u1, u4} R R _inst_19 _inst_19 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_19)) M₁ _inst_4 _inst_5 S _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u4} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u4} S (Semiring.toNonAssocSemiring.{u4} S _inst_20))) _inst_21 _inst_23} {f : M₂} {x : M₁}, Eq.{succ u2} M₂ (coeFn.{max (succ u1) (succ u2), max (succ u1) (succ u2)} (ContinuousLinearMap.{u3, u3, u1, u2} R R _inst_19 _inst_19 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_19)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_21 _inst_22) (fun (_x : ContinuousLinearMap.{u3, u3, u1, u2} R R _inst_19 _inst_19 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_19)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_21 _inst_22) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u3, u3, u1, u2} R R _inst_19 _inst_19 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_19)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_21 _inst_22) (ContinuousLinearMap.smulRight.{u1, u2, u3, u4} M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 R S _inst_19 _inst_20 _inst_21 _inst_22 _inst_23 _inst_24 _inst_25 _inst_26 _inst_27 c f) x) (SMul.smul.{u4, u2} S M₂ (SMulZeroClass.toHasSmul.{u4, u2} S M₂ (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (SMulWithZero.toSmulZeroClass.{u4, u2} S M₂ (MulZeroClass.toHasZero.{u4} S (MulZeroOneClass.toMulZeroClass.{u4} S (MonoidWithZero.toMulZeroOneClass.{u4} S (Semiring.toMonoidWithZero.{u4} S _inst_20)))) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (MulActionWithZero.toSMulWithZero.{u4, u2} S M₂ (Semiring.toMonoidWithZero.{u4} S _inst_20) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (Module.toMulActionWithZero.{u4, u2} S M₂ _inst_20 _inst_9 _inst_24)))) (coeFn.{max (succ u1) (succ u4), max (succ u1) (succ u4)} (ContinuousLinearMap.{u3, u3, u1, u4} R R _inst_19 _inst_19 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_19)) M₁ _inst_4 _inst_5 S _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u4} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u4} S (Semiring.toNonAssocSemiring.{u4} S _inst_20))) _inst_21 _inst_23) (fun (_x : ContinuousLinearMap.{u3, u3, u1, u4} R R _inst_19 _inst_19 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_19)) M₁ _inst_4 _inst_5 S _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u4} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u4} S (Semiring.toNonAssocSemiring.{u4} S _inst_20))) _inst_21 _inst_23) => M₁ -> S) (ContinuousLinearMap.toFun.{u3, u3, u1, u4} R R _inst_19 _inst_19 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_19)) M₁ _inst_4 _inst_5 S _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u4} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u4} S (Semiring.toNonAssocSemiring.{u4} S _inst_20))) _inst_21 _inst_23) c x) f)
but is expected to have type
  forall {M₁ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₁] [_inst_5 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] {R : Type.{u4}} {S : Type.{u2}} [_inst_19 : Semiring.{u4} R] [_inst_20 : Semiring.{u2} S] [_inst_21 : Module.{u4, u3} R M₁ _inst_19 _inst_5] [_inst_22 : Module.{u4, u1} R M₂ _inst_19 _inst_9] [_inst_23 : Module.{u4, u2} R S _inst_19 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_20)))] [_inst_24 : Module.{u2, u1} S M₂ _inst_20 _inst_9] [_inst_25 : IsScalarTower.{u4, u2, u1} R S M₂ (SMulZeroClass.toSMul.{u4, u2} R S (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_20)) (SMulWithZero.toSMulZeroClass.{u4, u2} R S (MonoidWithZero.toZero.{u4} R (Semiring.toMonoidWithZero.{u4} R _inst_19)) (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_20)) (MulActionWithZero.toSMulWithZero.{u4, u2} R S (Semiring.toMonoidWithZero.{u4} R _inst_19) (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_20)) (Module.toMulActionWithZero.{u4, u2} R S _inst_19 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_20))) _inst_23)))) (SMulZeroClass.toSMul.{u2, u1} S M₂ (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (SMulWithZero.toSMulZeroClass.{u2, u1} S M₂ (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_20)) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (MulActionWithZero.toSMulWithZero.{u2, u1} S M₂ (Semiring.toMonoidWithZero.{u2} S _inst_20) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (Module.toMulActionWithZero.{u2, u1} S M₂ _inst_20 _inst_9 _inst_24)))) (SMulZeroClass.toSMul.{u4, u1} R M₂ (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (SMulWithZero.toSMulZeroClass.{u4, u1} R M₂ (MonoidWithZero.toZero.{u4} R (Semiring.toMonoidWithZero.{u4} R _inst_19)) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (MulActionWithZero.toSMulWithZero.{u4, u1} R M₂ (Semiring.toMonoidWithZero.{u4} R _inst_19) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (Module.toMulActionWithZero.{u4, u1} R M₂ _inst_19 _inst_9 _inst_22))))] [_inst_26 : TopologicalSpace.{u2} S] [_inst_27 : ContinuousSMul.{u2, u1} S M₂ (SMulZeroClass.toSMul.{u2, u1} S M₂ (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (SMulWithZero.toSMulZeroClass.{u2, u1} S M₂ (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_20)) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (MulActionWithZero.toSMulWithZero.{u2, u1} S M₂ (Semiring.toMonoidWithZero.{u2} S _inst_20) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (Module.toMulActionWithZero.{u2, u1} S M₂ _inst_20 _inst_9 _inst_24)))) _inst_26 _inst_8] {c : ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_19 _inst_19 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_19)) M₁ _inst_4 _inst_5 S _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_20))) _inst_21 _inst_23} {f : M₂} {x : M₁}, Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (FunLike.coe.{max (succ u3) (succ u1), succ u3, succ u1} (ContinuousLinearMap.{u4, u4, u3, u1} R R _inst_19 _inst_19 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_19)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_21 _inst_22) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u1, u3, u1} (ContinuousLinearMap.{u4, u4, u3, u1} R R _inst_19 _inst_19 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_19)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_21 _inst_22) M₁ M₂ _inst_4 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u1, u4, u4, u3, u1} (ContinuousLinearMap.{u4, u4, u3, u1} R R _inst_19 _inst_19 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_19)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_21 _inst_22) R R _inst_19 _inst_19 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_19)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_21 _inst_22 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u3, u1} R R _inst_19 _inst_19 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_19)) M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 _inst_21 _inst_22))) (ContinuousLinearMap.smulRight.{u3, u1, u4, u2} M₁ _inst_4 _inst_5 M₂ _inst_8 _inst_9 R S _inst_19 _inst_20 _inst_21 _inst_22 _inst_23 _inst_24 _inst_25 _inst_26 _inst_27 c f) x) (HSMul.hSMul.{u2, u1, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => S) x) M₂ M₂ (instHSMul.{u2, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => S) x) M₂ (SMulZeroClass.toSMul.{u2, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => S) x) M₂ (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (SMulWithZero.toSMulZeroClass.{u2, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => S) x) M₂ (MonoidWithZero.toZero.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => S) x) (Semiring.toMonoidWithZero.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => S) x) _inst_20)) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (MulActionWithZero.toSMulWithZero.{u2, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => S) x) M₂ (Semiring.toMonoidWithZero.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => S) x) _inst_20) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (Module.toMulActionWithZero.{u2, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => S) x) M₂ _inst_20 _inst_9 _inst_24))))) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_19 _inst_19 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_19)) M₁ _inst_4 _inst_5 S _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_20))) _inst_21 _inst_23) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => S) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_19 _inst_19 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_19)) M₁ _inst_4 _inst_5 S _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_20))) _inst_21 _inst_23) M₁ S _inst_4 _inst_26 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u4, u4, u3, u2} (ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_19 _inst_19 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_19)) M₁ _inst_4 _inst_5 S _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_20))) _inst_21 _inst_23) R R _inst_19 _inst_19 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_19)) M₁ _inst_4 _inst_5 S _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_20))) _inst_21 _inst_23 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u3, u2} R R _inst_19 _inst_19 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_19)) M₁ _inst_4 _inst_5 S _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_20))) _inst_21 _inst_23))) c x) f)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.smul_right_apply ContinuousLinearMap.smulRight_applyₓ'. -/
@[simp]
theorem smulRight_apply {c : M₁ →L[R] S} {f : M₂} {x : M₁} :
    (smulRight c f : M₁ → M₂) x = c x • f :=
  rfl
#align continuous_linear_map.smul_right_apply ContinuousLinearMap.smulRight_apply

end

variable [Module R₁ M₂] [TopologicalSpace R₁] [ContinuousSMul R₁ M₂]

/- warning: continuous_linear_map.smul_right_one_one -> ContinuousLinearMap.smulRight_one_one is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] [_inst_19 : Module.{u1, u2} R₁ M₂ _inst_1 _inst_9] [_inst_20 : TopologicalSpace.{u1} R₁] [_inst_21 : ContinuousSMul.{u1, u2} R₁ M₂ (SMulZeroClass.toHasSmul.{u1, u2} R₁ M₂ (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (SMulWithZero.toSmulZeroClass.{u1, u2} R₁ M₂ (MulZeroClass.toHasZero.{u1} R₁ (MulZeroOneClass.toMulZeroClass.{u1} R₁ (MonoidWithZero.toMulZeroOneClass.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)))) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (MulActionWithZero.toSMulWithZero.{u1, u2} R₁ M₂ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (Module.toMulActionWithZero.{u1, u2} R₁ M₂ _inst_1 _inst_9 _inst_19)))) _inst_20 _inst_8] (c : ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19), Eq.{max (succ u1) (succ u2)} (ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19) (ContinuousLinearMap.smulRight.{u1, u2, u1, u1} R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₂ _inst_8 _inst_9 R₁ R₁ _inst_1 _inst_1 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19 (IsScalarTower.left.{u1, u2} R₁ M₂ (MonoidWithZero.toMonoid.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)) (MulActionWithZero.toMulAction.{u1, u2} R₁ M₂ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (Module.toMulActionWithZero.{u1, u2} R₁ M₂ _inst_1 _inst_9 _inst_19))) _inst_20 _inst_21 (OfNat.ofNat.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) 1 (OfNat.mk.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) 1 (One.one.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) (ContinuousLinearMap.one.{u1, u1} R₁ _inst_1 R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1))))) (coeFn.{max (succ u1) (succ u2), max (succ u1) (succ u2)} (ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19) (fun (_x : ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19) => R₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19) c (OfNat.ofNat.{u1} R₁ 1 (OfNat.mk.{u1} R₁ 1 (One.one.{u1} R₁ (AddMonoidWithOne.toOne.{u1} R₁ (AddCommMonoidWithOne.toAddMonoidWithOne.{u1} R₁ (NonAssocSemiring.toAddCommMonoidWithOne.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))))))))) c
but is expected to have type
  forall {R₁ : Type.{u2}} [_inst_1 : Semiring.{u2} R₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_19 : Module.{u2, u1} R₁ M₂ _inst_1 _inst_9] [_inst_20 : TopologicalSpace.{u2} R₁] [_inst_21 : ContinuousSMul.{u2, u1} R₁ M₂ (SMulZeroClass.toSMul.{u2, u1} R₁ M₂ (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (SMulWithZero.toSMulZeroClass.{u2, u1} R₁ M₂ (MonoidWithZero.toZero.{u2} R₁ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1)) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (MulActionWithZero.toSMulWithZero.{u2, u1} R₁ M₂ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (Module.toMulActionWithZero.{u2, u1} R₁ M₂ _inst_1 _inst_9 _inst_19)))) _inst_20 _inst_8] (c : ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19), Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₂) (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1)))) _inst_8 _inst_9 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19) (ContinuousLinearMap.smulRight.{u2, u1, u2, u2} R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₂) (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1)))) _inst_8 _inst_9 R₁ R₁ _inst_1 _inst_1 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19 (IsScalarTower.left.{u2, u1} R₁ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₂) (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1)))) (MonoidWithZero.toMonoid.{u2} R₁ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1)) (MulActionWithZero.toMulAction.{u2, u1} R₁ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₂) (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1)))) (Semiring.toMonoidWithZero.{u2} R₁ _inst_1) (AddMonoid.toZero.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₂) (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1)))) (AddCommMonoid.toAddMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₂) (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1)))) _inst_9)) (Module.toMulActionWithZero.{u2, u1} R₁ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₂) (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1)))) _inst_1 _inst_9 _inst_19))) _inst_20 _inst_21 (OfNat.ofNat.{u2} (ContinuousLinearMap.{u2, u2, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1) (Semiring.toModule.{u2} R₁ _inst_1)) 1 (One.toOfNat1.{u2} (ContinuousLinearMap.{u2, u2, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1) (Semiring.toModule.{u2} R₁ _inst_1)) (ContinuousLinearMap.one.{u2, u2} R₁ _inst_1 R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1)))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19) R₁ (fun (_x : R₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19) R₁ M₂ _inst_20 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u2, u2, u2, u1} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19))) c (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1))))) c
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.smul_right_one_one ContinuousLinearMap.smulRight_one_oneₓ'. -/
@[simp]
theorem smulRight_one_one (c : R₁ →L[R₁] M₂) : smulRight (1 : R₁ →L[R₁] R₁) (c 1) = c := by
  ext <;> simp [← ContinuousLinearMap.map_smul_of_tower]
#align continuous_linear_map.smul_right_one_one ContinuousLinearMap.smulRight_one_one

/- warning: continuous_linear_map.smul_right_one_eq_iff -> ContinuousLinearMap.smulRight_one_eq_iff is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] [_inst_19 : Module.{u1, u2} R₁ M₂ _inst_1 _inst_9] [_inst_20 : TopologicalSpace.{u1} R₁] [_inst_21 : ContinuousSMul.{u1, u2} R₁ M₂ (SMulZeroClass.toHasSmul.{u1, u2} R₁ M₂ (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (SMulWithZero.toSmulZeroClass.{u1, u2} R₁ M₂ (MulZeroClass.toHasZero.{u1} R₁ (MulZeroOneClass.toMulZeroClass.{u1} R₁ (MonoidWithZero.toMulZeroOneClass.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)))) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (MulActionWithZero.toSMulWithZero.{u1, u2} R₁ M₂ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (Module.toMulActionWithZero.{u1, u2} R₁ M₂ _inst_1 _inst_9 _inst_19)))) _inst_20 _inst_8] {f : M₂} {f' : M₂}, Iff (Eq.{max (succ u1) (succ u2)} (ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19) (ContinuousLinearMap.smulRight.{u1, u2, u1, u1} R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₂ _inst_8 _inst_9 R₁ R₁ _inst_1 _inst_1 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19 (IsScalarTower.left.{u1, u2} R₁ M₂ (MonoidWithZero.toMonoid.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)) (MulActionWithZero.toMulAction.{u1, u2} R₁ M₂ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (Module.toMulActionWithZero.{u1, u2} R₁ M₂ _inst_1 _inst_9 _inst_19))) _inst_20 _inst_21 (OfNat.ofNat.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) 1 (OfNat.mk.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) 1 (One.one.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) (ContinuousLinearMap.one.{u1, u1} R₁ _inst_1 R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1))))) f) (ContinuousLinearMap.smulRight.{u1, u2, u1, u1} R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₂ _inst_8 _inst_9 R₁ R₁ _inst_1 _inst_1 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19 (IsScalarTower.left.{u1, u2} R₁ M₂ (MonoidWithZero.toMonoid.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)) (MulActionWithZero.toMulAction.{u1, u2} R₁ M₂ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (Module.toMulActionWithZero.{u1, u2} R₁ M₂ _inst_1 _inst_9 _inst_19))) _inst_20 _inst_21 (OfNat.ofNat.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) 1 (OfNat.mk.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) 1 (One.one.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) (ContinuousLinearMap.one.{u1, u1} R₁ _inst_1 R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1))))) f')) (Eq.{succ u2} M₂ f f')
but is expected to have type
  forall {R₁ : Type.{u2}} [_inst_1 : Semiring.{u2} R₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_19 : Module.{u2, u1} R₁ M₂ _inst_1 _inst_9] [_inst_20 : TopologicalSpace.{u2} R₁] [_inst_21 : ContinuousSMul.{u2, u1} R₁ M₂ (SMulZeroClass.toSMul.{u2, u1} R₁ M₂ (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (SMulWithZero.toSMulZeroClass.{u2, u1} R₁ M₂ (MonoidWithZero.toZero.{u2} R₁ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1)) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (MulActionWithZero.toSMulWithZero.{u2, u1} R₁ M₂ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (Module.toMulActionWithZero.{u2, u1} R₁ M₂ _inst_1 _inst_9 _inst_19)))) _inst_20 _inst_8] {f : M₂} {f' : M₂}, Iff (Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19) (ContinuousLinearMap.smulRight.{u2, u1, u2, u2} R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₂ _inst_8 _inst_9 R₁ R₁ _inst_1 _inst_1 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19 (IsScalarTower.left.{u2, u1} R₁ M₂ (MonoidWithZero.toMonoid.{u2} R₁ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1)) (MulActionWithZero.toMulAction.{u2, u1} R₁ M₂ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (Module.toMulActionWithZero.{u2, u1} R₁ M₂ _inst_1 _inst_9 _inst_19))) _inst_20 _inst_21 (OfNat.ofNat.{u2} (ContinuousLinearMap.{u2, u2, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1) (Semiring.toModule.{u2} R₁ _inst_1)) 1 (One.toOfNat1.{u2} (ContinuousLinearMap.{u2, u2, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1) (Semiring.toModule.{u2} R₁ _inst_1)) (ContinuousLinearMap.one.{u2, u2} R₁ _inst_1 R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1)))) f) (ContinuousLinearMap.smulRight.{u2, u1, u2, u2} R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₂ _inst_8 _inst_9 R₁ R₁ _inst_1 _inst_1 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19 (IsScalarTower.left.{u2, u1} R₁ M₂ (MonoidWithZero.toMonoid.{u2} R₁ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1)) (MulActionWithZero.toMulAction.{u2, u1} R₁ M₂ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (Module.toMulActionWithZero.{u2, u1} R₁ M₂ _inst_1 _inst_9 _inst_19))) _inst_20 _inst_21 (OfNat.ofNat.{u2} (ContinuousLinearMap.{u2, u2, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1) (Semiring.toModule.{u2} R₁ _inst_1)) 1 (One.toOfNat1.{u2} (ContinuousLinearMap.{u2, u2, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1) (Semiring.toModule.{u2} R₁ _inst_1)) (ContinuousLinearMap.one.{u2, u2} R₁ _inst_1 R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1)))) f')) (Eq.{succ u1} M₂ f f')
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.smul_right_one_eq_iff ContinuousLinearMap.smulRight_one_eq_iffₓ'. -/
@[simp]
theorem smulRight_one_eq_iff {f f' : M₂} :
    smulRight (1 : R₁ →L[R₁] R₁) f = smulRight (1 : R₁ →L[R₁] R₁) f' ↔ f = f' := by
  simp only [ext_ring_iff, smul_right_apply, one_apply, one_smul]
#align continuous_linear_map.smul_right_one_eq_iff ContinuousLinearMap.smulRight_one_eq_iff

/- warning: continuous_linear_map.smul_right_comp -> ContinuousLinearMap.smulRight_comp is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₂ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₂] [_inst_9 : AddCommMonoid.{u2} M₂] [_inst_19 : Module.{u1, u2} R₁ M₂ _inst_1 _inst_9] [_inst_20 : TopologicalSpace.{u1} R₁] [_inst_21 : ContinuousSMul.{u1, u2} R₁ M₂ (SMulZeroClass.toHasSmul.{u1, u2} R₁ M₂ (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (SMulWithZero.toSmulZeroClass.{u1, u2} R₁ M₂ (MulZeroClass.toHasZero.{u1} R₁ (MulZeroOneClass.toMulZeroClass.{u1} R₁ (MonoidWithZero.toMulZeroOneClass.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)))) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (MulActionWithZero.toSMulWithZero.{u1, u2} R₁ M₂ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (Module.toMulActionWithZero.{u1, u2} R₁ M₂ _inst_1 _inst_9 _inst_19)))) _inst_20 _inst_8] [_inst_22 : ContinuousMul.{u1} R₁ _inst_20 (Distrib.toHasMul.{u1} R₁ (NonUnitalNonAssocSemiring.toDistrib.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))))] {x : M₂} {c : R₁}, Eq.{max (succ u1) (succ u2)} (ContinuousLinearMap.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19) (ContinuousLinearMap.comp.{u1, u1, u1, u1, u1, u2} R₁ R₁ R₁ _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1) _inst_19 (RingHomCompTriple.right_ids.{u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (ContinuousLinearMap.smulRight.{u1, u2, u1, u1} R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₂ _inst_8 _inst_9 R₁ R₁ _inst_1 _inst_1 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19 (IsScalarTower.left.{u1, u2} R₁ M₂ (MonoidWithZero.toMonoid.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)) (MulActionWithZero.toMulAction.{u1, u2} R₁ M₂ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (Module.toMulActionWithZero.{u1, u2} R₁ M₂ _inst_1 _inst_9 _inst_19))) _inst_20 _inst_21 (OfNat.ofNat.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) 1 (OfNat.mk.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) 1 (One.one.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) (ContinuousLinearMap.one.{u1, u1} R₁ _inst_1 R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1))))) x) (ContinuousLinearMap.smulRight.{u1, u1, u1, u1} R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ R₁ _inst_1 _inst_1 (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1) (IsScalarTower.left.{u1, u1} R₁ R₁ (MonoidWithZero.toMonoid.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)) (Monoid.toMulAction.{u1} R₁ (MonoidWithZero.toMonoid.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)))) _inst_20 (ContinuousMul.to_continuousSMul.{u1} R₁ _inst_20 (Distrib.toHasMul.{u1} R₁ (NonUnitalNonAssocSemiring.toDistrib.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)))) _inst_22) (OfNat.ofNat.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) 1 (OfNat.mk.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) 1 (One.one.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) (ContinuousLinearMap.one.{u1, u1} R₁ _inst_1 R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1))))) c)) (ContinuousLinearMap.smulRight.{u1, u2, u1, u1} R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₂ _inst_8 _inst_9 R₁ R₁ _inst_1 _inst_1 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19 (Semiring.toModule.{u1} R₁ _inst_1) _inst_19 (IsScalarTower.left.{u1, u2} R₁ M₂ (MonoidWithZero.toMonoid.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)) (MulActionWithZero.toMulAction.{u1, u2} R₁ M₂ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (Module.toMulActionWithZero.{u1, u2} R₁ M₂ _inst_1 _inst_9 _inst_19))) _inst_20 _inst_21 (OfNat.ofNat.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) 1 (OfNat.mk.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) 1 (One.one.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1) (Semiring.toModule.{u1} R₁ _inst_1)) (ContinuousLinearMap.one.{u1, u1} R₁ _inst_1 R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) (Semiring.toModule.{u1} R₁ _inst_1))))) (SMul.smul.{u1, u2} R₁ M₂ (SMulZeroClass.toHasSmul.{u1, u2} R₁ M₂ (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (SMulWithZero.toSmulZeroClass.{u1, u2} R₁ M₂ (MulZeroClass.toHasZero.{u1} R₁ (MulZeroOneClass.toMulZeroClass.{u1} R₁ (MonoidWithZero.toMulZeroOneClass.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)))) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (MulActionWithZero.toSMulWithZero.{u1, u2} R₁ M₂ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_9))) (Module.toMulActionWithZero.{u1, u2} R₁ M₂ _inst_1 _inst_9 _inst_19)))) c x))
but is expected to have type
  forall {R₁ : Type.{u2}} [_inst_1 : Semiring.{u2} R₁] {M₂ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₂] [_inst_9 : AddCommMonoid.{u1} M₂] [_inst_19 : Module.{u2, u1} R₁ M₂ _inst_1 _inst_9] [_inst_20 : TopologicalSpace.{u2} R₁] [_inst_21 : ContinuousSMul.{u2, u1} R₁ M₂ (SMulZeroClass.toSMul.{u2, u1} R₁ M₂ (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (SMulWithZero.toSMulZeroClass.{u2, u1} R₁ M₂ (MonoidWithZero.toZero.{u2} R₁ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1)) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (MulActionWithZero.toSMulWithZero.{u2, u1} R₁ M₂ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (Module.toMulActionWithZero.{u2, u1} R₁ M₂ _inst_1 _inst_9 _inst_19)))) _inst_20 _inst_8] [_inst_22 : ContinuousMul.{u2} R₁ _inst_20 (NonUnitalNonAssocSemiring.toMul.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)))] {x : M₂} {c : R₁}, Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19) (ContinuousLinearMap.comp.{u2, u2, u2, u2, u2, u1} R₁ R₁ R₁ _inst_1 _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₂ _inst_8 _inst_9 (Semiring.toModule.{u2} R₁ _inst_1) (Semiring.toModule.{u2} R₁ _inst_1) _inst_19 (RingHomCompTriple.ids.{u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (ContinuousLinearMap.smulRight.{u2, u1, u2, u2} R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₂ _inst_8 _inst_9 R₁ R₁ _inst_1 _inst_1 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19 (IsScalarTower.left.{u2, u1} R₁ M₂ (MonoidWithZero.toMonoid.{u2} R₁ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1)) (MulActionWithZero.toMulAction.{u2, u1} R₁ M₂ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (Module.toMulActionWithZero.{u2, u1} R₁ M₂ _inst_1 _inst_9 _inst_19))) _inst_20 _inst_21 (OfNat.ofNat.{u2} (ContinuousLinearMap.{u2, u2, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1) (Semiring.toModule.{u2} R₁ _inst_1)) 1 (One.toOfNat1.{u2} (ContinuousLinearMap.{u2, u2, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1) (Semiring.toModule.{u2} R₁ _inst_1)) (ContinuousLinearMap.one.{u2, u2} R₁ _inst_1 R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1)))) x) (ContinuousLinearMap.smulRight.{u2, u2, u2, u2} R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) R₁ R₁ _inst_1 _inst_1 (Semiring.toModule.{u2} R₁ _inst_1) (Semiring.toModule.{u2} R₁ _inst_1) (Semiring.toModule.{u2} R₁ _inst_1) (Semiring.toModule.{u2} R₁ _inst_1) (IsScalarTower.left.{u2, u2} R₁ R₁ (MonoidWithZero.toMonoid.{u2} R₁ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1)) (MulActionWithZero.toMulAction.{u2, u2} R₁ R₁ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1) (MonoidWithZero.toZero.{u2} R₁ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1)) (MonoidWithZero.toMulActionWithZero.{u2} R₁ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1)))) _inst_20 (ContinuousMul.to_continuousSMul.{u2} R₁ _inst_20 (MulZeroClass.toMul.{u2} R₁ (MulZeroOneClass.toMulZeroClass.{u2} R₁ (MonoidWithZero.toMulZeroOneClass.{u2} R₁ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1)))) _inst_22) (OfNat.ofNat.{u2} (ContinuousLinearMap.{u2, u2, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1) (Semiring.toModule.{u2} R₁ _inst_1)) 1 (One.toOfNat1.{u2} (ContinuousLinearMap.{u2, u2, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1) (Semiring.toModule.{u2} R₁ _inst_1)) (ContinuousLinearMap.one.{u2, u2} R₁ _inst_1 R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1)))) c)) (ContinuousLinearMap.smulRight.{u2, u1, u2, u2} R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₂ _inst_8 _inst_9 R₁ R₁ _inst_1 _inst_1 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19 (Semiring.toModule.{u2} R₁ _inst_1) _inst_19 (IsScalarTower.left.{u2, u1} R₁ M₂ (MonoidWithZero.toMonoid.{u2} R₁ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1)) (MulActionWithZero.toMulAction.{u2, u1} R₁ M₂ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (Module.toMulActionWithZero.{u2, u1} R₁ M₂ _inst_1 _inst_9 _inst_19))) _inst_20 _inst_21 (OfNat.ofNat.{u2} (ContinuousLinearMap.{u2, u2, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1) (Semiring.toModule.{u2} R₁ _inst_1)) 1 (One.toOfNat1.{u2} (ContinuousLinearMap.{u2, u2, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1) (Semiring.toModule.{u2} R₁ _inst_1)) (ContinuousLinearMap.one.{u2, u2} R₁ _inst_1 R₁ _inst_20 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) (Semiring.toModule.{u2} R₁ _inst_1)))) (HSMul.hSMul.{u2, u1, u1} R₁ M₂ M₂ (instHSMul.{u2, u1} R₁ M₂ (SMulZeroClass.toSMul.{u2, u1} R₁ M₂ (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (SMulWithZero.toSMulZeroClass.{u2, u1} R₁ M₂ (MonoidWithZero.toZero.{u2} R₁ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1)) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (MulActionWithZero.toSMulWithZero.{u2, u1} R₁ M₂ (Semiring.toMonoidWithZero.{u2} R₁ _inst_1) (AddMonoid.toZero.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_9)) (Module.toMulActionWithZero.{u2, u1} R₁ M₂ _inst_1 _inst_9 _inst_19))))) c x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.smul_right_comp ContinuousLinearMap.smulRight_compₓ'. -/
theorem smulRight_comp [ContinuousMul R₁] {x : M₂} {c : R₁} :
    (smulRight (1 : R₁ →L[R₁] R₁) x).comp (smulRight (1 : R₁ →L[R₁] R₁) c) =
      smulRight (1 : R₁ →L[R₁] R₁) (c • x) :=
  by
  ext
  simp [mul_smul]
#align continuous_linear_map.smul_right_comp ContinuousLinearMap.smulRight_comp

end Semiring

section Pi

variable {R : Type _} [Semiring R] {M : Type _} [TopologicalSpace M] [AddCommMonoid M] [Module R M]
  {M₂ : Type _} [TopologicalSpace M₂] [AddCommMonoid M₂] [Module R M₂] {ι : Type _} {φ : ι → Type _}
  [∀ i, TopologicalSpace (φ i)] [∀ i, AddCommMonoid (φ i)] [∀ i, Module R (φ i)]

#print ContinuousLinearMap.pi /-
/-- `pi` construction for continuous linear functions. From a family of continuous linear functions
it produces a continuous linear function into a family of topological modules. -/
def pi (f : ∀ i, M →L[R] φ i) : M →L[R] ∀ i, φ i :=
  ⟨LinearMap.pi fun i => f i, continuous_pi fun i => (f i).Continuous⟩
#align continuous_linear_map.pi ContinuousLinearMap.pi
-/

/- warning: continuous_linear_map.coe_pi' -> ContinuousLinearMap.coe_pi' is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {M : Type.{u2}} [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_1 _inst_3] {ι : Type.{u3}} {φ : ι -> Type.{u4}} [_inst_8 : forall (i : ι), TopologicalSpace.{u4} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u4} (φ i)] [_inst_10 : forall (i : ι), Module.{u1, u4} R (φ i) _inst_1 (_inst_9 i)] (f : forall (i : ι), ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)), Eq.{max (succ u2) (succ (max u3 u4))} (M -> (forall (i : ι), φ i)) (coeFn.{max (succ u2) (succ (max u3 u4)), max (succ u2) (succ (max u3 u4))} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (fun (_x : ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) => M -> (forall (i : ι), φ i)) (ContinuousLinearMap.toFun.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (ContinuousLinearMap.pi.{u1, u2, u3, u4} R _inst_1 M _inst_2 _inst_3 _inst_4 ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_8 i) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) f)) (fun (c : M) (i : ι) => coeFn.{max (succ u2) (succ u4), max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) => M -> (φ i)) (ContinuousLinearMap.toFun.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (f i) c)
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Semiring.{u4} R] {M : Type.{u3}} [_inst_2 : TopologicalSpace.{u3} M] [_inst_3 : AddCommMonoid.{u3} M] [_inst_4 : Module.{u4, u3} R M _inst_1 _inst_3] {ι : Type.{u1}} {φ : ι -> Type.{u2}} [_inst_8 : forall (i : ι), TopologicalSpace.{u2} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u2} (φ i)] [_inst_10 : forall (i : ι), Module.{u4, u2} R (φ i) _inst_1 (_inst_9 i)] (f : forall (i : ι), ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)), Eq.{max (max (succ u3) (succ u1)) (succ u2)} (forall (ᾰ : M), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => forall (i : ι), φ i) ᾰ) (FunLike.coe.{max (max (succ u3) (succ u1)) (succ u2), succ u3, max (succ u1) (succ u2)} (ContinuousLinearMap.{u4, u4, u3, max u1 u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => forall (i : ι), φ i) _x) (ContinuousMapClass.toFunLike.{max (max u3 u1) u2, u3, max u1 u2} (ContinuousLinearMap.{u4, u4, u3, max u1 u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) M (forall (i : ι), φ i) _inst_2 (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (ContinuousSemilinearMapClass.toContinuousMapClass.{max (max u3 u1) u2, u4, u4, u3, max u1 u2} (ContinuousLinearMap.{u4, u4, u3, max u1 u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u3, max u1 u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))))) (ContinuousLinearMap.pi.{u4, u3, u1, u2} R _inst_1 M _inst_2 _inst_3 _inst_4 ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_8 i) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) f)) (fun (c : M) (i : ι) => FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => φ i) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) M (φ i) _inst_2 (_inst_8 i) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u4, u4, u3, u2} (ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i) (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)))) (f i) c)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_pi' ContinuousLinearMap.coe_pi'ₓ'. -/
@[simp]
theorem coe_pi' (f : ∀ i, M →L[R] φ i) : ⇑(pi f) = fun c i => f i c :=
  rfl
#align continuous_linear_map.coe_pi' ContinuousLinearMap.coe_pi'

/- warning: continuous_linear_map.coe_pi -> ContinuousLinearMap.coe_pi is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {M : Type.{u2}} [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_1 _inst_3] {ι : Type.{u3}} {φ : ι -> Type.{u4}} [_inst_8 : forall (i : ι), TopologicalSpace.{u4} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u4} (φ i)] [_inst_10 : forall (i : ι), Module.{u1, u4} R (φ i) _inst_1 (_inst_9 i)] (f : forall (i : ι), ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)), Eq.{max (succ u2) (succ (max u3 u4))} (LinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M (forall (i : ι), φ i) _inst_3 (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) ((fun (a : Sort.{max (succ u2) (succ (max u3 u4))}) (b : Sort.{max (succ u2) (succ (max u3 u4))}) [self : HasLiftT.{max (succ u2) (succ (max u3 u4)), max (succ u2) (succ (max u3 u4))} a b] => self.0) (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (LinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M (forall (i : ι), φ i) _inst_3 (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (HasLiftT.mk.{max (succ u2) (succ (max u3 u4)), max (succ u2) (succ (max u3 u4))} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (LinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M (forall (i : ι), φ i) _inst_3 (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (CoeTCₓ.coe.{max (succ u2) (succ (max u3 u4)), max (succ u2) (succ (max u3 u4))} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (LinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M (forall (i : ι), φ i) _inst_3 (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (coeBase.{max (succ u2) (succ (max u3 u4)), max (succ u2) (succ (max u3 u4))} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (LinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M (forall (i : ι), φ i) _inst_3 (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (ContinuousLinearMap.LinearMap.coe.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)))))) (ContinuousLinearMap.pi.{u1, u2, u3, u4} R _inst_1 M _inst_2 _inst_3 _inst_4 ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_8 i) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) f)) (LinearMap.pi.{u1, u2, u3, u4} R M ι _inst_1 _inst_3 _inst_4 (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) (fun (i : ι) => (fun (a : Sort.{max (succ u2) (succ u4)}) (b : Sort.{max (succ u2) (succ u4)}) [self : HasLiftT.{max (succ u2) (succ u4), max (succ u2) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (LinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M (φ i) _inst_3 (_inst_9 i) _inst_4 (_inst_10 i)) (HasLiftT.mk.{max (succ u2) (succ u4), max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (LinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M (φ i) _inst_3 (_inst_9 i) _inst_4 (_inst_10 i)) (CoeTCₓ.coe.{max (succ u2) (succ u4), max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (LinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M (φ i) _inst_3 (_inst_9 i) _inst_4 (_inst_10 i)) (coeBase.{max (succ u2) (succ u4), max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (LinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M (φ i) _inst_3 (_inst_9 i) _inst_4 (_inst_10 i)) (ContinuousLinearMap.LinearMap.coe.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i))))) (f i)))
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Semiring.{u4} R] {M : Type.{u3}} [_inst_2 : TopologicalSpace.{u3} M] [_inst_3 : AddCommMonoid.{u3} M] [_inst_4 : Module.{u4, u3} R M _inst_1 _inst_3] {ι : Type.{u1}} {φ : ι -> Type.{u2}} [_inst_8 : forall (i : ι), TopologicalSpace.{u2} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u2} (φ i)] [_inst_10 : forall (i : ι), Module.{u4, u2} R (φ i) _inst_1 (_inst_9 i)] (f : forall (i : ι), ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)), Eq.{max (max (succ u3) (succ u1)) (succ u2)} (LinearMap.{u4, u4, u3, max u1 u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M (forall (i : ι), φ i) _inst_3 (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (ContinuousLinearMap.toLinearMap.{u4, u4, u3, max u1 u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (ContinuousLinearMap.pi.{u4, u3, u1, u2} R _inst_1 M _inst_2 _inst_3 _inst_4 ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_8 i) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) f)) (LinearMap.pi.{u4, u3, u1, u2} R M ι _inst_1 _inst_3 _inst_4 (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) (fun (i : ι) => ContinuousLinearMap.toLinearMap.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i) (f i)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_pi ContinuousLinearMap.coe_piₓ'. -/
@[simp]
theorem coe_pi (f : ∀ i, M →L[R] φ i) : (pi f : M →ₗ[R] ∀ i, φ i) = LinearMap.pi fun i => f i :=
  rfl
#align continuous_linear_map.coe_pi ContinuousLinearMap.coe_pi

/- warning: continuous_linear_map.pi_apply -> ContinuousLinearMap.pi_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {M : Type.{u2}} [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_1 _inst_3] {ι : Type.{u3}} {φ : ι -> Type.{u4}} [_inst_8 : forall (i : ι), TopologicalSpace.{u4} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u4} (φ i)] [_inst_10 : forall (i : ι), Module.{u1, u4} R (φ i) _inst_1 (_inst_9 i)] (f : forall (i : ι), ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (c : M) (i : ι), Eq.{succ u4} ((fun (i : ι) => φ i) i) (coeFn.{max (succ u2) (succ (max u3 u4)), max (succ u2) (succ (max u3 u4))} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), (fun (i : ι) => φ i) i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => (fun (i : ι) => φ i) i) (fun (a : ι) => (fun (i : ι) => _inst_8 i) a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => (fun (i : ι) => φ i) i) (fun (i : ι) => (fun (i : ι) => _inst_9 i) i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => (fun (i : ι) => φ i) i) R _inst_1 (fun (i : ι) => (fun (i : ι) => _inst_9 i) i) (fun (i : ι) => (fun (i : ι) => _inst_10 i) i))) (fun (_x : ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), (fun (i : ι) => φ i) i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => (fun (i : ι) => φ i) i) (fun (a : ι) => (fun (i : ι) => _inst_8 i) a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => (fun (i : ι) => φ i) i) (fun (i : ι) => (fun (i : ι) => _inst_9 i) i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => (fun (i : ι) => φ i) i) R _inst_1 (fun (i : ι) => (fun (i : ι) => _inst_9 i) i) (fun (i : ι) => (fun (i : ι) => _inst_10 i) i))) => M -> (forall (i : ι), (fun (i : ι) => φ i) i)) (ContinuousLinearMap.toFun.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), (fun (i : ι) => φ i) i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => (fun (i : ι) => φ i) i) (fun (a : ι) => (fun (i : ι) => _inst_8 i) a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => (fun (i : ι) => φ i) i) (fun (i : ι) => (fun (i : ι) => _inst_9 i) i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => (fun (i : ι) => φ i) i) R _inst_1 (fun (i : ι) => (fun (i : ι) => _inst_9 i) i) (fun (i : ι) => (fun (i : ι) => _inst_10 i) i))) (ContinuousLinearMap.pi.{u1, u2, u3, u4} R _inst_1 M _inst_2 _inst_3 _inst_4 ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_8 i) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) f) c i) (coeFn.{max (succ u2) (succ u4), max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) => M -> (φ i)) (ContinuousLinearMap.toFun.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (f i) c)
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Semiring.{u4} R] {M : Type.{u3}} [_inst_2 : TopologicalSpace.{u3} M] [_inst_3 : AddCommMonoid.{u3} M] [_inst_4 : Module.{u4, u3} R M _inst_1 _inst_3] {ι : Type.{u1}} {φ : ι -> Type.{u2}} [_inst_8 : forall (i : ι), TopologicalSpace.{u2} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u2} (φ i)] [_inst_10 : forall (i : ι), Module.{u4, u2} R (φ i) _inst_1 (_inst_9 i)] (f : forall (i : ι), ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (c : M) (i : ι), Eq.{succ u2} (φ i) (FunLike.coe.{max (max (succ u3) (succ u1)) (succ u2), succ u3, max (succ u1) (succ u2)} (ContinuousLinearMap.{u4, u4, u3, max u1 u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => forall (i : ι), φ i) _x) (ContinuousMapClass.toFunLike.{max (max u3 u1) u2, u3, max u1 u2} (ContinuousLinearMap.{u4, u4, u3, max u1 u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) M (forall (i : ι), φ i) _inst_2 (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (ContinuousSemilinearMapClass.toContinuousMapClass.{max (max u3 u1) u2, u4, u4, u3, max u1 u2} (ContinuousLinearMap.{u4, u4, u3, max u1 u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u3, max u1 u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))))) (ContinuousLinearMap.pi.{u4, u3, u1, u2} R _inst_1 M _inst_2 _inst_3 _inst_4 ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_8 i) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) f) c i) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => φ i) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) M (φ i) _inst_2 (_inst_8 i) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u4, u4, u3, u2} (ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i) (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)))) (f i) c)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.pi_apply ContinuousLinearMap.pi_applyₓ'. -/
theorem pi_apply (f : ∀ i, M →L[R] φ i) (c : M) (i : ι) : pi f c i = f i c :=
  rfl
#align continuous_linear_map.pi_apply ContinuousLinearMap.pi_apply

/- warning: continuous_linear_map.pi_eq_zero -> ContinuousLinearMap.pi_eq_zero is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {M : Type.{u2}} [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_1 _inst_3] {ι : Type.{u3}} {φ : ι -> Type.{u4}} [_inst_8 : forall (i : ι), TopologicalSpace.{u4} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u4} (φ i)] [_inst_10 : forall (i : ι), Module.{u1, u4} R (φ i) _inst_1 (_inst_9 i)] (f : forall (i : ι), ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)), Iff (Eq.{max (succ u2) (succ (max u3 u4))} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (ContinuousLinearMap.pi.{u1, u2, u3, u4} R _inst_1 M _inst_2 _inst_3 _inst_4 ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_8 i) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) f) (OfNat.ofNat.{max u2 u3 u4} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) 0 (OfNat.mk.{max u2 u3 u4} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) 0 (Zero.zero.{max u2 u3 u4} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (ContinuousLinearMap.zero.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))))))) (forall (i : ι), Eq.{max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (f i) (OfNat.ofNat.{max u2 u4} (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) 0 (OfNat.mk.{max u2 u4} (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) 0 (Zero.zero.{max u2 u4} (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (ContinuousLinearMap.zero.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i))))))
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Semiring.{u4} R] {M : Type.{u3}} [_inst_2 : TopologicalSpace.{u3} M] [_inst_3 : AddCommMonoid.{u3} M] [_inst_4 : Module.{u4, u3} R M _inst_1 _inst_3] {ι : Type.{u1}} {φ : ι -> Type.{u2}} [_inst_8 : forall (i : ι), TopologicalSpace.{u2} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u2} (φ i)] [_inst_10 : forall (i : ι), Module.{u4, u2} R (φ i) _inst_1 (_inst_9 i)] (f : forall (i : ι), ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)), Iff (Eq.{max (max (succ u3) (succ u1)) (succ u2)} (ContinuousLinearMap.{u4, u4, u3, max u1 u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (ContinuousLinearMap.pi.{u4, u3, u1, u2} R _inst_1 M _inst_2 _inst_3 _inst_4 ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_8 i) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) f) (OfNat.ofNat.{max (max u3 u1) u2} (ContinuousLinearMap.{u4, u4, u3, max u1 u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) 0 (Zero.toOfNat0.{max (max u3 u1) u2} (ContinuousLinearMap.{u4, u4, u3, max u1 u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (ContinuousLinearMap.zero.{u4, u4, u3, max u1 u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)))))) (forall (i : ι), Eq.{max (succ u3) (succ u2)} (ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (f i) (OfNat.ofNat.{max u3 u2} (ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) 0 (Zero.toOfNat0.{max u3 u2} (ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (ContinuousLinearMap.zero.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.pi_eq_zero ContinuousLinearMap.pi_eq_zeroₓ'. -/
theorem pi_eq_zero (f : ∀ i, M →L[R] φ i) : pi f = 0 ↔ ∀ i, f i = 0 :=
  by
  simp only [ext_iff, pi_apply, Function.funext_iff]
  exact forall_swap
#align continuous_linear_map.pi_eq_zero ContinuousLinearMap.pi_eq_zero

/- warning: continuous_linear_map.pi_zero -> ContinuousLinearMap.pi_zero is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {M : Type.{u2}} [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_1 _inst_3] {ι : Type.{u3}} {φ : ι -> Type.{u4}} [_inst_8 : forall (i : ι), TopologicalSpace.{u4} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u4} (φ i)] [_inst_10 : forall (i : ι), Module.{u1, u4} R (φ i) _inst_1 (_inst_9 i)], Eq.{max (succ u2) (succ (max u3 u4))} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (ContinuousLinearMap.pi.{u1, u2, u3, u4} R _inst_1 M _inst_2 _inst_3 _inst_4 ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_8 i) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) (fun (i : ι) => OfNat.ofNat.{max u2 u4} (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) 0 (OfNat.mk.{max u2 u4} (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) 0 (Zero.zero.{max u2 u4} (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (ContinuousLinearMap.zero.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)))))) (OfNat.ofNat.{max u2 u3 u4} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) 0 (OfNat.mk.{max u2 u3 u4} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) 0 (Zero.zero.{max u2 u3 u4} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (ContinuousLinearMap.zero.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))))))
but is expected to have type
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {M : Type.{u4}} [_inst_2 : TopologicalSpace.{u4} M] [_inst_3 : AddCommMonoid.{u4} M] [_inst_4 : Module.{u1, u4} R M _inst_1 _inst_3] {ι : Type.{u3}} {φ : ι -> Type.{u2}} [_inst_8 : forall (i : ι), TopologicalSpace.{u2} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u2} (φ i)] [_inst_10 : forall (i : ι), Module.{u1, u2} R (φ i) _inst_1 (_inst_9 i)], Eq.{max (max (succ u4) (succ u3)) (succ u2)} (ContinuousLinearMap.{u1, u1, u4, max u3 u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u2, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (ContinuousLinearMap.pi.{u1, u4, u3, u2} R _inst_1 M _inst_2 _inst_3 _inst_4 ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_8 i) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) (fun (i : ι) => OfNat.ofNat.{max u4 u2} (ContinuousLinearMap.{u1, u1, u4, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) 0 (Zero.toOfNat0.{max u4 u2} (ContinuousLinearMap.{u1, u1, u4, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (ContinuousLinearMap.zero.{u1, u1, u4, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i))))) (OfNat.ofNat.{max (max u4 u3) u2} (ContinuousLinearMap.{u1, u1, u4, max u3 u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u2, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) 0 (Zero.toOfNat0.{max (max u4 u3) u2} (ContinuousLinearMap.{u1, u1, u4, max u3 u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u2, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (ContinuousLinearMap.zero.{u1, u1, u4, max u3 u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_4 (Pi.module.{u3, u2, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.pi_zero ContinuousLinearMap.pi_zeroₓ'. -/
theorem pi_zero : pi (fun i => 0 : ∀ i, M →L[R] φ i) = 0 :=
  ext fun _ => rfl
#align continuous_linear_map.pi_zero ContinuousLinearMap.pi_zero

/- warning: continuous_linear_map.pi_comp -> ContinuousLinearMap.pi_comp is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {M : Type.{u2}} [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_1 _inst_3] {M₂ : Type.{u3}} [_inst_5 : TopologicalSpace.{u3} M₂] [_inst_6 : AddCommMonoid.{u3} M₂] [_inst_7 : Module.{u1, u3} R M₂ _inst_1 _inst_6] {ι : Type.{u4}} {φ : ι -> Type.{u5}} [_inst_8 : forall (i : ι), TopologicalSpace.{u5} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u5} (φ i)] [_inst_10 : forall (i : ι), Module.{u1, u5} R (φ i) _inst_1 (_inst_9 i)] (f : forall (i : ι), ContinuousLinearMap.{u1, u1, u2, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (g : ContinuousLinearMap.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M₂ _inst_5 _inst_6 M _inst_2 _inst_3 _inst_7 _inst_4), Eq.{max (succ u3) (succ (max u4 u5))} (ContinuousLinearMap.{u1, u1, u3, max u4 u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M₂ _inst_5 _inst_6 (forall (i : ι), φ i) (Pi.topologicalSpace.{u4, u5} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u4, u5} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_7 (Pi.module.{u4, u5, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (ContinuousLinearMap.comp.{u1, u1, u1, u3, u2, max u4 u5} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M₂ _inst_5 _inst_6 M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u4, u5} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u4, u5} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_7 _inst_4 (Pi.module.{u4, u5, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (ContinuousLinearMap.pi.{u1, u2, u4, u5} R _inst_1 M _inst_2 _inst_3 _inst_4 ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_8 i) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) f) g) (ContinuousLinearMap.pi.{u1, u3, u4, u5} R _inst_1 M₂ _inst_5 _inst_6 _inst_7 ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) (fun (i : ι) => ContinuousLinearMap.comp.{u1, u1, u1, u3, u2, u5} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M₂ _inst_5 _inst_6 M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_7 _inst_4 (_inst_10 i) (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (f i) g))
but is expected to have type
  forall {R : Type.{u5}} [_inst_1 : Semiring.{u5} R] {M : Type.{u4}} [_inst_2 : TopologicalSpace.{u4} M] [_inst_3 : AddCommMonoid.{u4} M] [_inst_4 : Module.{u5, u4} R M _inst_1 _inst_3] {M₂ : Type.{u2}} [_inst_5 : TopologicalSpace.{u2} M₂] [_inst_6 : AddCommMonoid.{u2} M₂] [_inst_7 : Module.{u5, u2} R M₂ _inst_1 _inst_6] {ι : Type.{u1}} {φ : ι -> Type.{u3}} [_inst_8 : forall (i : ι), TopologicalSpace.{u3} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u3} (φ i)] [_inst_10 : forall (i : ι), Module.{u5, u3} R (φ i) _inst_1 (_inst_9 i)] (f : forall (i : ι), ContinuousLinearMap.{u5, u5, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_4 (_inst_10 i)) (g : ContinuousLinearMap.{u5, u5, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M₂ _inst_5 _inst_6 M _inst_2 _inst_3 _inst_7 _inst_4), Eq.{max (max (succ u2) (succ u1)) (succ u3)} (ContinuousLinearMap.{u5, u5, u2, max u1 u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M₂ _inst_5 _inst_6 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_7 (Pi.module.{u1, u3, u5} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (ContinuousLinearMap.comp.{u5, u5, u5, u2, u4, max u1 u3} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M₂ _inst_5 _inst_6 M _inst_2 _inst_3 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) _inst_7 _inst_4 (Pi.module.{u1, u3, u5} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (RingHomCompTriple.ids.{u5, u5} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1))) (ContinuousLinearMap.pi.{u5, u4, u1, u3} R _inst_1 M _inst_2 _inst_3 _inst_4 ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_8 i) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) f) g) (ContinuousLinearMap.pi.{u5, u2, u1, u3} R _inst_1 M₂ _inst_5 _inst_6 _inst_7 ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) (fun (i : ι) => ContinuousLinearMap.comp.{u5, u5, u5, u2, u4, u3} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M₂ _inst_5 _inst_6 M _inst_2 _inst_3 (φ i) (_inst_8 i) (_inst_9 i) _inst_7 _inst_4 (_inst_10 i) (RingHomCompTriple.ids.{u5, u5} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1))) (f i) g))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.pi_comp ContinuousLinearMap.pi_compₓ'. -/
theorem pi_comp (f : ∀ i, M →L[R] φ i) (g : M₂ →L[R] M) :
    (pi f).comp g = pi fun i => (f i).comp g :=
  rfl
#align continuous_linear_map.pi_comp ContinuousLinearMap.pi_comp

#print ContinuousLinearMap.proj /-
/-- The projections from a family of topological modules are continuous linear maps. -/
def proj (i : ι) : (∀ i, φ i) →L[R] φ i :=
  ⟨LinearMap.proj i, continuous_apply _⟩
#align continuous_linear_map.proj ContinuousLinearMap.proj
-/

/- warning: continuous_linear_map.proj_apply -> ContinuousLinearMap.proj_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {ι : Type.{u2}} {φ : ι -> Type.{u3}} [_inst_8 : forall (i : ι), TopologicalSpace.{u3} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u3} (φ i)] [_inst_10 : forall (i : ι), Module.{u1, u3} R (φ i) _inst_1 (_inst_9 i)] (i : ι) (b : forall (i : ι), φ i), Eq.{succ u3} ((fun (i : ι) => φ i) i) (coeFn.{max (succ (max u2 u3)) (succ u3), max (succ (max u2 u3)) (succ u3)} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), (fun (i : ι) => φ i) i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => (fun (i : ι) => φ i) i) (fun (a : ι) => (fun (a : ι) => _inst_8 a) a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => (fun (i : ι) => φ i) i) (fun (i : ι) => (fun (i : ι) => _inst_9 i) i)) ((fun (i : ι) => φ i) i) ((fun (a : ι) => _inst_8 a) i) ((fun (i : ι) => _inst_9 i) i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => (fun (i : ι) => φ i) i) R _inst_1 (fun (i : ι) => (fun (i : ι) => _inst_9 i) i) (fun (i : ι) => (fun (i : ι) => _inst_10 i) i)) ((fun (i : ι) => _inst_10 i) i)) (fun (_x : ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), (fun (i : ι) => φ i) i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => (fun (i : ι) => φ i) i) (fun (a : ι) => (fun (a : ι) => _inst_8 a) a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => (fun (i : ι) => φ i) i) (fun (i : ι) => (fun (i : ι) => _inst_9 i) i)) ((fun (i : ι) => φ i) i) ((fun (a : ι) => _inst_8 a) i) ((fun (i : ι) => _inst_9 i) i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => (fun (i : ι) => φ i) i) R _inst_1 (fun (i : ι) => (fun (i : ι) => _inst_9 i) i) (fun (i : ι) => (fun (i : ι) => _inst_10 i) i)) ((fun (i : ι) => _inst_10 i) i)) => (forall (i : ι), (fun (i : ι) => φ i) i) -> ((fun (i : ι) => φ i) i)) (ContinuousLinearMap.toFun.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), (fun (i : ι) => φ i) i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => (fun (i : ι) => φ i) i) (fun (a : ι) => (fun (a : ι) => _inst_8 a) a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => (fun (i : ι) => φ i) i) (fun (i : ι) => (fun (i : ι) => _inst_9 i) i)) ((fun (i : ι) => φ i) i) ((fun (a : ι) => _inst_8 a) i) ((fun (i : ι) => _inst_9 i) i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => (fun (i : ι) => φ i) i) R _inst_1 (fun (i : ι) => (fun (i : ι) => _inst_9 i) i) (fun (i : ι) => (fun (i : ι) => _inst_10 i) i)) ((fun (i : ι) => _inst_10 i) i)) (ContinuousLinearMap.proj.{u1, u2, u3} R _inst_1 ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) i) b) (b i)
but is expected to have type
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {ι : Type.{u2}} {φ : ι -> Type.{u3}} [_inst_8 : forall (i : ι), TopologicalSpace.{u3} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u3} (φ i)] [_inst_10 : forall (i : ι), Module.{u1, u3} R (φ i) _inst_1 (_inst_9 i)] (i : ι) (b : forall (i : ι), φ i), Eq.{succ u3} ((fun (i_1 : forall (i : ι), φ i) => φ i) b) (FunLike.coe.{max (succ u2) (succ u3), max (succ u2) (succ u3), succ u3} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) (forall (i : ι), φ i) (fun (_x : forall (i : ι), φ i) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : forall (i : ι), φ i) => φ i) _x) (ContinuousMapClass.toFunLike.{max u2 u3, max u2 u3, u3} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) (forall (i : ι), φ i) (φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (_inst_8 i) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u3, u1, u1, max u2 u3, u3} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)))) (ContinuousLinearMap.proj.{u1, u2, u3} R _inst_1 ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) i) b) (b i)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.proj_apply ContinuousLinearMap.proj_applyₓ'. -/
@[simp]
theorem proj_apply (i : ι) (b : ∀ i, φ i) : (proj i : (∀ i, φ i) →L[R] φ i) b = b i :=
  rfl
#align continuous_linear_map.proj_apply ContinuousLinearMap.proj_apply

/- warning: continuous_linear_map.proj_pi -> ContinuousLinearMap.proj_pi is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {M₂ : Type.{u2}} [_inst_5 : TopologicalSpace.{u2} M₂] [_inst_6 : AddCommMonoid.{u2} M₂] [_inst_7 : Module.{u1, u2} R M₂ _inst_1 _inst_6] {ι : Type.{u3}} {φ : ι -> Type.{u4}} [_inst_8 : forall (i : ι), TopologicalSpace.{u4} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u4} (φ i)] [_inst_10 : forall (i : ι), Module.{u1, u4} R (φ i) _inst_1 (_inst_9 i)] (f : forall (i : ι), ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M₂ _inst_5 _inst_6 (φ i) (_inst_8 i) (_inst_9 i) _inst_7 (_inst_10 i)) (i : ι), Eq.{max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M₂ _inst_5 _inst_6 (φ i) (_inst_8 i) (_inst_9 i) _inst_7 (_inst_10 i)) (ContinuousLinearMap.comp.{u1, u1, u1, u2, max u3 u4, u4} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M₂ _inst_5 _inst_6 (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u4} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u4} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) _inst_7 (Pi.module.{u3, u4, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (ContinuousLinearMap.proj.{u1, u3, u4} R _inst_1 ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) i) (ContinuousLinearMap.pi.{u1, u2, u3, u4} R _inst_1 M₂ _inst_5 _inst_6 _inst_7 ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_8 i) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) f)) (f i)
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Semiring.{u4} R] {M₂ : Type.{u3}} [_inst_5 : TopologicalSpace.{u3} M₂] [_inst_6 : AddCommMonoid.{u3} M₂] [_inst_7 : Module.{u4, u3} R M₂ _inst_1 _inst_6] {ι : Type.{u1}} {φ : ι -> Type.{u2}} [_inst_8 : forall (i : ι), TopologicalSpace.{u2} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u2} (φ i)] [_inst_10 : forall (i : ι), Module.{u4, u2} R (φ i) _inst_1 (_inst_9 i)] (f : forall (i : ι), ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M₂ _inst_5 _inst_6 (φ i) (_inst_8 i) (_inst_9 i) _inst_7 (_inst_10 i)) (i : ι), Eq.{max (succ u3) (succ u2)} (ContinuousLinearMap.{u4, u4, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M₂ _inst_5 _inst_6 (φ i) (_inst_8 i) (_inst_9 i) _inst_7 (_inst_10 i)) (ContinuousLinearMap.comp.{u4, u4, u4, u3, max u1 u2, u2} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M₂ _inst_5 _inst_6 (forall (i : ι), φ i) (Pi.topologicalSpace.{u1, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u1, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) _inst_7 (Pi.module.{u1, u2, u4} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (RingHomCompTriple.ids.{u4, u4} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1))) (ContinuousLinearMap.proj.{u4, u1, u2} R _inst_1 ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) i) (ContinuousLinearMap.pi.{u4, u3, u1, u2} R _inst_1 M₂ _inst_5 _inst_6 _inst_7 ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_8 i) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) f)) (f i)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.proj_pi ContinuousLinearMap.proj_piₓ'. -/
theorem proj_pi (f : ∀ i, M₂ →L[R] φ i) (i : ι) : (proj i).comp (pi f) = f i :=
  ext fun c => rfl
#align continuous_linear_map.proj_pi ContinuousLinearMap.proj_pi

/- warning: continuous_linear_map.infi_ker_proj -> ContinuousLinearMap.iInf_ker_proj is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {ι : Type.{u2}} {φ : ι -> Type.{u3}} [_inst_8 : forall (i : ι), TopologicalSpace.{u3} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u3} (φ i)] [_inst_10 : forall (i : ι), Module.{u1, u3} R (φ i) _inst_1 (_inst_9 i)], Eq.{succ (max u2 u3)} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (iInf.{max u2 u3, succ u2} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.hasInf.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) ι (fun (i : ι) => LinearMap.ker.{u1, u1, max u2 u3, u3, max u2 u3} R R (forall (i : ι), φ i) (φ i) _inst_1 _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, max u2 u3, u3} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i))) (ContinuousLinearMap.proj.{u1, u2, u3} R _inst_1 ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) i))) (Bot.bot.{max u2 u3} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.hasBot.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))))
but is expected to have type
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {ι : Type.{u3}} {φ : ι -> Type.{u2}} [_inst_8 : forall (i : ι), TopologicalSpace.{u2} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u2} (φ i)] [_inst_10 : forall (i : ι), Module.{u1, u2} R (φ i) _inst_1 (_inst_9 i)], Eq.{max (succ u3) (succ u2)} (Submodule.{u1, max u3 u2} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u3, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u3, u2, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (iInf.{max u3 u2, succ u3} (Submodule.{u1, max u3 u2} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u3, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u3, u2, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.instInfSetSubmodule.{u1, max u3 u2} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u3, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u3, u2, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) ι (fun (i : ι) => LinearMap.ker.{u1, u1, max u3 u2, u2, max u3 u2} R R (forall (i : ι), φ i) (φ i) _inst_1 _inst_1 (Pi.addCommMonoid.{u3, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (_inst_9 i) (Pi.module.{u3, u2, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (ContinuousLinearMap.{u1, u1, max u3 u2, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u3, u2, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u2, u1, u1, max u3 u2, u2} (ContinuousLinearMap.{u1, u1, max u3 u2, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u3, u2, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u3, u2, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, max u3 u2, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u3, u2} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u3, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u3, u2, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i))) (ContinuousLinearMap.proj.{u1, u3, u2} R _inst_1 ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) i))) (Bot.bot.{max u3 u2} (Submodule.{u1, max u3 u2} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u3, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u3, u2, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.instBotSubmodule.{u1, max u3 u2} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u3, u2} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u3, u2, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.infi_ker_proj ContinuousLinearMap.iInf_ker_projₓ'. -/
theorem iInf_ker_proj : (⨅ i, ker (proj i : (∀ i, φ i) →L[R] φ i) : Submodule R (∀ i, φ i)) = ⊥ :=
  LinearMap.iInf_ker_proj
#align continuous_linear_map.infi_ker_proj ContinuousLinearMap.iInf_ker_proj

variable (R φ)

/- warning: continuous_linear_map.infi_ker_proj_equiv -> ContinuousLinearMap.iInfKerProjEquiv is a dubious translation:
lean 3 declaration is
  forall (R : Type.{u1}) [_inst_1 : Semiring.{u1} R] {ι : Type.{u2}} (φ : ι -> Type.{u3}) [_inst_8 : forall (i : ι), TopologicalSpace.{u3} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u3} (φ i)] [_inst_10 : forall (i : ι), Module.{u1, u3} R (φ i) _inst_1 (_inst_9 i)] {I : Set.{u2} ι} {J : Set.{u2} ι} [_inst_11 : DecidablePred.{succ u2} ι (fun (i : ι) => Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) i I)], (Disjoint.{u2} (Set.{u2} ι) (CompleteSemilatticeInf.toPartialOrder.{u2} (Set.{u2} ι) (CompleteLattice.toCompleteSemilatticeInf.{u2} (Set.{u2} ι) (Order.Coframe.toCompleteLattice.{u2} (Set.{u2} ι) (CompleteDistribLattice.toCoframe.{u2} (Set.{u2} ι) (CompleteBooleanAlgebra.toCompleteDistribLattice.{u2} (Set.{u2} ι) (Set.completeBooleanAlgebra.{u2} ι)))))) (GeneralizedBooleanAlgebra.toOrderBot.{u2} (Set.{u2} ι) (BooleanAlgebra.toGeneralizedBooleanAlgebra.{u2} (Set.{u2} ι) (Set.booleanAlgebra.{u2} ι))) I J) -> (HasSubset.Subset.{u2} (Set.{u2} ι) (Set.hasSubset.{u2} ι) (Set.univ.{u2} ι) (Union.union.{u2} (Set.{u2} ι) (Set.hasUnion.{u2} ι) I J)) -> (ContinuousLinearEquiv.{u1, u1, max u2 u3, max u2 u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (coeSort.{succ (max u2 u3), succ (succ (max u2 u3))} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) Type.{max u2 u3} (SetLike.hasCoeToSort.{max u2 u3, max u2 u3} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (forall (i : ι), φ i) (Submodule.setLike.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)))) (iInf.{max u2 u3, succ u2} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.hasInf.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) ι (fun (i : ι) => iInf.{max u2 u3, 0} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.hasInf.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) i J) (fun (H : Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) i J) => LinearMap.ker.{u1, u1, max u2 u3, u3, max u2 u3} R R (forall (i : ι), φ i) (φ i) _inst_1 _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, max u2 u3, u3} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i))) (ContinuousLinearMap.proj.{u1, u2, u3} R _inst_1 ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) i))))) (Subtype.topologicalSpace.{max u2 u3} (forall (i : ι), φ i) (fun (x : forall (i : ι), φ i) => Membership.Mem.{max u2 u3, max u2 u3} (forall (i : ι), φ i) (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (SetLike.hasMem.{max u2 u3, max u2 u3} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (forall (i : ι), φ i) (Submodule.setLike.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)))) x (iInf.{max u2 u3, succ u2} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.hasInf.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) ι (fun (i : ι) => iInf.{max u2 u3, 0} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.hasInf.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) i J) (fun (H : Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) i J) => LinearMap.ker.{u1, u1, max u2 u3, u3, max u2 u3} R R (forall (i : ι), φ i) (φ i) _inst_1 _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, max u2 u3, u3} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i))) (ContinuousLinearMap.proj.{u1, u2, u3} R _inst_1 ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) i))))) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a))) (Submodule.addCommMonoid.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (iInf.{max u2 u3, succ u2} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.hasInf.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) ι (fun (i : ι) => iInf.{max u2 u3, 0} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.hasInf.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) i J) (fun (H : Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) i J) => LinearMap.ker.{u1, u1, max u2 u3, u3, max u2 u3} R R (forall (i : ι), φ i) (φ i) _inst_1 _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, max u2 u3, u3} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i))) (ContinuousLinearMap.proj.{u1, u2, u3} R _inst_1 ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) i))))) (forall (i : coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I), φ ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (HasLiftT.mk.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (CoeTCₓ.coe.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (coeBase.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (coeSubtype.{succ u2} ι (fun (x : ι) => Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) x I))))) i)) (Pi.topologicalSpace.{u2, u3} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) (fun (i : coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) => φ ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (HasLiftT.mk.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (CoeTCₓ.coe.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (coeBase.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (coeSubtype.{succ u2} ι (fun (x : ι) => Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) x I))))) i)) (fun (a : coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) => _inst_8 ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (HasLiftT.mk.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (CoeTCₓ.coe.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (coeBase.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (coeSubtype.{succ u2} ι (fun (x : ι) => Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) x I))))) a))) (Pi.addCommMonoid.{u2, u3} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) (fun (i : coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) => φ ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (HasLiftT.mk.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (CoeTCₓ.coe.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (coeBase.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (coeSubtype.{succ u2} ι (fun (x : ι) => Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) x I))))) i)) (fun (i : coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) => _inst_9 ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (HasLiftT.mk.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (CoeTCₓ.coe.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (coeBase.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (coeSubtype.{succ u2} ι (fun (x : ι) => Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) x I))))) i))) (Submodule.module.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (iInf.{max u2 u3, succ u2} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.hasInf.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) ι (fun (i : ι) => iInf.{max u2 u3, 0} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.hasInf.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) i J) (fun (H : Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) i J) => LinearMap.ker.{u1, u1, max u2 u3, u3, max u2 u3} R R (forall (i : ι), φ i) (φ i) _inst_1 _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, max u2 u3, u3} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i))) (ContinuousLinearMap.proj.{u1, u2, u3} R _inst_1 ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) i))))) (Pi.module.{u2, u3, u1} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) (fun (i : coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) => φ ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (HasLiftT.mk.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (CoeTCₓ.coe.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (coeBase.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (coeSubtype.{succ u2} ι (fun (x : ι) => Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) x I))))) i)) R _inst_1 (fun (i : coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) => _inst_9 ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (HasLiftT.mk.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (CoeTCₓ.coe.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (coeBase.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (coeSubtype.{succ u2} ι (fun (x : ι) => Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) x I))))) i)) (fun (i : coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) => _inst_10 ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (HasLiftT.mk.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (CoeTCₓ.coe.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (coeBase.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Set.{u2} ι) Type.{u2} (Set.hasCoeToSort.{u2} ι) I) ι (coeSubtype.{succ u2} ι (fun (x : ι) => Membership.Mem.{u2, u2} ι (Set.{u2} ι) (Set.hasMem.{u2} ι) x I))))) i))))
but is expected to have type
  forall (R : Type.{u1}) [_inst_1 : Semiring.{u1} R] {ι : Type.{u2}} (φ : ι -> Type.{u3}) [_inst_8 : forall (i : ι), TopologicalSpace.{u3} (φ i)] [_inst_9 : forall (i : ι), AddCommMonoid.{u3} (φ i)] [_inst_10 : forall (i : ι), Module.{u1, u3} R (φ i) _inst_1 (_inst_9 i)] {I : Set.{u2} ι} {J : Set.{u2} ι} [_inst_11 : DecidablePred.{succ u2} ι (fun (i : ι) => Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) i I)], (Disjoint.{u2} (Set.{u2} ι) (OmegaCompletePartialOrder.toPartialOrder.{u2} (Set.{u2} ι) (CompleteLattice.instOmegaCompletePartialOrder.{u2} (Set.{u2} ι) (Order.Coframe.toCompleteLattice.{u2} (Set.{u2} ι) (CompleteDistribLattice.toCoframe.{u2} (Set.{u2} ι) (CompleteBooleanAlgebra.toCompleteDistribLattice.{u2} (Set.{u2} ι) (Set.instCompleteBooleanAlgebraSet.{u2} ι)))))) (BoundedOrder.toOrderBot.{u2} (Set.{u2} ι) (Preorder.toLE.{u2} (Set.{u2} ι) (PartialOrder.toPreorder.{u2} (Set.{u2} ι) (OmegaCompletePartialOrder.toPartialOrder.{u2} (Set.{u2} ι) (CompleteLattice.instOmegaCompletePartialOrder.{u2} (Set.{u2} ι) (Order.Coframe.toCompleteLattice.{u2} (Set.{u2} ι) (CompleteDistribLattice.toCoframe.{u2} (Set.{u2} ι) (CompleteBooleanAlgebra.toCompleteDistribLattice.{u2} (Set.{u2} ι) (Set.instCompleteBooleanAlgebraSet.{u2} ι)))))))) (CompleteLattice.toBoundedOrder.{u2} (Set.{u2} ι) (Order.Coframe.toCompleteLattice.{u2} (Set.{u2} ι) (CompleteDistribLattice.toCoframe.{u2} (Set.{u2} ι) (CompleteBooleanAlgebra.toCompleteDistribLattice.{u2} (Set.{u2} ι) (Set.instCompleteBooleanAlgebraSet.{u2} ι)))))) I J) -> (HasSubset.Subset.{u2} (Set.{u2} ι) (Set.instHasSubsetSet.{u2} ι) (Set.univ.{u2} ι) (Union.union.{u2} (Set.{u2} ι) (Set.instUnionSet.{u2} ι) I J)) -> (ContinuousLinearEquiv.{u1, u1, max u2 u3, max u2 u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Subtype.{succ (max u2 u3)} (forall (i : ι), φ i) (fun (x : forall (i : ι), φ i) => Membership.mem.{max u2 u3, max u2 u3} (forall (i : ι), φ i) (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (SetLike.instMembership.{max u2 u3, max u2 u3} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (forall (i : ι), φ i) (Submodule.setLike.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)))) x (iInf.{max u2 u3, succ u2} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.instInfSetSubmodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) ι (fun (i : ι) => iInf.{max u2 u3, 0} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.instInfSetSubmodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) i J) (fun (h._@.Mathlib.Topology.Algebra.Module.Basic._hyg.34403 : Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) i J) => LinearMap.ker.{u1, u1, max u2 u3, u3, max u2 u3} R R (forall (i : ι), φ i) (φ i) _inst_1 _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, max u2 u3, u3} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i))) (ContinuousLinearMap.proj.{u1, u2, u3} R _inst_1 ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) i)))))) (instTopologicalSpaceSubtype.{max u2 u3} (forall (i : ι), φ i) (fun (x : forall (i : ι), φ i) => Membership.mem.{max u2 u3, max u2 u3} (forall (i : ι), φ i) (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (SetLike.instMembership.{max u2 u3, max u2 u3} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (forall (i : ι), φ i) (Submodule.setLike.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)))) x (iInf.{max u2 u3, succ u2} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.instInfSetSubmodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) ι (fun (i : ι) => iInf.{max u2 u3, 0} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.instInfSetSubmodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) i J) (fun (H : Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) i J) => LinearMap.ker.{u1, u1, max u2 u3, u3, max u2 u3} R R (forall (i : ι), φ i) (φ i) _inst_1 _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, max u2 u3, u3} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i))) (ContinuousLinearMap.proj.{u1, u2, u3} R _inst_1 ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) i))))) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a))) (Submodule.addCommMonoid.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (iInf.{max u2 u3, succ u2} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.instInfSetSubmodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) ι (fun (i : ι) => iInf.{max u2 u3, 0} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.instInfSetSubmodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) i J) (fun (H : Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) i J) => LinearMap.ker.{u1, u1, max u2 u3, u3, max u2 u3} R R (forall (i : ι), φ i) (φ i) _inst_1 _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, max u2 u3, u3} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i))) (ContinuousLinearMap.proj.{u1, u2, u3} R _inst_1 ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) i))))) (forall (i : Set.Elem.{u2} ι I), φ (Subtype.val.{succ u2} ι (fun (x : ι) => Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) x I) i)) (Pi.topologicalSpace.{u2, u3} (Set.Elem.{u2} ι I) (fun (i : Set.Elem.{u2} ι I) => φ (Subtype.val.{succ u2} ι (fun (x : ι) => Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) x I) i)) (fun (a : Set.Elem.{u2} ι I) => _inst_8 (Subtype.val.{succ u2} ι (fun (x : ι) => Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) x I) a))) (Pi.addCommMonoid.{u2, u3} (Set.Elem.{u2} ι I) (fun (i : Set.Elem.{u2} ι I) => φ (Subtype.val.{succ u2} ι (fun (x : ι) => Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) x I) i)) (fun (i : Set.Elem.{u2} ι I) => _inst_9 (Subtype.val.{succ u2} ι (fun (x : ι) => Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) x I) i))) (Submodule.module.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (iInf.{max u2 u3, succ u2} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.instInfSetSubmodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) ι (fun (i : ι) => iInf.{max u2 u3, 0} (Submodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Submodule.instInfSetSubmodule.{u1, max u2 u3} R (forall (i : ι), φ i) _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i))) (Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) i J) (fun (H : Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) i J) => LinearMap.ker.{u1, u1, max u2 u3, u3, max u2 u3} R R (forall (i : ι), φ i) (φ i) _inst_1 _inst_1 (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, max u2 u3, u3} (ContinuousLinearMap.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i)) R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, max u2 u3, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (forall (i : ι), φ i) (Pi.topologicalSpace.{u2, u3} ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a)) (Pi.addCommMonoid.{u2, u3} ι (fun (i : ι) => φ i) (fun (i : ι) => _inst_9 i)) (φ i) (_inst_8 i) (_inst_9 i) (Pi.module.{u2, u3, u1} ι (fun (i : ι) => φ i) R _inst_1 (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i)) (_inst_10 i))) (ContinuousLinearMap.proj.{u1, u2, u3} R _inst_1 ι (fun (i : ι) => φ i) (fun (a : ι) => _inst_8 a) (fun (i : ι) => _inst_9 i) (fun (i : ι) => _inst_10 i) i))))) (Pi.module.{u2, u3, u1} (Set.Elem.{u2} ι I) (fun (i : Set.Elem.{u2} ι I) => φ (Subtype.val.{succ u2} ι (fun (x : ι) => Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) x I) i)) R _inst_1 (fun (i : Set.Elem.{u2} ι I) => _inst_9 (Subtype.val.{succ u2} ι (fun (x : ι) => Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) x I) i)) (fun (i : Set.Elem.{u2} ι I) => _inst_10 (Subtype.val.{succ u2} ι (fun (x : ι) => Membership.mem.{u2, u2} ι (Set.{u2} ι) (Set.instMembershipSet.{u2} ι) x I) i))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.infi_ker_proj_equiv ContinuousLinearMap.iInfKerProjEquivₓ'. -/
/-- If `I` and `J` are complementary index sets, the product of the kernels of the `J`th projections
of `φ` is linearly equivalent to the product over `I`. -/
def iInfKerProjEquiv {I J : Set ι} [DecidablePred fun i => i ∈ I] (hd : Disjoint I J)
    (hu : Set.univ ⊆ I ∪ J) :
    (⨅ i ∈ J, ker (proj i : (∀ i, φ i) →L[R] φ i) : Submodule R (∀ i, φ i)) ≃L[R] ∀ i : I, φ i
    where
  toLinearEquiv := LinearMap.iInfKerProjEquiv R φ hd hu
  continuous_toFun :=
    continuous_pi fun i =>
      by
      have :=
        @continuous_subtype_val _ _ fun x =>
          x ∈ (⨅ i ∈ J, ker (proj i : (∀ i, φ i) →L[R] φ i) : Submodule R (∀ i, φ i))
      have := Continuous.comp (continuous_apply i) this
      exact this
  continuous_invFun :=
    Continuous.subtype_mk
      (continuous_pi fun i => by dsimp;
        split_ifs <;> [apply continuous_apply, exact continuous_zero])
      _
#align continuous_linear_map.infi_ker_proj_equiv ContinuousLinearMap.iInfKerProjEquiv

end Pi

section Ring

variable {R : Type _} [Ring R] {R₂ : Type _} [Ring R₂] {R₃ : Type _} [Ring R₃] {M : Type _}
  [TopologicalSpace M] [AddCommGroup M] {M₂ : Type _} [TopologicalSpace M₂] [AddCommGroup M₂]
  {M₃ : Type _} [TopologicalSpace M₃] [AddCommGroup M₃] {M₄ : Type _} [TopologicalSpace M₄]
  [AddCommGroup M₄] [Module R M] [Module R₂ M₂] [Module R₃ M₃] {σ₁₂ : R →+* R₂} {σ₂₃ : R₂ →+* R₃}
  {σ₁₃ : R →+* R₃}

section

/- warning: continuous_linear_map.map_neg -> ContinuousLinearMap.map_neg is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M] [_inst_5 : AddCommGroup.{u3} M] {M₂ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₂] [_inst_7 : AddCommGroup.{u4} M₂] [_inst_12 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5)] [_inst_13 : Module.{u2, u4} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} (f : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (x : M), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) f (Neg.neg.{u3} M (SubNegMonoid.toHasNeg.{u3} M (AddGroup.toSubNegMonoid.{u3} M (AddCommGroup.toAddGroup.{u3} M _inst_5))) x)) (Neg.neg.{u4} M₂ (SubNegMonoid.toHasNeg.{u4} M₂ (AddGroup.toSubNegMonoid.{u4} M₂ (AddCommGroup.toAddGroup.{u4} M₂ _inst_7))) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) f x))
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Ring.{u4} R] {R₂ : Type.{u3}} [_inst_2 : Ring.{u3} R₂] {M : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M] [_inst_5 : AddCommGroup.{u2} M] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_12 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5)] [_inst_13 : Module.{u3, u1} R₂ M₂ (Ring.toSemiring.{u3} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] {σ₁₂ : RingHom.{u4, u3} R R₂ (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1)) (Semiring.toNonAssocSemiring.{u3} R₂ (Ring.toSemiring.{u3} R₂ _inst_2))} (f : ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (x : M), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) (Neg.neg.{u2} M (NegZeroClass.toNeg.{u2} M (SubNegZeroMonoid.toNegZeroClass.{u2} M (SubtractionMonoid.toSubNegZeroMonoid.{u2} M (SubtractionCommMonoid.toSubtractionMonoid.{u2} M (AddCommGroup.toDivisionAddCommMonoid.{u2} M _inst_5))))) x)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) f (Neg.neg.{u2} M (NegZeroClass.toNeg.{u2} M (SubNegZeroMonoid.toNegZeroClass.{u2} M (SubtractionMonoid.toSubNegZeroMonoid.{u2} M (SubtractionCommMonoid.toSubtractionMonoid.{u2} M (AddCommGroup.toDivisionAddCommMonoid.{u2} M _inst_5))))) x)) (Neg.neg.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (NegZeroClass.toNeg.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (SubNegZeroMonoid.toNegZeroClass.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (SubtractionMonoid.toSubNegZeroMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (SubtractionCommMonoid.toSubtractionMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (AddCommGroup.toDivisionAddCommMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) _inst_7))))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) f x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.map_neg ContinuousLinearMap.map_negₓ'. -/
protected theorem map_neg (f : M →SL[σ₁₂] M₂) (x : M) : f (-x) = -f x :=
  map_neg _ _
#align continuous_linear_map.map_neg ContinuousLinearMap.map_neg

/- warning: continuous_linear_map.map_sub -> ContinuousLinearMap.map_sub is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M] [_inst_5 : AddCommGroup.{u3} M] {M₂ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₂] [_inst_7 : AddCommGroup.{u4} M₂] [_inst_12 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5)] [_inst_13 : Module.{u2, u4} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} (f : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (x : M) (y : M), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) f (HSub.hSub.{u3, u3, u3} M M M (instHSub.{u3} M (SubNegMonoid.toHasSub.{u3} M (AddGroup.toSubNegMonoid.{u3} M (AddCommGroup.toAddGroup.{u3} M _inst_5)))) x y)) (HSub.hSub.{u4, u4, u4} M₂ M₂ M₂ (instHSub.{u4} M₂ (SubNegMonoid.toHasSub.{u4} M₂ (AddGroup.toSubNegMonoid.{u4} M₂ (AddCommGroup.toAddGroup.{u4} M₂ _inst_7)))) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) f x) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) f y))
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Ring.{u4} R] {R₂ : Type.{u3}} [_inst_2 : Ring.{u3} R₂] {M : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M] [_inst_5 : AddCommGroup.{u2} M] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_12 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5)] [_inst_13 : Module.{u3, u1} R₂ M₂ (Ring.toSemiring.{u3} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] {σ₁₂ : RingHom.{u4, u3} R R₂ (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1)) (Semiring.toNonAssocSemiring.{u3} R₂ (Ring.toSemiring.{u3} R₂ _inst_2))} (f : ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (x : M) (y : M), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) (HSub.hSub.{u2, u2, u2} M M M (instHSub.{u2} M (SubNegMonoid.toSub.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_5)))) x y)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) f (HSub.hSub.{u2, u2, u2} M M M (instHSub.{u2} M (SubNegMonoid.toSub.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_5)))) x y)) (HSub.hSub.{u1, u1, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) y) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (instHSub.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (SubNegMonoid.toSub.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (AddGroup.toSubNegMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (AddCommGroup.toAddGroup.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) _inst_7)))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) f x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) f y))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.map_sub ContinuousLinearMap.map_subₓ'. -/
protected theorem map_sub (f : M →SL[σ₁₂] M₂) (x y : M) : f (x - y) = f x - f y :=
  map_sub _ _ _
#align continuous_linear_map.map_sub ContinuousLinearMap.map_sub

/- warning: continuous_linear_map.sub_apply' -> ContinuousLinearMap.sub_apply' is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M] [_inst_5 : AddCommGroup.{u3} M] {M₂ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₂] [_inst_7 : AddCommGroup.{u4} M₂] [_inst_12 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5)] [_inst_13 : Module.{u2, u4} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} (f : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (g : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (x : M), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂) (HSub.hSub.{max u3 u4, max u3 u4, max u3 u4} (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (instHSub.{max u3 u4} (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.hasSub.{u1, u2, u3, u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_7 _inst_12 _inst_13 σ₁₂)) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)))) f) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)))) g)) x) (HSub.hSub.{u4, u4, u4} M₂ M₂ M₂ (instHSub.{u4} M₂ (SubNegMonoid.toHasSub.{u4} M₂ (AddGroup.toSubNegMonoid.{u4} M₂ (AddCommGroup.toAddGroup.{u4} M₂ _inst_7)))) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) f x) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) g x))
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Ring.{u4} R] {R₂ : Type.{u3}} [_inst_2 : Ring.{u3} R₂] {M : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M] [_inst_5 : AddCommGroup.{u2} M] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_12 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5)] [_inst_13 : Module.{u3, u1} R₂ M₂ (Ring.toSemiring.{u3} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] {σ₁₂ : RingHom.{u4, u3} R R₂ (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1)) (Semiring.toNonAssocSemiring.{u3} R₂ (Ring.toSemiring.{u3} R₂ _inst_2))} (f : ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (g : ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (x : M), Eq.{succ u1} ((fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M) => M₂) x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (LinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M) => M₂) _x) (LinearMap.instFunLikeLinearMap.{u4, u3, u2, u1} R R₂ M M₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂) (HSub.hSub.{max u2 u1, max u2 u1, max u2 u1} (LinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (instHSub.{max u2 u1} (LinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.instSubLinearMapToAddCommMonoid.{u4, u3, u2, u1} R R₂ M M₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) _inst_7 _inst_12 _inst_13 σ₁₂)) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 f) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 g)) x) (HSub.hSub.{u1, u1, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (instHSub.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (SubNegMonoid.toSub.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (AddGroup.toSubNegMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (AddCommGroup.toAddGroup.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) _inst_7)))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) f x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) g x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.sub_apply' ContinuousLinearMap.sub_apply'ₓ'. -/
@[simp]
theorem sub_apply' (f g : M →SL[σ₁₂] M₂) (x : M) : ((f : M →ₛₗ[σ₁₂] M₂) - g) x = f x - g x :=
  rfl
#align continuous_linear_map.sub_apply' ContinuousLinearMap.sub_apply'

end

section

variable [Module R M₂] [Module R M₃] [Module R M₄]

/- warning: continuous_linear_map.range_prod_eq -> ContinuousLinearMap.range_prod_eq is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {M : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M] [_inst_5 : AddCommGroup.{u2} M] {M₂ : Type.{u3}} [_inst_6 : TopologicalSpace.{u3} M₂] [_inst_7 : AddCommGroup.{u3} M₂] {M₃ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₃] [_inst_9 : AddCommGroup.{u4} M₃] [_inst_12 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5)] [_inst_15 : Module.{u1, u3} R M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)] [_inst_16 : Module.{u1, u4} R M₃ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9)] {f : ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15} {g : ContinuousLinearMap.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16}, (Eq.{succ u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) _inst_12) (Sup.sup.{u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) _inst_12) (SemilatticeSup.toHasSup.{u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) _inst_12) (Lattice.toSemilatticeSup.{u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) _inst_12) (ConditionallyCompleteLattice.toLattice.{u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) _inst_12) (CompleteLattice.toConditionallyCompleteLattice.{u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) _inst_12) (Submodule.completeLattice.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) _inst_12))))) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15)) f) (LinearMap.ker.{u1, u1, u2, u4, max u2 u4} R R M M₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u4, u1, u1, u2, u4} (ContinuousLinearMap.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16)) g)) (Top.top.{u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) _inst_12) (Submodule.hasTop.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) _inst_12))) -> (Eq.{succ (max u3 u4)} (Submodule.{u1, max u3 u4} R (Prod.{u3, u4} M₂ M₃) (Ring.toSemiring.{u1} R _inst_1) (Prod.addCommMonoid.{u3, u4} M₂ M₃ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9)) (Prod.module.{u1, u3, u4} R M₂ M₃ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16)) (LinearMap.range.{u1, u1, u2, max u3 u4, max u2 u3 u4} R R M (Prod.{u3, u4} M₂ M₃) (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (Prod.addCommMonoid.{u3, u4} M₂ M₃ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9)) _inst_12 (Prod.module.{u1, u3, u4} R M₂ M₃ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_6 _inst_8) (Prod.addCommMonoid.{u3, u4} M₂ M₃ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9)) _inst_12 (Prod.module.{u1, u3, u4} R M₂ M₃ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16)) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3 u4, u1, u1, u2, max u3 u4} (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_6 _inst_8) (Prod.addCommMonoid.{u3, u4} M₂ M₃ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9)) _inst_12 (Prod.module.{u1, u3, u4} R M₂ M₃ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16)) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_6 _inst_8) (Prod.addCommMonoid.{u3, u4} M₂ M₃ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9)) _inst_12 (Prod.module.{u1, u3, u4} R M₂ M₃ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16) (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, max u3 u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (Prod.{u3, u4} M₂ M₃) (Prod.topologicalSpace.{u3, u4} M₂ M₃ _inst_6 _inst_8) (Prod.addCommMonoid.{u3, u4} M₂ M₃ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9)) _inst_12 (Prod.module.{u1, u3, u4} R M₂ M₃ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16))) (RingHomSurjective.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (ContinuousLinearMap.prod.{u1, u2, u3, u4} R (Ring.toSemiring.{u1} R _inst_1) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_15 _inst_16 f g)) (Submodule.prod.{u1, u3, u4} R M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_15 (LinearMap.range.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15)) (RingHomSurjective.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) f) M₃ (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_16 (LinearMap.range.{u1, u1, u2, u4, max u2 u4} R R M M₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u4, u1, u1, u2, u4} (ContinuousLinearMap.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16)) (RingHomSurjective.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) g)))
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Ring.{u4} R] {M : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M] [_inst_5 : AddCommGroup.{u3} M] {M₂ : Type.{u2}} [_inst_6 : TopologicalSpace.{u2} M₂] [_inst_7 : AddCommGroup.{u2} M₂] {M₃ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₃] [_inst_9 : AddCommGroup.{u1} M₃] [_inst_12 : Module.{u4, u3} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5)] [_inst_15 : Module.{u4, u2} R M₂ (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7)] [_inst_16 : Module.{u4, u1} R M₃ (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9)] {f : ContinuousLinearMap.{u4, u4, u3, u2} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) _inst_12 _inst_15} {g : ContinuousLinearMap.{u4, u4, u3, u1} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_12 _inst_16}, (Eq.{succ u3} (Submodule.{u4, u3} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (Sup.sup.{u3} (Submodule.{u4, u3} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (SemilatticeSup.toSup.{u3} (Submodule.{u4, u3} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (Lattice.toSemilatticeSup.{u3} (Submodule.{u4, u3} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (ConditionallyCompleteLattice.toLattice.{u3} (Submodule.{u4, u3} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (CompleteLattice.toConditionallyCompleteLattice.{u3} (Submodule.{u4, u3} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (Submodule.completeLattice.{u4, u3} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12))))) (LinearMap.ker.{u4, u4, u3, u2, max u3 u2} R R M M₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) _inst_12 _inst_15 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) (ContinuousLinearMap.{u4, u4, u3, u2} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) _inst_12 _inst_15) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u2, u4, u4, u3, u2} (ContinuousLinearMap.{u4, u4, u3, u2} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) _inst_12 _inst_15) R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) _inst_12 _inst_15 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u3, u2} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) _inst_12 _inst_15)) f) (LinearMap.ker.{u4, u4, u3, u1, max u3 u1} R R M M₃ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_12 _inst_16 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) (ContinuousLinearMap.{u4, u4, u3, u1} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_12 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u1, u4, u4, u3, u1} (ContinuousLinearMap.{u4, u4, u3, u1} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_12 _inst_16) R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_12 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u3, u1} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_12 _inst_16)) g)) (Top.top.{u3} (Submodule.{u4, u3} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (Submodule.instTopSubmodule.{u4, u3} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12))) -> (Eq.{max (succ u2) (succ u1)} (Submodule.{u4, max u2 u1} R (Prod.{u2, u1} M₂ M₃) (Ring.toSemiring.{u4} R _inst_1) (Prod.instAddCommMonoidSum.{u2, u1} M₂ M₃ (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9)) (Prod.module.{u4, u2, u1} R M₂ M₃ (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_15 _inst_16)) (LinearMap.range.{u4, u4, u3, max u2 u1, max (max u3 u2) u1} R R M (Prod.{u2, u1} M₂ M₃) (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (Prod.instAddCommMonoidSum.{u2, u1} M₂ M₃ (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9)) _inst_12 (Prod.module.{u4, u2, u1} R M₂ M₃ (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_15 _inst_16) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) (ContinuousLinearMap.{u4, u4, u3, max u1 u2} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (Prod.{u2, u1} M₂ M₃) (instTopologicalSpaceProd.{u2, u1} M₂ M₃ _inst_6 _inst_8) (Prod.instAddCommMonoidSum.{u2, u1} M₂ M₃ (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9)) _inst_12 (Prod.module.{u4, u2, u1} R M₂ M₃ (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_15 _inst_16)) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max (max u3 u2) u1, u4, u4, u3, max u2 u1} (ContinuousLinearMap.{u4, u4, u3, max u1 u2} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (Prod.{u2, u1} M₂ M₃) (instTopologicalSpaceProd.{u2, u1} M₂ M₃ _inst_6 _inst_8) (Prod.instAddCommMonoidSum.{u2, u1} M₂ M₃ (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9)) _inst_12 (Prod.module.{u4, u2, u1} R M₂ M₃ (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_15 _inst_16)) R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (Prod.{u2, u1} M₂ M₃) (instTopologicalSpaceProd.{u2, u1} M₂ M₃ _inst_6 _inst_8) (Prod.instAddCommMonoidSum.{u2, u1} M₂ M₃ (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9)) _inst_12 (Prod.module.{u4, u2, u1} R M₂ M₃ (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_15 _inst_16) (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u3, max u2 u1} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (Prod.{u2, u1} M₂ M₃) (instTopologicalSpaceProd.{u2, u1} M₂ M₃ _inst_6 _inst_8) (Prod.instAddCommMonoidSum.{u2, u1} M₂ M₃ (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9)) _inst_12 (Prod.module.{u4, u2, u1} R M₂ M₃ (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_15 _inst_16))) (RingHomSurjective.ids.{u4} R (Ring.toSemiring.{u4} R _inst_1)) (ContinuousLinearMap.prod.{u4, u3, u2, u1} R (Ring.toSemiring.{u4} R _inst_1) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_12 _inst_15 _inst_16 f g)) (Submodule.prod.{u4, u2, u1} R M₂ (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) _inst_15 (LinearMap.range.{u4, u4, u3, u2, max u3 u2} R R M M₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) _inst_12 _inst_15 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) (ContinuousLinearMap.{u4, u4, u3, u2} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) _inst_12 _inst_15) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u2, u4, u4, u3, u2} (ContinuousLinearMap.{u4, u4, u3, u2} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) _inst_12 _inst_15) R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) _inst_12 _inst_15 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u3, u2} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) _inst_12 _inst_15)) (RingHomSurjective.ids.{u4} R (Ring.toSemiring.{u4} R _inst_1)) f) M₃ (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_16 (LinearMap.range.{u4, u4, u3, u1, max u3 u1} R R M M₃ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_12 _inst_16 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) (ContinuousLinearMap.{u4, u4, u3, u1} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_12 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u1, u4, u4, u3, u1} (ContinuousLinearMap.{u4, u4, u3, u1} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_12 _inst_16) R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_12 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u3, u1} R R (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u4} R _inst_1) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₃ _inst_9) _inst_12 _inst_16)) (RingHomSurjective.ids.{u4} R (Ring.toSemiring.{u4} R _inst_1)) g)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.range_prod_eq ContinuousLinearMap.range_prod_eqₓ'. -/
theorem range_prod_eq {f : M →L[R] M₂} {g : M →L[R] M₃} (h : ker f ⊔ ker g = ⊤) :
    range (f.Prod g) = (range f).Prod (range g) :=
  LinearMap.range_prod_eq h
#align continuous_linear_map.range_prod_eq ContinuousLinearMap.range_prod_eq

/- warning: continuous_linear_map.ker_prod_ker_le_ker_coprod -> ContinuousLinearMap.ker_prod_ker_le_ker_coprod is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {M : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M] [_inst_5 : AddCommGroup.{u2} M] {M₂ : Type.{u3}} [_inst_6 : TopologicalSpace.{u3} M₂] [_inst_7 : AddCommGroup.{u3} M₂] {M₃ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₃] [_inst_9 : AddCommGroup.{u4} M₃] [_inst_12 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5)] [_inst_15 : Module.{u1, u3} R M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)] [_inst_16 : Module.{u1, u4} R M₃ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9)] [_inst_18 : ContinuousAdd.{u4} M₃ _inst_8 (AddZeroClass.toHasAdd.{u4} M₃ (AddMonoid.toAddZeroClass.{u4} M₃ (SubNegMonoid.toAddMonoid.{u4} M₃ (AddGroup.toSubNegMonoid.{u4} M₃ (AddCommGroup.toAddGroup.{u4} M₃ _inst_9)))))] (f : ContinuousLinearMap.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) (g : ContinuousLinearMap.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16), LE.le.{max u2 u3} (Submodule.{u1, max u2 u3} R (Prod.{u2, u3} M M₂) (Ring.toSemiring.{u1} R _inst_1) (Prod.addCommMonoid.{u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)) (Prod.module.{u1, u2, u3} R M M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15)) (Preorder.toHasLe.{max u2 u3} (Submodule.{u1, max u2 u3} R (Prod.{u2, u3} M M₂) (Ring.toSemiring.{u1} R _inst_1) (Prod.addCommMonoid.{u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)) (Prod.module.{u1, u2, u3} R M M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15)) (PartialOrder.toPreorder.{max u2 u3} (Submodule.{u1, max u2 u3} R (Prod.{u2, u3} M M₂) (Ring.toSemiring.{u1} R _inst_1) (Prod.addCommMonoid.{u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)) (Prod.module.{u1, u2, u3} R M M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15)) (SetLike.partialOrder.{max u2 u3, max u2 u3} (Submodule.{u1, max u2 u3} R (Prod.{u2, u3} M M₂) (Ring.toSemiring.{u1} R _inst_1) (Prod.addCommMonoid.{u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)) (Prod.module.{u1, u2, u3} R M M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15)) (Prod.{u2, u3} M M₂) (Submodule.setLike.{u1, max u2 u3} R (Prod.{u2, u3} M M₂) (Ring.toSemiring.{u1} R _inst_1) (Prod.addCommMonoid.{u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)) (Prod.module.{u1, u2, u3} R M M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15))))) (Submodule.prod.{u1, u2, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) _inst_12 (LinearMap.ker.{u1, u1, u2, u4, max u2 u4} R R M M₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u4, u1, u1, u2, u4} (ContinuousLinearMap.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16)) f) M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_15 (LinearMap.ker.{u1, u1, u3, u4, max u3 u4} R R M₂ M₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u1, u3, u4} (ContinuousLinearMap.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16)) g)) (LinearMap.ker.{u1, u1, max u2 u3, u4, max (max u2 u3) u4} R R (Prod.{u2, u3} M M₂) M₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (Prod.addCommMonoid.{u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u1, u2, u3} R M M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15) _inst_16 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, max u2 u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (Prod.{u2, u3} M M₂) (Prod.topologicalSpace.{u2, u3} M M₂ _inst_4 _inst_6) (Prod.addCommMonoid.{u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u1, u2, u3} R M M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15) _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max (max u2 u3) u4, u1, u1, max u2 u3, u4} (ContinuousLinearMap.{u1, u1, max u2 u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (Prod.{u2, u3} M M₂) (Prod.topologicalSpace.{u2, u3} M M₂ _inst_4 _inst_6) (Prod.addCommMonoid.{u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u1, u2, u3} R M M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15) _inst_16) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (Prod.{u2, u3} M M₂) (Prod.topologicalSpace.{u2, u3} M M₂ _inst_4 _inst_6) (Prod.addCommMonoid.{u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u1, u2, u3} R M M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15) _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, max u2 u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (Prod.{u2, u3} M M₂) (Prod.topologicalSpace.{u2, u3} M M₂ _inst_4 _inst_6) (Prod.addCommMonoid.{u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u1, u2, u3} R M M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15) _inst_16)) (ContinuousLinearMap.coprod.{u1, u2, u3, u4} R (Ring.toSemiring.{u1} R _inst_1) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_15 _inst_16 _inst_18 f g))
but is expected to have type
  forall {R : Type.{u3}} [_inst_1 : Ring.{u3} R] {M : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M] [_inst_5 : AddCommGroup.{u2} M] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] {M₃ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₃] [_inst_9 : AddCommGroup.{u4} M₃] [_inst_12 : Module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5)] [_inst_15 : Module.{u3, u1} R M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] [_inst_16 : Module.{u3, u4} R M₃ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9)] [_inst_18 : ContinuousAdd.{u4} M₃ _inst_8 (AddZeroClass.toAdd.{u4} M₃ (AddMonoid.toAddZeroClass.{u4} M₃ (SubNegMonoid.toAddMonoid.{u4} M₃ (AddGroup.toSubNegMonoid.{u4} M₃ (AddCommGroup.toAddGroup.{u4} M₃ _inst_9)))))] (f : ContinuousLinearMap.{u3, u3, u2, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) (g : ContinuousLinearMap.{u3, u3, u1, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16), LE.le.{max u2 u1} (Submodule.{u3, max u1 u2} R (Prod.{u2, u1} M M₂) (Ring.toSemiring.{u3} R _inst_1) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15)) (Preorder.toLE.{max u2 u1} (Submodule.{u3, max u1 u2} R (Prod.{u2, u1} M M₂) (Ring.toSemiring.{u3} R _inst_1) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15)) (PartialOrder.toPreorder.{max u2 u1} (Submodule.{u3, max u1 u2} R (Prod.{u2, u1} M M₂) (Ring.toSemiring.{u3} R _inst_1) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15)) (OmegaCompletePartialOrder.toPartialOrder.{max u2 u1} (Submodule.{u3, max u1 u2} R (Prod.{u2, u1} M M₂) (Ring.toSemiring.{u3} R _inst_1) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15)) (CompleteLattice.instOmegaCompletePartialOrder.{max u2 u1} (Submodule.{u3, max u1 u2} R (Prod.{u2, u1} M M₂) (Ring.toSemiring.{u3} R _inst_1) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15)) (Submodule.completeLattice.{u3, max u2 u1} R (Prod.{u2, u1} M M₂) (Ring.toSemiring.{u3} R _inst_1) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15)))))) (Submodule.prod.{u3, u2, u1} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) _inst_12 (LinearMap.ker.{u3, u3, u2, u4, max u2 u4} R R M M₃ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u4, u3, u3, u2, u4} (ContinuousLinearMap.{u3, u3, u2, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16)) f) M₂ (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_15 (LinearMap.ker.{u3, u3, u1, u4, max u1 u4} R R M₂ M₃ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u1, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u1 u4, u3, u3, u1, u4} (ContinuousLinearMap.{u3, u3, u1, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u1, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16)) g)) (LinearMap.ker.{u3, u3, max u2 u1, u4, max (max u2 u4) u1} R R (Prod.{u2, u1} M M₂) M₃ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15) _inst_16 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, max u1 u2, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (Prod.{u2, u1} M M₂) (instTopologicalSpaceProd.{u2, u1} M M₂ _inst_4 _inst_6) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15) _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max (max u2 u1) u4, u3, u3, max u2 u1, u4} (ContinuousLinearMap.{u3, u3, max u1 u2, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (Prod.{u2, u1} M M₂) (instTopologicalSpaceProd.{u2, u1} M M₂ _inst_4 _inst_6) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15) _inst_16) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (Prod.{u2, u1} M M₂) (instTopologicalSpaceProd.{u2, u1} M M₂ _inst_4 _inst_6) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15) _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, max u2 u1, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (Prod.{u2, u1} M M₂) (instTopologicalSpaceProd.{u2, u1} M M₂ _inst_4 _inst_6) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15) _inst_16)) (ContinuousLinearMap.coprod.{u3, u2, u1, u4} R (Ring.toSemiring.{u3} R _inst_1) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_15 _inst_16 _inst_18 f g))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.ker_prod_ker_le_ker_coprod ContinuousLinearMap.ker_prod_ker_le_ker_coprodₓ'. -/
theorem ker_prod_ker_le_ker_coprod [ContinuousAdd M₃] (f : M →L[R] M₃) (g : M₂ →L[R] M₃) :
    (LinearMap.ker f).Prod (LinearMap.ker g) ≤ LinearMap.ker (f.coprod g) :=
  LinearMap.ker_prod_ker_le_ker_coprod f.toLinearMap g.toLinearMap
#align continuous_linear_map.ker_prod_ker_le_ker_coprod ContinuousLinearMap.ker_prod_ker_le_ker_coprod

/- warning: continuous_linear_map.ker_coprod_of_disjoint_range -> ContinuousLinearMap.ker_coprod_of_disjoint_range is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {M : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M] [_inst_5 : AddCommGroup.{u2} M] {M₂ : Type.{u3}} [_inst_6 : TopologicalSpace.{u3} M₂] [_inst_7 : AddCommGroup.{u3} M₂] {M₃ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₃] [_inst_9 : AddCommGroup.{u4} M₃] [_inst_12 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5)] [_inst_15 : Module.{u1, u3} R M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)] [_inst_16 : Module.{u1, u4} R M₃ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9)] [_inst_18 : ContinuousAdd.{u4} M₃ _inst_8 (AddZeroClass.toHasAdd.{u4} M₃ (AddMonoid.toAddZeroClass.{u4} M₃ (SubNegMonoid.toAddMonoid.{u4} M₃ (AddGroup.toSubNegMonoid.{u4} M₃ (AddCommGroup.toAddGroup.{u4} M₃ _inst_9)))))] (f : ContinuousLinearMap.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) (g : ContinuousLinearMap.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16), (Disjoint.{u4} (Submodule.{u1, u4} R M₃ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_16) (SetLike.partialOrder.{u4, u4} (Submodule.{u1, u4} R M₃ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_16) M₃ (Submodule.setLike.{u1, u4} R M₃ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_16)) (Submodule.orderBot.{u1, u4} R M₃ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_16) (LinearMap.range.{u1, u1, u2, u4, max u2 u4} R R M M₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u4, u1, u1, u2, u4} (ContinuousLinearMap.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16)) (RingHomSurjective.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) f) (LinearMap.range.{u1, u1, u3, u4, max u3 u4} R R M₂ M₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u1, u3, u4} (ContinuousLinearMap.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16)) (RingHomSurjective.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) g)) -> (Eq.{succ (max u2 u3)} (Submodule.{u1, max u2 u3} R (Prod.{u2, u3} M M₂) (Ring.toSemiring.{u1} R _inst_1) (Prod.addCommMonoid.{u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)) (Prod.module.{u1, u2, u3} R M M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15)) (LinearMap.ker.{u1, u1, max u2 u3, u4, max (max u2 u3) u4} R R (Prod.{u2, u3} M M₂) M₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (Prod.addCommMonoid.{u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u1, u2, u3} R M M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15) _inst_16 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, max u2 u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (Prod.{u2, u3} M M₂) (Prod.topologicalSpace.{u2, u3} M M₂ _inst_4 _inst_6) (Prod.addCommMonoid.{u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u1, u2, u3} R M M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15) _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max (max u2 u3) u4, u1, u1, max u2 u3, u4} (ContinuousLinearMap.{u1, u1, max u2 u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (Prod.{u2, u3} M M₂) (Prod.topologicalSpace.{u2, u3} M M₂ _inst_4 _inst_6) (Prod.addCommMonoid.{u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u1, u2, u3} R M M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15) _inst_16) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (Prod.{u2, u3} M M₂) (Prod.topologicalSpace.{u2, u3} M M₂ _inst_4 _inst_6) (Prod.addCommMonoid.{u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u1, u2, u3} R M M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15) _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, max u2 u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (Prod.{u2, u3} M M₂) (Prod.topologicalSpace.{u2, u3} M M₂ _inst_4 _inst_6) (Prod.addCommMonoid.{u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u1, u2, u3} R M M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_15) _inst_16)) (ContinuousLinearMap.coprod.{u1, u2, u3, u4} R (Ring.toSemiring.{u1} R _inst_1) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_15 _inst_16 _inst_18 f g)) (Submodule.prod.{u1, u2, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) _inst_12 (LinearMap.ker.{u1, u1, u2, u4, max u2 u4} R R M M₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u4, u1, u1, u2, u4} (ContinuousLinearMap.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16)) f) M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_15 (LinearMap.ker.{u1, u1, u3, u4, max u3 u4} R R M₂ M₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u1, u3, u4} (ContinuousLinearMap.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u3, u4} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16)) g)))
but is expected to have type
  forall {R : Type.{u3}} [_inst_1 : Ring.{u3} R] {M : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M] [_inst_5 : AddCommGroup.{u2} M] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] {M₃ : Type.{u4}} [_inst_8 : TopologicalSpace.{u4} M₃] [_inst_9 : AddCommGroup.{u4} M₃] [_inst_12 : Module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5)] [_inst_15 : Module.{u3, u1} R M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] [_inst_16 : Module.{u3, u4} R M₃ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9)] [_inst_18 : ContinuousAdd.{u4} M₃ _inst_8 (AddZeroClass.toAdd.{u4} M₃ (AddMonoid.toAddZeroClass.{u4} M₃ (SubNegMonoid.toAddMonoid.{u4} M₃ (AddGroup.toSubNegMonoid.{u4} M₃ (AddCommGroup.toAddGroup.{u4} M₃ _inst_9)))))] (f : ContinuousLinearMap.{u3, u3, u2, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) (g : ContinuousLinearMap.{u3, u3, u1, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16), (Disjoint.{u4} (Submodule.{u3, u4} R M₃ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_16) (OmegaCompletePartialOrder.toPartialOrder.{u4} (Submodule.{u3, u4} R M₃ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_16) (CompleteLattice.instOmegaCompletePartialOrder.{u4} (Submodule.{u3, u4} R M₃ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_16) (Submodule.completeLattice.{u3, u4} R M₃ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_16))) (Submodule.instOrderBotSubmoduleToLEToPreorderInstPartialOrderSetLike.{u3, u4} R M₃ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_16) (LinearMap.range.{u3, u3, u2, u4, max u2 u4} R R M M₃ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u4, u3, u3, u2, u4} (ContinuousLinearMap.{u3, u3, u2, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16)) (RingHomSurjective.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) f) (LinearMap.range.{u3, u3, u1, u4, max u1 u4} R R M₂ M₃ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u1, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u1 u4, u3, u3, u1, u4} (ContinuousLinearMap.{u3, u3, u1, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u1, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16)) (RingHomSurjective.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) g)) -> (Eq.{max (succ u2) (succ u1)} (Submodule.{u3, max u2 u1} R (Prod.{u2, u1} M M₂) (Ring.toSemiring.{u3} R _inst_1) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15)) (LinearMap.ker.{u3, u3, max u2 u1, u4, max (max u2 u4) u1} R R (Prod.{u2, u1} M M₂) M₃ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15) _inst_16 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, max u1 u2, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (Prod.{u2, u1} M M₂) (instTopologicalSpaceProd.{u2, u1} M M₂ _inst_4 _inst_6) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15) _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max (max u2 u1) u4, u3, u3, max u2 u1, u4} (ContinuousLinearMap.{u3, u3, max u1 u2, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (Prod.{u2, u1} M M₂) (instTopologicalSpaceProd.{u2, u1} M M₂ _inst_4 _inst_6) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15) _inst_16) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (Prod.{u2, u1} M M₂) (instTopologicalSpaceProd.{u2, u1} M M₂ _inst_4 _inst_6) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15) _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, max u2 u1, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (Prod.{u2, u1} M M₂) (instTopologicalSpaceProd.{u2, u1} M M₂ _inst_4 _inst_6) (Prod.instAddCommMonoidSum.{u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) (Prod.module.{u3, u2, u1} R M M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_15) _inst_16)) (ContinuousLinearMap.coprod.{u3, u2, u1, u4} R (Ring.toSemiring.{u3} R _inst_1) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_15 _inst_16 _inst_18 f g)) (Submodule.prod.{u3, u2, u1} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) _inst_12 (LinearMap.ker.{u3, u3, u2, u4, max u2 u4} R R M M₃ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u4, u3, u3, u2, u4} (ContinuousLinearMap.{u3, u3, u2, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_12 _inst_16)) f) M₂ (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_15 (LinearMap.ker.{u3, u3, u1, u4, max u1 u4} R R M₂ M₃ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u1, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u1 u4, u3, u3, u1, u4} (ContinuousLinearMap.{u3, u3, u1, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u1, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_9) _inst_15 _inst_16)) g)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.ker_coprod_of_disjoint_range ContinuousLinearMap.ker_coprod_of_disjoint_rangeₓ'. -/
theorem ker_coprod_of_disjoint_range [ContinuousAdd M₃] (f : M →L[R] M₃) (g : M₂ →L[R] M₃)
    (hd : Disjoint (range f) (range g)) :
    LinearMap.ker (f.coprod g) = (LinearMap.ker f).Prod (LinearMap.ker g) :=
  LinearMap.ker_coprod_of_disjoint_range f.toLinearMap g.toLinearMap hd
#align continuous_linear_map.ker_coprod_of_disjoint_range ContinuousLinearMap.ker_coprod_of_disjoint_range

end

section

variable [TopologicalAddGroup M₂]

instance : Neg (M →SL[σ₁₂] M₂) :=
  ⟨fun f => ⟨-f, f.2.neg⟩⟩

/- warning: continuous_linear_map.neg_apply -> ContinuousLinearMap.neg_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M] [_inst_5 : AddCommGroup.{u3} M] {M₂ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₂] [_inst_7 : AddCommGroup.{u4} M₂] [_inst_12 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5)] [_inst_13 : Module.{u2, u4} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} [_inst_15 : TopologicalAddGroup.{u4} M₂ _inst_6 (AddCommGroup.toAddGroup.{u4} M₂ _inst_7)] (f : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (x : M), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (Neg.neg.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.neg.{u1, u2, u3, u4} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ _inst_15) f) x) (Neg.neg.{u4} M₂ (SubNegMonoid.toHasNeg.{u4} M₂ (AddGroup.toSubNegMonoid.{u4} M₂ (AddCommGroup.toAddGroup.{u4} M₂ _inst_7))) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) f x))
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Ring.{u4} R] {R₂ : Type.{u3}} [_inst_2 : Ring.{u3} R₂] {M : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M] [_inst_5 : AddCommGroup.{u2} M] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_12 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5)] [_inst_13 : Module.{u3, u1} R₂ M₂ (Ring.toSemiring.{u3} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] {σ₁₂ : RingHom.{u4, u3} R R₂ (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1)) (Semiring.toNonAssocSemiring.{u3} R₂ (Ring.toSemiring.{u3} R₂ _inst_2))} [_inst_15 : TopologicalAddGroup.{u1} M₂ _inst_6 (AddCommGroup.toAddGroup.{u1} M₂ _inst_7)] (f : ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (x : M), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) (Neg.neg.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.neg.{u4, u3, u2, u1} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ _inst_15) f) x) (Neg.neg.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (NegZeroClass.toNeg.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (SubNegZeroMonoid.toNegZeroClass.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (SubtractionMonoid.toSubNegZeroMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (SubtractionCommMonoid.toSubtractionMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (AddCommGroup.toDivisionAddCommMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) _inst_7))))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) f x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.neg_apply ContinuousLinearMap.neg_applyₓ'. -/
@[simp]
theorem neg_apply (f : M →SL[σ₁₂] M₂) (x : M) : (-f) x = -f x :=
  rfl
#align continuous_linear_map.neg_apply ContinuousLinearMap.neg_apply

/- warning: continuous_linear_map.coe_neg -> ContinuousLinearMap.coe_neg is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M] [_inst_5 : AddCommGroup.{u3} M] {M₂ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₂] [_inst_7 : AddCommGroup.{u4} M₂] [_inst_12 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5)] [_inst_13 : Module.{u2, u4} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} [_inst_15 : TopologicalAddGroup.{u4} M₂ _inst_6 (AddCommGroup.toAddGroup.{u4} M₂ _inst_7)] (f : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13), Eq.{max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) ((fun (a : Type.{max u3 u4}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{succ (max u3 u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (HasLiftT.mk.{succ (max u3 u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (CoeTCₓ.coe.{succ (max u3 u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (coeBase.{succ (max u3 u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)))) (Neg.neg.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.neg.{u1, u2, u3, u4} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ _inst_15) f)) (Neg.neg.{max u3 u4} (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.hasNeg.{u1, u2, u3, u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_7 _inst_12 _inst_13 σ₁₂) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)))) f))
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Ring.{u4} R] {R₂ : Type.{u3}} [_inst_2 : Ring.{u3} R₂] {M : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M] [_inst_5 : AddCommGroup.{u2} M] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_12 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5)] [_inst_13 : Module.{u3, u1} R₂ M₂ (Ring.toSemiring.{u3} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] {σ₁₂ : RingHom.{u4, u3} R R₂ (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1)) (Semiring.toNonAssocSemiring.{u3} R₂ (Ring.toSemiring.{u3} R₂ _inst_2))} [_inst_15 : TopologicalAddGroup.{u1} M₂ _inst_6 (AddCommGroup.toAddGroup.{u1} M₂ _inst_7)] (f : ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13), Eq.{max (succ u2) (succ u1)} (LinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (Neg.neg.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.neg.{u4, u3, u2, u1} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ _inst_15) f)) (Neg.neg.{max u2 u1} (LinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.instNegLinearMapToAddCommMonoid.{u4, u3, u2, u1} R R₂ M M₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) _inst_7 _inst_12 _inst_13 σ₁₂) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_neg ContinuousLinearMap.coe_negₓ'. -/
@[simp, norm_cast]
theorem coe_neg (f : M →SL[σ₁₂] M₂) : (↑(-f) : M →ₛₗ[σ₁₂] M₂) = -f :=
  rfl
#align continuous_linear_map.coe_neg ContinuousLinearMap.coe_neg

/- warning: continuous_linear_map.coe_neg' -> ContinuousLinearMap.coe_neg' is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M] [_inst_5 : AddCommGroup.{u3} M] {M₂ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₂] [_inst_7 : AddCommGroup.{u4} M₂] [_inst_12 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5)] [_inst_13 : Module.{u2, u4} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} [_inst_15 : TopologicalAddGroup.{u4} M₂ _inst_6 (AddCommGroup.toAddGroup.{u4} M₂ _inst_7)] (f : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13), Eq.{succ (max u3 u4)} (M -> M₂) (coeFn.{succ (max u3 u4), succ (max u3 u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (Neg.neg.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.neg.{u1, u2, u3, u4} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ _inst_15) f)) (Neg.neg.{max u3 u4} (M -> M₂) (Pi.instNeg.{u3, u4} M (fun (ᾰ : M) => M₂) (fun (i : M) => SubNegMonoid.toHasNeg.{u4} M₂ (AddGroup.toSubNegMonoid.{u4} M₂ (AddCommGroup.toAddGroup.{u4} M₂ _inst_7)))) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) f))
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Ring.{u4} R] {R₂ : Type.{u3}} [_inst_2 : Ring.{u3} R₂] {M : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M] [_inst_5 : AddCommGroup.{u2} M] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_12 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5)] [_inst_13 : Module.{u3, u1} R₂ M₂ (Ring.toSemiring.{u3} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] {σ₁₂ : RingHom.{u4, u3} R R₂ (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1)) (Semiring.toNonAssocSemiring.{u3} R₂ (Ring.toSemiring.{u3} R₂ _inst_2))} [_inst_15 : TopologicalAddGroup.{u1} M₂ _inst_6 (AddCommGroup.toAddGroup.{u1} M₂ _inst_7)] (f : ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13), Eq.{max (succ u2) (succ u1)} (forall (ᾰ : M), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) ᾰ) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) (Neg.neg.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.neg.{u4, u3, u2, u1} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ _inst_15) f)) (Neg.neg.{max u2 u1} (forall (ᾰ : M), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) ᾰ) (Pi.instNeg.{u2, u1} M (fun (ᾰ : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) ᾰ) (fun (i : M) => NegZeroClass.toNeg.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) i) (SubNegZeroMonoid.toNegZeroClass.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) i) (SubtractionMonoid.toSubNegZeroMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) i) (SubtractionCommMonoid.toSubtractionMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) i) (AddCommGroup.toDivisionAddCommMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) i) _inst_7)))))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_neg' ContinuousLinearMap.coe_neg'ₓ'. -/
@[norm_cast]
theorem coe_neg' (f : M →SL[σ₁₂] M₂) : ⇑(-f) = -f :=
  rfl
#align continuous_linear_map.coe_neg' ContinuousLinearMap.coe_neg'

instance : Sub (M →SL[σ₁₂] M₂) :=
  ⟨fun f g => ⟨f - g, f.2.sub g.2⟩⟩

instance : AddCommGroup (M →SL[σ₁₂] M₂) := by
  refine'
          { ContinuousLinearMap.addCommMonoid with
            zero := 0
            add := (· + ·)
            neg := Neg.neg
            sub := Sub.sub
            sub_eq_add_neg := _
            nsmul := (· • ·)
            zsmul := (· • ·)
            zsmul_zero' := fun f => by
              ext
              simp
            zsmul_succ' := fun n f => by
              ext
              simp [add_smul, add_comm]
            zsmul_neg' := fun n f => by
              ext
              simp [Nat.succ_eq_add_one, add_smul].. } <;>
        intros <;>
      ext <;>
    apply_rules [zero_add, add_assoc, add_zero, add_left_neg, add_comm, sub_eq_add_neg]

/- warning: continuous_linear_map.sub_apply -> ContinuousLinearMap.sub_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M] [_inst_5 : AddCommGroup.{u3} M] {M₂ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₂] [_inst_7 : AddCommGroup.{u4} M₂] [_inst_12 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5)] [_inst_13 : Module.{u2, u4} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} [_inst_15 : TopologicalAddGroup.{u4} M₂ _inst_6 (AddCommGroup.toAddGroup.{u4} M₂ _inst_7)] (f : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (g : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (x : M), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (HSub.hSub.{max u3 u4, max u3 u4, max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (instHSub.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.sub.{u1, u2, u3, u4} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ _inst_15)) f g) x) (HSub.hSub.{u4, u4, u4} M₂ M₂ M₂ (instHSub.{u4} M₂ (SubNegMonoid.toHasSub.{u4} M₂ (AddGroup.toSubNegMonoid.{u4} M₂ (AddCommGroup.toAddGroup.{u4} M₂ _inst_7)))) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) f x) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) g x))
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Ring.{u4} R] {R₂ : Type.{u3}} [_inst_2 : Ring.{u3} R₂] {M : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M] [_inst_5 : AddCommGroup.{u2} M] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_12 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5)] [_inst_13 : Module.{u3, u1} R₂ M₂ (Ring.toSemiring.{u3} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] {σ₁₂ : RingHom.{u4, u3} R R₂ (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1)) (Semiring.toNonAssocSemiring.{u3} R₂ (Ring.toSemiring.{u3} R₂ _inst_2))} [_inst_15 : TopologicalAddGroup.{u1} M₂ _inst_6 (AddCommGroup.toAddGroup.{u1} M₂ _inst_7)] (f : ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (g : ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (x : M), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) (HSub.hSub.{max u2 u1, max u2 u1, max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (instHSub.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.sub.{u4, u3, u2, u1} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ _inst_15)) f g) x) (HSub.hSub.{u1, u1, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (instHSub.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (SubNegMonoid.toSub.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (AddGroup.toSubNegMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (AddCommGroup.toAddGroup.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) _inst_7)))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) f x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) g x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.sub_apply ContinuousLinearMap.sub_applyₓ'. -/
theorem sub_apply (f g : M →SL[σ₁₂] M₂) (x : M) : (f - g) x = f x - g x :=
  rfl
#align continuous_linear_map.sub_apply ContinuousLinearMap.sub_apply

/- warning: continuous_linear_map.coe_sub -> ContinuousLinearMap.coe_sub is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M] [_inst_5 : AddCommGroup.{u3} M] {M₂ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₂] [_inst_7 : AddCommGroup.{u4} M₂] [_inst_12 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5)] [_inst_13 : Module.{u2, u4} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} [_inst_15 : TopologicalAddGroup.{u4} M₂ _inst_6 (AddCommGroup.toAddGroup.{u4} M₂ _inst_7)] (f : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (g : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13), Eq.{max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) ((fun (a : Type.{max u3 u4}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{succ (max u3 u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (HasLiftT.mk.{succ (max u3 u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (CoeTCₓ.coe.{succ (max u3 u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (coeBase.{succ (max u3 u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)))) (HSub.hSub.{max u3 u4, max u3 u4, max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (instHSub.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.sub.{u1, u2, u3, u4} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ _inst_15)) f g)) (HSub.hSub.{max u3 u4, max u3 u4, max u3 u4} (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (instHSub.{max u3 u4} (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.hasSub.{u1, u2, u3, u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_7 _inst_12 _inst_13 σ₁₂)) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)))) f) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)))) g))
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Ring.{u4} R] {R₂ : Type.{u3}} [_inst_2 : Ring.{u3} R₂] {M : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M] [_inst_5 : AddCommGroup.{u2} M] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_12 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5)] [_inst_13 : Module.{u3, u1} R₂ M₂ (Ring.toSemiring.{u3} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] {σ₁₂ : RingHom.{u4, u3} R R₂ (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1)) (Semiring.toNonAssocSemiring.{u3} R₂ (Ring.toSemiring.{u3} R₂ _inst_2))} [_inst_15 : TopologicalAddGroup.{u1} M₂ _inst_6 (AddCommGroup.toAddGroup.{u1} M₂ _inst_7)] (f : ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (g : ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13), Eq.{max (succ u2) (succ u1)} (LinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (HSub.hSub.{max u2 u1, max u2 u1, max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (instHSub.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.sub.{u4, u3, u2, u1} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ _inst_15)) f g)) (HSub.hSub.{max u2 u1, max u2 u1, max u2 u1} (LinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (instHSub.{max u2 u1} (LinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (LinearMap.instSubLinearMapToAddCommMonoid.{u4, u3, u2, u1} R R₂ M M₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) _inst_7 _inst_12 _inst_13 σ₁₂)) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 f) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 g))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_sub ContinuousLinearMap.coe_subₓ'. -/
@[simp, norm_cast]
theorem coe_sub (f g : M →SL[σ₁₂] M₂) : (↑(f - g) : M →ₛₗ[σ₁₂] M₂) = f - g :=
  rfl
#align continuous_linear_map.coe_sub ContinuousLinearMap.coe_sub

/- warning: continuous_linear_map.coe_sub' -> ContinuousLinearMap.coe_sub' is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M] [_inst_5 : AddCommGroup.{u3} M] {M₂ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₂] [_inst_7 : AddCommGroup.{u4} M₂] [_inst_12 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5)] [_inst_13 : Module.{u2, u4} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} [_inst_15 : TopologicalAddGroup.{u4} M₂ _inst_6 (AddCommGroup.toAddGroup.{u4} M₂ _inst_7)] (f : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (g : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13), Eq.{succ (max u3 u4)} (M -> M₂) (coeFn.{succ (max u3 u4), succ (max u3 u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (HSub.hSub.{max u3 u4, max u3 u4, max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (instHSub.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.sub.{u1, u2, u3, u4} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ _inst_15)) f g)) (HSub.hSub.{max u3 u4, max u3 u4, max u3 u4} (M -> M₂) (M -> M₂) (M -> M₂) (instHSub.{max u3 u4} (M -> M₂) (Pi.instSub.{u3, u4} M (fun (ᾰ : M) => M₂) (fun (i : M) => SubNegMonoid.toHasSub.{u4} M₂ (AddGroup.toSubNegMonoid.{u4} M₂ (AddCommGroup.toAddGroup.{u4} M₂ _inst_7))))) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) f) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) g))
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Ring.{u4} R] {R₂ : Type.{u3}} [_inst_2 : Ring.{u3} R₂] {M : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M] [_inst_5 : AddCommGroup.{u2} M] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_12 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_5)] [_inst_13 : Module.{u3, u1} R₂ M₂ (Ring.toSemiring.{u3} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] {σ₁₂ : RingHom.{u4, u3} R R₂ (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1)) (Semiring.toNonAssocSemiring.{u3} R₂ (Ring.toSemiring.{u3} R₂ _inst_2))} [_inst_15 : TopologicalAddGroup.{u1} M₂ _inst_6 (AddCommGroup.toAddGroup.{u1} M₂ _inst_7)] (f : ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (g : ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13), Eq.{max (succ u2) (succ u1)} (forall (ᾰ : M), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) ᾰ) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) (HSub.hSub.{max u2 u1, max u2 u1, max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (instHSub.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.sub.{u4, u3, u2, u1} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ _inst_15)) f g)) (HSub.hSub.{max u2 u1, max u2 u1, max u2 u1} (forall (ᾰ : M), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) ᾰ) (forall (ᾰ : M), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) ᾰ) (forall (ᾰ : M), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) ᾰ) (instHSub.{max u2 u1} (forall (ᾰ : M), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) ᾰ) (Pi.instSub.{u2, u1} M (fun (ᾰ : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) ᾰ) (fun (i : M) => SubNegMonoid.toSub.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) i) (AddGroup.toSubNegMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) i) (AddCommGroup.toAddGroup.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) i) _inst_7))))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) f) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) g))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_sub' ContinuousLinearMap.coe_sub'ₓ'. -/
@[simp, norm_cast]
theorem coe_sub' (f g : M →SL[σ₁₂] M₂) : ⇑(f - g) = f - g :=
  rfl
#align continuous_linear_map.coe_sub' ContinuousLinearMap.coe_sub'

end

/- warning: continuous_linear_map.comp_neg -> ContinuousLinearMap.comp_neg is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {R₃ : Type.{u3}} [_inst_3 : Ring.{u3} R₃] {M : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M] [_inst_5 : AddCommGroup.{u4} M] {M₂ : Type.{u5}} [_inst_6 : TopologicalSpace.{u5} M₂] [_inst_7 : AddCommGroup.{u5} M₂] {M₃ : Type.{u6}} [_inst_8 : TopologicalSpace.{u6} M₃] [_inst_9 : AddCommGroup.{u6} M₃] [_inst_12 : Module.{u1, u4} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5)] [_inst_13 : Module.{u2, u5} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7)] [_inst_14 : Module.{u3, u6} R₃ M₃ (Ring.toSemiring.{u3} R₃ _inst_3) (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2)) (NonAssocRing.toNonAssocSemiring.{u3} R₃ (Ring.toNonAssocRing.{u3} R₃ _inst_3))} {σ₁₃ : RingHom.{u1, u3} R R₃ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u3} R₃ (Ring.toNonAssocRing.{u3} R₃ _inst_3))} [_inst_15 : RingHomCompTriple.{u1, u2, u3} R R₂ R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃] [_inst_16 : TopologicalAddGroup.{u5} M₂ _inst_6 (AddCommGroup.toAddGroup.{u5} M₂ _inst_7)] [_inst_17 : TopologicalAddGroup.{u6} M₃ _inst_8 (AddCommGroup.toAddGroup.{u6} M₃ _inst_9)] (g : ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_13 _inst_14) (f : ContinuousLinearMap.{u1, u2, u4, u5} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) _inst_12 _inst_13), Eq.{max (succ u4) (succ u6)} (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R R₂ R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 g (Neg.neg.{max u4 u5} (ContinuousLinearMap.{u1, u2, u4, u5} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.neg.{u1, u2, u4, u5} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ _inst_16) f)) (Neg.neg.{max u4 u6} (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.neg.{u1, u3, u4, u6} R _inst_1 R₃ _inst_3 M _inst_4 _inst_5 M₃ _inst_8 _inst_9 _inst_12 _inst_14 σ₁₃ _inst_17) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R R₂ R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 g f))
but is expected to have type
  forall {R : Type.{u6}} [_inst_1 : Ring.{u6} R] {R₂ : Type.{u5}} [_inst_2 : Ring.{u5} R₂] {R₃ : Type.{u4}} [_inst_3 : Ring.{u4} R₃] {M : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M] [_inst_5 : AddCommGroup.{u1} M] {M₂ : Type.{u3}} [_inst_6 : TopologicalSpace.{u3} M₂] [_inst_7 : AddCommGroup.{u3} M₂] {M₃ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₃] [_inst_9 : AddCommGroup.{u2} M₃] [_inst_12 : Module.{u6, u1} R M (Ring.toSemiring.{u6} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_5)] [_inst_13 : Module.{u5, u3} R₂ M₂ (Ring.toSemiring.{u5} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)] [_inst_14 : Module.{u4, u2} R₃ M₃ (Ring.toSemiring.{u4} R₃ _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_9)] {σ₁₂ : RingHom.{u6, u5} R R₂ (Semiring.toNonAssocSemiring.{u6} R (Ring.toSemiring.{u6} R _inst_1)) (Semiring.toNonAssocSemiring.{u5} R₂ (Ring.toSemiring.{u5} R₂ _inst_2))} {σ₂₃ : RingHom.{u5, u4} R₂ R₃ (Semiring.toNonAssocSemiring.{u5} R₂ (Ring.toSemiring.{u5} R₂ _inst_2)) (Semiring.toNonAssocSemiring.{u4} R₃ (Ring.toSemiring.{u4} R₃ _inst_3))} {σ₁₃ : RingHom.{u6, u4} R R₃ (Semiring.toNonAssocSemiring.{u6} R (Ring.toSemiring.{u6} R _inst_1)) (Semiring.toNonAssocSemiring.{u4} R₃ (Ring.toSemiring.{u4} R₃ _inst_3))} [_inst_15 : RingHomCompTriple.{u6, u5, u4} R R₂ R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃] [_inst_16 : TopologicalAddGroup.{u3} M₂ _inst_6 (AddCommGroup.toAddGroup.{u3} M₂ _inst_7)] [_inst_17 : TopologicalAddGroup.{u2} M₃ _inst_8 (AddCommGroup.toAddGroup.{u2} M₃ _inst_9)] (g : ContinuousLinearMap.{u5, u4, u3, u2} R₂ R₃ (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_9) _inst_13 _inst_14) (f : ContinuousLinearMap.{u6, u5, u1, u3} R R₂ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_13), Eq.{max (succ u1) (succ u2)} (ContinuousLinearMap.{u6, u4, u1, u2} R R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.comp.{u6, u5, u4, u1, u3, u2} R R₂ R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 g (Neg.neg.{max u1 u3} (ContinuousLinearMap.{u6, u5, u1, u3} R R₂ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.neg.{u6, u5, u1, u3} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ _inst_16) f)) (Neg.neg.{max u1 u2} (ContinuousLinearMap.{u6, u4, u1, u2} R R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.neg.{u6, u4, u1, u2} R _inst_1 R₃ _inst_3 M _inst_4 _inst_5 M₃ _inst_8 _inst_9 _inst_12 _inst_14 σ₁₃ _inst_17) (ContinuousLinearMap.comp.{u6, u5, u4, u1, u3, u2} R R₂ R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 g f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.comp_neg ContinuousLinearMap.comp_negₓ'. -/
@[simp]
theorem comp_neg [RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [TopologicalAddGroup M₂] [TopologicalAddGroup M₃]
    (g : M₂ →SL[σ₂₃] M₃) (f : M →SL[σ₁₂] M₂) : g.comp (-f) = -g.comp f :=
  by
  ext
  simp
#align continuous_linear_map.comp_neg ContinuousLinearMap.comp_neg

/- warning: continuous_linear_map.neg_comp -> ContinuousLinearMap.neg_comp is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {R₃ : Type.{u3}} [_inst_3 : Ring.{u3} R₃] {M : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M] [_inst_5 : AddCommGroup.{u4} M] {M₂ : Type.{u5}} [_inst_6 : TopologicalSpace.{u5} M₂] [_inst_7 : AddCommGroup.{u5} M₂] {M₃ : Type.{u6}} [_inst_8 : TopologicalSpace.{u6} M₃] [_inst_9 : AddCommGroup.{u6} M₃] [_inst_12 : Module.{u1, u4} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5)] [_inst_13 : Module.{u2, u5} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7)] [_inst_14 : Module.{u3, u6} R₃ M₃ (Ring.toSemiring.{u3} R₃ _inst_3) (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2)) (NonAssocRing.toNonAssocSemiring.{u3} R₃ (Ring.toNonAssocRing.{u3} R₃ _inst_3))} {σ₁₃ : RingHom.{u1, u3} R R₃ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u3} R₃ (Ring.toNonAssocRing.{u3} R₃ _inst_3))} [_inst_15 : RingHomCompTriple.{u1, u2, u3} R R₂ R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃] [_inst_16 : TopologicalAddGroup.{u6} M₃ _inst_8 (AddCommGroup.toAddGroup.{u6} M₃ _inst_9)] (g : ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_13 _inst_14) (f : ContinuousLinearMap.{u1, u2, u4, u5} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) _inst_12 _inst_13), Eq.{max (succ u4) (succ u6)} (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R R₂ R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 (Neg.neg.{max u5 u6} (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_13 _inst_14) (ContinuousLinearMap.neg.{u2, u3, u5, u6} R₂ _inst_2 R₃ _inst_3 M₂ _inst_6 _inst_7 M₃ _inst_8 _inst_9 _inst_13 _inst_14 σ₂₃ _inst_16) g) f) (Neg.neg.{max u4 u6} (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.neg.{u1, u3, u4, u6} R _inst_1 R₃ _inst_3 M _inst_4 _inst_5 M₃ _inst_8 _inst_9 _inst_12 _inst_14 σ₁₃ _inst_16) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R R₂ R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 g f))
but is expected to have type
  forall {R : Type.{u6}} [_inst_1 : Ring.{u6} R] {R₂ : Type.{u5}} [_inst_2 : Ring.{u5} R₂] {R₃ : Type.{u4}} [_inst_3 : Ring.{u4} R₃] {M : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M] [_inst_5 : AddCommGroup.{u1} M] {M₂ : Type.{u2}} [_inst_6 : TopologicalSpace.{u2} M₂] [_inst_7 : AddCommGroup.{u2} M₂] {M₃ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₃] [_inst_9 : AddCommGroup.{u3} M₃] [_inst_12 : Module.{u6, u1} R M (Ring.toSemiring.{u6} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_5)] [_inst_13 : Module.{u5, u2} R₂ M₂ (Ring.toSemiring.{u5} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7)] [_inst_14 : Module.{u4, u3} R₃ M₃ (Ring.toSemiring.{u4} R₃ _inst_3) (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9)] {σ₁₂ : RingHom.{u6, u5} R R₂ (Semiring.toNonAssocSemiring.{u6} R (Ring.toSemiring.{u6} R _inst_1)) (Semiring.toNonAssocSemiring.{u5} R₂ (Ring.toSemiring.{u5} R₂ _inst_2))} {σ₂₃ : RingHom.{u5, u4} R₂ R₃ (Semiring.toNonAssocSemiring.{u5} R₂ (Ring.toSemiring.{u5} R₂ _inst_2)) (Semiring.toNonAssocSemiring.{u4} R₃ (Ring.toSemiring.{u4} R₃ _inst_3))} {σ₁₃ : RingHom.{u6, u4} R R₃ (Semiring.toNonAssocSemiring.{u6} R (Ring.toSemiring.{u6} R _inst_1)) (Semiring.toNonAssocSemiring.{u4} R₃ (Ring.toSemiring.{u4} R₃ _inst_3))} [_inst_15 : RingHomCompTriple.{u6, u5, u4} R R₂ R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃] [_inst_16 : TopologicalAddGroup.{u3} M₃ _inst_8 (AddCommGroup.toAddGroup.{u3} M₃ _inst_9)] (g : ContinuousLinearMap.{u5, u4, u2, u3} R₂ R₃ (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_13 _inst_14) (f : ContinuousLinearMap.{u6, u5, u1, u2} R R₂ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) _inst_12 _inst_13), Eq.{max (succ u1) (succ u3)} (ContinuousLinearMap.{u6, u4, u1, u3} R R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.comp.{u6, u5, u4, u1, u2, u3} R R₂ R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 (Neg.neg.{max u2 u3} (ContinuousLinearMap.{u5, u4, u2, u3} R₂ R₃ (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_13 _inst_14) (ContinuousLinearMap.neg.{u5, u4, u2, u3} R₂ _inst_2 R₃ _inst_3 M₂ _inst_6 _inst_7 M₃ _inst_8 _inst_9 _inst_13 _inst_14 σ₂₃ _inst_16) g) f) (Neg.neg.{max u1 u3} (ContinuousLinearMap.{u6, u4, u1, u3} R R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.neg.{u6, u4, u1, u3} R _inst_1 R₃ _inst_3 M _inst_4 _inst_5 M₃ _inst_8 _inst_9 _inst_12 _inst_14 σ₁₃ _inst_16) (ContinuousLinearMap.comp.{u6, u5, u4, u1, u2, u3} R R₂ R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 g f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.neg_comp ContinuousLinearMap.neg_compₓ'. -/
@[simp]
theorem neg_comp [RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [TopologicalAddGroup M₃] (g : M₂ →SL[σ₂₃] M₃)
    (f : M →SL[σ₁₂] M₂) : (-g).comp f = -g.comp f :=
  by
  ext
  simp
#align continuous_linear_map.neg_comp ContinuousLinearMap.neg_comp

/- warning: continuous_linear_map.comp_sub -> ContinuousLinearMap.comp_sub is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {R₃ : Type.{u3}} [_inst_3 : Ring.{u3} R₃] {M : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M] [_inst_5 : AddCommGroup.{u4} M] {M₂ : Type.{u5}} [_inst_6 : TopologicalSpace.{u5} M₂] [_inst_7 : AddCommGroup.{u5} M₂] {M₃ : Type.{u6}} [_inst_8 : TopologicalSpace.{u6} M₃] [_inst_9 : AddCommGroup.{u6} M₃] [_inst_12 : Module.{u1, u4} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5)] [_inst_13 : Module.{u2, u5} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7)] [_inst_14 : Module.{u3, u6} R₃ M₃ (Ring.toSemiring.{u3} R₃ _inst_3) (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2)) (NonAssocRing.toNonAssocSemiring.{u3} R₃ (Ring.toNonAssocRing.{u3} R₃ _inst_3))} {σ₁₃ : RingHom.{u1, u3} R R₃ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u3} R₃ (Ring.toNonAssocRing.{u3} R₃ _inst_3))} [_inst_15 : RingHomCompTriple.{u1, u2, u3} R R₂ R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃] [_inst_16 : TopologicalAddGroup.{u5} M₂ _inst_6 (AddCommGroup.toAddGroup.{u5} M₂ _inst_7)] [_inst_17 : TopologicalAddGroup.{u6} M₃ _inst_8 (AddCommGroup.toAddGroup.{u6} M₃ _inst_9)] (g : ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_13 _inst_14) (f₁ : ContinuousLinearMap.{u1, u2, u4, u5} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) _inst_12 _inst_13) (f₂ : ContinuousLinearMap.{u1, u2, u4, u5} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) _inst_12 _inst_13), Eq.{max (succ u4) (succ u6)} (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R R₂ R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 g (HSub.hSub.{max u4 u5, max u4 u5, max u4 u5} (ContinuousLinearMap.{u1, u2, u4, u5} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.{u1, u2, u4, u5} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.{u1, u2, u4, u5} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) _inst_12 _inst_13) (instHSub.{max u4 u5} (ContinuousLinearMap.{u1, u2, u4, u5} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.sub.{u1, u2, u4, u5} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ _inst_16)) f₁ f₂)) (HSub.hSub.{max u4 u6, max u4 u6, max u4 u6} (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_14) (instHSub.{max u4 u6} (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.sub.{u1, u3, u4, u6} R _inst_1 R₃ _inst_3 M _inst_4 _inst_5 M₃ _inst_8 _inst_9 _inst_12 _inst_14 σ₁₃ _inst_17)) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R R₂ R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 g f₁) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R R₂ R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 g f₂))
but is expected to have type
  forall {R : Type.{u6}} [_inst_1 : Ring.{u6} R] {R₂ : Type.{u5}} [_inst_2 : Ring.{u5} R₂] {R₃ : Type.{u4}} [_inst_3 : Ring.{u4} R₃] {M : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M] [_inst_5 : AddCommGroup.{u1} M] {M₂ : Type.{u3}} [_inst_6 : TopologicalSpace.{u3} M₂] [_inst_7 : AddCommGroup.{u3} M₂] {M₃ : Type.{u2}} [_inst_8 : TopologicalSpace.{u2} M₃] [_inst_9 : AddCommGroup.{u2} M₃] [_inst_12 : Module.{u6, u1} R M (Ring.toSemiring.{u6} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_5)] [_inst_13 : Module.{u5, u3} R₂ M₂ (Ring.toSemiring.{u5} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)] [_inst_14 : Module.{u4, u2} R₃ M₃ (Ring.toSemiring.{u4} R₃ _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_9)] {σ₁₂ : RingHom.{u6, u5} R R₂ (Semiring.toNonAssocSemiring.{u6} R (Ring.toSemiring.{u6} R _inst_1)) (Semiring.toNonAssocSemiring.{u5} R₂ (Ring.toSemiring.{u5} R₂ _inst_2))} {σ₂₃ : RingHom.{u5, u4} R₂ R₃ (Semiring.toNonAssocSemiring.{u5} R₂ (Ring.toSemiring.{u5} R₂ _inst_2)) (Semiring.toNonAssocSemiring.{u4} R₃ (Ring.toSemiring.{u4} R₃ _inst_3))} {σ₁₃ : RingHom.{u6, u4} R R₃ (Semiring.toNonAssocSemiring.{u6} R (Ring.toSemiring.{u6} R _inst_1)) (Semiring.toNonAssocSemiring.{u4} R₃ (Ring.toSemiring.{u4} R₃ _inst_3))} [_inst_15 : RingHomCompTriple.{u6, u5, u4} R R₂ R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃] [_inst_16 : TopologicalAddGroup.{u3} M₂ _inst_6 (AddCommGroup.toAddGroup.{u3} M₂ _inst_7)] [_inst_17 : TopologicalAddGroup.{u2} M₃ _inst_8 (AddCommGroup.toAddGroup.{u2} M₃ _inst_9)] (g : ContinuousLinearMap.{u5, u4, u3, u2} R₂ R₃ (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_9) _inst_13 _inst_14) (f₁ : ContinuousLinearMap.{u6, u5, u1, u3} R R₂ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_13) (f₂ : ContinuousLinearMap.{u6, u5, u1, u3} R R₂ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_13), Eq.{max (succ u1) (succ u2)} (ContinuousLinearMap.{u6, u4, u1, u2} R R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.comp.{u6, u5, u4, u1, u3, u2} R R₂ R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 g (HSub.hSub.{max u1 u3, max u1 u3, max u1 u3} (ContinuousLinearMap.{u6, u5, u1, u3} R R₂ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.{u6, u5, u1, u3} R R₂ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.{u6, u5, u1, u3} R R₂ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_13) (instHSub.{max u1 u3} (ContinuousLinearMap.{u6, u5, u1, u3} R R₂ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_12 _inst_13) (ContinuousLinearMap.sub.{u6, u5, u1, u3} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ _inst_16)) f₁ f₂)) (HSub.hSub.{max u1 u2, max u1 u2, max u1 u2} (ContinuousLinearMap.{u6, u4, u1, u2} R R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.{u6, u4, u1, u2} R R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.{u6, u4, u1, u2} R R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_9) _inst_12 _inst_14) (instHSub.{max u1 u2} (ContinuousLinearMap.{u6, u4, u1, u2} R R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.sub.{u6, u4, u1, u2} R _inst_1 R₃ _inst_3 M _inst_4 _inst_5 M₃ _inst_8 _inst_9 _inst_12 _inst_14 σ₁₃ _inst_17)) (ContinuousLinearMap.comp.{u6, u5, u4, u1, u3, u2} R R₂ R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 g f₁) (ContinuousLinearMap.comp.{u6, u5, u4, u1, u3, u2} R R₂ R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 g f₂))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.comp_sub ContinuousLinearMap.comp_subₓ'. -/
@[simp]
theorem comp_sub [RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [TopologicalAddGroup M₂] [TopologicalAddGroup M₃]
    (g : M₂ →SL[σ₂₃] M₃) (f₁ f₂ : M →SL[σ₁₂] M₂) : g.comp (f₁ - f₂) = g.comp f₁ - g.comp f₂ :=
  by
  ext
  simp
#align continuous_linear_map.comp_sub ContinuousLinearMap.comp_sub

/- warning: continuous_linear_map.sub_comp -> ContinuousLinearMap.sub_comp is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {R₃ : Type.{u3}} [_inst_3 : Ring.{u3} R₃] {M : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M] [_inst_5 : AddCommGroup.{u4} M] {M₂ : Type.{u5}} [_inst_6 : TopologicalSpace.{u5} M₂] [_inst_7 : AddCommGroup.{u5} M₂] {M₃ : Type.{u6}} [_inst_8 : TopologicalSpace.{u6} M₃] [_inst_9 : AddCommGroup.{u6} M₃] [_inst_12 : Module.{u1, u4} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5)] [_inst_13 : Module.{u2, u5} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7)] [_inst_14 : Module.{u3, u6} R₃ M₃ (Ring.toSemiring.{u3} R₃ _inst_3) (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2)) (NonAssocRing.toNonAssocSemiring.{u3} R₃ (Ring.toNonAssocRing.{u3} R₃ _inst_3))} {σ₁₃ : RingHom.{u1, u3} R R₃ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u3} R₃ (Ring.toNonAssocRing.{u3} R₃ _inst_3))} [_inst_15 : RingHomCompTriple.{u1, u2, u3} R R₂ R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃] [_inst_16 : TopologicalAddGroup.{u6} M₃ _inst_8 (AddCommGroup.toAddGroup.{u6} M₃ _inst_9)] (g₁ : ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_13 _inst_14) (g₂ : ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_13 _inst_14) (f : ContinuousLinearMap.{u1, u2, u4, u5} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) _inst_12 _inst_13), Eq.{max (succ u4) (succ u6)} (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R R₂ R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 (HSub.hSub.{max u5 u6, max u5 u6, max u5 u6} (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_13 _inst_14) (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_13 _inst_14) (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_13 _inst_14) (instHSub.{max u5 u6} (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_13 _inst_14) (ContinuousLinearMap.sub.{u2, u3, u5, u6} R₂ _inst_2 R₃ _inst_3 M₂ _inst_6 _inst_7 M₃ _inst_8 _inst_9 _inst_13 _inst_14 σ₂₃ _inst_16)) g₁ g₂) f) (HSub.hSub.{max u4 u6, max u4 u6, max u4 u6} (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_14) (instHSub.{max u4 u6} (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.sub.{u1, u3, u4, u6} R _inst_1 R₃ _inst_3 M _inst_4 _inst_5 M₃ _inst_8 _inst_9 _inst_12 _inst_14 σ₁₃ _inst_16)) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R R₂ R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 g₁ f) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R R₂ R₃ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u6} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 g₂ f))
but is expected to have type
  forall {R : Type.{u6}} [_inst_1 : Ring.{u6} R] {R₂ : Type.{u5}} [_inst_2 : Ring.{u5} R₂] {R₃ : Type.{u4}} [_inst_3 : Ring.{u4} R₃] {M : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M] [_inst_5 : AddCommGroup.{u1} M] {M₂ : Type.{u2}} [_inst_6 : TopologicalSpace.{u2} M₂] [_inst_7 : AddCommGroup.{u2} M₂] {M₃ : Type.{u3}} [_inst_8 : TopologicalSpace.{u3} M₃] [_inst_9 : AddCommGroup.{u3} M₃] [_inst_12 : Module.{u6, u1} R M (Ring.toSemiring.{u6} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_5)] [_inst_13 : Module.{u5, u2} R₂ M₂ (Ring.toSemiring.{u5} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7)] [_inst_14 : Module.{u4, u3} R₃ M₃ (Ring.toSemiring.{u4} R₃ _inst_3) (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9)] {σ₁₂ : RingHom.{u6, u5} R R₂ (Semiring.toNonAssocSemiring.{u6} R (Ring.toSemiring.{u6} R _inst_1)) (Semiring.toNonAssocSemiring.{u5} R₂ (Ring.toSemiring.{u5} R₂ _inst_2))} {σ₂₃ : RingHom.{u5, u4} R₂ R₃ (Semiring.toNonAssocSemiring.{u5} R₂ (Ring.toSemiring.{u5} R₂ _inst_2)) (Semiring.toNonAssocSemiring.{u4} R₃ (Ring.toSemiring.{u4} R₃ _inst_3))} {σ₁₃ : RingHom.{u6, u4} R R₃ (Semiring.toNonAssocSemiring.{u6} R (Ring.toSemiring.{u6} R _inst_1)) (Semiring.toNonAssocSemiring.{u4} R₃ (Ring.toSemiring.{u4} R₃ _inst_3))} [_inst_15 : RingHomCompTriple.{u6, u5, u4} R R₂ R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃] [_inst_16 : TopologicalAddGroup.{u3} M₃ _inst_8 (AddCommGroup.toAddGroup.{u3} M₃ _inst_9)] (g₁ : ContinuousLinearMap.{u5, u4, u2, u3} R₂ R₃ (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_13 _inst_14) (g₂ : ContinuousLinearMap.{u5, u4, u2, u3} R₂ R₃ (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_13 _inst_14) (f : ContinuousLinearMap.{u6, u5, u1, u2} R R₂ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) _inst_12 _inst_13), Eq.{max (succ u1) (succ u3)} (ContinuousLinearMap.{u6, u4, u1, u3} R R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.comp.{u6, u5, u4, u1, u2, u3} R R₂ R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 (HSub.hSub.{max u2 u3, max u2 u3, max u2 u3} (ContinuousLinearMap.{u5, u4, u2, u3} R₂ R₃ (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_13 _inst_14) (ContinuousLinearMap.{u5, u4, u2, u3} R₂ R₃ (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_13 _inst_14) (ContinuousLinearMap.{u5, u4, u2, u3} R₂ R₃ (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_13 _inst_14) (instHSub.{max u2 u3} (ContinuousLinearMap.{u5, u4, u2, u3} R₂ R₃ (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₂₃ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_13 _inst_14) (ContinuousLinearMap.sub.{u5, u4, u2, u3} R₂ _inst_2 R₃ _inst_3 M₂ _inst_6 _inst_7 M₃ _inst_8 _inst_9 _inst_13 _inst_14 σ₂₃ _inst_16)) g₁ g₂) f) (HSub.hSub.{max u1 u3, max u1 u3, max u1 u3} (ContinuousLinearMap.{u6, u4, u1, u3} R R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.{u6, u4, u1, u3} R R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.{u6, u4, u1, u3} R R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_12 _inst_14) (instHSub.{max u1 u3} (ContinuousLinearMap.{u6, u4, u1, u3} R R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_12 _inst_14) (ContinuousLinearMap.sub.{u6, u4, u1, u3} R _inst_1 R₃ _inst_3 M _inst_4 _inst_5 M₃ _inst_8 _inst_9 _inst_12 _inst_14 σ₁₃ _inst_16)) (ContinuousLinearMap.comp.{u6, u5, u4, u1, u2, u3} R R₂ R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 g₁ f) (ContinuousLinearMap.comp.{u6, u5, u4, u1, u2, u3} R R₂ R₃ (Ring.toSemiring.{u6} R _inst_1) (Ring.toSemiring.{u5} R₂ _inst_2) (Ring.toSemiring.{u4} R₃ _inst_3) σ₁₂ σ₂₃ σ₁₃ M _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_7) M₃ _inst_8 (AddCommGroup.toAddCommMonoid.{u3} M₃ _inst_9) _inst_12 _inst_13 _inst_14 _inst_15 g₂ f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.sub_comp ContinuousLinearMap.sub_compₓ'. -/
@[simp]
theorem sub_comp [RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [TopologicalAddGroup M₃] (g₁ g₂ : M₂ →SL[σ₂₃] M₃)
    (f : M →SL[σ₁₂] M₂) : (g₁ - g₂).comp f = g₁.comp f - g₂.comp f :=
  by
  ext
  simp
#align continuous_linear_map.sub_comp ContinuousLinearMap.sub_comp

instance [TopologicalAddGroup M] : Ring (M →L[R] M) :=
  { ContinuousLinearMap.semiring,
    ContinuousLinearMap.addCommGroup with
    mul := (· * ·)
    one := 1 }

/- warning: continuous_linear_map.smul_right_one_pow -> ContinuousLinearMap.smulRight_one_pow is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] [_inst_15 : TopologicalSpace.{u1} R] [_inst_16 : TopologicalRing.{u1} R _inst_15 (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))] (c : R) (n : Nat), Eq.{succ u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (HPow.hPow.{u1, 0, u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) Nat (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (instHPow.{u1, 0} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) Nat (Monoid.Pow.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (Ring.toMonoid.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.ring.{u1, u1} R _inst_1 R _inst_15 (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (TopologicalRing.to_topologicalAddGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) _inst_15 _inst_16))))) (ContinuousLinearMap.smulRight.{u1, u1, u1, u1} R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (IsScalarTower.left.{u1, u1} R R (Ring.toMonoid.{u1} R _inst_1) (Monoid.toMulAction.{u1} R (Ring.toMonoid.{u1} R _inst_1))) _inst_15 (ContinuousMul.to_continuousSMul.{u1} R _inst_15 (Distrib.toHasMul.{u1} R (Ring.toDistrib.{u1} R _inst_1)) (TopologicalSemiring.to_continuousMul.{u1} R _inst_15 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))) (TopologicalRing.to_topologicalSemiring.{u1} R _inst_15 (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) _inst_16))) (OfNat.ofNat.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) 1 (OfNat.mk.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) 1 (One.one.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.one.{u1, u1} R (Ring.toSemiring.{u1} R _inst_1) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))))) c) n) (ContinuousLinearMap.smulRight.{u1, u1, u1, u1} R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (IsScalarTower.left.{u1, u1} R R (Ring.toMonoid.{u1} R _inst_1) (Monoid.toMulAction.{u1} R (Ring.toMonoid.{u1} R _inst_1))) _inst_15 (ContinuousMul.to_continuousSMul.{u1} R _inst_15 (Distrib.toHasMul.{u1} R (Ring.toDistrib.{u1} R _inst_1)) (TopologicalSemiring.to_continuousMul.{u1} R _inst_15 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))) (TopologicalRing.to_topologicalSemiring.{u1} R _inst_15 (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) _inst_16))) (OfNat.ofNat.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) 1 (OfNat.mk.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) 1 (One.one.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.one.{u1, u1} R (Ring.toSemiring.{u1} R _inst_1) R _inst_15 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))))) (HPow.hPow.{u1, 0, u1} R Nat R (instHPow.{u1, 0} R Nat (Monoid.Pow.{u1} R (Ring.toMonoid.{u1} R _inst_1))) c n))
but is expected to have type
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] [_inst_15 : TopologicalSpace.{u1} R] [_inst_16 : TopologicalRing.{u1} R _inst_15 (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))] (c : R) (n : Nat), Eq.{succ u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (HPow.hPow.{u1, 0, u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) Nat (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (instHPow.{u1, 0} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) Nat (Monoid.Pow.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (MonoidWithZero.toMonoid.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.monoidWithZero.{u1, u1} R (Ring.toSemiring.{u1} R _inst_1) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))))) (ContinuousLinearMap.smulRight.{u1, u1, u1, u1} R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (IsScalarTower.left.{u1, u1} R R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (MulActionWithZero.toMulAction.{u1, u1} R R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (MonoidWithZero.toMulActionWithZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) _inst_15 (ContinuousMul.to_continuousSMul.{u1} R _inst_15 (MulZeroClass.toMul.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) (TopologicalSemiring.toContinuousMul.{u1} R _inst_15 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))) (TopologicalRing.toTopologicalSemiring.{u1} R _inst_15 (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) _inst_16))) (OfNat.ofNat.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) 1 (One.toOfNat1.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.one.{u1, u1} R (Ring.toSemiring.{u1} R _inst_1) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) c) n) (ContinuousLinearMap.smulRight.{u1, u1, u1, u1} R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (IsScalarTower.left.{u1, u1} R R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (MulActionWithZero.toMulAction.{u1, u1} R R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (MonoidWithZero.toMulActionWithZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) _inst_15 (ContinuousMul.to_continuousSMul.{u1} R _inst_15 (MulZeroClass.toMul.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) (TopologicalSemiring.toContinuousMul.{u1} R _inst_15 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))) (TopologicalRing.toTopologicalSemiring.{u1} R _inst_15 (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) _inst_16))) (OfNat.ofNat.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) 1 (One.toOfNat1.{u1} (ContinuousLinearMap.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.one.{u1, u1} R (Ring.toSemiring.{u1} R _inst_1) R _inst_15 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) (HPow.hPow.{u1, 0, u1} R Nat R (instHPow.{u1, 0} R Nat (Monoid.Pow.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) c n))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.smul_right_one_pow ContinuousLinearMap.smulRight_one_powₓ'. -/
theorem smulRight_one_pow [TopologicalSpace R] [TopologicalRing R] (c : R) (n : ℕ) :
    smulRight (1 : R →L[R] R) c ^ n = smulRight (1 : R →L[R] R) (c ^ n) :=
  by
  induction' n with n ihn
  · ext
    simp
  · rw [pow_succ, ihn, mul_def, smul_right_comp, smul_eq_mul, pow_succ']
#align continuous_linear_map.smul_right_one_pow ContinuousLinearMap.smulRight_one_pow

section

variable {σ₂₁ : R₂ →+* R} [RingHomInvPair σ₁₂ σ₂₁]

/- warning: continuous_linear_map.proj_ker_of_right_inverse -> ContinuousLinearMap.projKerOfRightInverse is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M] [_inst_5 : AddCommGroup.{u3} M] {M₂ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₂] [_inst_7 : AddCommGroup.{u4} M₂] [_inst_12 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5)] [_inst_13 : Module.{u2, u4} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} {σ₂₁ : RingHom.{u2, u1} R₂ R (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2)) (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))} [_inst_15 : RingHomInvPair.{u1, u2} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁] [_inst_16 : TopologicalAddGroup.{u3} M _inst_4 (AddCommGroup.toAddGroup.{u3} M _inst_5)] (f₁ : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (f₂ : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12), (Function.RightInverse.{succ u3, succ u4} M M₂ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) (fun (_x : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) => M₂ -> M) (ContinuousLinearMap.toFun.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) f₂) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) f₁)) -> (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) (Subtype.topologicalSpace.{u3} M (fun (x : M) => Membership.Mem.{u3, u3} M (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (SetLike.hasMem.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) x (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)))
but is expected to have type
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M] [_inst_5 : AddCommGroup.{u3} M] {M₂ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₂] [_inst_7 : AddCommGroup.{u4} M₂] [_inst_12 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5)] [_inst_13 : Module.{u2, u4} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7)] {σ₁₂ : RingHom.{u1, u2} R R₂ (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toNonAssocSemiring.{u2} R₂ (Ring.toSemiring.{u2} R₂ _inst_2))} {σ₂₁ : RingHom.{u2, u1} R₂ R (Semiring.toNonAssocSemiring.{u2} R₂ (Ring.toSemiring.{u2} R₂ _inst_2)) (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))} [_inst_15 : RingHomInvPair.{u1, u2} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁] [_inst_16 : TopologicalAddGroup.{u3} M _inst_4 (AddCommGroup.toAddGroup.{u3} M _inst_5)] (f₁ : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (f₂ : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12), (Function.RightInverse.{succ u3, succ u4} M M₂ (FunLike.coe.{max (succ u3) (succ u4), succ u4, succ u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u4, u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) M₂ M _inst_6 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u2, u1, u4, u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12))) f₂) (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13))) f₁)) -> (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (Subtype.{succ u3} M (fun (x : M) => Membership.mem.{u3, u3} M (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (SetLike.instMembership.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) x (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (instTopologicalSpaceSubtype.{u3} M (fun (x : M) => Membership.mem.{u3, u3} M (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (SetLike.instMembership.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) x (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.proj_ker_of_right_inverse ContinuousLinearMap.projKerOfRightInverseₓ'. -/
/-- Given a right inverse `f₂ : M₂ →L[R] M` to `f₁ : M →L[R] M₂`,
`proj_ker_of_right_inverse f₁ f₂ h` is the projection `M →L[R] f₁.ker` along `f₂.range`. -/
def projKerOfRightInverse [TopologicalAddGroup M] (f₁ : M →SL[σ₁₂] M₂) (f₂ : M₂ →SL[σ₂₁] M)
    (h : Function.RightInverse f₂ f₁) : M →L[R] LinearMap.ker f₁ :=
  (id R M - f₂.comp f₁).codRestrict (LinearMap.ker f₁) fun x => by simp [h (f₁ x)]
#align continuous_linear_map.proj_ker_of_right_inverse ContinuousLinearMap.projKerOfRightInverse

/- warning: continuous_linear_map.coe_proj_ker_of_right_inverse_apply -> ContinuousLinearMap.coe_projKerOfRightInverse_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M] [_inst_5 : AddCommGroup.{u3} M] {M₂ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₂] [_inst_7 : AddCommGroup.{u4} M₂] [_inst_12 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5)] [_inst_13 : Module.{u2, u4} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} {σ₂₁ : RingHom.{u2, u1} R₂ R (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2)) (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))} [_inst_15 : RingHomInvPair.{u1, u2} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁] [_inst_16 : TopologicalAddGroup.{u3} M _inst_4 (AddCommGroup.toAddGroup.{u3} M _inst_5)] (f₁ : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (f₂ : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) (h : Function.RightInverse.{succ u3, succ u4} M M₂ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) (fun (_x : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) => M₂ -> M) (ContinuousLinearMap.toFun.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) f₂) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) f₁)) (x : M), Eq.{succ u3} M ((fun (a : Type.{u3}) (b : Type.{u3}) [self : HasLiftT.{succ u3, succ u3} a b] => self.0) (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) M (HasLiftT.mk.{succ u3, succ u3} (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) M (CoeTCₓ.coe.{succ u3, succ u3} (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) M (coeBase.{succ u3, succ u3} (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) M (coeSubtype.{succ u3} M (fun (x : M) => Membership.Mem.{u3, u3} M (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (SetLike.hasMem.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) x (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)))))) (coeFn.{succ u3, succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) (Subtype.topologicalSpace.{u3} M (fun (x : M) => Membership.Mem.{u3, u3} M (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (SetLike.hasMem.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) x (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) (Subtype.topologicalSpace.{u3} M (fun (x : M) => Membership.Mem.{u3, u3} M (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (SetLike.hasMem.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) x (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁))) => M -> (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (ContinuousLinearMap.toFun.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) (Subtype.topologicalSpace.{u3} M (fun (x : M) => Membership.Mem.{u3, u3} M (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (SetLike.hasMem.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) x (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (ContinuousLinearMap.projKerOfRightInverse.{u1, u2, u3, u4} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ σ₂₁ _inst_15 _inst_16 f₁ f₂ h) x)) (HSub.hSub.{u3, u3, u3} M M M (instHSub.{u3} M (SubNegMonoid.toHasSub.{u3} M (AddGroup.toSubNegMonoid.{u3} M (AddCommGroup.toAddGroup.{u3} M _inst_5)))) x (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) (fun (_x : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) => M₂ -> M) (ContinuousLinearMap.toFun.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) f₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) f₁ x)))
but is expected to have type
  forall {R : Type.{u3}} [_inst_1 : Ring.{u3} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M] [_inst_5 : AddCommGroup.{u4} M] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_12 : Module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5)] [_inst_13 : Module.{u2, u1} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] {σ₁₂ : RingHom.{u3, u2} R R₂ (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (Semiring.toNonAssocSemiring.{u2} R₂ (Ring.toSemiring.{u2} R₂ _inst_2))} {σ₂₁ : RingHom.{u2, u3} R₂ R (Semiring.toNonAssocSemiring.{u2} R₂ (Ring.toSemiring.{u2} R₂ _inst_2)) (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))} [_inst_15 : RingHomInvPair.{u3, u2} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁] [_inst_16 : TopologicalAddGroup.{u4} M _inst_4 (AddCommGroup.toAddGroup.{u4} M _inst_5)] (f₁ : ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (f₂ : ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) (h : Function.RightInverse.{succ u4, succ u1} M M₂ (FunLike.coe.{max (succ u4) (succ u1), succ u1, succ u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) _x) (ContinuousMapClass.toFunLike.{max u4 u1, u1, u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) M₂ M _inst_6 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u2, u3, u1, u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12))) f₂) (FunLike.coe.{max (succ u4) (succ u1), succ u4, succ u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u4 u1, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) f₁)) (x : M), Eq.{succ u4} M (Subtype.val.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Set.{u4} M) (Set.instMembershipSet.{u4} M) x (SetLike.coe.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (FunLike.coe.{succ u4, succ u4, succ u4} (ContinuousLinearMap.{u3, u3, u4, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) _x) (ContinuousMapClass.toFunLike.{u4, u4, u4} (ContinuousLinearMap.{u3, u3, u4, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) M (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) _inst_4 (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (ContinuousSemilinearMapClass.toContinuousMapClass.{u4, u3, u3, u4, u4} (ContinuousLinearMap.{u3, u3, u4, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u4, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))))) (ContinuousLinearMap.projKerOfRightInverse.{u3, u2, u4, u1} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ σ₂₁ _inst_15 _inst_16 f₁ f₂ h) x)) (HSub.hSub.{u4, u4, u4} M ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) (FunLike.coe.{max (succ u4) (succ u1), succ u4, succ u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (a : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) a) (ContinuousMapClass.toFunLike.{max u4 u1, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) f₁ x)) M (instHSub.{u4} M (SubNegMonoid.toSub.{u4} M (AddGroup.toSubNegMonoid.{u4} M (AddCommGroup.toAddGroup.{u4} M _inst_5)))) x (FunLike.coe.{max (succ u4) (succ u1), succ u1, succ u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) _x) (ContinuousMapClass.toFunLike.{max u4 u1, u1, u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) M₂ M _inst_6 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u2, u3, u1, u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12))) f₂ (FunLike.coe.{max (succ u4) (succ u1), succ u4, succ u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u4 u1, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) f₁ x)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_proj_ker_of_right_inverse_apply ContinuousLinearMap.coe_projKerOfRightInverse_applyₓ'. -/
@[simp]
theorem coe_projKerOfRightInverse_apply [TopologicalAddGroup M] (f₁ : M →SL[σ₁₂] M₂)
    (f₂ : M₂ →SL[σ₂₁] M) (h : Function.RightInverse f₂ f₁) (x : M) :
    (f₁.projKerOfRightInverse f₂ h x : M) = x - f₂ (f₁ x) :=
  rfl
#align continuous_linear_map.coe_proj_ker_of_right_inverse_apply ContinuousLinearMap.coe_projKerOfRightInverse_apply

/- warning: continuous_linear_map.proj_ker_of_right_inverse_apply_idem -> ContinuousLinearMap.projKerOfRightInverse_apply_idem is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M] [_inst_5 : AddCommGroup.{u3} M] {M₂ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₂] [_inst_7 : AddCommGroup.{u4} M₂] [_inst_12 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5)] [_inst_13 : Module.{u2, u4} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} {σ₂₁ : RingHom.{u2, u1} R₂ R (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2)) (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))} [_inst_15 : RingHomInvPair.{u1, u2} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁] [_inst_16 : TopologicalAddGroup.{u3} M _inst_4 (AddCommGroup.toAddGroup.{u3} M _inst_5)] (f₁ : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (f₂ : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) (h : Function.RightInverse.{succ u3, succ u4} M M₂ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) (fun (_x : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) => M₂ -> M) (ContinuousLinearMap.toFun.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) f₂) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) f₁)) (x : coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)), Eq.{succ u3} (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) (coeFn.{succ u3, succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) (Subtype.topologicalSpace.{u3} M (fun (x : M) => Membership.Mem.{u3, u3} M (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (SetLike.hasMem.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) x (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) (Subtype.topologicalSpace.{u3} M (fun (x : M) => Membership.Mem.{u3, u3} M (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (SetLike.hasMem.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) x (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁))) => M -> (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (ContinuousLinearMap.toFun.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) (Subtype.topologicalSpace.{u3} M (fun (x : M) => Membership.Mem.{u3, u3} M (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (SetLike.hasMem.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) x (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (ContinuousLinearMap.projKerOfRightInverse.{u1, u2, u3, u4} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ σ₂₁ _inst_15 _inst_16 f₁ f₂ h) ((fun (a : Type.{u3}) (b : Type.{u3}) [self : HasLiftT.{succ u3, succ u3} a b] => self.0) (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) M (HasLiftT.mk.{succ u3, succ u3} (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) M (CoeTCₓ.coe.{succ u3, succ u3} (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) M (coeBase.{succ u3, succ u3} (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) M (coeSubtype.{succ u3} M (fun (x : M) => Membership.Mem.{u3, u3} M (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (SetLike.hasMem.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) x (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)))))) x)) x
but is expected to have type
  forall {R : Type.{u3}} [_inst_1 : Ring.{u3} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M] [_inst_5 : AddCommGroup.{u4} M] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_12 : Module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5)] [_inst_13 : Module.{u2, u1} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] {σ₁₂ : RingHom.{u3, u2} R R₂ (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (Semiring.toNonAssocSemiring.{u2} R₂ (Ring.toSemiring.{u2} R₂ _inst_2))} {σ₂₁ : RingHom.{u2, u3} R₂ R (Semiring.toNonAssocSemiring.{u2} R₂ (Ring.toSemiring.{u2} R₂ _inst_2)) (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))} [_inst_15 : RingHomInvPair.{u3, u2} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁] [_inst_16 : TopologicalAddGroup.{u4} M _inst_4 (AddCommGroup.toAddGroup.{u4} M _inst_5)] (f₁ : ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (f₂ : ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) (h : Function.RightInverse.{succ u4, succ u1} M M₂ (FunLike.coe.{max (succ u4) (succ u1), succ u1, succ u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) _x) (ContinuousMapClass.toFunLike.{max u4 u1, u1, u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) M₂ M _inst_6 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u2, u3, u1, u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12))) f₂) (FunLike.coe.{max (succ u4) (succ u1), succ u4, succ u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u4 u1, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) f₁)) (x : Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))), Eq.{succ u4} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (Subtype.val.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Set.{u4} M) (Set.instMembershipSet.{u4} M) x (SetLike.coe.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) x)) (FunLike.coe.{succ u4, succ u4, succ u4} (ContinuousLinearMap.{u3, u3, u4, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) _x) (ContinuousMapClass.toFunLike.{u4, u4, u4} (ContinuousLinearMap.{u3, u3, u4, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) M (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) _inst_4 (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (ContinuousSemilinearMapClass.toContinuousMapClass.{u4, u3, u3, u4, u4} (ContinuousLinearMap.{u3, u3, u4, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u4, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))))) (ContinuousLinearMap.projKerOfRightInverse.{u3, u2, u4, u1} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ σ₂₁ _inst_15 _inst_16 f₁ f₂ h) (Subtype.val.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Set.{u4} M) (Set.instMembershipSet.{u4} M) x (SetLike.coe.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) x)) x
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.proj_ker_of_right_inverse_apply_idem ContinuousLinearMap.projKerOfRightInverse_apply_idemₓ'. -/
@[simp]
theorem projKerOfRightInverse_apply_idem [TopologicalAddGroup M] (f₁ : M →SL[σ₁₂] M₂)
    (f₂ : M₂ →SL[σ₂₁] M) (h : Function.RightInverse f₂ f₁) (x : LinearMap.ker f₁) :
    f₁.projKerOfRightInverse f₂ h x = x :=
  Subtype.ext_iff_val.2 <| by simp
#align continuous_linear_map.proj_ker_of_right_inverse_apply_idem ContinuousLinearMap.projKerOfRightInverse_apply_idem

/- warning: continuous_linear_map.proj_ker_of_right_inverse_comp_inv -> ContinuousLinearMap.projKerOfRightInverse_comp_inv is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M] [_inst_5 : AddCommGroup.{u3} M] {M₂ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₂] [_inst_7 : AddCommGroup.{u4} M₂] [_inst_12 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5)] [_inst_13 : Module.{u2, u4} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} {σ₂₁ : RingHom.{u2, u1} R₂ R (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2)) (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))} [_inst_15 : RingHomInvPair.{u1, u2} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁] [_inst_16 : TopologicalAddGroup.{u3} M _inst_4 (AddCommGroup.toAddGroup.{u3} M _inst_5)] (f₁ : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (f₂ : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) (h : Function.RightInverse.{succ u3, succ u4} M M₂ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) (fun (_x : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) => M₂ -> M) (ContinuousLinearMap.toFun.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) f₂) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) f₁)) (y : M₂), Eq.{succ u3} (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) (coeFn.{succ u3, succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) (Subtype.topologicalSpace.{u3} M (fun (x : M) => Membership.Mem.{u3, u3} M (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (SetLike.hasMem.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) x (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) (Subtype.topologicalSpace.{u3} M (fun (x : M) => Membership.Mem.{u3, u3} M (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (SetLike.hasMem.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) x (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁))) => M -> (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (ContinuousLinearMap.toFun.{u1, u1, u3, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) (Subtype.topologicalSpace.{u3} M (fun (x : M) => Membership.Mem.{u3, u3} M (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) (SetLike.hasMem.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) x (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (ContinuousLinearMap.projKerOfRightInverse.{u1, u2, u3, u4} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ σ₂₁ _inst_15 _inst_16 f₁ f₂ h) (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) (fun (_x : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) => M₂ -> M) (ContinuousLinearMap.toFun.{u2, u1, u4, u3} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_13 _inst_12) f₂ y)) (OfNat.ofNat.{u3} (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) 0 (OfNat.mk.{u3} (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) 0 (Zero.zero.{u3} (coeSort.{succ u3, succ (succ u3)} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) Type.{u3} (SetLike.hasCoeToSort.{u3, u3} (Submodule.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12) M (Submodule.setLike.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12)) (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)) (Submodule.zero.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) _inst_12 (LinearMap.ker.{u1, u2, u3, u4, max u3 u4} R R₂ M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_12 _inst_13)) f₁)))))
but is expected to have type
  forall {R : Type.{u3}} [_inst_1 : Ring.{u3} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u4}} [_inst_4 : TopologicalSpace.{u4} M] [_inst_5 : AddCommGroup.{u4} M] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_12 : Module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5)] [_inst_13 : Module.{u2, u1} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] {σ₁₂ : RingHom.{u3, u2} R R₂ (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (Semiring.toNonAssocSemiring.{u2} R₂ (Ring.toSemiring.{u2} R₂ _inst_2))} {σ₂₁ : RingHom.{u2, u3} R₂ R (Semiring.toNonAssocSemiring.{u2} R₂ (Ring.toSemiring.{u2} R₂ _inst_2)) (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))} [_inst_15 : RingHomInvPair.{u3, u2} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁] [_inst_16 : TopologicalAddGroup.{u4} M _inst_4 (AddCommGroup.toAddGroup.{u4} M _inst_5)] (f₁ : ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (f₂ : ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) (h : Function.RightInverse.{succ u4, succ u1} M M₂ (FunLike.coe.{max (succ u4) (succ u1), succ u1, succ u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) _x) (ContinuousMapClass.toFunLike.{max u4 u1, u1, u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) M₂ M _inst_6 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u2, u3, u1, u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12))) f₂) (FunLike.coe.{max (succ u4) (succ u1), succ u4, succ u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u4 u1, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) M M₂ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13))) f₁)) (y : M₂), Eq.{succ u4} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (FunLike.coe.{max (succ u4) (succ u1), succ u1, succ u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) M₂ (fun (a : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) a) (ContinuousMapClass.toFunLike.{max u4 u1, u1, u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) M₂ M _inst_6 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u2, u3, u1, u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12))) f₂ y)) (FunLike.coe.{succ u4, succ u4, succ u4} (ContinuousLinearMap.{u3, u3, u4, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) _x) (ContinuousMapClass.toFunLike.{u4, u4, u4} (ContinuousLinearMap.{u3, u3, u4, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) M (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) _inst_4 (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (ContinuousSemilinearMapClass.toContinuousMapClass.{u4, u3, u3, u4, u4} (ContinuousLinearMap.{u3, u3, u4, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u4, u4} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (instTopologicalSpaceSubtype.{u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_4) (Submodule.addCommMonoid.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁)) _inst_12 (Submodule.module.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))))) (ContinuousLinearMap.projKerOfRightInverse.{u3, u2, u4, u1} R _inst_1 R₂ _inst_2 M _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_12 _inst_13 σ₁₂ σ₂₁ _inst_15 _inst_16 f₁ f₂ h) (FunLike.coe.{max (succ u4) (succ u1), succ u1, succ u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) _x) (ContinuousMapClass.toFunLike.{max u4 u1, u1, u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) M₂ M _inst_6 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u2, u3, u1, u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12))) f₂ y)) (OfNat.ofNat.{u4} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (FunLike.coe.{max (succ u4) (succ u1), succ u1, succ u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) M₂ (fun (a : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) a) (ContinuousMapClass.toFunLike.{max u4 u1, u1, u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) M₂ M _inst_6 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u2, u3, u1, u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12))) f₂ y)) 0 (Zero.toOfNat0.{u4} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => Subtype.{succ u4} M (fun (x : M) => Membership.mem.{u4, u4} M (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) (SetLike.instMembership.{u4, u4} (Submodule.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12) M (Submodule.setLike.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12)) x (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))) (FunLike.coe.{max (succ u4) (succ u1), succ u1, succ u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) M₂ (fun (a : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) a) (ContinuousMapClass.toFunLike.{max u4 u1, u1, u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) M₂ M _inst_6 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u2, u3, u1, u4} (ContinuousLinearMap.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12) R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u3, u1, u4} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u3} R _inst_1) σ₂₁ M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_13 _inst_12))) f₂ y)) (Submodule.zero.{u3, u4} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) _inst_12 (LinearMap.ker.{u3, u2, u4, u1, max u4 u1} R R₂ M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 σ₁₂ (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u4 u1, u3, u2, u4, u1} (ContinuousLinearMap.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13) R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u2, u4, u1} R R₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ M _inst_4 (AddCommGroup.toAddCommMonoid.{u4} M _inst_5) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_12 _inst_13)) f₁))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.proj_ker_of_right_inverse_comp_inv ContinuousLinearMap.projKerOfRightInverse_comp_invₓ'. -/
@[simp]
theorem projKerOfRightInverse_comp_inv [TopologicalAddGroup M] (f₁ : M →SL[σ₁₂] M₂)
    (f₂ : M₂ →SL[σ₂₁] M) (h : Function.RightInverse f₂ f₁) (y : M₂) :
    f₁.projKerOfRightInverse f₂ h (f₂ y) = 0 :=
  Subtype.ext_iff_val.2 <| by simp [h y]
#align continuous_linear_map.proj_ker_of_right_inverse_comp_inv ContinuousLinearMap.projKerOfRightInverse_comp_inv

end

end Ring

section DivisionMonoid

variable {R M : Type _}

/- warning: continuous_linear_map.is_open_map_of_ne_zero -> ContinuousLinearMap.isOpenMap_of_ne_zero is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : TopologicalSpace.{u1} R] [_inst_2 : DivisionRing.{u1} R] [_inst_3 : ContinuousSub.{u1} R _inst_1 (SubNegMonoid.toHasSub.{u1} R (AddGroup.toSubNegMonoid.{u1} R (AddGroupWithOne.toAddGroup.{u1} R (AddCommGroupWithOne.toAddGroupWithOne.{u1} R (Ring.toAddCommGroupWithOne.{u1} R (DivisionRing.toRing.{u1} R _inst_2))))))] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : TopologicalSpace.{u2} M] [_inst_6 : ContinuousAdd.{u2} M _inst_5 (AddZeroClass.toHasAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (SubNegMonoid.toAddMonoid.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_4)))))] [_inst_7 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] [_inst_8 : ContinuousSMul.{u1, u2} R M (SMulZeroClass.toHasSmul.{u1, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (SMulWithZero.toSmulZeroClass.{u1, u2} R M (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)))) (Module.toMulActionWithZero.{u1, u2} R M (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_7)))) _inst_1 _inst_5] (f : ContinuousLinearMap.{u1, u1, u2, u1} R R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) R _inst_1 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R (DivisionRing.toRing.{u1} R _inst_2))))) _inst_7 (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))), (Ne.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u1, u1, u2, u1} R R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) R _inst_1 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R (DivisionRing.toRing.{u1} R _inst_2))))) _inst_7 (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))) f (OfNat.ofNat.{max u2 u1} (ContinuousLinearMap.{u1, u1, u2, u1} R R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) R _inst_1 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R (DivisionRing.toRing.{u1} R _inst_2))))) _inst_7 (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))) 0 (OfNat.mk.{max u2 u1} (ContinuousLinearMap.{u1, u1, u2, u1} R R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) R _inst_1 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R (DivisionRing.toRing.{u1} R _inst_2))))) _inst_7 (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))) 0 (Zero.zero.{max u2 u1} (ContinuousLinearMap.{u1, u1, u2, u1} R R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) R _inst_1 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R (DivisionRing.toRing.{u1} R _inst_2))))) _inst_7 (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))) (ContinuousLinearMap.zero.{u1, u1, u2, u1} R R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) R _inst_1 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R (DivisionRing.toRing.{u1} R _inst_2))))) _inst_7 (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))))))) -> (IsOpenMap.{u2, u1} M R _inst_5 _inst_1 (coeFn.{max (succ u2) (succ u1), max (succ u2) (succ u1)} (ContinuousLinearMap.{u1, u1, u2, u1} R R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) R _inst_1 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R (DivisionRing.toRing.{u1} R _inst_2))))) _inst_7 (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u1} R R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) R _inst_1 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R (DivisionRing.toRing.{u1} R _inst_2))))) _inst_7 (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))) => M -> R) (ContinuousLinearMap.toFun.{u1, u1, u2, u1} R R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) R _inst_1 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R (DivisionRing.toRing.{u1} R _inst_2))))) _inst_7 (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R (DivisionRing.toRing.{u1} R _inst_2)))) f))
but is expected to have type
  forall {R : Type.{u2}} {M : Type.{u1}} [_inst_1 : TopologicalSpace.{u2} R] [_inst_2 : DivisionRing.{u2} R] [_inst_3 : ContinuousSub.{u2} R _inst_1 (Ring.toSub.{u2} R (DivisionRing.toRing.{u2} R _inst_2))] [_inst_4 : AddCommGroup.{u1} M] [_inst_5 : TopologicalSpace.{u1} M] [_inst_6 : ContinuousAdd.{u1} M _inst_5 (AddZeroClass.toAdd.{u1} M (AddMonoid.toAddZeroClass.{u1} M (SubNegMonoid.toAddMonoid.{u1} M (AddGroup.toSubNegMonoid.{u1} M (AddCommGroup.toAddGroup.{u1} M _inst_4)))))] [_inst_7 : Module.{u2, u1} R M (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4)] [_inst_8 : ContinuousSMul.{u2, u1} R M (SMulZeroClass.toSMul.{u2, u1} R M (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (SMulWithZero.toSMulZeroClass.{u2, u1} R M (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (MulActionWithZero.toSMulWithZero.{u2, u1} R M (Semiring.toMonoidWithZero.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2))) (NegZeroClass.toZero.{u1} M (SubNegZeroMonoid.toNegZeroClass.{u1} M (SubtractionMonoid.toSubNegZeroMonoid.{u1} M (SubtractionCommMonoid.toSubtractionMonoid.{u1} M (AddCommGroup.toDivisionAddCommMonoid.{u1} M _inst_4))))) (Module.toMulActionWithZero.{u2, u1} R M (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_7)))) _inst_1 _inst_5] (f : ContinuousLinearMap.{u2, u2, u1, u2} R R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) R _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} R (NonAssocRing.toNonUnitalNonAssocRing.{u2} R (Ring.toNonAssocRing.{u2} R (DivisionRing.toRing.{u2} R _inst_2))))) _inst_7 (Semiring.toModule.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))), (Ne.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u2, u2, u1, u2} R R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) R _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} R (NonAssocRing.toNonUnitalNonAssocRing.{u2} R (Ring.toNonAssocRing.{u2} R (DivisionRing.toRing.{u2} R _inst_2))))) _inst_7 (Semiring.toModule.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) f (OfNat.ofNat.{max u2 u1} (ContinuousLinearMap.{u2, u2, u1, u2} R R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) R _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} R (NonAssocRing.toNonUnitalNonAssocRing.{u2} R (Ring.toNonAssocRing.{u2} R (DivisionRing.toRing.{u2} R _inst_2))))) _inst_7 (Semiring.toModule.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) 0 (Zero.toOfNat0.{max u2 u1} (ContinuousLinearMap.{u2, u2, u1, u2} R R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) R _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} R (NonAssocRing.toNonUnitalNonAssocRing.{u2} R (Ring.toNonAssocRing.{u2} R (DivisionRing.toRing.{u2} R _inst_2))))) _inst_7 (Semiring.toModule.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) (ContinuousLinearMap.zero.{u2, u2, u1, u2} R R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) R _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} R (NonAssocRing.toNonUnitalNonAssocRing.{u2} R (Ring.toNonAssocRing.{u2} R (DivisionRing.toRing.{u2} R _inst_2))))) _inst_7 (Semiring.toModule.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2))))))) -> (IsOpenMap.{u1, u2} M R _inst_5 _inst_1 (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearMap.{u2, u2, u1, u2} R R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) R _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} R (NonAssocRing.toNonUnitalNonAssocRing.{u2} R (Ring.toNonAssocRing.{u2} R (DivisionRing.toRing.{u2} R _inst_2))))) _inst_7 (Semiring.toModule.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => R) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearMap.{u2, u2, u1, u2} R R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) R _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} R (NonAssocRing.toNonUnitalNonAssocRing.{u2} R (Ring.toNonAssocRing.{u2} R (DivisionRing.toRing.{u2} R _inst_2))))) _inst_7 (Semiring.toModule.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) M R _inst_5 _inst_1 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u2, u2, u1, u2} (ContinuousLinearMap.{u2, u2, u1, u2} R R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) R _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} R (NonAssocRing.toNonUnitalNonAssocRing.{u2} R (Ring.toNonAssocRing.{u2} R (DivisionRing.toRing.{u2} R _inst_2))))) _inst_7 (Semiring.toModule.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) R R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) R _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} R (NonAssocRing.toNonUnitalNonAssocRing.{u2} R (Ring.toNonAssocRing.{u2} R (DivisionRing.toRing.{u2} R _inst_2))))) _inst_7 (Semiring.toModule.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2))) (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u2, u1, u2} R R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))) M _inst_5 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) R _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} R (NonAssocRing.toNonUnitalNonAssocRing.{u2} R (Ring.toNonAssocRing.{u2} R (DivisionRing.toRing.{u2} R _inst_2))))) _inst_7 (Semiring.toModule.{u2} R (DivisionSemiring.toSemiring.{u2} R (DivisionRing.toDivisionSemiring.{u2} R _inst_2)))))) f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.is_open_map_of_ne_zero ContinuousLinearMap.isOpenMap_of_ne_zeroₓ'. -/
/-- A nonzero continuous linear functional is open. -/
protected theorem isOpenMap_of_ne_zero [TopologicalSpace R] [DivisionRing R] [ContinuousSub R]
    [AddCommGroup M] [TopologicalSpace M] [ContinuousAdd M] [Module R M] [ContinuousSMul R M]
    (f : M →L[R] R) (hf : f ≠ 0) : IsOpenMap f :=
  let ⟨x, hx⟩ := exists_ne_zero hf
  IsOpenMap.of_sections fun y =>
    ⟨fun a => y + (a - f y) • (f x)⁻¹ • x, Continuous.continuousAt <| by continuity, by simp,
      fun a => by simp [hx]⟩
#align continuous_linear_map.is_open_map_of_ne_zero ContinuousLinearMap.isOpenMap_of_ne_zero

end DivisionMonoid

section SmulMonoid

-- The M's are used for semilinear maps, and the N's for plain linear maps
variable {R R₂ R₃ S S₃ : Type _} [Semiring R] [Semiring R₂] [Semiring R₃] [Monoid S] [Monoid S₃]
  {M : Type _} [TopologicalSpace M] [AddCommMonoid M] [Module R M] {M₂ : Type _}
  [TopologicalSpace M₂] [AddCommMonoid M₂] [Module R₂ M₂] {M₃ : Type _} [TopologicalSpace M₃]
  [AddCommMonoid M₃] [Module R₃ M₃] {N₂ : Type _} [TopologicalSpace N₂] [AddCommMonoid N₂]
  [Module R N₂] {N₃ : Type _} [TopologicalSpace N₃] [AddCommMonoid N₃] [Module R N₃]
  [DistribMulAction S₃ M₃] [SMulCommClass R₃ S₃ M₃] [ContinuousConstSMul S₃ M₃]
  [DistribMulAction S N₃] [SMulCommClass R S N₃] [ContinuousConstSMul S N₃] {σ₁₂ : R →+* R₂}
  {σ₂₃ : R₂ →+* R₃} {σ₁₃ : R →+* R₃} [RingHomCompTriple σ₁₂ σ₂₃ σ₁₃]

include σ₁₃

/- warning: continuous_linear_map.smul_comp -> ContinuousLinearMap.smul_comp is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {R₂ : Type.{u2}} {R₃ : Type.{u3}} {S₃ : Type.{u4}} [_inst_1 : Semiring.{u1} R] [_inst_2 : Semiring.{u2} R₂] [_inst_3 : Semiring.{u3} R₃] [_inst_5 : Monoid.{u4} S₃] {M : Type.{u5}} [_inst_6 : TopologicalSpace.{u5} M] [_inst_7 : AddCommMonoid.{u5} M] [_inst_8 : Module.{u1, u5} R M _inst_1 _inst_7] {M₂ : Type.{u6}} [_inst_9 : TopologicalSpace.{u6} M₂] [_inst_10 : AddCommMonoid.{u6} M₂] [_inst_11 : Module.{u2, u6} R₂ M₂ _inst_2 _inst_10] {M₃ : Type.{u7}} [_inst_12 : TopologicalSpace.{u7} M₃] [_inst_13 : AddCommMonoid.{u7} M₃] [_inst_14 : Module.{u3, u7} R₃ M₃ _inst_3 _inst_13] [_inst_21 : DistribMulAction.{u4, u7} S₃ M₃ _inst_5 (AddCommMonoid.toAddMonoid.{u7} M₃ _inst_13)] [_inst_22 : SMulCommClass.{u3, u4, u7} R₃ S₃ M₃ (SMulZeroClass.toHasSmul.{u3, u7} R₃ M₃ (AddZeroClass.toHasZero.{u7} M₃ (AddMonoid.toAddZeroClass.{u7} M₃ (AddCommMonoid.toAddMonoid.{u7} M₃ _inst_13))) (SMulWithZero.toSmulZeroClass.{u3, u7} R₃ M₃ (MulZeroClass.toHasZero.{u3} R₃ (MulZeroOneClass.toMulZeroClass.{u3} R₃ (MonoidWithZero.toMulZeroOneClass.{u3} R₃ (Semiring.toMonoidWithZero.{u3} R₃ _inst_3)))) (AddZeroClass.toHasZero.{u7} M₃ (AddMonoid.toAddZeroClass.{u7} M₃ (AddCommMonoid.toAddMonoid.{u7} M₃ _inst_13))) (MulActionWithZero.toSMulWithZero.{u3, u7} R₃ M₃ (Semiring.toMonoidWithZero.{u3} R₃ _inst_3) (AddZeroClass.toHasZero.{u7} M₃ (AddMonoid.toAddZeroClass.{u7} M₃ (AddCommMonoid.toAddMonoid.{u7} M₃ _inst_13))) (Module.toMulActionWithZero.{u3, u7} R₃ M₃ _inst_3 _inst_13 _inst_14)))) (SMulZeroClass.toHasSmul.{u4, u7} S₃ M₃ (AddZeroClass.toHasZero.{u7} M₃ (AddMonoid.toAddZeroClass.{u7} M₃ (AddCommMonoid.toAddMonoid.{u7} M₃ _inst_13))) (DistribSMul.toSmulZeroClass.{u4, u7} S₃ M₃ (AddMonoid.toAddZeroClass.{u7} M₃ (AddCommMonoid.toAddMonoid.{u7} M₃ _inst_13)) (DistribMulAction.toDistribSMul.{u4, u7} S₃ M₃ _inst_5 (AddCommMonoid.toAddMonoid.{u7} M₃ _inst_13) _inst_21)))] [_inst_23 : ContinuousConstSMul.{u4, u7} S₃ M₃ _inst_12 (SMulZeroClass.toHasSmul.{u4, u7} S₃ M₃ (AddZeroClass.toHasZero.{u7} M₃ (AddMonoid.toAddZeroClass.{u7} M₃ (AddCommMonoid.toAddMonoid.{u7} M₃ _inst_13))) (DistribSMul.toSmulZeroClass.{u4, u7} S₃ M₃ (AddMonoid.toAddZeroClass.{u7} M₃ (AddCommMonoid.toAddMonoid.{u7} M₃ _inst_13)) (DistribMulAction.toDistribSMul.{u4, u7} S₃ M₃ _inst_5 (AddCommMonoid.toAddMonoid.{u7} M₃ _inst_13) _inst_21)))] {σ₁₂ : RingHom.{u1, u2} R R₂ (Semiring.toNonAssocSemiring.{u1} R _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₁₃ : RingHom.{u1, u3} R R₃ (Semiring.toNonAssocSemiring.{u1} R _inst_1) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} [_inst_27 : RingHomCompTriple.{u1, u2, u3} R R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] (c : S₃) (h : ContinuousLinearMap.{u2, u3, u6, u7} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_11 _inst_14) (f : ContinuousLinearMap.{u1, u2, u5, u6} R R₂ _inst_1 _inst_2 σ₁₂ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 _inst_8 _inst_11), Eq.{max (succ u5) (succ u7)} (ContinuousLinearMap.{u1, u3, u5, u7} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) (ContinuousLinearMap.comp.{u1, u2, u3, u5, u6, u7} R R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_8 _inst_11 _inst_14 _inst_27 (SMul.smul.{u4, max u6 u7} S₃ (ContinuousLinearMap.{u2, u3, u6, u7} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_11 _inst_14) (MulAction.toHasSmul.{u4, max u6 u7} S₃ (ContinuousLinearMap.{u2, u3, u6, u7} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_11 _inst_14) _inst_5 (ContinuousLinearMap.mulAction.{u2, u3, u6, u7, u4} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_11 _inst_14 S₃ _inst_5 _inst_21 _inst_22 _inst_23)) c h) f) (SMul.smul.{u4, max u5 u7} S₃ (ContinuousLinearMap.{u1, u3, u5, u7} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) (MulAction.toHasSmul.{u4, max u5 u7} S₃ (ContinuousLinearMap.{u1, u3, u5, u7} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) _inst_5 (ContinuousLinearMap.mulAction.{u1, u3, u5, u7, u4} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14 S₃ _inst_5 _inst_21 _inst_22 _inst_23)) c (ContinuousLinearMap.comp.{u1, u2, u3, u5, u6, u7} R R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_8 _inst_11 _inst_14 _inst_27 h f))
but is expected to have type
  forall {R : Type.{u3}} {R₂ : Type.{u7}} {R₃ : Type.{u6}} {S₃ : Type.{u1}} [_inst_1 : Semiring.{u3} R] [_inst_2 : Semiring.{u7} R₂] [_inst_3 : Semiring.{u6} R₃] [_inst_5 : Monoid.{u1} S₃] {M : Type.{u2}} [_inst_6 : TopologicalSpace.{u2} M] [_inst_7 : AddCommMonoid.{u2} M] [_inst_8 : Module.{u3, u2} R M _inst_1 _inst_7] {M₂ : Type.{u5}} [_inst_9 : TopologicalSpace.{u5} M₂] [_inst_10 : AddCommMonoid.{u5} M₂] [_inst_11 : Module.{u7, u5} R₂ M₂ _inst_2 _inst_10] {M₃ : Type.{u4}} [_inst_12 : TopologicalSpace.{u4} M₃] [_inst_13 : AddCommMonoid.{u4} M₃] [_inst_14 : Module.{u6, u4} R₃ M₃ _inst_3 _inst_13] [_inst_21 : DistribMulAction.{u1, u4} S₃ M₃ _inst_5 (AddCommMonoid.toAddMonoid.{u4} M₃ _inst_13)] [_inst_22 : SMulCommClass.{u6, u1, u4} R₃ S₃ M₃ (SMulZeroClass.toSMul.{u6, u4} R₃ M₃ (AddMonoid.toZero.{u4} M₃ (AddCommMonoid.toAddMonoid.{u4} M₃ _inst_13)) (SMulWithZero.toSMulZeroClass.{u6, u4} R₃ M₃ (MonoidWithZero.toZero.{u6} R₃ (Semiring.toMonoidWithZero.{u6} R₃ _inst_3)) (AddMonoid.toZero.{u4} M₃ (AddCommMonoid.toAddMonoid.{u4} M₃ _inst_13)) (MulActionWithZero.toSMulWithZero.{u6, u4} R₃ M₃ (Semiring.toMonoidWithZero.{u6} R₃ _inst_3) (AddMonoid.toZero.{u4} M₃ (AddCommMonoid.toAddMonoid.{u4} M₃ _inst_13)) (Module.toMulActionWithZero.{u6, u4} R₃ M₃ _inst_3 _inst_13 _inst_14)))) (SMulZeroClass.toSMul.{u1, u4} S₃ M₃ (AddMonoid.toZero.{u4} M₃ (AddCommMonoid.toAddMonoid.{u4} M₃ _inst_13)) (DistribSMul.toSMulZeroClass.{u1, u4} S₃ M₃ (AddMonoid.toAddZeroClass.{u4} M₃ (AddCommMonoid.toAddMonoid.{u4} M₃ _inst_13)) (DistribMulAction.toDistribSMul.{u1, u4} S₃ M₃ _inst_5 (AddCommMonoid.toAddMonoid.{u4} M₃ _inst_13) _inst_21)))] [_inst_23 : ContinuousConstSMul.{u1, u4} S₃ M₃ _inst_12 (SMulZeroClass.toSMul.{u1, u4} S₃ M₃ (AddMonoid.toZero.{u4} M₃ (AddCommMonoid.toAddMonoid.{u4} M₃ _inst_13)) (DistribSMul.toSMulZeroClass.{u1, u4} S₃ M₃ (AddMonoid.toAddZeroClass.{u4} M₃ (AddCommMonoid.toAddMonoid.{u4} M₃ _inst_13)) (DistribMulAction.toDistribSMul.{u1, u4} S₃ M₃ _inst_5 (AddCommMonoid.toAddMonoid.{u4} M₃ _inst_13) _inst_21)))] {σ₁₂ : RingHom.{u3, u7} R R₂ (Semiring.toNonAssocSemiring.{u3} R _inst_1) (Semiring.toNonAssocSemiring.{u7} R₂ _inst_2)} {σ₂₃ : RingHom.{u7, u6} R₂ R₃ (Semiring.toNonAssocSemiring.{u7} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u6} R₃ _inst_3)} {σ₁₃ : RingHom.{u3, u6} R R₃ (Semiring.toNonAssocSemiring.{u3} R _inst_1) (Semiring.toNonAssocSemiring.{u6} R₃ _inst_3)} [_inst_27 : RingHomCompTriple.{u3, u7, u6} R R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] (c : S₃) (h : ContinuousLinearMap.{u7, u6, u5, u4} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_11 _inst_14) (f : ContinuousLinearMap.{u3, u7, u2, u5} R R₂ _inst_1 _inst_2 σ₁₂ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 _inst_8 _inst_11), Eq.{max (succ u2) (succ u4)} (ContinuousLinearMap.{u3, u6, u2, u4} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) (ContinuousLinearMap.comp.{u3, u7, u6, u2, u5, u4} R R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_8 _inst_11 _inst_14 _inst_27 (HSMul.hSMul.{u1, max u4 u5, max u4 u5} S₃ (ContinuousLinearMap.{u7, u6, u5, u4} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_11 _inst_14) (ContinuousLinearMap.{u7, u6, u5, u4} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_11 _inst_14) (instHSMul.{u1, max u4 u5} S₃ (ContinuousLinearMap.{u7, u6, u5, u4} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_11 _inst_14) (MulAction.toSMul.{u1, max u4 u5} S₃ (ContinuousLinearMap.{u7, u6, u5, u4} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_11 _inst_14) _inst_5 (ContinuousLinearMap.mulAction.{u7, u6, u5, u4, u1} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_11 _inst_14 S₃ _inst_5 _inst_21 _inst_22 _inst_23))) c h) f) (HSMul.hSMul.{u1, max u4 u2, max u4 u2} S₃ (ContinuousLinearMap.{u3, u6, u2, u4} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) (ContinuousLinearMap.{u3, u6, u2, u4} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) (instHSMul.{u1, max u4 u2} S₃ (ContinuousLinearMap.{u3, u6, u2, u4} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) (MulAction.toSMul.{u1, max u4 u2} S₃ (ContinuousLinearMap.{u3, u6, u2, u4} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) _inst_5 (ContinuousLinearMap.mulAction.{u3, u6, u2, u4, u1} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14 S₃ _inst_5 _inst_21 _inst_22 _inst_23))) c (ContinuousLinearMap.comp.{u3, u7, u6, u2, u5, u4} R R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_8 _inst_11 _inst_14 _inst_27 h f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.smul_comp ContinuousLinearMap.smul_compₓ'. -/
@[simp]
theorem smul_comp (c : S₃) (h : M₂ →SL[σ₂₃] M₃) (f : M →SL[σ₁₂] M₂) :
    (c • h).comp f = c • h.comp f :=
  rfl
#align continuous_linear_map.smul_comp ContinuousLinearMap.smul_comp

omit σ₁₃

variable [DistribMulAction S₃ M₂] [ContinuousConstSMul S₃ M₂] [SMulCommClass R₂ S₃ M₂]

variable [DistribMulAction S N₂] [ContinuousConstSMul S N₂] [SMulCommClass R S N₂]

/- warning: continuous_linear_map.comp_smul -> ContinuousLinearMap.comp_smul is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {S : Type.{u2}} [_inst_1 : Semiring.{u1} R] [_inst_4 : Monoid.{u2} S] {M : Type.{u3}} [_inst_6 : TopologicalSpace.{u3} M] [_inst_7 : AddCommMonoid.{u3} M] [_inst_8 : Module.{u1, u3} R M _inst_1 _inst_7] {N₂ : Type.{u4}} [_inst_15 : TopologicalSpace.{u4} N₂] [_inst_16 : AddCommMonoid.{u4} N₂] [_inst_17 : Module.{u1, u4} R N₂ _inst_1 _inst_16] {N₃ : Type.{u5}} [_inst_18 : TopologicalSpace.{u5} N₃] [_inst_19 : AddCommMonoid.{u5} N₃] [_inst_20 : Module.{u1, u5} R N₃ _inst_1 _inst_19] [_inst_24 : DistribMulAction.{u2, u5} S N₃ _inst_4 (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19)] [_inst_25 : SMulCommClass.{u1, u2, u5} R S N₃ (SMulZeroClass.toHasSmul.{u1, u5} R N₃ (AddZeroClass.toHasZero.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) (SMulWithZero.toSmulZeroClass.{u1, u5} R N₃ (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) (MulActionWithZero.toSMulWithZero.{u1, u5} R N₃ (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) (Module.toMulActionWithZero.{u1, u5} R N₃ _inst_1 _inst_19 _inst_20)))) (SMulZeroClass.toHasSmul.{u2, u5} S N₃ (AddZeroClass.toHasZero.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) (DistribSMul.toSmulZeroClass.{u2, u5} S N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19)) (DistribMulAction.toDistribSMul.{u2, u5} S N₃ _inst_4 (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19) _inst_24)))] [_inst_26 : ContinuousConstSMul.{u2, u5} S N₃ _inst_18 (SMulZeroClass.toHasSmul.{u2, u5} S N₃ (AddZeroClass.toHasZero.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) (DistribSMul.toSmulZeroClass.{u2, u5} S N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19)) (DistribMulAction.toDistribSMul.{u2, u5} S N₃ _inst_4 (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19) _inst_24)))] [_inst_31 : DistribMulAction.{u2, u4} S N₂ _inst_4 (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16)] [_inst_32 : ContinuousConstSMul.{u2, u4} S N₂ _inst_15 (SMulZeroClass.toHasSmul.{u2, u4} S N₂ (AddZeroClass.toHasZero.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) (DistribSMul.toSmulZeroClass.{u2, u4} S N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16)) (DistribMulAction.toDistribSMul.{u2, u4} S N₂ _inst_4 (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16) _inst_31)))] [_inst_33 : SMulCommClass.{u1, u2, u4} R S N₂ (SMulZeroClass.toHasSmul.{u1, u4} R N₂ (AddZeroClass.toHasZero.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) (SMulWithZero.toSmulZeroClass.{u1, u4} R N₂ (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) (MulActionWithZero.toSMulWithZero.{u1, u4} R N₂ (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) (Module.toMulActionWithZero.{u1, u4} R N₂ _inst_1 _inst_16 _inst_17)))) (SMulZeroClass.toHasSmul.{u2, u4} S N₂ (AddZeroClass.toHasZero.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) (DistribSMul.toSmulZeroClass.{u2, u4} S N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16)) (DistribMulAction.toDistribSMul.{u2, u4} S N₂ _inst_4 (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16) _inst_31)))] [_inst_34 : LinearMap.CompatibleSMul.{u4, u5, u2, u1} N₂ N₃ _inst_16 _inst_19 S R _inst_1 (SMulZeroClass.toHasSmul.{u2, u4} S N₂ (AddZeroClass.toHasZero.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) (DistribSMul.toSmulZeroClass.{u2, u4} S N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16)) (DistribMulAction.toDistribSMul.{u2, u4} S N₂ _inst_4 (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16) _inst_31))) _inst_17 (SMulZeroClass.toHasSmul.{u2, u5} S N₃ (AddZeroClass.toHasZero.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) (DistribSMul.toSmulZeroClass.{u2, u5} S N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19)) (DistribMulAction.toDistribSMul.{u2, u5} S N₃ _inst_4 (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19) _inst_24))) _inst_20] (hₗ : ContinuousLinearMap.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) N₂ _inst_15 _inst_16 N₃ _inst_18 _inst_19 _inst_17 _inst_20) (c : S) (fₗ : ContinuousLinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17), Eq.{max (succ u3) (succ u5)} (ContinuousLinearMap.{u1, u1, u3, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) (ContinuousLinearMap.comp.{u1, u1, u1, u3, u4, u5} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 N₃ _inst_18 _inst_19 _inst_8 _inst_17 _inst_20 (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) hₗ (SMul.smul.{u2, max u3 u4} S (ContinuousLinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17) (MulAction.toHasSmul.{u2, max u3 u4} S (ContinuousLinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17) _inst_4 (ContinuousLinearMap.mulAction.{u1, u1, u3, u4, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17 S _inst_4 _inst_31 _inst_33 _inst_32)) c fₗ)) (SMul.smul.{u2, max u3 u5} S (ContinuousLinearMap.{u1, u1, u3, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) (MulAction.toHasSmul.{u2, max u3 u5} S (ContinuousLinearMap.{u1, u1, u3, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) _inst_4 (ContinuousLinearMap.mulAction.{u1, u1, u3, u5, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20 S _inst_4 _inst_24 _inst_25 _inst_26)) c (ContinuousLinearMap.comp.{u1, u1, u1, u3, u4, u5} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 N₃ _inst_18 _inst_19 _inst_8 _inst_17 _inst_20 (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) hₗ fₗ))
but is expected to have type
  forall {R : Type.{u2}} {S : Type.{u3}} [_inst_1 : Semiring.{u2} R] [_inst_4 : Monoid.{u3} S] {M : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M] [_inst_7 : AddCommMonoid.{u1} M] [_inst_8 : Module.{u2, u1} R M _inst_1 _inst_7] {N₂ : Type.{u5}} [_inst_15 : TopologicalSpace.{u5} N₂] [_inst_16 : AddCommMonoid.{u5} N₂] [_inst_17 : Module.{u2, u5} R N₂ _inst_1 _inst_16] {N₃ : Type.{u4}} [_inst_18 : TopologicalSpace.{u4} N₃] [_inst_19 : AddCommMonoid.{u4} N₃] [_inst_20 : Module.{u2, u4} R N₃ _inst_1 _inst_19] [_inst_24 : DistribMulAction.{u3, u4} S N₃ _inst_4 (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)] [_inst_25 : SMulCommClass.{u2, u3, u4} R S N₃ (SMulZeroClass.toSMul.{u2, u4} R N₃ (AddMonoid.toZero.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (SMulWithZero.toSMulZeroClass.{u2, u4} R N₃ (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R _inst_1)) (AddMonoid.toZero.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (MulActionWithZero.toSMulWithZero.{u2, u4} R N₃ (Semiring.toMonoidWithZero.{u2} R _inst_1) (AddMonoid.toZero.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (Module.toMulActionWithZero.{u2, u4} R N₃ _inst_1 _inst_19 _inst_20)))) (SMulZeroClass.toSMul.{u3, u4} S N₃ (AddMonoid.toZero.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (DistribSMul.toSMulZeroClass.{u3, u4} S N₃ (AddMonoid.toAddZeroClass.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (DistribMulAction.toDistribSMul.{u3, u4} S N₃ _inst_4 (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19) _inst_24)))] [_inst_26 : ContinuousConstSMul.{u3, u4} S N₃ _inst_18 (SMulZeroClass.toSMul.{u3, u4} S N₃ (AddMonoid.toZero.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (DistribSMul.toSMulZeroClass.{u3, u4} S N₃ (AddMonoid.toAddZeroClass.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (DistribMulAction.toDistribSMul.{u3, u4} S N₃ _inst_4 (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19) _inst_24)))] [_inst_31 : DistribMulAction.{u3, u5} S N₂ _inst_4 (AddCommMonoid.toAddMonoid.{u5} N₂ _inst_16)] [_inst_32 : ContinuousConstSMul.{u3, u5} S N₂ _inst_15 (SMulZeroClass.toSMul.{u3, u5} S N₂ (AddMonoid.toZero.{u5} N₂ (AddCommMonoid.toAddMonoid.{u5} N₂ _inst_16)) (DistribSMul.toSMulZeroClass.{u3, u5} S N₂ (AddMonoid.toAddZeroClass.{u5} N₂ (AddCommMonoid.toAddMonoid.{u5} N₂ _inst_16)) (DistribMulAction.toDistribSMul.{u3, u5} S N₂ _inst_4 (AddCommMonoid.toAddMonoid.{u5} N₂ _inst_16) _inst_31)))] [_inst_33 : SMulCommClass.{u2, u3, u5} R S N₂ (SMulZeroClass.toSMul.{u2, u5} R N₂ (AddMonoid.toZero.{u5} N₂ (AddCommMonoid.toAddMonoid.{u5} N₂ _inst_16)) (SMulWithZero.toSMulZeroClass.{u2, u5} R N₂ (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R _inst_1)) (AddMonoid.toZero.{u5} N₂ (AddCommMonoid.toAddMonoid.{u5} N₂ _inst_16)) (MulActionWithZero.toSMulWithZero.{u2, u5} R N₂ (Semiring.toMonoidWithZero.{u2} R _inst_1) (AddMonoid.toZero.{u5} N₂ (AddCommMonoid.toAddMonoid.{u5} N₂ _inst_16)) (Module.toMulActionWithZero.{u2, u5} R N₂ _inst_1 _inst_16 _inst_17)))) (SMulZeroClass.toSMul.{u3, u5} S N₂ (AddMonoid.toZero.{u5} N₂ (AddCommMonoid.toAddMonoid.{u5} N₂ _inst_16)) (DistribSMul.toSMulZeroClass.{u3, u5} S N₂ (AddMonoid.toAddZeroClass.{u5} N₂ (AddCommMonoid.toAddMonoid.{u5} N₂ _inst_16)) (DistribMulAction.toDistribSMul.{u3, u5} S N₂ _inst_4 (AddCommMonoid.toAddMonoid.{u5} N₂ _inst_16) _inst_31)))] [_inst_34 : LinearMap.CompatibleSMul.{u5, u4, u3, u2} N₂ N₃ _inst_16 _inst_19 S R _inst_1 (SMulZeroClass.toSMul.{u3, u5} S N₂ (AddMonoid.toZero.{u5} N₂ (AddCommMonoid.toAddMonoid.{u5} N₂ _inst_16)) (DistribSMul.toSMulZeroClass.{u3, u5} S N₂ (AddMonoid.toAddZeroClass.{u5} N₂ (AddCommMonoid.toAddMonoid.{u5} N₂ _inst_16)) (DistribMulAction.toDistribSMul.{u3, u5} S N₂ _inst_4 (AddCommMonoid.toAddMonoid.{u5} N₂ _inst_16) _inst_31))) _inst_17 (SMulZeroClass.toSMul.{u3, u4} S N₃ (AddMonoid.toZero.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (DistribSMul.toSMulZeroClass.{u3, u4} S N₃ (AddMonoid.toAddZeroClass.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (DistribMulAction.toDistribSMul.{u3, u4} S N₃ _inst_4 (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19) _inst_24))) _inst_20] (hₗ : ContinuousLinearMap.{u2, u2, u5, u4} R R _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) N₂ _inst_15 _inst_16 N₃ _inst_18 _inst_19 _inst_17 _inst_20) (c : S) (fₗ : ContinuousLinearMap.{u2, u2, u1, u5} R R _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17), Eq.{max (succ u1) (succ u4)} (ContinuousLinearMap.{u2, u2, u1, u4} R R _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) (ContinuousLinearMap.comp.{u2, u2, u2, u1, u5, u4} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 N₃ _inst_18 _inst_19 _inst_8 _inst_17 _inst_20 (RingHomCompTriple.ids.{u2, u2} R R _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1))) hₗ (HSMul.hSMul.{u3, max u5 u1, max u5 u1} S (ContinuousLinearMap.{u2, u2, u1, u5} R R _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17) (ContinuousLinearMap.{u2, u2, u1, u5} R R _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17) (instHSMul.{u3, max u5 u1} S (ContinuousLinearMap.{u2, u2, u1, u5} R R _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17) (MulAction.toSMul.{u3, max u5 u1} S (ContinuousLinearMap.{u2, u2, u1, u5} R R _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17) _inst_4 (ContinuousLinearMap.mulAction.{u2, u2, u1, u5, u3} R R _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17 S _inst_4 _inst_31 _inst_33 _inst_32))) c fₗ)) (HSMul.hSMul.{u3, max u4 u1, max u4 u1} S (ContinuousLinearMap.{u2, u2, u1, u4} R R _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) (ContinuousLinearMap.{u2, u2, u1, u4} R R _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) (instHSMul.{u3, max u4 u1} S (ContinuousLinearMap.{u2, u2, u1, u4} R R _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) (MulAction.toSMul.{u3, max u4 u1} S (ContinuousLinearMap.{u2, u2, u1, u4} R R _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) _inst_4 (ContinuousLinearMap.mulAction.{u2, u2, u1, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20 S _inst_4 _inst_24 _inst_25 _inst_26))) c (ContinuousLinearMap.comp.{u2, u2, u2, u1, u5, u4} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 N₃ _inst_18 _inst_19 _inst_8 _inst_17 _inst_20 (RingHomCompTriple.ids.{u2, u2} R R _inst_1 _inst_1 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_1))) hₗ fₗ))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.comp_smul ContinuousLinearMap.comp_smulₓ'. -/
@[simp]
theorem comp_smul [LinearMap.CompatibleSMul N₂ N₃ S R] (hₗ : N₂ →L[R] N₃) (c : S)
    (fₗ : M →L[R] N₂) : hₗ.comp (c • fₗ) = c • hₗ.comp fₗ :=
  by
  ext x
  exact hₗ.map_smul_of_tower c (fₗ x)
#align continuous_linear_map.comp_smul ContinuousLinearMap.comp_smul

include σ₁₃

/- warning: continuous_linear_map.comp_smulₛₗ -> ContinuousLinearMap.comp_smulₛₗ is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {R₂ : Type.{u2}} {R₃ : Type.{u3}} [_inst_1 : Semiring.{u1} R] [_inst_2 : Semiring.{u2} R₂] [_inst_3 : Semiring.{u3} R₃] {M : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M] [_inst_7 : AddCommMonoid.{u4} M] [_inst_8 : Module.{u1, u4} R M _inst_1 _inst_7] {M₂ : Type.{u5}} [_inst_9 : TopologicalSpace.{u5} M₂] [_inst_10 : AddCommMonoid.{u5} M₂] [_inst_11 : Module.{u2, u5} R₂ M₂ _inst_2 _inst_10] {M₃ : Type.{u6}} [_inst_12 : TopologicalSpace.{u6} M₃] [_inst_13 : AddCommMonoid.{u6} M₃] [_inst_14 : Module.{u3, u6} R₃ M₃ _inst_3 _inst_13] {σ₁₂ : RingHom.{u1, u2} R R₂ (Semiring.toNonAssocSemiring.{u1} R _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₁₃ : RingHom.{u1, u3} R R₃ (Semiring.toNonAssocSemiring.{u1} R _inst_1) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} [_inst_27 : RingHomCompTriple.{u1, u2, u3} R R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] [_inst_34 : SMulCommClass.{u2, u2, u5} R₂ R₂ M₂ (SMulZeroClass.toHasSmul.{u2, u5} R₂ M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10))) (SMulWithZero.toSmulZeroClass.{u2, u5} R₂ M₂ (MulZeroClass.toHasZero.{u2} R₂ (MulZeroOneClass.toMulZeroClass.{u2} R₂ (MonoidWithZero.toMulZeroOneClass.{u2} R₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10))) (MulActionWithZero.toSMulWithZero.{u2, u5} R₂ M₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10))) (Module.toMulActionWithZero.{u2, u5} R₂ M₂ _inst_2 _inst_10 _inst_11)))) (SMulZeroClass.toHasSmul.{u2, u5} R₂ M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10))) (SMulWithZero.toSmulZeroClass.{u2, u5} R₂ M₂ (MulZeroClass.toHasZero.{u2} R₂ (MulZeroOneClass.toMulZeroClass.{u2} R₂ (MonoidWithZero.toMulZeroOneClass.{u2} R₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10))) (MulActionWithZero.toSMulWithZero.{u2, u5} R₂ M₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10))) (Module.toMulActionWithZero.{u2, u5} R₂ M₂ _inst_2 _inst_10 _inst_11))))] [_inst_35 : SMulCommClass.{u3, u3, u6} R₃ R₃ M₃ (SMulZeroClass.toHasSmul.{u3, u6} R₃ M₃ (AddZeroClass.toHasZero.{u6} M₃ (AddMonoid.toAddZeroClass.{u6} M₃ (AddCommMonoid.toAddMonoid.{u6} M₃ _inst_13))) (SMulWithZero.toSmulZeroClass.{u3, u6} R₃ M₃ (MulZeroClass.toHasZero.{u3} R₃ (MulZeroOneClass.toMulZeroClass.{u3} R₃ (MonoidWithZero.toMulZeroOneClass.{u3} R₃ (Semiring.toMonoidWithZero.{u3} R₃ _inst_3)))) (AddZeroClass.toHasZero.{u6} M₃ (AddMonoid.toAddZeroClass.{u6} M₃ (AddCommMonoid.toAddMonoid.{u6} M₃ _inst_13))) (MulActionWithZero.toSMulWithZero.{u3, u6} R₃ M₃ (Semiring.toMonoidWithZero.{u3} R₃ _inst_3) (AddZeroClass.toHasZero.{u6} M₃ (AddMonoid.toAddZeroClass.{u6} M₃ (AddCommMonoid.toAddMonoid.{u6} M₃ _inst_13))) (Module.toMulActionWithZero.{u3, u6} R₃ M₃ _inst_3 _inst_13 _inst_14)))) (SMulZeroClass.toHasSmul.{u3, u6} R₃ M₃ (AddZeroClass.toHasZero.{u6} M₃ (AddMonoid.toAddZeroClass.{u6} M₃ (AddCommMonoid.toAddMonoid.{u6} M₃ _inst_13))) (SMulWithZero.toSmulZeroClass.{u3, u6} R₃ M₃ (MulZeroClass.toHasZero.{u3} R₃ (MulZeroOneClass.toMulZeroClass.{u3} R₃ (MonoidWithZero.toMulZeroOneClass.{u3} R₃ (Semiring.toMonoidWithZero.{u3} R₃ _inst_3)))) (AddZeroClass.toHasZero.{u6} M₃ (AddMonoid.toAddZeroClass.{u6} M₃ (AddCommMonoid.toAddMonoid.{u6} M₃ _inst_13))) (MulActionWithZero.toSMulWithZero.{u3, u6} R₃ M₃ (Semiring.toMonoidWithZero.{u3} R₃ _inst_3) (AddZeroClass.toHasZero.{u6} M₃ (AddMonoid.toAddZeroClass.{u6} M₃ (AddCommMonoid.toAddMonoid.{u6} M₃ _inst_13))) (Module.toMulActionWithZero.{u3, u6} R₃ M₃ _inst_3 _inst_13 _inst_14))))] [_inst_36 : ContinuousConstSMul.{u2, u5} R₂ M₂ _inst_9 (SMulZeroClass.toHasSmul.{u2, u5} R₂ M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10))) (SMulWithZero.toSmulZeroClass.{u2, u5} R₂ M₂ (MulZeroClass.toHasZero.{u2} R₂ (MulZeroOneClass.toMulZeroClass.{u2} R₂ (MonoidWithZero.toMulZeroOneClass.{u2} R₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10))) (MulActionWithZero.toSMulWithZero.{u2, u5} R₂ M₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10))) (Module.toMulActionWithZero.{u2, u5} R₂ M₂ _inst_2 _inst_10 _inst_11))))] [_inst_37 : ContinuousConstSMul.{u3, u6} R₃ M₃ _inst_12 (SMulZeroClass.toHasSmul.{u3, u6} R₃ M₃ (AddZeroClass.toHasZero.{u6} M₃ (AddMonoid.toAddZeroClass.{u6} M₃ (AddCommMonoid.toAddMonoid.{u6} M₃ _inst_13))) (SMulWithZero.toSmulZeroClass.{u3, u6} R₃ M₃ (MulZeroClass.toHasZero.{u3} R₃ (MulZeroOneClass.toMulZeroClass.{u3} R₃ (MonoidWithZero.toMulZeroOneClass.{u3} R₃ (Semiring.toMonoidWithZero.{u3} R₃ _inst_3)))) (AddZeroClass.toHasZero.{u6} M₃ (AddMonoid.toAddZeroClass.{u6} M₃ (AddCommMonoid.toAddMonoid.{u6} M₃ _inst_13))) (MulActionWithZero.toSMulWithZero.{u3, u6} R₃ M₃ (Semiring.toMonoidWithZero.{u3} R₃ _inst_3) (AddZeroClass.toHasZero.{u6} M₃ (AddMonoid.toAddZeroClass.{u6} M₃ (AddCommMonoid.toAddMonoid.{u6} M₃ _inst_13))) (Module.toMulActionWithZero.{u3, u6} R₃ M₃ _inst_3 _inst_13 _inst_14))))] (h : ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_11 _inst_14) (c : R₂) (f : ContinuousLinearMap.{u1, u2, u4, u5} R R₂ _inst_1 _inst_2 σ₁₂ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 _inst_8 _inst_11), Eq.{max (succ u4) (succ u6)} (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_8 _inst_11 _inst_14 _inst_27 h (SMul.smul.{u2, max u4 u5} R₂ (ContinuousLinearMap.{u1, u2, u4, u5} R R₂ _inst_1 _inst_2 σ₁₂ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 _inst_8 _inst_11) (MulAction.toHasSmul.{u2, max u4 u5} R₂ (ContinuousLinearMap.{u1, u2, u4, u5} R R₂ _inst_1 _inst_2 σ₁₂ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 _inst_8 _inst_11) (MonoidWithZero.toMonoid.{u2} R₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2)) (ContinuousLinearMap.mulAction.{u1, u2, u4, u5, u2} R R₂ _inst_1 _inst_2 σ₁₂ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 _inst_8 _inst_11 R₂ (MonoidWithZero.toMonoid.{u2} R₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2)) (Module.toDistribMulAction.{u2, u5} R₂ M₂ _inst_2 _inst_10 _inst_11) _inst_34 _inst_36)) c f)) (SMul.smul.{u3, max u4 u6} R₃ (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) (MulAction.toHasSmul.{u3, max u4 u6} R₃ (ContinuousLinearMap.{u1, u3, u4, u6} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) (MonoidWithZero.toMonoid.{u3} R₃ (Semiring.toMonoidWithZero.{u3} R₃ _inst_3)) (ContinuousLinearMap.mulAction.{u1, u3, u4, u6, u3} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14 R₃ (MonoidWithZero.toMonoid.{u3} R₃ (Semiring.toMonoidWithZero.{u3} R₃ _inst_3)) (Module.toDistribMulAction.{u3, u6} R₃ M₃ _inst_3 _inst_13 _inst_14) _inst_35 _inst_37)) (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (RingHom.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)) (fun (_x : RingHom.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)) => R₂ -> R₃) (RingHom.hasCoeToFun.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)) σ₂₃ c) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_8 _inst_11 _inst_14 _inst_27 h f))
but is expected to have type
  forall {R : Type.{u2}} {R₂ : Type.{u6}} {R₃ : Type.{u4}} [_inst_1 : Semiring.{u2} R] [_inst_2 : Semiring.{u6} R₂] [_inst_3 : Semiring.{u4} R₃] {M : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M] [_inst_7 : AddCommMonoid.{u1} M] [_inst_8 : Module.{u2, u1} R M _inst_1 _inst_7] {M₂ : Type.{u5}} [_inst_9 : TopologicalSpace.{u5} M₂] [_inst_10 : AddCommMonoid.{u5} M₂] [_inst_11 : Module.{u6, u5} R₂ M₂ _inst_2 _inst_10] {M₃ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₃] [_inst_13 : AddCommMonoid.{u3} M₃] [_inst_14 : Module.{u4, u3} R₃ M₃ _inst_3 _inst_13] {σ₁₂ : RingHom.{u2, u6} R R₂ (Semiring.toNonAssocSemiring.{u2} R _inst_1) (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2)} {σ₂₃ : RingHom.{u6, u4} R₂ R₃ (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₃ _inst_3)} {σ₁₃ : RingHom.{u2, u4} R R₃ (Semiring.toNonAssocSemiring.{u2} R _inst_1) (Semiring.toNonAssocSemiring.{u4} R₃ _inst_3)} [_inst_27 : RingHomCompTriple.{u2, u6, u4} R R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] [_inst_34 : SMulCommClass.{u6, u6, u5} R₂ R₂ M₂ (SMulZeroClass.toSMul.{u6, u5} R₂ M₂ (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10)) (SMulWithZero.toSMulZeroClass.{u6, u5} R₂ M₂ (MonoidWithZero.toZero.{u6} R₂ (Semiring.toMonoidWithZero.{u6} R₂ _inst_2)) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10)) (MulActionWithZero.toSMulWithZero.{u6, u5} R₂ M₂ (Semiring.toMonoidWithZero.{u6} R₂ _inst_2) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10)) (Module.toMulActionWithZero.{u6, u5} R₂ M₂ _inst_2 _inst_10 _inst_11)))) (SMulZeroClass.toSMul.{u6, u5} R₂ M₂ (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10)) (SMulWithZero.toSMulZeroClass.{u6, u5} R₂ M₂ (MonoidWithZero.toZero.{u6} R₂ (Semiring.toMonoidWithZero.{u6} R₂ _inst_2)) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10)) (MulActionWithZero.toSMulWithZero.{u6, u5} R₂ M₂ (Semiring.toMonoidWithZero.{u6} R₂ _inst_2) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10)) (Module.toMulActionWithZero.{u6, u5} R₂ M₂ _inst_2 _inst_10 _inst_11))))] [_inst_35 : SMulCommClass.{u4, u4, u3} R₃ R₃ M₃ (SMulZeroClass.toSMul.{u4, u3} R₃ M₃ (AddMonoid.toZero.{u3} M₃ (AddCommMonoid.toAddMonoid.{u3} M₃ _inst_13)) (SMulWithZero.toSMulZeroClass.{u4, u3} R₃ M₃ (MonoidWithZero.toZero.{u4} R₃ (Semiring.toMonoidWithZero.{u4} R₃ _inst_3)) (AddMonoid.toZero.{u3} M₃ (AddCommMonoid.toAddMonoid.{u3} M₃ _inst_13)) (MulActionWithZero.toSMulWithZero.{u4, u3} R₃ M₃ (Semiring.toMonoidWithZero.{u4} R₃ _inst_3) (AddMonoid.toZero.{u3} M₃ (AddCommMonoid.toAddMonoid.{u3} M₃ _inst_13)) (Module.toMulActionWithZero.{u4, u3} R₃ M₃ _inst_3 _inst_13 _inst_14)))) (SMulZeroClass.toSMul.{u4, u3} R₃ M₃ (AddMonoid.toZero.{u3} M₃ (AddCommMonoid.toAddMonoid.{u3} M₃ _inst_13)) (SMulWithZero.toSMulZeroClass.{u4, u3} R₃ M₃ (MonoidWithZero.toZero.{u4} R₃ (Semiring.toMonoidWithZero.{u4} R₃ _inst_3)) (AddMonoid.toZero.{u3} M₃ (AddCommMonoid.toAddMonoid.{u3} M₃ _inst_13)) (MulActionWithZero.toSMulWithZero.{u4, u3} R₃ M₃ (Semiring.toMonoidWithZero.{u4} R₃ _inst_3) (AddMonoid.toZero.{u3} M₃ (AddCommMonoid.toAddMonoid.{u3} M₃ _inst_13)) (Module.toMulActionWithZero.{u4, u3} R₃ M₃ _inst_3 _inst_13 _inst_14))))] [_inst_36 : ContinuousConstSMul.{u6, u5} R₂ M₂ _inst_9 (SMulZeroClass.toSMul.{u6, u5} R₂ M₂ (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10)) (SMulWithZero.toSMulZeroClass.{u6, u5} R₂ M₂ (MonoidWithZero.toZero.{u6} R₂ (Semiring.toMonoidWithZero.{u6} R₂ _inst_2)) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10)) (MulActionWithZero.toSMulWithZero.{u6, u5} R₂ M₂ (Semiring.toMonoidWithZero.{u6} R₂ _inst_2) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_10)) (Module.toMulActionWithZero.{u6, u5} R₂ M₂ _inst_2 _inst_10 _inst_11))))] [_inst_37 : ContinuousConstSMul.{u4, u3} R₃ M₃ _inst_12 (SMulZeroClass.toSMul.{u4, u3} R₃ M₃ (AddMonoid.toZero.{u3} M₃ (AddCommMonoid.toAddMonoid.{u3} M₃ _inst_13)) (SMulWithZero.toSMulZeroClass.{u4, u3} R₃ M₃ (MonoidWithZero.toZero.{u4} R₃ (Semiring.toMonoidWithZero.{u4} R₃ _inst_3)) (AddMonoid.toZero.{u3} M₃ (AddCommMonoid.toAddMonoid.{u3} M₃ _inst_13)) (MulActionWithZero.toSMulWithZero.{u4, u3} R₃ M₃ (Semiring.toMonoidWithZero.{u4} R₃ _inst_3) (AddMonoid.toZero.{u3} M₃ (AddCommMonoid.toAddMonoid.{u3} M₃ _inst_13)) (Module.toMulActionWithZero.{u4, u3} R₃ M₃ _inst_3 _inst_13 _inst_14))))] (h : ContinuousLinearMap.{u6, u4, u5, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_11 _inst_14) (c : R₂) (f : ContinuousLinearMap.{u2, u6, u1, u5} R R₂ _inst_1 _inst_2 σ₁₂ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 _inst_8 _inst_11), Eq.{max (succ u1) (succ u3)} (ContinuousLinearMap.{u2, u4, u1, u3} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) (ContinuousLinearMap.comp.{u2, u6, u4, u1, u5, u3} R R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_8 _inst_11 _inst_14 _inst_27 h (HSMul.hSMul.{u6, max u5 u1, max u5 u1} R₂ (ContinuousLinearMap.{u2, u6, u1, u5} R R₂ _inst_1 _inst_2 σ₁₂ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 _inst_8 _inst_11) (ContinuousLinearMap.{u2, u6, u1, u5} R R₂ _inst_1 _inst_2 σ₁₂ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 _inst_8 _inst_11) (instHSMul.{u6, max u5 u1} R₂ (ContinuousLinearMap.{u2, u6, u1, u5} R R₂ _inst_1 _inst_2 σ₁₂ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 _inst_8 _inst_11) (MulAction.toSMul.{u6, max u5 u1} R₂ (ContinuousLinearMap.{u2, u6, u1, u5} R R₂ _inst_1 _inst_2 σ₁₂ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 _inst_8 _inst_11) (MonoidWithZero.toMonoid.{u6} R₂ (Semiring.toMonoidWithZero.{u6} R₂ _inst_2)) (ContinuousLinearMap.mulAction.{u2, u6, u1, u5, u6} R R₂ _inst_1 _inst_2 σ₁₂ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 _inst_8 _inst_11 R₂ (MonoidWithZero.toMonoid.{u6} R₂ (Semiring.toMonoidWithZero.{u6} R₂ _inst_2)) (Module.toDistribMulAction.{u6, u5} R₂ M₂ _inst_2 _inst_10 _inst_11) _inst_34 _inst_36))) c f)) (HSMul.hSMul.{u4, max u3 u1, max u3 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₂) => R₃) c) (ContinuousLinearMap.{u2, u4, u1, u3} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) (ContinuousLinearMap.{u2, u4, u1, u3} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) (instHSMul.{u4, max u3 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₂) => R₃) c) (ContinuousLinearMap.{u2, u4, u1, u3} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) (MulAction.toSMul.{u4, max u3 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₂) => R₃) c) (ContinuousLinearMap.{u2, u4, u1, u3} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) (MonoidWithZero.toMonoid.{u4} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₂) => R₃) c) (Semiring.toMonoidWithZero.{u4} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₂) => R₃) c) _inst_3)) (ContinuousLinearMap.mulAction.{u2, u4, u1, u3, u4} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14 ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₂) => R₃) c) (MonoidWithZero.toMonoid.{u4} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₂) => R₃) c) (Semiring.toMonoidWithZero.{u4} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₂) => R₃) c) _inst_3)) (Module.toDistribMulAction.{u4, u3} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₂) => R₃) c) M₃ _inst_3 _inst_13 _inst_14) _inst_35 _inst_37))) (FunLike.coe.{max (succ u6) (succ u4), succ u6, succ u4} (RingHom.{u6, u4} R₂ R₃ (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₃ _inst_3)) R₂ (fun (_x : R₂) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₂) => R₃) _x) (MulHomClass.toFunLike.{max u6 u4, u6, u4} (RingHom.{u6, u4} R₂ R₃ (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₃ _inst_3)) R₂ R₃ (NonUnitalNonAssocSemiring.toMul.{u6} R₂ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u6} R₂ (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2))) (NonUnitalNonAssocSemiring.toMul.{u4} R₃ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u4} R₃ (Semiring.toNonAssocSemiring.{u4} R₃ _inst_3))) (NonUnitalRingHomClass.toMulHomClass.{max u6 u4, u6, u4} (RingHom.{u6, u4} R₂ R₃ (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₃ _inst_3)) R₂ R₃ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u6} R₂ (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2)) (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u4} R₃ (Semiring.toNonAssocSemiring.{u4} R₃ _inst_3)) (RingHomClass.toNonUnitalRingHomClass.{max u6 u4, u6, u4} (RingHom.{u6, u4} R₂ R₃ (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₃ _inst_3)) R₂ R₃ (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₃ _inst_3) (RingHom.instRingHomClassRingHom.{u6, u4} R₂ R₃ (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₃ _inst_3))))) σ₂₃ c) (ContinuousLinearMap.comp.{u2, u6, u4, u1, u5, u3} R R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M _inst_6 _inst_7 M₂ _inst_9 _inst_10 M₃ _inst_12 _inst_13 _inst_8 _inst_11 _inst_14 _inst_27 h f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.comp_smulₛₗ ContinuousLinearMap.comp_smulₛₗₓ'. -/
@[simp]
theorem comp_smulₛₗ [SMulCommClass R₂ R₂ M₂] [SMulCommClass R₃ R₃ M₃] [ContinuousConstSMul R₂ M₂]
    [ContinuousConstSMul R₃ M₃] (h : M₂ →SL[σ₂₃] M₃) (c : R₂) (f : M →SL[σ₁₂] M₂) :
    h.comp (c • f) = σ₂₃ c • h.comp f := by
  ext x
  simp only [coe_smul', coe_comp', Function.comp_apply, Pi.smul_apply,
    ContinuousLinearMap.map_smulₛₗ]
#align continuous_linear_map.comp_smulₛₗ ContinuousLinearMap.comp_smulₛₗ

omit σ₁₃

instance [ContinuousAdd M₂] : DistribMulAction S₃ (M →SL[σ₁₂] M₂)
    where
  smul_add a f g := ext fun x => smul_add a (f x) (g x)
  smul_zero a := ext fun x => smul_zero _

end SmulMonoid

section Smul

-- The M's are used for semilinear maps, and the N's for plain linear maps
variable {R R₂ R₃ S S₃ : Type _} [Semiring R] [Semiring R₂] [Semiring R₃] [Semiring S] [Semiring S₃]
  {M : Type _} [TopologicalSpace M] [AddCommMonoid M] [Module R M] {M₂ : Type _}
  [TopologicalSpace M₂] [AddCommMonoid M₂] [Module R₂ M₂] {M₃ : Type _} [TopologicalSpace M₃]
  [AddCommMonoid M₃] [Module R₃ M₃] {N₂ : Type _} [TopologicalSpace N₂] [AddCommMonoid N₂]
  [Module R N₂] {N₃ : Type _} [TopologicalSpace N₃] [AddCommMonoid N₃] [Module R N₃] [Module S₃ M₃]
  [SMulCommClass R₃ S₃ M₃] [ContinuousConstSMul S₃ M₃] [Module S N₂] [ContinuousConstSMul S N₂]
  [SMulCommClass R S N₂] [Module S N₃] [SMulCommClass R S N₃] [ContinuousConstSMul S N₃]
  {σ₁₂ : R →+* R₂} {σ₂₃ : R₂ →+* R₃} {σ₁₃ : R →+* R₃} [RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] (c : S)
  (h : M₂ →SL[σ₂₃] M₃) (f g : M →SL[σ₁₂] M₂) (x y z : M)

/- warning: continuous_linear_map.prod_equiv -> ContinuousLinearMap.prodEquiv is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {M : Type.{u2}} [_inst_6 : TopologicalSpace.{u2} M] [_inst_7 : AddCommMonoid.{u2} M] [_inst_8 : Module.{u1, u2} R M _inst_1 _inst_7] {N₂ : Type.{u3}} [_inst_15 : TopologicalSpace.{u3} N₂] [_inst_16 : AddCommMonoid.{u3} N₂] [_inst_17 : Module.{u1, u3} R N₂ _inst_1 _inst_16] {N₃ : Type.{u4}} [_inst_18 : TopologicalSpace.{u4} N₃] [_inst_19 : AddCommMonoid.{u4} N₃] [_inst_20 : Module.{u1, u4} R N₃ _inst_1 _inst_19], Equiv.{max (succ (max u2 u3)) (succ (max u2 u4)), max (succ u2) (succ (max u3 u4))} (Prod.{max u2 u3, max u2 u4} (ContinuousLinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17) (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20)) (ContinuousLinearMap.{u1, u1, u2, max u3 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 (Prod.{u3, u4} N₂ N₃) (Prod.topologicalSpace.{u3, u4} N₂ N₃ _inst_15 _inst_18) (Prod.addCommMonoid.{u3, u4} N₂ N₃ _inst_16 _inst_19) _inst_8 (Prod.module.{u1, u3, u4} R N₂ N₃ _inst_1 _inst_16 _inst_19 _inst_17 _inst_20))
but is expected to have type
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {M : Type.{u2}} [_inst_6 : TopologicalSpace.{u2} M] [_inst_7 : AddCommMonoid.{u2} M] [_inst_8 : Module.{u1, u2} R M _inst_1 _inst_7] {N₂ : Type.{u3}} [_inst_15 : TopologicalSpace.{u3} N₂] [_inst_16 : AddCommMonoid.{u3} N₂] [_inst_17 : Module.{u1, u3} R N₂ _inst_1 _inst_16] {N₃ : Type.{u4}} [_inst_18 : TopologicalSpace.{u4} N₃] [_inst_19 : AddCommMonoid.{u4} N₃] [_inst_20 : Module.{u1, u4} R N₃ _inst_1 _inst_19], Equiv.{max (succ (max u4 u2)) (succ (max u3 u2)), max (succ (max u4 u3)) (succ u2)} (Prod.{max u3 u2, max u4 u2} (ContinuousLinearMap.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17) (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20)) (ContinuousLinearMap.{u1, u1, u2, max u4 u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 (Prod.{u3, u4} N₂ N₃) (instTopologicalSpaceProd.{u3, u4} N₂ N₃ _inst_15 _inst_18) (Prod.instAddCommMonoidSum.{u3, u4} N₂ N₃ _inst_16 _inst_19) _inst_8 (Prod.module.{u1, u3, u4} R N₂ N₃ _inst_1 _inst_16 _inst_19 _inst_17 _inst_20))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.prod_equiv ContinuousLinearMap.prodEquivₓ'. -/
/-- `continuous_linear_map.prod` as an `equiv`. -/
@[simps apply]
def prodEquiv : (M →L[R] N₂) × (M →L[R] N₃) ≃ (M →L[R] N₂ × N₃)
    where
  toFun f := f.1.Prod f.2
  invFun f := ⟨(fst _ _ _).comp f, (snd _ _ _).comp f⟩
  left_inv f := by ext <;> rfl
  right_inv f := by ext <;> rfl
#align continuous_linear_map.prod_equiv ContinuousLinearMap.prodEquiv

/- warning: continuous_linear_map.prod_ext_iff -> ContinuousLinearMap.prod_ext_iff is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {M : Type.{u2}} [_inst_6 : TopologicalSpace.{u2} M] [_inst_7 : AddCommMonoid.{u2} M] [_inst_8 : Module.{u1, u2} R M _inst_1 _inst_7] {N₂ : Type.{u3}} [_inst_15 : TopologicalSpace.{u3} N₂] [_inst_16 : AddCommMonoid.{u3} N₂] [_inst_17 : Module.{u1, u3} R N₂ _inst_1 _inst_16] {N₃ : Type.{u4}} [_inst_18 : TopologicalSpace.{u4} N₃] [_inst_19 : AddCommMonoid.{u4} N₃] [_inst_20 : Module.{u1, u4} R N₃ _inst_1 _inst_19] {f : ContinuousLinearMap.{u1, u1, max u2 u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (Prod.{u2, u3} M N₂) (Prod.topologicalSpace.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.addCommMonoid.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 (Prod.module.{u1, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20} {g : ContinuousLinearMap.{u1, u1, max u2 u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (Prod.{u2, u3} M N₂) (Prod.topologicalSpace.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.addCommMonoid.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 (Prod.module.{u1, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20}, Iff (Eq.{max (succ (max u2 u3)) (succ u4)} (ContinuousLinearMap.{u1, u1, max u2 u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (Prod.{u2, u3} M N₂) (Prod.topologicalSpace.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.addCommMonoid.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 (Prod.module.{u1, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20) f g) (And (Eq.{max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) (ContinuousLinearMap.comp.{u1, u1, u1, u2, max u2 u3, u4} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 (Prod.{u2, u3} M N₂) (Prod.topologicalSpace.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.addCommMonoid.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 _inst_8 (Prod.module.{u1, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20 (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) f (ContinuousLinearMap.inl.{u1, u2, u3} R _inst_1 M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17)) (ContinuousLinearMap.comp.{u1, u1, u1, u2, max u2 u3, u4} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 (Prod.{u2, u3} M N₂) (Prod.topologicalSpace.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.addCommMonoid.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 _inst_8 (Prod.module.{u1, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20 (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) g (ContinuousLinearMap.inl.{u1, u2, u3} R _inst_1 M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17))) (Eq.{max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) N₂ _inst_15 _inst_16 N₃ _inst_18 _inst_19 _inst_17 _inst_20) (ContinuousLinearMap.comp.{u1, u1, u1, u3, max u2 u3, u4} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) N₂ _inst_15 _inst_16 (Prod.{u2, u3} M N₂) (Prod.topologicalSpace.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.addCommMonoid.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 _inst_17 (Prod.module.{u1, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20 (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) f (ContinuousLinearMap.inr.{u1, u2, u3} R _inst_1 M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17)) (ContinuousLinearMap.comp.{u1, u1, u1, u3, max u2 u3, u4} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) N₂ _inst_15 _inst_16 (Prod.{u2, u3} M N₂) (Prod.topologicalSpace.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.addCommMonoid.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 _inst_17 (Prod.module.{u1, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20 (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) g (ContinuousLinearMap.inr.{u1, u2, u3} R _inst_1 M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17))))
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Semiring.{u4} R] {M : Type.{u2}} [_inst_6 : TopologicalSpace.{u2} M] [_inst_7 : AddCommMonoid.{u2} M] [_inst_8 : Module.{u4, u2} R M _inst_1 _inst_7] {N₂ : Type.{u3}} [_inst_15 : TopologicalSpace.{u3} N₂] [_inst_16 : AddCommMonoid.{u3} N₂] [_inst_17 : Module.{u4, u3} R N₂ _inst_1 _inst_16] {N₃ : Type.{u1}} [_inst_18 : TopologicalSpace.{u1} N₃] [_inst_19 : AddCommMonoid.{u1} N₃] [_inst_20 : Module.{u4, u1} R N₃ _inst_1 _inst_19] {f : ContinuousLinearMap.{u4, u4, max u3 u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (Prod.{u2, u3} M N₂) (instTopologicalSpaceProd.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.instAddCommMonoidSum.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 (Prod.module.{u4, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20} {g : ContinuousLinearMap.{u4, u4, max u3 u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (Prod.{u2, u3} M N₂) (instTopologicalSpaceProd.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.instAddCommMonoidSum.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 (Prod.module.{u4, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20}, Iff (Eq.{max (max (succ u2) (succ u3)) (succ u1)} (ContinuousLinearMap.{u4, u4, max u3 u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (Prod.{u2, u3} M N₂) (instTopologicalSpaceProd.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.instAddCommMonoidSum.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 (Prod.module.{u4, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20) f g) (And (Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u4, u4, u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) (ContinuousLinearMap.comp.{u4, u4, u4, u2, max u2 u3, u1} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_6 _inst_7 (Prod.{u2, u3} M N₂) (instTopologicalSpaceProd.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.instAddCommMonoidSum.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 _inst_8 (Prod.module.{u4, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20 (RingHomCompTriple.ids.{u4, u4} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1))) f (ContinuousLinearMap.inl.{u4, u2, u3} R _inst_1 M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17)) (ContinuousLinearMap.comp.{u4, u4, u4, u2, max u2 u3, u1} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_6 _inst_7 (Prod.{u2, u3} M N₂) (instTopologicalSpaceProd.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.instAddCommMonoidSum.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 _inst_8 (Prod.module.{u4, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20 (RingHomCompTriple.ids.{u4, u4} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1))) g (ContinuousLinearMap.inl.{u4, u2, u3} R _inst_1 M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17))) (Eq.{max (succ u3) (succ u1)} (ContinuousLinearMap.{u4, u4, u3, u1} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) N₂ _inst_15 _inst_16 N₃ _inst_18 _inst_19 _inst_17 _inst_20) (ContinuousLinearMap.comp.{u4, u4, u4, u3, max u2 u3, u1} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) N₂ _inst_15 _inst_16 (Prod.{u2, u3} M N₂) (instTopologicalSpaceProd.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.instAddCommMonoidSum.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 _inst_17 (Prod.module.{u4, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20 (RingHomCompTriple.ids.{u4, u4} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1))) f (ContinuousLinearMap.inr.{u4, u2, u3} R _inst_1 M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17)) (ContinuousLinearMap.comp.{u4, u4, u4, u3, max u2 u3, u1} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) N₂ _inst_15 _inst_16 (Prod.{u2, u3} M N₂) (instTopologicalSpaceProd.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.instAddCommMonoidSum.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 _inst_17 (Prod.module.{u4, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20 (RingHomCompTriple.ids.{u4, u4} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1))) g (ContinuousLinearMap.inr.{u4, u2, u3} R _inst_1 M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.prod_ext_iff ContinuousLinearMap.prod_ext_iffₓ'. -/
theorem prod_ext_iff {f g : M × N₂ →L[R] N₃} :
    f = g ↔ f.comp (inl _ _ _) = g.comp (inl _ _ _) ∧ f.comp (inr _ _ _) = g.comp (inr _ _ _) :=
  by
  simp only [← coe_inj, LinearMap.prod_ext_iff]
  rfl
#align continuous_linear_map.prod_ext_iff ContinuousLinearMap.prod_ext_iff

/- warning: continuous_linear_map.prod_ext -> ContinuousLinearMap.prod_ext is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {M : Type.{u2}} [_inst_6 : TopologicalSpace.{u2} M] [_inst_7 : AddCommMonoid.{u2} M] [_inst_8 : Module.{u1, u2} R M _inst_1 _inst_7] {N₂ : Type.{u3}} [_inst_15 : TopologicalSpace.{u3} N₂] [_inst_16 : AddCommMonoid.{u3} N₂] [_inst_17 : Module.{u1, u3} R N₂ _inst_1 _inst_16] {N₃ : Type.{u4}} [_inst_18 : TopologicalSpace.{u4} N₃] [_inst_19 : AddCommMonoid.{u4} N₃] [_inst_20 : Module.{u1, u4} R N₃ _inst_1 _inst_19] {f : ContinuousLinearMap.{u1, u1, max u2 u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (Prod.{u2, u3} M N₂) (Prod.topologicalSpace.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.addCommMonoid.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 (Prod.module.{u1, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20} {g : ContinuousLinearMap.{u1, u1, max u2 u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (Prod.{u2, u3} M N₂) (Prod.topologicalSpace.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.addCommMonoid.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 (Prod.module.{u1, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20}, (Eq.{max (succ u2) (succ u4)} (ContinuousLinearMap.{u1, u1, u2, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) (ContinuousLinearMap.comp.{u1, u1, u1, u2, max u2 u3, u4} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 (Prod.{u2, u3} M N₂) (Prod.topologicalSpace.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.addCommMonoid.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 _inst_8 (Prod.module.{u1, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20 (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) f (ContinuousLinearMap.inl.{u1, u2, u3} R _inst_1 M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17)) (ContinuousLinearMap.comp.{u1, u1, u1, u2, max u2 u3, u4} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 (Prod.{u2, u3} M N₂) (Prod.topologicalSpace.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.addCommMonoid.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 _inst_8 (Prod.module.{u1, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20 (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) g (ContinuousLinearMap.inl.{u1, u2, u3} R _inst_1 M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17))) -> (Eq.{max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) N₂ _inst_15 _inst_16 N₃ _inst_18 _inst_19 _inst_17 _inst_20) (ContinuousLinearMap.comp.{u1, u1, u1, u3, max u2 u3, u4} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) N₂ _inst_15 _inst_16 (Prod.{u2, u3} M N₂) (Prod.topologicalSpace.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.addCommMonoid.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 _inst_17 (Prod.module.{u1, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20 (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) f (ContinuousLinearMap.inr.{u1, u2, u3} R _inst_1 M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17)) (ContinuousLinearMap.comp.{u1, u1, u1, u3, max u2 u3, u4} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) N₂ _inst_15 _inst_16 (Prod.{u2, u3} M N₂) (Prod.topologicalSpace.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.addCommMonoid.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 _inst_17 (Prod.module.{u1, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20 (RingHomCompTriple.right_ids.{u1, u1} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) g (ContinuousLinearMap.inr.{u1, u2, u3} R _inst_1 M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17))) -> (Eq.{max (succ (max u2 u3)) (succ u4)} (ContinuousLinearMap.{u1, u1, max u2 u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (Prod.{u2, u3} M N₂) (Prod.topologicalSpace.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.addCommMonoid.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 (Prod.module.{u1, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20) f g)
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Semiring.{u4} R] {M : Type.{u2}} [_inst_6 : TopologicalSpace.{u2} M] [_inst_7 : AddCommMonoid.{u2} M] [_inst_8 : Module.{u4, u2} R M _inst_1 _inst_7] {N₂ : Type.{u3}} [_inst_15 : TopologicalSpace.{u3} N₂] [_inst_16 : AddCommMonoid.{u3} N₂] [_inst_17 : Module.{u4, u3} R N₂ _inst_1 _inst_16] {N₃ : Type.{u1}} [_inst_18 : TopologicalSpace.{u1} N₃] [_inst_19 : AddCommMonoid.{u1} N₃] [_inst_20 : Module.{u4, u1} R N₃ _inst_1 _inst_19] {f : ContinuousLinearMap.{u4, u4, max u3 u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (Prod.{u2, u3} M N₂) (instTopologicalSpaceProd.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.instAddCommMonoidSum.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 (Prod.module.{u4, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20} {g : ContinuousLinearMap.{u4, u4, max u3 u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (Prod.{u2, u3} M N₂) (instTopologicalSpaceProd.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.instAddCommMonoidSum.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 (Prod.module.{u4, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20}, (Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u4, u4, u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) (ContinuousLinearMap.comp.{u4, u4, u4, u2, max u2 u3, u1} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_6 _inst_7 (Prod.{u2, u3} M N₂) (instTopologicalSpaceProd.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.instAddCommMonoidSum.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 _inst_8 (Prod.module.{u4, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20 (RingHomCompTriple.ids.{u4, u4} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1))) f (ContinuousLinearMap.inl.{u4, u2, u3} R _inst_1 M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17)) (ContinuousLinearMap.comp.{u4, u4, u4, u2, max u2 u3, u1} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) M _inst_6 _inst_7 (Prod.{u2, u3} M N₂) (instTopologicalSpaceProd.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.instAddCommMonoidSum.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 _inst_8 (Prod.module.{u4, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20 (RingHomCompTriple.ids.{u4, u4} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1))) g (ContinuousLinearMap.inl.{u4, u2, u3} R _inst_1 M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17))) -> (Eq.{max (succ u3) (succ u1)} (ContinuousLinearMap.{u4, u4, u3, u1} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) N₂ _inst_15 _inst_16 N₃ _inst_18 _inst_19 _inst_17 _inst_20) (ContinuousLinearMap.comp.{u4, u4, u4, u3, max u2 u3, u1} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) N₂ _inst_15 _inst_16 (Prod.{u2, u3} M N₂) (instTopologicalSpaceProd.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.instAddCommMonoidSum.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 _inst_17 (Prod.module.{u4, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20 (RingHomCompTriple.ids.{u4, u4} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1))) f (ContinuousLinearMap.inr.{u4, u2, u3} R _inst_1 M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17)) (ContinuousLinearMap.comp.{u4, u4, u4, u3, max u2 u3, u1} R R R _inst_1 _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) N₂ _inst_15 _inst_16 (Prod.{u2, u3} M N₂) (instTopologicalSpaceProd.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.instAddCommMonoidSum.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 _inst_17 (Prod.module.{u4, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20 (RingHomCompTriple.ids.{u4, u4} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1))) g (ContinuousLinearMap.inr.{u4, u2, u3} R _inst_1 M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17))) -> (Eq.{max (max (succ u2) (succ u3)) (succ u1)} (ContinuousLinearMap.{u4, u4, max u3 u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R _inst_1)) (Prod.{u2, u3} M N₂) (instTopologicalSpaceProd.{u2, u3} M N₂ _inst_6 _inst_15) (Prod.instAddCommMonoidSum.{u2, u3} M N₂ _inst_7 _inst_16) N₃ _inst_18 _inst_19 (Prod.module.{u4, u2, u3} R M N₂ _inst_1 _inst_7 _inst_16 _inst_8 _inst_17) _inst_20) f g)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.prod_ext ContinuousLinearMap.prod_extₓ'. -/
@[ext]
theorem prod_ext {f g : M × N₂ →L[R] N₃} (hl : f.comp (inl _ _ _) = g.comp (inl _ _ _))
    (hr : f.comp (inr _ _ _) = g.comp (inr _ _ _)) : f = g :=
  prod_ext_iff.2 ⟨hl, hr⟩
#align continuous_linear_map.prod_ext ContinuousLinearMap.prod_ext

variable [ContinuousAdd M₂] [ContinuousAdd M₃] [ContinuousAdd N₂]

instance : Module S₃ (M →SL[σ₁₃] M₃)
    where
  zero_smul _ := ext fun _ => zero_smul _ _
  add_smul _ _ _ := ext fun _ => add_smul _ _ _

instance [Module S₃ᵐᵒᵖ M₃] [IsCentralScalar S₃ M₃] : IsCentralScalar S₃ (M →SL[σ₁₃] M₃)
    where op_smul_eq_smul _ _ := ext fun _ => op_smul_eq_smul _ _

variable (S) [ContinuousAdd N₃]

/- warning: continuous_linear_map.prodₗ -> ContinuousLinearMap.prodₗ is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} (S : Type.{u2}) [_inst_1 : Semiring.{u1} R] [_inst_4 : Semiring.{u2} S] {M : Type.{u3}} [_inst_6 : TopologicalSpace.{u3} M] [_inst_7 : AddCommMonoid.{u3} M] [_inst_8 : Module.{u1, u3} R M _inst_1 _inst_7] {N₂ : Type.{u4}} [_inst_15 : TopologicalSpace.{u4} N₂] [_inst_16 : AddCommMonoid.{u4} N₂] [_inst_17 : Module.{u1, u4} R N₂ _inst_1 _inst_16] {N₃ : Type.{u5}} [_inst_18 : TopologicalSpace.{u5} N₃] [_inst_19 : AddCommMonoid.{u5} N₃] [_inst_20 : Module.{u1, u5} R N₃ _inst_1 _inst_19] [_inst_24 : Module.{u2, u4} S N₂ _inst_4 _inst_16] [_inst_25 : ContinuousConstSMul.{u2, u4} S N₂ _inst_15 (SMulZeroClass.toHasSmul.{u2, u4} S N₂ (AddZeroClass.toHasZero.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) (SMulWithZero.toSmulZeroClass.{u2, u4} S N₂ (MulZeroClass.toHasZero.{u2} S (MulZeroOneClass.toMulZeroClass.{u2} S (MonoidWithZero.toMulZeroOneClass.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)))) (AddZeroClass.toHasZero.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) (MulActionWithZero.toSMulWithZero.{u2, u4} S N₂ (Semiring.toMonoidWithZero.{u2} S _inst_4) (AddZeroClass.toHasZero.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) (Module.toMulActionWithZero.{u2, u4} S N₂ _inst_4 _inst_16 _inst_24))))] [_inst_26 : SMulCommClass.{u1, u2, u4} R S N₂ (SMulZeroClass.toHasSmul.{u1, u4} R N₂ (AddZeroClass.toHasZero.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) (SMulWithZero.toSmulZeroClass.{u1, u4} R N₂ (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) (MulActionWithZero.toSMulWithZero.{u1, u4} R N₂ (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) (Module.toMulActionWithZero.{u1, u4} R N₂ _inst_1 _inst_16 _inst_17)))) (SMulZeroClass.toHasSmul.{u2, u4} S N₂ (AddZeroClass.toHasZero.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) (SMulWithZero.toSmulZeroClass.{u2, u4} S N₂ (MulZeroClass.toHasZero.{u2} S (MulZeroOneClass.toMulZeroClass.{u2} S (MonoidWithZero.toMulZeroOneClass.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)))) (AddZeroClass.toHasZero.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) (MulActionWithZero.toSMulWithZero.{u2, u4} S N₂ (Semiring.toMonoidWithZero.{u2} S _inst_4) (AddZeroClass.toHasZero.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) (Module.toMulActionWithZero.{u2, u4} S N₂ _inst_4 _inst_16 _inst_24))))] [_inst_27 : Module.{u2, u5} S N₃ _inst_4 _inst_19] [_inst_28 : SMulCommClass.{u1, u2, u5} R S N₃ (SMulZeroClass.toHasSmul.{u1, u5} R N₃ (AddZeroClass.toHasZero.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) (SMulWithZero.toSmulZeroClass.{u1, u5} R N₃ (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) (MulActionWithZero.toSMulWithZero.{u1, u5} R N₃ (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) (Module.toMulActionWithZero.{u1, u5} R N₃ _inst_1 _inst_19 _inst_20)))) (SMulZeroClass.toHasSmul.{u2, u5} S N₃ (AddZeroClass.toHasZero.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) (SMulWithZero.toSmulZeroClass.{u2, u5} S N₃ (MulZeroClass.toHasZero.{u2} S (MulZeroOneClass.toMulZeroClass.{u2} S (MonoidWithZero.toMulZeroOneClass.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)))) (AddZeroClass.toHasZero.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) (MulActionWithZero.toSMulWithZero.{u2, u5} S N₃ (Semiring.toMonoidWithZero.{u2} S _inst_4) (AddZeroClass.toHasZero.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) (Module.toMulActionWithZero.{u2, u5} S N₃ _inst_4 _inst_19 _inst_27))))] [_inst_29 : ContinuousConstSMul.{u2, u5} S N₃ _inst_18 (SMulZeroClass.toHasSmul.{u2, u5} S N₃ (AddZeroClass.toHasZero.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) (SMulWithZero.toSmulZeroClass.{u2, u5} S N₃ (MulZeroClass.toHasZero.{u2} S (MulZeroOneClass.toMulZeroClass.{u2} S (MonoidWithZero.toMulZeroOneClass.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)))) (AddZeroClass.toHasZero.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) (MulActionWithZero.toSMulWithZero.{u2, u5} S N₃ (Semiring.toMonoidWithZero.{u2} S _inst_4) (AddZeroClass.toHasZero.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) (Module.toMulActionWithZero.{u2, u5} S N₃ _inst_4 _inst_19 _inst_27))))] [_inst_33 : ContinuousAdd.{u4} N₂ _inst_15 (AddZeroClass.toHasAdd.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16)))] [_inst_34 : ContinuousAdd.{u5} N₃ _inst_18 (AddZeroClass.toHasAdd.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19)))], LinearEquiv.{u2, u2, max (max u3 u4) u3 u5, max u3 u4 u5} S S _inst_4 _inst_4 (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_4)) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_4)) (RingHomInvPair.ids.{u2} S _inst_4) (RingHomInvPair.ids.{u2} S _inst_4) (Prod.{max u3 u4, max u3 u5} (ContinuousLinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17) (ContinuousLinearMap.{u1, u1, u3, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20)) (ContinuousLinearMap.{u1, u1, u3, max u4 u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 (Prod.{u4, u5} N₂ N₃) (Prod.topologicalSpace.{u4, u5} N₂ N₃ _inst_15 _inst_18) (Prod.addCommMonoid.{u4, u5} N₂ N₃ _inst_16 _inst_19) _inst_8 (Prod.module.{u1, u4, u5} R N₂ N₃ _inst_1 _inst_16 _inst_19 _inst_17 _inst_20)) (Prod.addCommMonoid.{max u3 u4, max u3 u5} (ContinuousLinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17) (ContinuousLinearMap.{u1, u1, u3, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) (ContinuousLinearMap.addCommMonoid.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17 _inst_33) (ContinuousLinearMap.addCommMonoid.{u1, u1, u3, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20 _inst_34)) (ContinuousLinearMap.addCommMonoid.{u1, u1, u3, max u4 u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 (Prod.{u4, u5} N₂ N₃) (Prod.topologicalSpace.{u4, u5} N₂ N₃ _inst_15 _inst_18) (Prod.addCommMonoid.{u4, u5} N₂ N₃ _inst_16 _inst_19) _inst_8 (Prod.module.{u1, u4, u5} R N₂ N₃ _inst_1 _inst_16 _inst_19 _inst_17 _inst_20) (ContinuousLinearMap.prodₗ._proof_1.{u5, u4} N₂ _inst_15 _inst_16 N₃ _inst_18 _inst_19 _inst_33 _inst_34)) (Prod.module.{u2, max u3 u4, max u3 u5} S (ContinuousLinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17) (ContinuousLinearMap.{u1, u1, u3, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) _inst_4 (ContinuousLinearMap.addCommMonoid.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17 _inst_33) (ContinuousLinearMap.addCommMonoid.{u1, u1, u3, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20 _inst_34) (ContinuousLinearMap.module.{u1, u1, u2, u3, u4} R R S _inst_1 _inst_1 _inst_4 M _inst_6 _inst_7 _inst_8 N₂ _inst_15 _inst_16 _inst_17 _inst_24 _inst_26 _inst_25 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) _inst_33) (ContinuousLinearMap.module.{u1, u1, u2, u3, u5} R R S _inst_1 _inst_1 _inst_4 M _inst_6 _inst_7 _inst_8 N₃ _inst_18 _inst_19 _inst_20 _inst_27 _inst_28 _inst_29 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) _inst_34)) (ContinuousLinearMap.module.{u1, u1, u2, u3, max u4 u5} R R S _inst_1 _inst_1 _inst_4 M _inst_6 _inst_7 _inst_8 (Prod.{u4, u5} N₂ N₃) (Prod.topologicalSpace.{u4, u5} N₂ N₃ _inst_15 _inst_18) (Prod.addCommMonoid.{u4, u5} N₂ N₃ _inst_16 _inst_19) (Prod.module.{u1, u4, u5} R N₂ N₃ _inst_1 _inst_16 _inst_19 _inst_17 _inst_20) (Prod.module.{u2, u4, u5} S N₂ N₃ _inst_4 _inst_16 _inst_19 _inst_24 _inst_27) (ContinuousLinearMap.prodₗ._proof_2.{u1, u5, u2, u4} R S _inst_1 _inst_4 N₂ _inst_16 _inst_17 N₃ _inst_19 _inst_20 _inst_24 _inst_26 _inst_27 _inst_28) (ContinuousLinearMap.prodₗ._proof_3.{u5, u2, u4} S _inst_4 N₂ _inst_15 _inst_16 N₃ _inst_18 _inst_19 _inst_24 _inst_25 _inst_27 _inst_29) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (ContinuousLinearMap.prodₗ._proof_4.{u5, u4} N₂ _inst_15 _inst_16 N₃ _inst_18 _inst_19 _inst_33 _inst_34))
but is expected to have type
  forall {R : Type.{u1}} (S : Type.{u2}) [_inst_1 : Semiring.{u1} R] [_inst_4 : Semiring.{u2} S] {M : Type.{u3}} [_inst_6 : TopologicalSpace.{u3} M] [_inst_7 : AddCommMonoid.{u3} M] [_inst_8 : Module.{u1, u3} R M _inst_1 _inst_7] {N₂ : Type.{u4}} [_inst_15 : TopologicalSpace.{u4} N₂] [_inst_16 : AddCommMonoid.{u4} N₂] [_inst_17 : Module.{u1, u4} R N₂ _inst_1 _inst_16] {N₃ : Type.{u5}} [_inst_18 : TopologicalSpace.{u5} N₃] [_inst_19 : AddCommMonoid.{u5} N₃] [_inst_20 : Module.{u1, u5} R N₃ _inst_1 _inst_19] [_inst_24 : Module.{u2, u4} S N₂ _inst_4 _inst_16] [_inst_25 : ContinuousConstSMul.{u2, u4} S N₂ _inst_15 (SMulZeroClass.toSMul.{u2, u4} S N₂ (AddMonoid.toZero.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16)) (SMulWithZero.toSMulZeroClass.{u2, u4} S N₂ (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)) (AddMonoid.toZero.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16)) (MulActionWithZero.toSMulWithZero.{u2, u4} S N₂ (Semiring.toMonoidWithZero.{u2} S _inst_4) (AddMonoid.toZero.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16)) (Module.toMulActionWithZero.{u2, u4} S N₂ _inst_4 _inst_16 _inst_24))))] [_inst_26 : SMulCommClass.{u1, u2, u4} R S N₂ (SMulZeroClass.toSMul.{u1, u4} R N₂ (AddMonoid.toZero.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16)) (SMulWithZero.toSMulZeroClass.{u1, u4} R N₂ (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddMonoid.toZero.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16)) (MulActionWithZero.toSMulWithZero.{u1, u4} R N₂ (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddMonoid.toZero.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16)) (Module.toMulActionWithZero.{u1, u4} R N₂ _inst_1 _inst_16 _inst_17)))) (SMulZeroClass.toSMul.{u2, u4} S N₂ (AddMonoid.toZero.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16)) (SMulWithZero.toSMulZeroClass.{u2, u4} S N₂ (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)) (AddMonoid.toZero.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16)) (MulActionWithZero.toSMulWithZero.{u2, u4} S N₂ (Semiring.toMonoidWithZero.{u2} S _inst_4) (AddMonoid.toZero.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16)) (Module.toMulActionWithZero.{u2, u4} S N₂ _inst_4 _inst_16 _inst_24))))] [_inst_27 : Module.{u2, u5} S N₃ _inst_4 _inst_19] [_inst_28 : SMulCommClass.{u1, u2, u5} R S N₃ (SMulZeroClass.toSMul.{u1, u5} R N₃ (AddMonoid.toZero.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19)) (SMulWithZero.toSMulZeroClass.{u1, u5} R N₃ (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddMonoid.toZero.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19)) (MulActionWithZero.toSMulWithZero.{u1, u5} R N₃ (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddMonoid.toZero.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19)) (Module.toMulActionWithZero.{u1, u5} R N₃ _inst_1 _inst_19 _inst_20)))) (SMulZeroClass.toSMul.{u2, u5} S N₃ (AddMonoid.toZero.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19)) (SMulWithZero.toSMulZeroClass.{u2, u5} S N₃ (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)) (AddMonoid.toZero.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19)) (MulActionWithZero.toSMulWithZero.{u2, u5} S N₃ (Semiring.toMonoidWithZero.{u2} S _inst_4) (AddMonoid.toZero.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19)) (Module.toMulActionWithZero.{u2, u5} S N₃ _inst_4 _inst_19 _inst_27))))] [_inst_29 : ContinuousConstSMul.{u2, u5} S N₃ _inst_18 (SMulZeroClass.toSMul.{u2, u5} S N₃ (AddMonoid.toZero.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19)) (SMulWithZero.toSMulZeroClass.{u2, u5} S N₃ (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)) (AddMonoid.toZero.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19)) (MulActionWithZero.toSMulWithZero.{u2, u5} S N₃ (Semiring.toMonoidWithZero.{u2} S _inst_4) (AddMonoid.toZero.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19)) (Module.toMulActionWithZero.{u2, u5} S N₃ _inst_4 _inst_19 _inst_27))))] [_inst_33 : ContinuousAdd.{u4} N₂ _inst_15 (AddZeroClass.toAdd.{u4} N₂ (AddMonoid.toAddZeroClass.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16)))] [_inst_34 : ContinuousAdd.{u5} N₃ _inst_18 (AddZeroClass.toAdd.{u5} N₃ (AddMonoid.toAddZeroClass.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19)))], LinearEquiv.{u2, u2, max (max u5 u3) u4 u3, max (max u5 u4) u3} S S _inst_4 _inst_4 (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_4)) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_4)) (RingHomInvPair.ids.{u2} S _inst_4) (RingHomInvPair.ids.{u2} S _inst_4) (Prod.{max u4 u3, max u5 u3} (ContinuousLinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17) (ContinuousLinearMap.{u1, u1, u3, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20)) (ContinuousLinearMap.{u1, u1, u3, max u5 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 (Prod.{u4, u5} N₂ N₃) (instTopologicalSpaceProd.{u4, u5} N₂ N₃ _inst_15 _inst_18) (Prod.instAddCommMonoidSum.{u4, u5} N₂ N₃ _inst_16 _inst_19) _inst_8 (Prod.module.{u1, u4, u5} R N₂ N₃ _inst_1 _inst_16 _inst_19 _inst_17 _inst_20)) (Prod.instAddCommMonoidSum.{max u3 u4, max u3 u5} (ContinuousLinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17) (ContinuousLinearMap.{u1, u1, u3, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) (ContinuousLinearMap.addCommMonoid.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17 _inst_33) (ContinuousLinearMap.addCommMonoid.{u1, u1, u3, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20 _inst_34)) (ContinuousLinearMap.addCommMonoid.{u1, u1, u3, max u4 u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 (Prod.{u4, u5} N₂ N₃) (instTopologicalSpaceProd.{u4, u5} N₂ N₃ _inst_15 _inst_18) (Prod.instAddCommMonoidSum.{u4, u5} N₂ N₃ _inst_16 _inst_19) _inst_8 (Prod.module.{u1, u4, u5} R N₂ N₃ _inst_1 _inst_16 _inst_19 _inst_17 _inst_20) (Prod.continuousAdd.{u4, u5} N₂ N₃ _inst_15 (AddSemigroup.toAdd.{u4} N₂ (AddMonoid.toAddSemigroup.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) _inst_33 _inst_18 (AddSemigroup.toAdd.{u5} N₃ (AddMonoid.toAddSemigroup.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) _inst_34)) (Prod.module.{u2, max u3 u4, max u3 u5} S (ContinuousLinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17) (ContinuousLinearMap.{u1, u1, u3, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) _inst_4 (ContinuousLinearMap.addCommMonoid.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₂ _inst_15 _inst_16 _inst_8 _inst_17 _inst_33) (ContinuousLinearMap.addCommMonoid.{u1, u1, u3, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20 _inst_34) (ContinuousLinearMap.module.{u1, u1, u2, u3, u4} R R S _inst_1 _inst_1 _inst_4 M _inst_6 _inst_7 _inst_8 N₂ _inst_15 _inst_16 _inst_17 _inst_24 _inst_26 _inst_25 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) _inst_33) (ContinuousLinearMap.module.{u1, u1, u2, u3, u5} R R S _inst_1 _inst_1 _inst_4 M _inst_6 _inst_7 _inst_8 N₃ _inst_18 _inst_19 _inst_20 _inst_27 _inst_28 _inst_29 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) _inst_34)) (ContinuousLinearMap.module.{u1, u1, u2, u3, max u4 u5} R R S _inst_1 _inst_1 _inst_4 M _inst_6 _inst_7 _inst_8 (Prod.{u4, u5} N₂ N₃) (instTopologicalSpaceProd.{u4, u5} N₂ N₃ _inst_15 _inst_18) (Prod.instAddCommMonoidSum.{u4, u5} N₂ N₃ _inst_16 _inst_19) (Prod.module.{u1, u4, u5} R N₂ N₃ _inst_1 _inst_16 _inst_19 _inst_17 _inst_20) (Prod.module.{u2, u4, u5} S N₂ N₃ _inst_4 _inst_16 _inst_19 _inst_24 _inst_27) (Prod.smulCommClass.{u1, u2, u4, u5} R S N₂ N₃ (MulAction.toSMul.{u1, u4} R N₂ (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (DistribMulAction.toMulAction.{u1, u4} R N₂ (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16) (Module.toDistribMulAction.{u1, u4} R N₂ _inst_1 _inst_16 _inst_17))) (MulAction.toSMul.{u1, u5} R N₃ (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (DistribMulAction.toMulAction.{u1, u5} R N₃ (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19) (Module.toDistribMulAction.{u1, u5} R N₃ _inst_1 _inst_19 _inst_20))) (MulAction.toSMul.{u2, u4} S N₂ (MonoidWithZero.toMonoid.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)) (DistribMulAction.toMulAction.{u2, u4} S N₂ (MonoidWithZero.toMonoid.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)) (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16) (Module.toDistribMulAction.{u2, u4} S N₂ _inst_4 _inst_16 _inst_24))) (MulAction.toSMul.{u2, u5} S N₃ (MonoidWithZero.toMonoid.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)) (DistribMulAction.toMulAction.{u2, u5} S N₃ (MonoidWithZero.toMonoid.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)) (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19) (Module.toDistribMulAction.{u2, u5} S N₃ _inst_4 _inst_19 _inst_27))) _inst_26 _inst_28) (Prod.continuousConstSMul.{u2, u4, u5} S N₂ N₃ _inst_15 (MulAction.toSMul.{u2, u4} S N₂ (MonoidWithZero.toMonoid.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)) (DistribMulAction.toMulAction.{u2, u4} S N₂ (MonoidWithZero.toMonoid.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)) (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16) (Module.toDistribMulAction.{u2, u4} S N₂ _inst_4 _inst_16 _inst_24))) _inst_25 _inst_18 (MulAction.toSMul.{u2, u5} S N₃ (MonoidWithZero.toMonoid.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)) (DistribMulAction.toMulAction.{u2, u5} S N₃ (MonoidWithZero.toMonoid.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)) (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19) (Module.toDistribMulAction.{u2, u5} S N₃ _inst_4 _inst_19 _inst_27))) _inst_29) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (Prod.continuousAdd.{u4, u5} N₂ N₃ _inst_15 (AddSemigroup.toAdd.{u4} N₂ (AddMonoid.toAddSemigroup.{u4} N₂ (AddCommMonoid.toAddMonoid.{u4} N₂ _inst_16))) _inst_33 _inst_18 (AddSemigroup.toAdd.{u5} N₃ (AddMonoid.toAddSemigroup.{u5} N₃ (AddCommMonoid.toAddMonoid.{u5} N₃ _inst_19))) _inst_34))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.prodₗ ContinuousLinearMap.prodₗₓ'. -/
/-- `continuous_linear_map.prod` as a `linear_equiv`. -/
@[simps apply]
def prodₗ : ((M →L[R] N₂) × (M →L[R] N₃)) ≃ₗ[S] M →L[R] N₂ × N₃ :=
  { prodEquiv with
    map_add' := fun f g => rfl
    map_smul' := fun c f => rfl }
#align continuous_linear_map.prodₗ ContinuousLinearMap.prodₗ

/- warning: continuous_linear_map.coe_lm -> ContinuousLinearMap.coeLM is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} (S : Type.{u2}) [_inst_1 : Semiring.{u1} R] [_inst_4 : Semiring.{u2} S] {M : Type.{u3}} [_inst_6 : TopologicalSpace.{u3} M] [_inst_7 : AddCommMonoid.{u3} M] [_inst_8 : Module.{u1, u3} R M _inst_1 _inst_7] {N₃ : Type.{u4}} [_inst_18 : TopologicalSpace.{u4} N₃] [_inst_19 : AddCommMonoid.{u4} N₃] [_inst_20 : Module.{u1, u4} R N₃ _inst_1 _inst_19] [_inst_27 : Module.{u2, u4} S N₃ _inst_4 _inst_19] [_inst_28 : SMulCommClass.{u1, u2, u4} R S N₃ (SMulZeroClass.toHasSmul.{u1, u4} R N₃ (AddZeroClass.toHasZero.{u4} N₃ (AddMonoid.toAddZeroClass.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19))) (SMulWithZero.toSmulZeroClass.{u1, u4} R N₃ (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u4} N₃ (AddMonoid.toAddZeroClass.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19))) (MulActionWithZero.toSMulWithZero.{u1, u4} R N₃ (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u4} N₃ (AddMonoid.toAddZeroClass.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19))) (Module.toMulActionWithZero.{u1, u4} R N₃ _inst_1 _inst_19 _inst_20)))) (SMulZeroClass.toHasSmul.{u2, u4} S N₃ (AddZeroClass.toHasZero.{u4} N₃ (AddMonoid.toAddZeroClass.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19))) (SMulWithZero.toSmulZeroClass.{u2, u4} S N₃ (MulZeroClass.toHasZero.{u2} S (MulZeroOneClass.toMulZeroClass.{u2} S (MonoidWithZero.toMulZeroOneClass.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)))) (AddZeroClass.toHasZero.{u4} N₃ (AddMonoid.toAddZeroClass.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19))) (MulActionWithZero.toSMulWithZero.{u2, u4} S N₃ (Semiring.toMonoidWithZero.{u2} S _inst_4) (AddZeroClass.toHasZero.{u4} N₃ (AddMonoid.toAddZeroClass.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19))) (Module.toMulActionWithZero.{u2, u4} S N₃ _inst_4 _inst_19 _inst_27))))] [_inst_29 : ContinuousConstSMul.{u2, u4} S N₃ _inst_18 (SMulZeroClass.toHasSmul.{u2, u4} S N₃ (AddZeroClass.toHasZero.{u4} N₃ (AddMonoid.toAddZeroClass.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19))) (SMulWithZero.toSmulZeroClass.{u2, u4} S N₃ (MulZeroClass.toHasZero.{u2} S (MulZeroOneClass.toMulZeroClass.{u2} S (MonoidWithZero.toMulZeroOneClass.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)))) (AddZeroClass.toHasZero.{u4} N₃ (AddMonoid.toAddZeroClass.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19))) (MulActionWithZero.toSMulWithZero.{u2, u4} S N₃ (Semiring.toMonoidWithZero.{u2} S _inst_4) (AddZeroClass.toHasZero.{u4} N₃ (AddMonoid.toAddZeroClass.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19))) (Module.toMulActionWithZero.{u2, u4} S N₃ _inst_4 _inst_19 _inst_27))))] [_inst_34 : ContinuousAdd.{u4} N₃ _inst_18 (AddZeroClass.toHasAdd.{u4} N₃ (AddMonoid.toAddZeroClass.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)))], LinearMap.{u2, u2, max u3 u4, max u3 u4} S S _inst_4 _inst_4 (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_4)) (ContinuousLinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) (LinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M N₃ _inst_7 _inst_19 _inst_8 _inst_20) (ContinuousLinearMap.addCommMonoid.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20 _inst_34) (LinearMap.addCommMonoid.{u1, u1, u3, u4} R R M N₃ _inst_1 _inst_1 _inst_7 _inst_19 _inst_8 _inst_20 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (ContinuousLinearMap.module.{u1, u1, u2, u3, u4} R R S _inst_1 _inst_1 _inst_4 M _inst_6 _inst_7 _inst_8 N₃ _inst_18 _inst_19 _inst_20 _inst_27 _inst_28 _inst_29 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) _inst_34) (LinearMap.module.{u1, u1, u2, u3, u4} R R S M N₃ _inst_1 _inst_1 _inst_7 _inst_19 _inst_8 _inst_20 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) _inst_4 _inst_27 _inst_28)
but is expected to have type
  forall {R : Type.{u1}} (S : Type.{u2}) [_inst_1 : Semiring.{u1} R] [_inst_4 : Semiring.{u2} S] {M : Type.{u3}} [_inst_6 : TopologicalSpace.{u3} M] [_inst_7 : AddCommMonoid.{u3} M] [_inst_8 : Module.{u1, u3} R M _inst_1 _inst_7] {N₃ : Type.{u4}} [_inst_18 : TopologicalSpace.{u4} N₃] [_inst_19 : AddCommMonoid.{u4} N₃] [_inst_20 : Module.{u1, u4} R N₃ _inst_1 _inst_19] [_inst_27 : Module.{u2, u4} S N₃ _inst_4 _inst_19] [_inst_28 : SMulCommClass.{u1, u2, u4} R S N₃ (SMulZeroClass.toSMul.{u1, u4} R N₃ (AddMonoid.toZero.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (SMulWithZero.toSMulZeroClass.{u1, u4} R N₃ (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddMonoid.toZero.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (MulActionWithZero.toSMulWithZero.{u1, u4} R N₃ (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddMonoid.toZero.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (Module.toMulActionWithZero.{u1, u4} R N₃ _inst_1 _inst_19 _inst_20)))) (SMulZeroClass.toSMul.{u2, u4} S N₃ (AddMonoid.toZero.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (SMulWithZero.toSMulZeroClass.{u2, u4} S N₃ (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)) (AddMonoid.toZero.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (MulActionWithZero.toSMulWithZero.{u2, u4} S N₃ (Semiring.toMonoidWithZero.{u2} S _inst_4) (AddMonoid.toZero.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (Module.toMulActionWithZero.{u2, u4} S N₃ _inst_4 _inst_19 _inst_27))))] [_inst_29 : ContinuousConstSMul.{u2, u4} S N₃ _inst_18 (SMulZeroClass.toSMul.{u2, u4} S N₃ (AddMonoid.toZero.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (SMulWithZero.toSMulZeroClass.{u2, u4} S N₃ (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_4)) (AddMonoid.toZero.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (MulActionWithZero.toSMulWithZero.{u2, u4} S N₃ (Semiring.toMonoidWithZero.{u2} S _inst_4) (AddMonoid.toZero.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)) (Module.toMulActionWithZero.{u2, u4} S N₃ _inst_4 _inst_19 _inst_27))))] [_inst_34 : ContinuousAdd.{u4} N₃ _inst_18 (AddZeroClass.toAdd.{u4} N₃ (AddMonoid.toAddZeroClass.{u4} N₃ (AddCommMonoid.toAddMonoid.{u4} N₃ _inst_19)))], LinearMap.{u2, u2, max u4 u3, max u4 u3} S S _inst_4 _inst_4 (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_4)) (ContinuousLinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20) (LinearMap.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M N₃ _inst_7 _inst_19 _inst_8 _inst_20) (ContinuousLinearMap.addCommMonoid.{u1, u1, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_6 _inst_7 N₃ _inst_18 _inst_19 _inst_8 _inst_20 _inst_34) (LinearMap.addCommMonoid.{u1, u1, u3, u4} R R M N₃ _inst_1 _inst_1 _inst_7 _inst_19 _inst_8 _inst_20 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1))) (ContinuousLinearMap.module.{u1, u1, u2, u3, u4} R R S _inst_1 _inst_1 _inst_4 M _inst_6 _inst_7 _inst_8 N₃ _inst_18 _inst_19 _inst_20 _inst_27 _inst_28 _inst_29 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) _inst_34) (LinearMap.instModuleLinearMapAddCommMonoid.{u1, u1, u2, u3, u4} R R S M N₃ _inst_1 _inst_1 _inst_7 _inst_19 _inst_8 _inst_20 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) _inst_4 _inst_27 _inst_28)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_lm ContinuousLinearMap.coeLMₓ'. -/
/-- The coercion from `M →L[R] M₂` to `M →ₗ[R] M₂`, as a linear map. -/
@[simps]
def coeLM : (M →L[R] N₃) →ₗ[S] M →ₗ[R] N₃
    where
  toFun := coe
  map_add' f g := coe_add f g
  map_smul' c f := coe_smul c f
#align continuous_linear_map.coe_lm ContinuousLinearMap.coeLM

variable {S} (σ₁₃)

/- warning: continuous_linear_map.coe_lmₛₗ -> ContinuousLinearMap.coeLMₛₗ is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {R₃ : Type.{u2}} {S₃ : Type.{u3}} [_inst_1 : Semiring.{u1} R] [_inst_3 : Semiring.{u2} R₃] [_inst_5 : Semiring.{u3} S₃] {M : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M] [_inst_7 : AddCommMonoid.{u4} M] [_inst_8 : Module.{u1, u4} R M _inst_1 _inst_7] {M₃ : Type.{u5}} [_inst_12 : TopologicalSpace.{u5} M₃] [_inst_13 : AddCommMonoid.{u5} M₃] [_inst_14 : Module.{u2, u5} R₃ M₃ _inst_3 _inst_13] [_inst_21 : Module.{u3, u5} S₃ M₃ _inst_5 _inst_13] [_inst_22 : SMulCommClass.{u2, u3, u5} R₃ S₃ M₃ (SMulZeroClass.toHasSmul.{u2, u5} R₃ M₃ (AddZeroClass.toHasZero.{u5} M₃ (AddMonoid.toAddZeroClass.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13))) (SMulWithZero.toSmulZeroClass.{u2, u5} R₃ M₃ (MulZeroClass.toHasZero.{u2} R₃ (MulZeroOneClass.toMulZeroClass.{u2} R₃ (MonoidWithZero.toMulZeroOneClass.{u2} R₃ (Semiring.toMonoidWithZero.{u2} R₃ _inst_3)))) (AddZeroClass.toHasZero.{u5} M₃ (AddMonoid.toAddZeroClass.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13))) (MulActionWithZero.toSMulWithZero.{u2, u5} R₃ M₃ (Semiring.toMonoidWithZero.{u2} R₃ _inst_3) (AddZeroClass.toHasZero.{u5} M₃ (AddMonoid.toAddZeroClass.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13))) (Module.toMulActionWithZero.{u2, u5} R₃ M₃ _inst_3 _inst_13 _inst_14)))) (SMulZeroClass.toHasSmul.{u3, u5} S₃ M₃ (AddZeroClass.toHasZero.{u5} M₃ (AddMonoid.toAddZeroClass.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13))) (SMulWithZero.toSmulZeroClass.{u3, u5} S₃ M₃ (MulZeroClass.toHasZero.{u3} S₃ (MulZeroOneClass.toMulZeroClass.{u3} S₃ (MonoidWithZero.toMulZeroOneClass.{u3} S₃ (Semiring.toMonoidWithZero.{u3} S₃ _inst_5)))) (AddZeroClass.toHasZero.{u5} M₃ (AddMonoid.toAddZeroClass.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13))) (MulActionWithZero.toSMulWithZero.{u3, u5} S₃ M₃ (Semiring.toMonoidWithZero.{u3} S₃ _inst_5) (AddZeroClass.toHasZero.{u5} M₃ (AddMonoid.toAddZeroClass.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13))) (Module.toMulActionWithZero.{u3, u5} S₃ M₃ _inst_5 _inst_13 _inst_21))))] [_inst_23 : ContinuousConstSMul.{u3, u5} S₃ M₃ _inst_12 (SMulZeroClass.toHasSmul.{u3, u5} S₃ M₃ (AddZeroClass.toHasZero.{u5} M₃ (AddMonoid.toAddZeroClass.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13))) (SMulWithZero.toSmulZeroClass.{u3, u5} S₃ M₃ (MulZeroClass.toHasZero.{u3} S₃ (MulZeroOneClass.toMulZeroClass.{u3} S₃ (MonoidWithZero.toMulZeroOneClass.{u3} S₃ (Semiring.toMonoidWithZero.{u3} S₃ _inst_5)))) (AddZeroClass.toHasZero.{u5} M₃ (AddMonoid.toAddZeroClass.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13))) (MulActionWithZero.toSMulWithZero.{u3, u5} S₃ M₃ (Semiring.toMonoidWithZero.{u3} S₃ _inst_5) (AddZeroClass.toHasZero.{u5} M₃ (AddMonoid.toAddZeroClass.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13))) (Module.toMulActionWithZero.{u3, u5} S₃ M₃ _inst_5 _inst_13 _inst_21))))] (σ₁₃ : RingHom.{u1, u2} R R₃ (Semiring.toNonAssocSemiring.{u1} R _inst_1) (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3)) [_inst_32 : ContinuousAdd.{u5} M₃ _inst_12 (AddZeroClass.toHasAdd.{u5} M₃ (AddMonoid.toAddZeroClass.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13)))], LinearMap.{u3, u3, max u4 u5, max u4 u5} S₃ S₃ _inst_5 _inst_5 (RingHom.id.{u3} S₃ (Semiring.toNonAssocSemiring.{u3} S₃ _inst_5)) (ContinuousLinearMap.{u1, u2, u4, u5} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) (LinearMap.{u1, u2, u4, u5} R R₃ _inst_1 _inst_3 σ₁₃ M M₃ _inst_7 _inst_13 _inst_8 _inst_14) (ContinuousLinearMap.addCommMonoid.{u1, u2, u4, u5} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14 _inst_32) (LinearMap.addCommMonoid.{u1, u2, u4, u5} R R₃ M M₃ _inst_1 _inst_3 _inst_7 _inst_13 _inst_8 _inst_14 σ₁₃) (ContinuousLinearMap.module.{u1, u2, u3, u4, u5} R R₃ S₃ _inst_1 _inst_3 _inst_5 M _inst_6 _inst_7 _inst_8 M₃ _inst_12 _inst_13 _inst_14 _inst_21 _inst_22 _inst_23 σ₁₃ _inst_32) (LinearMap.module.{u1, u2, u3, u4, u5} R R₃ S₃ M M₃ _inst_1 _inst_3 _inst_7 _inst_13 _inst_8 _inst_14 σ₁₃ _inst_5 _inst_21 _inst_22)
but is expected to have type
  forall {R : Type.{u1}} {R₃ : Type.{u2}} {S₃ : Type.{u3}} [_inst_1 : Semiring.{u1} R] [_inst_3 : Semiring.{u2} R₃] [_inst_5 : Semiring.{u3} S₃] {M : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M] [_inst_7 : AddCommMonoid.{u4} M] [_inst_8 : Module.{u1, u4} R M _inst_1 _inst_7] {M₃ : Type.{u5}} [_inst_12 : TopologicalSpace.{u5} M₃] [_inst_13 : AddCommMonoid.{u5} M₃] [_inst_14 : Module.{u2, u5} R₃ M₃ _inst_3 _inst_13] [_inst_21 : Module.{u3, u5} S₃ M₃ _inst_5 _inst_13] [_inst_22 : SMulCommClass.{u2, u3, u5} R₃ S₃ M₃ (SMulZeroClass.toSMul.{u2, u5} R₃ M₃ (AddMonoid.toZero.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13)) (SMulWithZero.toSMulZeroClass.{u2, u5} R₃ M₃ (MonoidWithZero.toZero.{u2} R₃ (Semiring.toMonoidWithZero.{u2} R₃ _inst_3)) (AddMonoid.toZero.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13)) (MulActionWithZero.toSMulWithZero.{u2, u5} R₃ M₃ (Semiring.toMonoidWithZero.{u2} R₃ _inst_3) (AddMonoid.toZero.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13)) (Module.toMulActionWithZero.{u2, u5} R₃ M₃ _inst_3 _inst_13 _inst_14)))) (SMulZeroClass.toSMul.{u3, u5} S₃ M₃ (AddMonoid.toZero.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13)) (SMulWithZero.toSMulZeroClass.{u3, u5} S₃ M₃ (MonoidWithZero.toZero.{u3} S₃ (Semiring.toMonoidWithZero.{u3} S₃ _inst_5)) (AddMonoid.toZero.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13)) (MulActionWithZero.toSMulWithZero.{u3, u5} S₃ M₃ (Semiring.toMonoidWithZero.{u3} S₃ _inst_5) (AddMonoid.toZero.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13)) (Module.toMulActionWithZero.{u3, u5} S₃ M₃ _inst_5 _inst_13 _inst_21))))] [_inst_23 : ContinuousConstSMul.{u3, u5} S₃ M₃ _inst_12 (SMulZeroClass.toSMul.{u3, u5} S₃ M₃ (AddMonoid.toZero.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13)) (SMulWithZero.toSMulZeroClass.{u3, u5} S₃ M₃ (MonoidWithZero.toZero.{u3} S₃ (Semiring.toMonoidWithZero.{u3} S₃ _inst_5)) (AddMonoid.toZero.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13)) (MulActionWithZero.toSMulWithZero.{u3, u5} S₃ M₃ (Semiring.toMonoidWithZero.{u3} S₃ _inst_5) (AddMonoid.toZero.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13)) (Module.toMulActionWithZero.{u3, u5} S₃ M₃ _inst_5 _inst_13 _inst_21))))] (σ₁₃ : RingHom.{u1, u2} R R₃ (Semiring.toNonAssocSemiring.{u1} R _inst_1) (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3)) [_inst_32 : ContinuousAdd.{u5} M₃ _inst_12 (AddZeroClass.toAdd.{u5} M₃ (AddMonoid.toAddZeroClass.{u5} M₃ (AddCommMonoid.toAddMonoid.{u5} M₃ _inst_13)))], LinearMap.{u3, u3, max u5 u4, max u5 u4} S₃ S₃ _inst_5 _inst_5 (RingHom.id.{u3} S₃ (Semiring.toNonAssocSemiring.{u3} S₃ _inst_5)) (ContinuousLinearMap.{u1, u2, u4, u5} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14) (LinearMap.{u1, u2, u4, u5} R R₃ _inst_1 _inst_3 σ₁₃ M M₃ _inst_7 _inst_13 _inst_8 _inst_14) (ContinuousLinearMap.addCommMonoid.{u1, u2, u4, u5} R R₃ _inst_1 _inst_3 σ₁₃ M _inst_6 _inst_7 M₃ _inst_12 _inst_13 _inst_8 _inst_14 _inst_32) (LinearMap.addCommMonoid.{u1, u2, u4, u5} R R₃ M M₃ _inst_1 _inst_3 _inst_7 _inst_13 _inst_8 _inst_14 σ₁₃) (ContinuousLinearMap.module.{u1, u2, u3, u4, u5} R R₃ S₃ _inst_1 _inst_3 _inst_5 M _inst_6 _inst_7 _inst_8 M₃ _inst_12 _inst_13 _inst_14 _inst_21 _inst_22 _inst_23 σ₁₃ _inst_32) (LinearMap.instModuleLinearMapAddCommMonoid.{u1, u2, u3, u4, u5} R R₃ S₃ M M₃ _inst_1 _inst_3 _inst_7 _inst_13 _inst_8 _inst_14 σ₁₃ _inst_5 _inst_21 _inst_22)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_lmₛₗ ContinuousLinearMap.coeLMₛₗₓ'. -/
/-- The coercion from `M →SL[σ] M₂` to `M →ₛₗ[σ] M₂`, as a linear map. -/
@[simps]
def coeLMₛₗ : (M →SL[σ₁₃] M₃) →ₗ[S₃] M →ₛₗ[σ₁₃] M₃
    where
  toFun := coe
  map_add' f g := coe_add f g
  map_smul' c f := coe_smul c f
#align continuous_linear_map.coe_lmₛₗ ContinuousLinearMap.coeLMₛₗ

variable {σ₁₃}

end Smul

section SmulRightₗ

variable {R S T M M₂ : Type _} [Semiring R] [Semiring S] [Semiring T] [Module R S]
  [AddCommMonoid M₂] [Module R M₂] [Module S M₂] [IsScalarTower R S M₂] [TopologicalSpace S]
  [TopologicalSpace M₂] [ContinuousSMul S M₂] [TopologicalSpace M] [AddCommMonoid M] [Module R M]
  [ContinuousAdd M₂] [Module T M₂] [ContinuousConstSMul T M₂] [SMulCommClass R T M₂]
  [SMulCommClass S T M₂]

/- warning: continuous_linear_map.smul_rightₗ -> ContinuousLinearMap.smulRightₗ is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {S : Type.{u2}} {T : Type.{u3}} {M : Type.{u4}} {M₂ : Type.{u5}} [_inst_1 : Semiring.{u1} R] [_inst_2 : Semiring.{u2} S] [_inst_3 : Semiring.{u3} T] [_inst_4 : Module.{u1, u2} R S _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_2)))] [_inst_5 : AddCommMonoid.{u5} M₂] [_inst_6 : Module.{u1, u5} R M₂ _inst_1 _inst_5] [_inst_7 : Module.{u2, u5} S M₂ _inst_2 _inst_5] [_inst_8 : IsScalarTower.{u1, u2, u5} R S M₂ (SMulZeroClass.toHasSmul.{u1, u2} R S (AddZeroClass.toHasZero.{u2} S (AddMonoid.toAddZeroClass.{u2} S (AddCommMonoid.toAddMonoid.{u2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_2)))))) (SMulWithZero.toSmulZeroClass.{u1, u2} R S (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u2} S (AddMonoid.toAddZeroClass.{u2} S (AddCommMonoid.toAddMonoid.{u2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_2)))))) (MulActionWithZero.toSMulWithZero.{u1, u2} R S (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u2} S (AddMonoid.toAddZeroClass.{u2} S (AddCommMonoid.toAddMonoid.{u2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_2)))))) (Module.toMulActionWithZero.{u1, u2} R S _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_2))) _inst_4)))) (SMulZeroClass.toHasSmul.{u2, u5} S M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u5} S M₂ (MulZeroClass.toHasZero.{u2} S (MulZeroOneClass.toMulZeroClass.{u2} S (MonoidWithZero.toMulZeroOneClass.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_2)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u5} S M₂ (Semiring.toMonoidWithZero.{u2} S _inst_2) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (Module.toMulActionWithZero.{u2, u5} S M₂ _inst_2 _inst_5 _inst_7)))) (SMulZeroClass.toHasSmul.{u1, u5} R M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (SMulWithZero.toSmulZeroClass.{u1, u5} R M₂ (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (MulActionWithZero.toSMulWithZero.{u1, u5} R M₂ (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (Module.toMulActionWithZero.{u1, u5} R M₂ _inst_1 _inst_5 _inst_6))))] [_inst_9 : TopologicalSpace.{u2} S] [_inst_10 : TopologicalSpace.{u5} M₂] [_inst_11 : ContinuousSMul.{u2, u5} S M₂ (SMulZeroClass.toHasSmul.{u2, u5} S M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u5} S M₂ (MulZeroClass.toHasZero.{u2} S (MulZeroOneClass.toMulZeroClass.{u2} S (MonoidWithZero.toMulZeroOneClass.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_2)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u5} S M₂ (Semiring.toMonoidWithZero.{u2} S _inst_2) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (Module.toMulActionWithZero.{u2, u5} S M₂ _inst_2 _inst_5 _inst_7)))) _inst_9 _inst_10] [_inst_12 : TopologicalSpace.{u4} M] [_inst_13 : AddCommMonoid.{u4} M] [_inst_14 : Module.{u1, u4} R M _inst_1 _inst_13] [_inst_15 : ContinuousAdd.{u5} M₂ _inst_10 (AddZeroClass.toHasAdd.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)))] [_inst_16 : Module.{u3, u5} T M₂ _inst_3 _inst_5] [_inst_17 : ContinuousConstSMul.{u3, u5} T M₂ _inst_10 (SMulZeroClass.toHasSmul.{u3, u5} T M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (SMulWithZero.toSmulZeroClass.{u3, u5} T M₂ (MulZeroClass.toHasZero.{u3} T (MulZeroOneClass.toMulZeroClass.{u3} T (MonoidWithZero.toMulZeroOneClass.{u3} T (Semiring.toMonoidWithZero.{u3} T _inst_3)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (MulActionWithZero.toSMulWithZero.{u3, u5} T M₂ (Semiring.toMonoidWithZero.{u3} T _inst_3) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (Module.toMulActionWithZero.{u3, u5} T M₂ _inst_3 _inst_5 _inst_16))))] [_inst_18 : SMulCommClass.{u1, u3, u5} R T M₂ (SMulZeroClass.toHasSmul.{u1, u5} R M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (SMulWithZero.toSmulZeroClass.{u1, u5} R M₂ (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (MulActionWithZero.toSMulWithZero.{u1, u5} R M₂ (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (Module.toMulActionWithZero.{u1, u5} R M₂ _inst_1 _inst_5 _inst_6)))) (SMulZeroClass.toHasSmul.{u3, u5} T M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (SMulWithZero.toSmulZeroClass.{u3, u5} T M₂ (MulZeroClass.toHasZero.{u3} T (MulZeroOneClass.toMulZeroClass.{u3} T (MonoidWithZero.toMulZeroOneClass.{u3} T (Semiring.toMonoidWithZero.{u3} T _inst_3)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (MulActionWithZero.toSMulWithZero.{u3, u5} T M₂ (Semiring.toMonoidWithZero.{u3} T _inst_3) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (Module.toMulActionWithZero.{u3, u5} T M₂ _inst_3 _inst_5 _inst_16))))] [_inst_19 : SMulCommClass.{u2, u3, u5} S T M₂ (SMulZeroClass.toHasSmul.{u2, u5} S M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u5} S M₂ (MulZeroClass.toHasZero.{u2} S (MulZeroOneClass.toMulZeroClass.{u2} S (MonoidWithZero.toMulZeroOneClass.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_2)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u5} S M₂ (Semiring.toMonoidWithZero.{u2} S _inst_2) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (Module.toMulActionWithZero.{u2, u5} S M₂ _inst_2 _inst_5 _inst_7)))) (SMulZeroClass.toHasSmul.{u3, u5} T M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (SMulWithZero.toSmulZeroClass.{u3, u5} T M₂ (MulZeroClass.toHasZero.{u3} T (MulZeroOneClass.toMulZeroClass.{u3} T (MonoidWithZero.toMulZeroOneClass.{u3} T (Semiring.toMonoidWithZero.{u3} T _inst_3)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (MulActionWithZero.toSMulWithZero.{u3, u5} T M₂ (Semiring.toMonoidWithZero.{u3} T _inst_3) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (Module.toMulActionWithZero.{u3, u5} T M₂ _inst_3 _inst_5 _inst_16))))], (ContinuousLinearMap.{u1, u1, u4, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_12 _inst_13 S _inst_9 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_2))) _inst_14 _inst_4) -> (LinearMap.{u3, u3, u5, max u4 u5} T T _inst_3 _inst_3 (RingHom.id.{u3} T (Semiring.toNonAssocSemiring.{u3} T _inst_3)) M₂ (ContinuousLinearMap.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6) _inst_5 (ContinuousLinearMap.addCommMonoid.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6 _inst_15) _inst_16 (ContinuousLinearMap.module.{u1, u1, u3, u4, u5} R R T _inst_1 _inst_1 _inst_3 M _inst_12 _inst_13 _inst_14 M₂ _inst_10 _inst_5 _inst_6 _inst_16 _inst_18 _inst_17 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) _inst_15))
but is expected to have type
  forall {R : Type.{u1}} {S : Type.{u2}} {T : Type.{u3}} {M : Type.{u4}} {M₂ : Type.{u5}} [_inst_1 : Semiring.{u1} R] [_inst_2 : Semiring.{u2} S] [_inst_3 : Semiring.{u3} T] [_inst_4 : Module.{u1, u2} R S _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_2)))] [_inst_5 : AddCommMonoid.{u5} M₂] [_inst_6 : Module.{u1, u5} R M₂ _inst_1 _inst_5] [_inst_7 : Module.{u2, u5} S M₂ _inst_2 _inst_5] [_inst_8 : IsScalarTower.{u1, u2, u5} R S M₂ (SMulZeroClass.toSMul.{u1, u2} R S (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_2)) (SMulWithZero.toSMulZeroClass.{u1, u2} R S (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_2)) (MulActionWithZero.toSMulWithZero.{u1, u2} R S (Semiring.toMonoidWithZero.{u1} R _inst_1) (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_2)) (Module.toMulActionWithZero.{u1, u2} R S _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_2))) _inst_4)))) (SMulZeroClass.toSMul.{u2, u5} S M₂ (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (SMulWithZero.toSMulZeroClass.{u2, u5} S M₂ (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_2)) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (MulActionWithZero.toSMulWithZero.{u2, u5} S M₂ (Semiring.toMonoidWithZero.{u2} S _inst_2) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (Module.toMulActionWithZero.{u2, u5} S M₂ _inst_2 _inst_5 _inst_7)))) (SMulZeroClass.toSMul.{u1, u5} R M₂ (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (SMulWithZero.toSMulZeroClass.{u1, u5} R M₂ (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (MulActionWithZero.toSMulWithZero.{u1, u5} R M₂ (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (Module.toMulActionWithZero.{u1, u5} R M₂ _inst_1 _inst_5 _inst_6))))] [_inst_9 : TopologicalSpace.{u2} S] [_inst_10 : TopologicalSpace.{u5} M₂] [_inst_11 : ContinuousSMul.{u2, u5} S M₂ (SMulZeroClass.toSMul.{u2, u5} S M₂ (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (SMulWithZero.toSMulZeroClass.{u2, u5} S M₂ (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_2)) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (MulActionWithZero.toSMulWithZero.{u2, u5} S M₂ (Semiring.toMonoidWithZero.{u2} S _inst_2) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (Module.toMulActionWithZero.{u2, u5} S M₂ _inst_2 _inst_5 _inst_7)))) _inst_9 _inst_10] [_inst_12 : TopologicalSpace.{u4} M] [_inst_13 : AddCommMonoid.{u4} M] [_inst_14 : Module.{u1, u4} R M _inst_1 _inst_13] [_inst_15 : ContinuousAdd.{u5} M₂ _inst_10 (AddZeroClass.toAdd.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)))] [_inst_16 : Module.{u3, u5} T M₂ _inst_3 _inst_5] [_inst_17 : ContinuousConstSMul.{u3, u5} T M₂ _inst_10 (SMulZeroClass.toSMul.{u3, u5} T M₂ (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (SMulWithZero.toSMulZeroClass.{u3, u5} T M₂ (MonoidWithZero.toZero.{u3} T (Semiring.toMonoidWithZero.{u3} T _inst_3)) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (MulActionWithZero.toSMulWithZero.{u3, u5} T M₂ (Semiring.toMonoidWithZero.{u3} T _inst_3) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (Module.toMulActionWithZero.{u3, u5} T M₂ _inst_3 _inst_5 _inst_16))))] [_inst_18 : SMulCommClass.{u1, u3, u5} R T M₂ (SMulZeroClass.toSMul.{u1, u5} R M₂ (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (SMulWithZero.toSMulZeroClass.{u1, u5} R M₂ (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (MulActionWithZero.toSMulWithZero.{u1, u5} R M₂ (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (Module.toMulActionWithZero.{u1, u5} R M₂ _inst_1 _inst_5 _inst_6)))) (SMulZeroClass.toSMul.{u3, u5} T M₂ (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (SMulWithZero.toSMulZeroClass.{u3, u5} T M₂ (MonoidWithZero.toZero.{u3} T (Semiring.toMonoidWithZero.{u3} T _inst_3)) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (MulActionWithZero.toSMulWithZero.{u3, u5} T M₂ (Semiring.toMonoidWithZero.{u3} T _inst_3) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (Module.toMulActionWithZero.{u3, u5} T M₂ _inst_3 _inst_5 _inst_16))))] [_inst_19 : SMulCommClass.{u2, u3, u5} S T M₂ (SMulZeroClass.toSMul.{u2, u5} S M₂ (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (SMulWithZero.toSMulZeroClass.{u2, u5} S M₂ (MonoidWithZero.toZero.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_2)) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (MulActionWithZero.toSMulWithZero.{u2, u5} S M₂ (Semiring.toMonoidWithZero.{u2} S _inst_2) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (Module.toMulActionWithZero.{u2, u5} S M₂ _inst_2 _inst_5 _inst_7)))) (SMulZeroClass.toSMul.{u3, u5} T M₂ (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (SMulWithZero.toSMulZeroClass.{u3, u5} T M₂ (MonoidWithZero.toZero.{u3} T (Semiring.toMonoidWithZero.{u3} T _inst_3)) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (MulActionWithZero.toSMulWithZero.{u3, u5} T M₂ (Semiring.toMonoidWithZero.{u3} T _inst_3) (AddMonoid.toZero.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)) (Module.toMulActionWithZero.{u3, u5} T M₂ _inst_3 _inst_5 _inst_16))))], (ContinuousLinearMap.{u1, u1, u4, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_12 _inst_13 S _inst_9 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_2))) _inst_14 _inst_4) -> (LinearMap.{u3, u3, u5, max u5 u4} T T _inst_3 _inst_3 (RingHom.id.{u3} T (Semiring.toNonAssocSemiring.{u3} T _inst_3)) M₂ (ContinuousLinearMap.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6) _inst_5 (ContinuousLinearMap.addCommMonoid.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6 _inst_15) _inst_16 (ContinuousLinearMap.module.{u1, u1, u3, u4, u5} R R T _inst_1 _inst_1 _inst_3 M _inst_12 _inst_13 _inst_14 M₂ _inst_10 _inst_5 _inst_6 _inst_16 _inst_18 _inst_17 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) _inst_15))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.smul_rightₗ ContinuousLinearMap.smulRightₗₓ'. -/
/-- Given `c : E →L[𝕜] 𝕜`, `c.smul_rightₗ` is the linear map from `F` to `E →L[𝕜] F`
sending `f` to `λ e, c e • f`. See also `continuous_linear_map.smul_rightL`. -/
def smulRightₗ (c : M →L[R] S) : M₂ →ₗ[T] M →L[R] M₂
    where
  toFun := c.smul_right
  map_add' x y := by
    ext e
    apply smul_add
  map_smul' a x := by
    ext e
    dsimp
    apply smul_comm
#align continuous_linear_map.smul_rightₗ ContinuousLinearMap.smulRightₗ

/- warning: continuous_linear_map.coe_smul_rightₗ -> ContinuousLinearMap.coe_smulRightₗ is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {S : Type.{u2}} {T : Type.{u3}} {M : Type.{u4}} {M₂ : Type.{u5}} [_inst_1 : Semiring.{u1} R] [_inst_2 : Semiring.{u2} S] [_inst_3 : Semiring.{u3} T] [_inst_4 : Module.{u1, u2} R S _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_2)))] [_inst_5 : AddCommMonoid.{u5} M₂] [_inst_6 : Module.{u1, u5} R M₂ _inst_1 _inst_5] [_inst_7 : Module.{u2, u5} S M₂ _inst_2 _inst_5] [_inst_8 : IsScalarTower.{u1, u2, u5} R S M₂ (SMulZeroClass.toHasSmul.{u1, u2} R S (AddZeroClass.toHasZero.{u2} S (AddMonoid.toAddZeroClass.{u2} S (AddCommMonoid.toAddMonoid.{u2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_2)))))) (SMulWithZero.toSmulZeroClass.{u1, u2} R S (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u2} S (AddMonoid.toAddZeroClass.{u2} S (AddCommMonoid.toAddMonoid.{u2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_2)))))) (MulActionWithZero.toSMulWithZero.{u1, u2} R S (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u2} S (AddMonoid.toAddZeroClass.{u2} S (AddCommMonoid.toAddMonoid.{u2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_2)))))) (Module.toMulActionWithZero.{u1, u2} R S _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_2))) _inst_4)))) (SMulZeroClass.toHasSmul.{u2, u5} S M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u5} S M₂ (MulZeroClass.toHasZero.{u2} S (MulZeroOneClass.toMulZeroClass.{u2} S (MonoidWithZero.toMulZeroOneClass.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_2)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u5} S M₂ (Semiring.toMonoidWithZero.{u2} S _inst_2) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (Module.toMulActionWithZero.{u2, u5} S M₂ _inst_2 _inst_5 _inst_7)))) (SMulZeroClass.toHasSmul.{u1, u5} R M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (SMulWithZero.toSmulZeroClass.{u1, u5} R M₂ (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (MulActionWithZero.toSMulWithZero.{u1, u5} R M₂ (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (Module.toMulActionWithZero.{u1, u5} R M₂ _inst_1 _inst_5 _inst_6))))] [_inst_9 : TopologicalSpace.{u2} S] [_inst_10 : TopologicalSpace.{u5} M₂] [_inst_11 : ContinuousSMul.{u2, u5} S M₂ (SMulZeroClass.toHasSmul.{u2, u5} S M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u5} S M₂ (MulZeroClass.toHasZero.{u2} S (MulZeroOneClass.toMulZeroClass.{u2} S (MonoidWithZero.toMulZeroOneClass.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_2)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u5} S M₂ (Semiring.toMonoidWithZero.{u2} S _inst_2) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (Module.toMulActionWithZero.{u2, u5} S M₂ _inst_2 _inst_5 _inst_7)))) _inst_9 _inst_10] [_inst_12 : TopologicalSpace.{u4} M] [_inst_13 : AddCommMonoid.{u4} M] [_inst_14 : Module.{u1, u4} R M _inst_1 _inst_13] [_inst_15 : ContinuousAdd.{u5} M₂ _inst_10 (AddZeroClass.toHasAdd.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5)))] [_inst_16 : Module.{u3, u5} T M₂ _inst_3 _inst_5] [_inst_17 : ContinuousConstSMul.{u3, u5} T M₂ _inst_10 (SMulZeroClass.toHasSmul.{u3, u5} T M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (SMulWithZero.toSmulZeroClass.{u3, u5} T M₂ (MulZeroClass.toHasZero.{u3} T (MulZeroOneClass.toMulZeroClass.{u3} T (MonoidWithZero.toMulZeroOneClass.{u3} T (Semiring.toMonoidWithZero.{u3} T _inst_3)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (MulActionWithZero.toSMulWithZero.{u3, u5} T M₂ (Semiring.toMonoidWithZero.{u3} T _inst_3) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (Module.toMulActionWithZero.{u3, u5} T M₂ _inst_3 _inst_5 _inst_16))))] [_inst_18 : SMulCommClass.{u1, u3, u5} R T M₂ (SMulZeroClass.toHasSmul.{u1, u5} R M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (SMulWithZero.toSmulZeroClass.{u1, u5} R M₂ (MulZeroClass.toHasZero.{u1} R (MulZeroOneClass.toMulZeroClass.{u1} R (MonoidWithZero.toMulZeroOneClass.{u1} R (Semiring.toMonoidWithZero.{u1} R _inst_1)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (MulActionWithZero.toSMulWithZero.{u1, u5} R M₂ (Semiring.toMonoidWithZero.{u1} R _inst_1) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (Module.toMulActionWithZero.{u1, u5} R M₂ _inst_1 _inst_5 _inst_6)))) (SMulZeroClass.toHasSmul.{u3, u5} T M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (SMulWithZero.toSmulZeroClass.{u3, u5} T M₂ (MulZeroClass.toHasZero.{u3} T (MulZeroOneClass.toMulZeroClass.{u3} T (MonoidWithZero.toMulZeroOneClass.{u3} T (Semiring.toMonoidWithZero.{u3} T _inst_3)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (MulActionWithZero.toSMulWithZero.{u3, u5} T M₂ (Semiring.toMonoidWithZero.{u3} T _inst_3) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (Module.toMulActionWithZero.{u3, u5} T M₂ _inst_3 _inst_5 _inst_16))))] [_inst_19 : SMulCommClass.{u2, u3, u5} S T M₂ (SMulZeroClass.toHasSmul.{u2, u5} S M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u5} S M₂ (MulZeroClass.toHasZero.{u2} S (MulZeroOneClass.toMulZeroClass.{u2} S (MonoidWithZero.toMulZeroOneClass.{u2} S (Semiring.toMonoidWithZero.{u2} S _inst_2)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u5} S M₂ (Semiring.toMonoidWithZero.{u2} S _inst_2) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (Module.toMulActionWithZero.{u2, u5} S M₂ _inst_2 _inst_5 _inst_7)))) (SMulZeroClass.toHasSmul.{u3, u5} T M₂ (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (SMulWithZero.toSmulZeroClass.{u3, u5} T M₂ (MulZeroClass.toHasZero.{u3} T (MulZeroOneClass.toMulZeroClass.{u3} T (MonoidWithZero.toMulZeroOneClass.{u3} T (Semiring.toMonoidWithZero.{u3} T _inst_3)))) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (MulActionWithZero.toSMulWithZero.{u3, u5} T M₂ (Semiring.toMonoidWithZero.{u3} T _inst_3) (AddZeroClass.toHasZero.{u5} M₂ (AddMonoid.toAddZeroClass.{u5} M₂ (AddCommMonoid.toAddMonoid.{u5} M₂ _inst_5))) (Module.toMulActionWithZero.{u3, u5} T M₂ _inst_3 _inst_5 _inst_16))))] (c : ContinuousLinearMap.{u1, u1, u4, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_12 _inst_13 S _inst_9 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} S (Semiring.toNonAssocSemiring.{u2} S _inst_2))) _inst_14 _inst_4), Eq.{max (succ u5) (succ (max u4 u5))} (M₂ -> (ContinuousLinearMap.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6)) (coeFn.{max (succ u5) (succ (max u4 u5)), max (succ u5) (succ (max u4 u5))} (LinearMap.{u3, u3, u5, max u4 u5} T T _inst_3 _inst_3 (RingHom.id.{u3} T (Semiring.toNonAssocSemiring.{u3} T _inst_3)) M₂ (ContinuousLinearMap.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6) _inst_5 (ContinuousLinearMap.addCommMonoid.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6 _inst_15) _inst_16 (ContinuousLinearMap.module.{u1, u1, u3, u4, u5} R R T _inst_1 _inst_1 _inst_3 M _inst_12 _inst_13 _inst_14 M₂ _inst_10 _inst_5 _inst_6 _inst_16 _inst_18 _inst_17 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) _inst_15)) (fun (_x : LinearMap.{u3, u3, u5, max u4 u5} T T _inst_3 _inst_3 (RingHom.id.{u3} T (Semiring.toNonAssocSemiring.{u3} T _inst_3)) M₂ (ContinuousLinearMap.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6) _inst_5 (ContinuousLinearMap.addCommMonoid.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6 _inst_15) _inst_16 (ContinuousLinearMap.module.{u1, u1, u3, u4, u5} R R T _inst_1 _inst_1 _inst_3 M _inst_12 _inst_13 _inst_14 M₂ _inst_10 _inst_5 _inst_6 _inst_16 _inst_18 _inst_17 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) _inst_15)) => M₂ -> (ContinuousLinearMap.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6)) (LinearMap.hasCoeToFun.{u3, u3, u5, max u4 u5} T T M₂ (ContinuousLinearMap.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6) _inst_3 _inst_3 _inst_5 (ContinuousLinearMap.addCommMonoid.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6 _inst_15) _inst_16 (ContinuousLinearMap.module.{u1, u1, u3, u4, u5} R R T _inst_1 _inst_1 _inst_3 M _inst_12 _inst_13 _inst_14 M₂ _inst_10 _inst_5 _inst_6 _inst_16 _inst_18 _inst_17 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) _inst_15) (RingHom.id.{u3} T (Semiring.toNonAssocSemiring.{u3} T _inst_3))) (ContinuousLinearMap.smulRightₗ.{u1, u2, u3, u4, u5} R S T M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 _inst_8 _inst_9 _inst_10 _inst_11 _inst_12 _inst_13 _inst_14 _inst_15 _inst_16 _inst_17 _inst_18 _inst_19 c)) (ContinuousLinearMap.smulRight.{u4, u5, u1, u2} M _inst_12 _inst_13 M₂ _inst_10 _inst_5 R S _inst_1 _inst_2 _inst_14 _inst_6 _inst_4 _inst_7 _inst_8 _inst_9 _inst_11 c)
but is expected to have type
  forall {R : Type.{u5}} {S : Type.{u3}} {T : Type.{u1}} {M : Type.{u4}} {M₂ : Type.{u2}} [_inst_1 : Semiring.{u5} R] [_inst_2 : Semiring.{u3} S] [_inst_3 : Semiring.{u1} T] [_inst_4 : Module.{u5, u3} R S _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u3} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u3} S (Semiring.toNonAssocSemiring.{u3} S _inst_2)))] [_inst_5 : AddCommMonoid.{u2} M₂] [_inst_6 : Module.{u5, u2} R M₂ _inst_1 _inst_5] [_inst_7 : Module.{u3, u2} S M₂ _inst_2 _inst_5] [_inst_8 : IsScalarTower.{u5, u3, u2} R S M₂ (SMulZeroClass.toSMul.{u5, u3} R S (MonoidWithZero.toZero.{u3} S (Semiring.toMonoidWithZero.{u3} S _inst_2)) (SMulWithZero.toSMulZeroClass.{u5, u3} R S (MonoidWithZero.toZero.{u5} R (Semiring.toMonoidWithZero.{u5} R _inst_1)) (MonoidWithZero.toZero.{u3} S (Semiring.toMonoidWithZero.{u3} S _inst_2)) (MulActionWithZero.toSMulWithZero.{u5, u3} R S (Semiring.toMonoidWithZero.{u5} R _inst_1) (MonoidWithZero.toZero.{u3} S (Semiring.toMonoidWithZero.{u3} S _inst_2)) (Module.toMulActionWithZero.{u5, u3} R S _inst_1 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u3} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u3} S (Semiring.toNonAssocSemiring.{u3} S _inst_2))) _inst_4)))) (SMulZeroClass.toSMul.{u3, u2} S M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (SMulWithZero.toSMulZeroClass.{u3, u2} S M₂ (MonoidWithZero.toZero.{u3} S (Semiring.toMonoidWithZero.{u3} S _inst_2)) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (MulActionWithZero.toSMulWithZero.{u3, u2} S M₂ (Semiring.toMonoidWithZero.{u3} S _inst_2) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (Module.toMulActionWithZero.{u3, u2} S M₂ _inst_2 _inst_5 _inst_7)))) (SMulZeroClass.toSMul.{u5, u2} R M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (SMulWithZero.toSMulZeroClass.{u5, u2} R M₂ (MonoidWithZero.toZero.{u5} R (Semiring.toMonoidWithZero.{u5} R _inst_1)) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (MulActionWithZero.toSMulWithZero.{u5, u2} R M₂ (Semiring.toMonoidWithZero.{u5} R _inst_1) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (Module.toMulActionWithZero.{u5, u2} R M₂ _inst_1 _inst_5 _inst_6))))] [_inst_9 : TopologicalSpace.{u3} S] [_inst_10 : TopologicalSpace.{u2} M₂] [_inst_11 : ContinuousSMul.{u3, u2} S M₂ (SMulZeroClass.toSMul.{u3, u2} S M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (SMulWithZero.toSMulZeroClass.{u3, u2} S M₂ (MonoidWithZero.toZero.{u3} S (Semiring.toMonoidWithZero.{u3} S _inst_2)) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (MulActionWithZero.toSMulWithZero.{u3, u2} S M₂ (Semiring.toMonoidWithZero.{u3} S _inst_2) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (Module.toMulActionWithZero.{u3, u2} S M₂ _inst_2 _inst_5 _inst_7)))) _inst_9 _inst_10] [_inst_12 : TopologicalSpace.{u4} M] [_inst_13 : AddCommMonoid.{u4} M] [_inst_14 : Module.{u5, u4} R M _inst_1 _inst_13] [_inst_15 : ContinuousAdd.{u2} M₂ _inst_10 (AddZeroClass.toAdd.{u2} M₂ (AddMonoid.toAddZeroClass.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)))] [_inst_16 : Module.{u1, u2} T M₂ _inst_3 _inst_5] [_inst_17 : ContinuousConstSMul.{u1, u2} T M₂ _inst_10 (SMulZeroClass.toSMul.{u1, u2} T M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (SMulWithZero.toSMulZeroClass.{u1, u2} T M₂ (MonoidWithZero.toZero.{u1} T (Semiring.toMonoidWithZero.{u1} T _inst_3)) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (MulActionWithZero.toSMulWithZero.{u1, u2} T M₂ (Semiring.toMonoidWithZero.{u1} T _inst_3) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (Module.toMulActionWithZero.{u1, u2} T M₂ _inst_3 _inst_5 _inst_16))))] [_inst_18 : SMulCommClass.{u5, u1, u2} R T M₂ (SMulZeroClass.toSMul.{u5, u2} R M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (SMulWithZero.toSMulZeroClass.{u5, u2} R M₂ (MonoidWithZero.toZero.{u5} R (Semiring.toMonoidWithZero.{u5} R _inst_1)) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (MulActionWithZero.toSMulWithZero.{u5, u2} R M₂ (Semiring.toMonoidWithZero.{u5} R _inst_1) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (Module.toMulActionWithZero.{u5, u2} R M₂ _inst_1 _inst_5 _inst_6)))) (SMulZeroClass.toSMul.{u1, u2} T M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (SMulWithZero.toSMulZeroClass.{u1, u2} T M₂ (MonoidWithZero.toZero.{u1} T (Semiring.toMonoidWithZero.{u1} T _inst_3)) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (MulActionWithZero.toSMulWithZero.{u1, u2} T M₂ (Semiring.toMonoidWithZero.{u1} T _inst_3) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (Module.toMulActionWithZero.{u1, u2} T M₂ _inst_3 _inst_5 _inst_16))))] [_inst_19 : SMulCommClass.{u3, u1, u2} S T M₂ (SMulZeroClass.toSMul.{u3, u2} S M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (SMulWithZero.toSMulZeroClass.{u3, u2} S M₂ (MonoidWithZero.toZero.{u3} S (Semiring.toMonoidWithZero.{u3} S _inst_2)) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (MulActionWithZero.toSMulWithZero.{u3, u2} S M₂ (Semiring.toMonoidWithZero.{u3} S _inst_2) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (Module.toMulActionWithZero.{u3, u2} S M₂ _inst_2 _inst_5 _inst_7)))) (SMulZeroClass.toSMul.{u1, u2} T M₂ (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (SMulWithZero.toSMulZeroClass.{u1, u2} T M₂ (MonoidWithZero.toZero.{u1} T (Semiring.toMonoidWithZero.{u1} T _inst_3)) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (MulActionWithZero.toSMulWithZero.{u1, u2} T M₂ (Semiring.toMonoidWithZero.{u1} T _inst_3) (AddMonoid.toZero.{u2} M₂ (AddCommMonoid.toAddMonoid.{u2} M₂ _inst_5)) (Module.toMulActionWithZero.{u1, u2} T M₂ _inst_3 _inst_5 _inst_16))))] (c : ContinuousLinearMap.{u5, u5, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_12 _inst_13 S _inst_9 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u3} S (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u3} S (Semiring.toNonAssocSemiring.{u3} S _inst_2))) _inst_14 _inst_4), Eq.{max (succ u4) (succ u2)} (forall (ᾰ : M₂), (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₂) => ContinuousLinearMap.{u5, u5, u4, u2} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6) ᾰ) (FunLike.coe.{max (succ u4) (succ u2), succ u2, max (succ u4) (succ u2)} (LinearMap.{u1, u1, u2, max u2 u4} T T _inst_3 _inst_3 (RingHom.id.{u1} T (Semiring.toNonAssocSemiring.{u1} T _inst_3)) M₂ (ContinuousLinearMap.{u5, u5, u4, u2} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6) _inst_5 (ContinuousLinearMap.addCommMonoid.{u5, u5, u4, u2} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6 _inst_15) _inst_16 (ContinuousLinearMap.module.{u5, u5, u1, u4, u2} R R T _inst_1 _inst_1 _inst_3 M _inst_12 _inst_13 _inst_14 M₂ _inst_10 _inst_5 _inst_6 _inst_16 _inst_18 _inst_17 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) _inst_15)) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M₂) => ContinuousLinearMap.{u5, u5, u4, u2} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, max u4 u2} T T M₂ (ContinuousLinearMap.{u5, u5, u4, u2} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6) _inst_3 _inst_3 _inst_5 (ContinuousLinearMap.addCommMonoid.{u5, u5, u4, u2} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_12 _inst_13 M₂ _inst_10 _inst_5 _inst_14 _inst_6 _inst_15) _inst_16 (ContinuousLinearMap.module.{u5, u5, u1, u4, u2} R R T _inst_1 _inst_1 _inst_3 M _inst_12 _inst_13 _inst_14 M₂ _inst_10 _inst_5 _inst_6 _inst_16 _inst_18 _inst_17 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) _inst_15) (RingHom.id.{u1} T (Semiring.toNonAssocSemiring.{u1} T _inst_3))) (ContinuousLinearMap.smulRightₗ.{u5, u3, u1, u4, u2} R S T M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 _inst_8 _inst_9 _inst_10 _inst_11 _inst_12 _inst_13 _inst_14 _inst_15 _inst_16 _inst_17 _inst_18 _inst_19 c)) (ContinuousLinearMap.smulRight.{u4, u2, u5, u3} M _inst_12 _inst_13 M₂ _inst_10 _inst_5 R S _inst_1 _inst_2 _inst_14 _inst_6 _inst_4 _inst_7 _inst_8 _inst_9 _inst_11 c)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_smul_rightₗ ContinuousLinearMap.coe_smulRightₗₓ'. -/
@[simp]
theorem coe_smulRightₗ (c : M →L[R] S) : ⇑(smulRightₗ c : M₂ →ₗ[T] M →L[R] M₂) = c.smul_right :=
  rfl
#align continuous_linear_map.coe_smul_rightₗ ContinuousLinearMap.coe_smulRightₗ

end SmulRightₗ

section CommRing

variable {R : Type _} [CommRing R] {M : Type _} [TopologicalSpace M] [AddCommGroup M] {M₂ : Type _}
  [TopologicalSpace M₂] [AddCommGroup M₂] {M₃ : Type _} [TopologicalSpace M₃] [AddCommGroup M₃]
  [Module R M] [Module R M₂] [Module R M₃] [ContinuousConstSMul R M₃]

variable [TopologicalAddGroup M₂] [ContinuousConstSMul R M₂]

instance : Algebra R (M₂ →L[R] M₂) :=
  Algebra.ofModule smul_comp fun _ _ _ => comp_smul _ _ _

end CommRing

section RestrictScalars

variable {A M M₂ : Type _} [Ring A] [AddCommGroup M] [AddCommGroup M₂] [Module A M] [Module A M₂]
  [TopologicalSpace M] [TopologicalSpace M₂] (R : Type _) [Ring R] [Module R M] [Module R M₂]
  [LinearMap.CompatibleSMul M M₂ R A]

#print ContinuousLinearMap.restrictScalars /-
/-- If `A` is an `R`-algebra, then a continuous `A`-linear map can be interpreted as a continuous
`R`-linear map. We assume `linear_map.compatible_smul M M₂ R A` to match assumptions of
`linear_map.map_smul_of_tower`. -/
def restrictScalars (f : M →L[A] M₂) : M →L[R] M₂ :=
  ⟨(f : M →ₗ[A] M₂).restrictScalars R, f.Continuous⟩
#align continuous_linear_map.restrict_scalars ContinuousLinearMap.restrictScalars
-/

variable {R}

/- warning: continuous_linear_map.coe_restrict_scalars -> ContinuousLinearMap.coe_restrictScalars is a dubious translation:
lean 3 declaration is
  forall {A : Type.{u1}} {M : Type.{u2}} {M₂ : Type.{u3}} [_inst_1 : Ring.{u1} A] [_inst_2 : AddCommGroup.{u2} M] [_inst_3 : AddCommGroup.{u3} M₂] [_inst_4 : Module.{u1, u2} A M (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)] [_inst_5 : Module.{u1, u3} A M₂ (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_6 : TopologicalSpace.{u2} M] [_inst_7 : TopologicalSpace.{u3} M₂] {R : Type.{u4}} [_inst_8 : Ring.{u4} R] [_inst_9 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)] [_inst_10 : Module.{u4, u3} R M₂ (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_11 : LinearMap.CompatibleSMul.{u2, u3, u4, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) R A (Ring.toSemiring.{u1} A _inst_1) (SMulZeroClass.toHasSmul.{u4, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (SMulWithZero.toSmulZeroClass.{u4, u2} R M (MulZeroClass.toHasZero.{u4} R (MulZeroOneClass.toMulZeroClass.{u4} R (MonoidWithZero.toMulZeroOneClass.{u4} R (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8))))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (MulActionWithZero.toSMulWithZero.{u4, u2} R M (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8)) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (Module.toMulActionWithZero.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_9)))) _inst_4 (SMulZeroClass.toHasSmul.{u4, u3} R M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u4, u3} R M₂ (MulZeroClass.toHasZero.{u4} R (MulZeroOneClass.toMulZeroClass.{u4} R (MonoidWithZero.toMulZeroOneClass.{u4} R (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u4, u3} R M₂ (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u4, u3} R M₂ (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_10)))) _inst_5] (f : ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5), Eq.{max (succ u2) (succ u3)} (LinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) ((fun (a : Sort.{max (succ u2) (succ u3)}) (b : Sort.{max (succ u2) (succ u3)}) [self : HasLiftT.{max (succ u2) (succ u3), max (succ u2) (succ u3)} a b] => self.0) (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (LinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (HasLiftT.mk.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (LinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (CoeTCₓ.coe.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (LinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (coeBase.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (LinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.LinearMap.coe.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10)))) (ContinuousLinearMap.restrictScalars.{u1, u2, u3, u4} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 f)) (LinearMap.restrictScalars.{u4, u1, u2, u3} R A M M₂ (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10 _inst_4 _inst_5 _inst_11 ((fun (a : Sort.{max (succ u2) (succ u3)}) (b : Sort.{max (succ u2) (succ u3)}) [self : HasLiftT.{max (succ u2) (succ u3), max (succ u2) (succ u3)} a b] => self.0) (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (LinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (HasLiftT.mk.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (LinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (CoeTCₓ.coe.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (LinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (coeBase.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (LinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.LinearMap.coe.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5)))) f))
but is expected to have type
  forall {A : Type.{u4}} {M : Type.{u3}} {M₂ : Type.{u2}} [_inst_1 : Ring.{u4} A] [_inst_2 : AddCommGroup.{u3} M] [_inst_3 : AddCommGroup.{u2} M₂] [_inst_4 : Module.{u4, u3} A M (Ring.toSemiring.{u4} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_2)] [_inst_5 : Module.{u4, u2} A M₂ (Ring.toSemiring.{u4} A _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3)] [_inst_6 : TopologicalSpace.{u3} M] [_inst_7 : TopologicalSpace.{u2} M₂] {R : Type.{u1}} [_inst_8 : Ring.{u1} R] [_inst_9 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M _inst_2)] [_inst_10 : Module.{u1, u2} R M₂ (Ring.toSemiring.{u1} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3)] [_inst_11 : LinearMap.CompatibleSMul.{u3, u2, u1, u4} M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) R A (Ring.toSemiring.{u4} A _inst_1) (SMulZeroClass.toSMul.{u1, u3} R M (NegZeroClass.toZero.{u3} M (SubNegZeroMonoid.toNegZeroClass.{u3} M (SubtractionMonoid.toSubNegZeroMonoid.{u3} M (SubtractionCommMonoid.toSubtractionMonoid.{u3} M (AddCommGroup.toDivisionAddCommMonoid.{u3} M _inst_2))))) (SMulWithZero.toSMulZeroClass.{u1, u3} R M (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_8))) (NegZeroClass.toZero.{u3} M (SubNegZeroMonoid.toNegZeroClass.{u3} M (SubtractionMonoid.toSubNegZeroMonoid.{u3} M (SubtractionCommMonoid.toSubtractionMonoid.{u3} M (AddCommGroup.toDivisionAddCommMonoid.{u3} M _inst_2))))) (MulActionWithZero.toSMulWithZero.{u1, u3} R M (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_8)) (NegZeroClass.toZero.{u3} M (SubNegZeroMonoid.toNegZeroClass.{u3} M (SubtractionMonoid.toSubNegZeroMonoid.{u3} M (SubtractionCommMonoid.toSubtractionMonoid.{u3} M (AddCommGroup.toDivisionAddCommMonoid.{u3} M _inst_2))))) (Module.toMulActionWithZero.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) _inst_9)))) _inst_4 (SMulZeroClass.toSMul.{u1, u2} R M₂ (NegZeroClass.toZero.{u2} M₂ (SubNegZeroMonoid.toNegZeroClass.{u2} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u2} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u1, u2} R M₂ (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_8))) (NegZeroClass.toZero.{u2} M₂ (SubNegZeroMonoid.toNegZeroClass.{u2} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u2} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M₂ (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_8)) (NegZeroClass.toZero.{u2} M₂ (SubNegZeroMonoid.toNegZeroClass.{u2} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u2} M₂ _inst_3))))) (Module.toMulActionWithZero.{u1, u2} R M₂ (Ring.toSemiring.{u1} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_10)))) _inst_5] (f : ContinuousLinearMap.{u4, u4, u3, u2} A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5), Eq.{max (succ u3) (succ u2)} (LinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_8) (Ring.toSemiring.{u1} R _inst_8) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_8))) M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.toLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_8) (Ring.toSemiring.{u1} R _inst_8) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_9 _inst_10 (ContinuousLinearMap.restrictScalars.{u4, u3, u2, u1} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 f)) (LinearMap.restrictScalars.{u1, u4, u3, u2} R A M M₂ (Ring.toSemiring.{u1} R _inst_8) (Ring.toSemiring.{u4} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_9 _inst_10 _inst_4 _inst_5 _inst_11 (ContinuousLinearMap.toLinearMap.{u4, u4, u3, u2} A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5 f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_restrict_scalars ContinuousLinearMap.coe_restrictScalarsₓ'. -/
@[simp, norm_cast]
theorem coe_restrictScalars (f : M →L[A] M₂) :
    (f.restrictScalars R : M →ₗ[R] M₂) = (f : M →ₗ[A] M₂).restrictScalars R :=
  rfl
#align continuous_linear_map.coe_restrict_scalars ContinuousLinearMap.coe_restrictScalars

/- warning: continuous_linear_map.coe_restrict_scalars' -> ContinuousLinearMap.coe_restrictScalars' is a dubious translation:
lean 3 declaration is
  forall {A : Type.{u1}} {M : Type.{u2}} {M₂ : Type.{u3}} [_inst_1 : Ring.{u1} A] [_inst_2 : AddCommGroup.{u2} M] [_inst_3 : AddCommGroup.{u3} M₂] [_inst_4 : Module.{u1, u2} A M (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)] [_inst_5 : Module.{u1, u3} A M₂ (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_6 : TopologicalSpace.{u2} M] [_inst_7 : TopologicalSpace.{u3} M₂] {R : Type.{u4}} [_inst_8 : Ring.{u4} R] [_inst_9 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)] [_inst_10 : Module.{u4, u3} R M₂ (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_11 : LinearMap.CompatibleSMul.{u2, u3, u4, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) R A (Ring.toSemiring.{u1} A _inst_1) (SMulZeroClass.toHasSmul.{u4, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (SMulWithZero.toSmulZeroClass.{u4, u2} R M (MulZeroClass.toHasZero.{u4} R (MulZeroOneClass.toMulZeroClass.{u4} R (MonoidWithZero.toMulZeroOneClass.{u4} R (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8))))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (MulActionWithZero.toSMulWithZero.{u4, u2} R M (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8)) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (Module.toMulActionWithZero.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_9)))) _inst_4 (SMulZeroClass.toHasSmul.{u4, u3} R M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u4, u3} R M₂ (MulZeroClass.toHasZero.{u4} R (MulZeroOneClass.toMulZeroClass.{u4} R (MonoidWithZero.toMulZeroOneClass.{u4} R (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u4, u3} R M₂ (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u4, u3} R M₂ (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_10)))) _inst_5] (f : ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5), Eq.{max (succ u2) (succ u3)} (M -> M₂) (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (fun (_x : ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) => M -> M₂) (ContinuousLinearMap.toFun.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.restrictScalars.{u1, u2, u3, u4} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 f)) (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) f)
but is expected to have type
  forall {A : Type.{u4}} {M : Type.{u3}} {M₂ : Type.{u2}} [_inst_1 : Ring.{u4} A] [_inst_2 : AddCommGroup.{u3} M] [_inst_3 : AddCommGroup.{u2} M₂] [_inst_4 : Module.{u4, u3} A M (Ring.toSemiring.{u4} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_2)] [_inst_5 : Module.{u4, u2} A M₂ (Ring.toSemiring.{u4} A _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3)] [_inst_6 : TopologicalSpace.{u3} M] [_inst_7 : TopologicalSpace.{u2} M₂] {R : Type.{u1}} [_inst_8 : Ring.{u1} R] [_inst_9 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M _inst_2)] [_inst_10 : Module.{u1, u2} R M₂ (Ring.toSemiring.{u1} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3)] [_inst_11 : LinearMap.CompatibleSMul.{u3, u2, u1, u4} M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) R A (Ring.toSemiring.{u4} A _inst_1) (SMulZeroClass.toSMul.{u1, u3} R M (NegZeroClass.toZero.{u3} M (SubNegZeroMonoid.toNegZeroClass.{u3} M (SubtractionMonoid.toSubNegZeroMonoid.{u3} M (SubtractionCommMonoid.toSubtractionMonoid.{u3} M (AddCommGroup.toDivisionAddCommMonoid.{u3} M _inst_2))))) (SMulWithZero.toSMulZeroClass.{u1, u3} R M (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_8))) (NegZeroClass.toZero.{u3} M (SubNegZeroMonoid.toNegZeroClass.{u3} M (SubtractionMonoid.toSubNegZeroMonoid.{u3} M (SubtractionCommMonoid.toSubtractionMonoid.{u3} M (AddCommGroup.toDivisionAddCommMonoid.{u3} M _inst_2))))) (MulActionWithZero.toSMulWithZero.{u1, u3} R M (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_8)) (NegZeroClass.toZero.{u3} M (SubNegZeroMonoid.toNegZeroClass.{u3} M (SubtractionMonoid.toSubNegZeroMonoid.{u3} M (SubtractionCommMonoid.toSubtractionMonoid.{u3} M (AddCommGroup.toDivisionAddCommMonoid.{u3} M _inst_2))))) (Module.toMulActionWithZero.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) _inst_9)))) _inst_4 (SMulZeroClass.toSMul.{u1, u2} R M₂ (NegZeroClass.toZero.{u2} M₂ (SubNegZeroMonoid.toNegZeroClass.{u2} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u2} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u1, u2} R M₂ (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_8))) (NegZeroClass.toZero.{u2} M₂ (SubNegZeroMonoid.toNegZeroClass.{u2} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u2} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M₂ (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_8)) (NegZeroClass.toZero.{u2} M₂ (SubNegZeroMonoid.toNegZeroClass.{u2} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u2} M₂ _inst_3))))) (Module.toMulActionWithZero.{u1, u2} R M₂ (Ring.toSemiring.{u1} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_10)))) _inst_5] (f : ContinuousLinearMap.{u4, u4, u3, u2} A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5), Eq.{max (succ u3) (succ u2)} (forall (ᾰ : M), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) ᾰ) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_8) (Ring.toSemiring.{u1} R _inst_8) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_9 _inst_10) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_8) (Ring.toSemiring.{u1} R _inst_8) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_9 _inst_10) M M₂ _inst_6 _inst_7 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u1, u1, u3, u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_8) (Ring.toSemiring.{u1} R _inst_8) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_9 _inst_10) R R (Ring.toSemiring.{u1} R _inst_8) (Ring.toSemiring.{u1} R _inst_8) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_9 _inst_10 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_8) (Ring.toSemiring.{u1} R _inst_8) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_9 _inst_10))) (ContinuousLinearMap.restrictScalars.{u4, u3, u2, u1} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 f)) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearMap.{u4, u4, u3, u2} A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearMap.{u4, u4, u3, u2} A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5) M M₂ _inst_6 _inst_7 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u4, u4, u3, u2} (ContinuousLinearMap.{u4, u4, u3, u2} A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5) A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u4, u3, u2} A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5))) f)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_restrict_scalars' ContinuousLinearMap.coe_restrictScalars'ₓ'. -/
@[simp]
theorem coe_restrictScalars' (f : M →L[A] M₂) : ⇑(f.restrictScalars R) = f :=
  rfl
#align continuous_linear_map.coe_restrict_scalars' ContinuousLinearMap.coe_restrictScalars'

/- warning: continuous_linear_map.restrict_scalars_zero -> ContinuousLinearMap.restrictScalars_zero is a dubious translation:
lean 3 declaration is
  forall {A : Type.{u1}} {M : Type.{u2}} {M₂ : Type.{u3}} [_inst_1 : Ring.{u1} A] [_inst_2 : AddCommGroup.{u2} M] [_inst_3 : AddCommGroup.{u3} M₂] [_inst_4 : Module.{u1, u2} A M (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)] [_inst_5 : Module.{u1, u3} A M₂ (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_6 : TopologicalSpace.{u2} M] [_inst_7 : TopologicalSpace.{u3} M₂] {R : Type.{u4}} [_inst_8 : Ring.{u4} R] [_inst_9 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)] [_inst_10 : Module.{u4, u3} R M₂ (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_11 : LinearMap.CompatibleSMul.{u2, u3, u4, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) R A (Ring.toSemiring.{u1} A _inst_1) (SMulZeroClass.toHasSmul.{u4, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (SMulWithZero.toSmulZeroClass.{u4, u2} R M (MulZeroClass.toHasZero.{u4} R (MulZeroOneClass.toMulZeroClass.{u4} R (MonoidWithZero.toMulZeroOneClass.{u4} R (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8))))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (MulActionWithZero.toSMulWithZero.{u4, u2} R M (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8)) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (Module.toMulActionWithZero.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_9)))) _inst_4 (SMulZeroClass.toHasSmul.{u4, u3} R M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u4, u3} R M₂ (MulZeroClass.toHasZero.{u4} R (MulZeroOneClass.toMulZeroClass.{u4} R (MonoidWithZero.toMulZeroOneClass.{u4} R (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u4, u3} R M₂ (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u4, u3} R M₂ (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_10)))) _inst_5], Eq.{max (succ u2) (succ u3)} (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.restrictScalars.{u1, u2, u3, u4} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 (OfNat.ofNat.{max u2 u3} (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) 0 (OfNat.mk.{max u2 u3} (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) 0 (Zero.zero.{max u2 u3} (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.zero.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5))))) (OfNat.ofNat.{max u2 u3} (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) 0 (OfNat.mk.{max u2 u3} (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) 0 (Zero.zero.{max u2 u3} (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.zero.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10))))
but is expected to have type
  forall {A : Type.{u1}} {M : Type.{u4}} {M₂ : Type.{u3}} [_inst_1 : Ring.{u1} A] [_inst_2 : AddCommGroup.{u4} M] [_inst_3 : AddCommGroup.{u3} M₂] [_inst_4 : Module.{u1, u4} A M (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_2)] [_inst_5 : Module.{u1, u3} A M₂ (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_6 : TopologicalSpace.{u4} M] [_inst_7 : TopologicalSpace.{u3} M₂] {R : Type.{u2}} [_inst_8 : Ring.{u2} R] [_inst_9 : Module.{u2, u4} R M (Ring.toSemiring.{u2} R _inst_8) (AddCommGroup.toAddCommMonoid.{u4} M _inst_2)] [_inst_10 : Module.{u2, u3} R M₂ (Ring.toSemiring.{u2} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_11 : LinearMap.CompatibleSMul.{u4, u3, u2, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) R A (Ring.toSemiring.{u1} A _inst_1) (SMulZeroClass.toSMul.{u2, u4} R M (NegZeroClass.toZero.{u4} M (SubNegZeroMonoid.toNegZeroClass.{u4} M (SubtractionMonoid.toSubNegZeroMonoid.{u4} M (SubtractionCommMonoid.toSubtractionMonoid.{u4} M (AddCommGroup.toDivisionAddCommMonoid.{u4} M _inst_2))))) (SMulWithZero.toSMulZeroClass.{u2, u4} R M (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_8))) (NegZeroClass.toZero.{u4} M (SubNegZeroMonoid.toNegZeroClass.{u4} M (SubtractionMonoid.toSubNegZeroMonoid.{u4} M (SubtractionCommMonoid.toSubtractionMonoid.{u4} M (AddCommGroup.toDivisionAddCommMonoid.{u4} M _inst_2))))) (MulActionWithZero.toSMulWithZero.{u2, u4} R M (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_8)) (NegZeroClass.toZero.{u4} M (SubNegZeroMonoid.toNegZeroClass.{u4} M (SubtractionMonoid.toSubNegZeroMonoid.{u4} M (SubtractionCommMonoid.toSubtractionMonoid.{u4} M (AddCommGroup.toDivisionAddCommMonoid.{u4} M _inst_2))))) (Module.toMulActionWithZero.{u2, u4} R M (Ring.toSemiring.{u2} R _inst_8) (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) _inst_9)))) _inst_4 (SMulZeroClass.toSMul.{u2, u3} R M₂ (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u2, u3} R M₂ (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_8))) (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u2, u3} R M₂ (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_8)) (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (Module.toMulActionWithZero.{u2, u3} R M₂ (Ring.toSemiring.{u2} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_10)))) _inst_5], Eq.{max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u2, u4, u3} R R (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.restrictScalars.{u1, u4, u3, u2} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 (OfNat.ofNat.{max u4 u3} (ContinuousLinearMap.{u1, u1, u4, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) 0 (Zero.toOfNat0.{max u4 u3} (ContinuousLinearMap.{u1, u1, u4, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.zero.{u1, u1, u4, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5)))) (OfNat.ofNat.{max u4 u3} (ContinuousLinearMap.{u2, u2, u4, u3} R R (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) 0 (Zero.toOfNat0.{max u4 u3} (ContinuousLinearMap.{u2, u2, u4, u3} R R (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.zero.{u2, u2, u4, u3} R R (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.restrict_scalars_zero ContinuousLinearMap.restrictScalars_zeroₓ'. -/
@[simp]
theorem restrictScalars_zero : (0 : M →L[A] M₂).restrictScalars R = 0 :=
  rfl
#align continuous_linear_map.restrict_scalars_zero ContinuousLinearMap.restrictScalars_zero

section

variable [TopologicalAddGroup M₂]

/- warning: continuous_linear_map.restrict_scalars_add -> ContinuousLinearMap.restrictScalars_add is a dubious translation:
lean 3 declaration is
  forall {A : Type.{u1}} {M : Type.{u2}} {M₂ : Type.{u3}} [_inst_1 : Ring.{u1} A] [_inst_2 : AddCommGroup.{u2} M] [_inst_3 : AddCommGroup.{u3} M₂] [_inst_4 : Module.{u1, u2} A M (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)] [_inst_5 : Module.{u1, u3} A M₂ (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_6 : TopologicalSpace.{u2} M] [_inst_7 : TopologicalSpace.{u3} M₂] {R : Type.{u4}} [_inst_8 : Ring.{u4} R] [_inst_9 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)] [_inst_10 : Module.{u4, u3} R M₂ (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_11 : LinearMap.CompatibleSMul.{u2, u3, u4, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) R A (Ring.toSemiring.{u1} A _inst_1) (SMulZeroClass.toHasSmul.{u4, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (SMulWithZero.toSmulZeroClass.{u4, u2} R M (MulZeroClass.toHasZero.{u4} R (MulZeroOneClass.toMulZeroClass.{u4} R (MonoidWithZero.toMulZeroOneClass.{u4} R (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8))))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (MulActionWithZero.toSMulWithZero.{u4, u2} R M (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8)) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (Module.toMulActionWithZero.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_9)))) _inst_4 (SMulZeroClass.toHasSmul.{u4, u3} R M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u4, u3} R M₂ (MulZeroClass.toHasZero.{u4} R (MulZeroOneClass.toMulZeroClass.{u4} R (MonoidWithZero.toMulZeroOneClass.{u4} R (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u4, u3} R M₂ (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u4, u3} R M₂ (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_10)))) _inst_5] [_inst_12 : TopologicalAddGroup.{u3} M₂ _inst_7 (AddCommGroup.toAddGroup.{u3} M₂ _inst_3)] (f : ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (g : ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5), Eq.{max (succ u2) (succ u3)} (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.restrictScalars.{u1, u2, u3, u4} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 (HAdd.hAdd.{max u2 u3, max u2 u3, max u2 u3} (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (instHAdd.{max u2 u3} (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.add.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5 (TopologicalAddGroup.to_continuousAdd.{u3} M₂ _inst_7 (AddCommGroup.toAddGroup.{u3} M₂ _inst_3) _inst_12))) f g)) (HAdd.hAdd.{max u2 u3, max u2 u3, max u2 u3} (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (instHAdd.{max u2 u3} (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.add.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10 (TopologicalAddGroup.to_continuousAdd.{u3} M₂ _inst_7 (AddCommGroup.toAddGroup.{u3} M₂ _inst_3) _inst_12))) (ContinuousLinearMap.restrictScalars.{u1, u2, u3, u4} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 f) (ContinuousLinearMap.restrictScalars.{u1, u2, u3, u4} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 g))
but is expected to have type
  forall {A : Type.{u4}} {M : Type.{u3}} {M₂ : Type.{u2}} [_inst_1 : Ring.{u4} A] [_inst_2 : AddCommGroup.{u3} M] [_inst_3 : AddCommGroup.{u2} M₂] [_inst_4 : Module.{u4, u3} A M (Ring.toSemiring.{u4} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_2)] [_inst_5 : Module.{u4, u2} A M₂ (Ring.toSemiring.{u4} A _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3)] [_inst_6 : TopologicalSpace.{u3} M] [_inst_7 : TopologicalSpace.{u2} M₂] {R : Type.{u1}} [_inst_8 : Ring.{u1} R] [_inst_9 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M _inst_2)] [_inst_10 : Module.{u1, u2} R M₂ (Ring.toSemiring.{u1} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3)] [_inst_11 : LinearMap.CompatibleSMul.{u3, u2, u1, u4} M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) R A (Ring.toSemiring.{u4} A _inst_1) (SMulZeroClass.toSMul.{u1, u3} R M (NegZeroClass.toZero.{u3} M (SubNegZeroMonoid.toNegZeroClass.{u3} M (SubtractionMonoid.toSubNegZeroMonoid.{u3} M (SubtractionCommMonoid.toSubtractionMonoid.{u3} M (AddCommGroup.toDivisionAddCommMonoid.{u3} M _inst_2))))) (SMulWithZero.toSMulZeroClass.{u1, u3} R M (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_8))) (NegZeroClass.toZero.{u3} M (SubNegZeroMonoid.toNegZeroClass.{u3} M (SubtractionMonoid.toSubNegZeroMonoid.{u3} M (SubtractionCommMonoid.toSubtractionMonoid.{u3} M (AddCommGroup.toDivisionAddCommMonoid.{u3} M _inst_2))))) (MulActionWithZero.toSMulWithZero.{u1, u3} R M (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_8)) (NegZeroClass.toZero.{u3} M (SubNegZeroMonoid.toNegZeroClass.{u3} M (SubtractionMonoid.toSubNegZeroMonoid.{u3} M (SubtractionCommMonoid.toSubtractionMonoid.{u3} M (AddCommGroup.toDivisionAddCommMonoid.{u3} M _inst_2))))) (Module.toMulActionWithZero.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) _inst_9)))) _inst_4 (SMulZeroClass.toSMul.{u1, u2} R M₂ (NegZeroClass.toZero.{u2} M₂ (SubNegZeroMonoid.toNegZeroClass.{u2} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u2} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u1, u2} R M₂ (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_8))) (NegZeroClass.toZero.{u2} M₂ (SubNegZeroMonoid.toNegZeroClass.{u2} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u2} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M₂ (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_8)) (NegZeroClass.toZero.{u2} M₂ (SubNegZeroMonoid.toNegZeroClass.{u2} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u2} M₂ _inst_3))))) (Module.toMulActionWithZero.{u1, u2} R M₂ (Ring.toSemiring.{u1} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_10)))) _inst_5] [_inst_12 : TopologicalAddGroup.{u2} M₂ _inst_7 (AddCommGroup.toAddGroup.{u2} M₂ _inst_3)] (f : ContinuousLinearMap.{u4, u4, u3, u2} A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5) (g : ContinuousLinearMap.{u4, u4, u3, u2} A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5), Eq.{max (succ u3) (succ u2)} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_8) (Ring.toSemiring.{u1} R _inst_8) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.restrictScalars.{u4, u3, u2, u1} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 (HAdd.hAdd.{max u3 u2, max u3 u2, max u3 u2} (ContinuousLinearMap.{u4, u4, u3, u2} A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.{u4, u4, u3, u2} A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.{u4, u4, u3, u2} A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5) (instHAdd.{max u3 u2} (ContinuousLinearMap.{u4, u4, u3, u2} A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.add.{u4, u4, u3, u2} A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5 (TopologicalAddGroup.toContinuousAdd.{u2} M₂ _inst_7 (AddCommGroup.toAddGroup.{u2} M₂ _inst_3) _inst_12))) f g)) (HAdd.hAdd.{max u3 u2, max u3 u2, max u3 u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_8) (Ring.toSemiring.{u1} R _inst_8) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_8) (Ring.toSemiring.{u1} R _inst_8) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_8) (Ring.toSemiring.{u1} R _inst_8) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_9 _inst_10) (instHAdd.{max u3 u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_8) (Ring.toSemiring.{u1} R _inst_8) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.add.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_8) (Ring.toSemiring.{u1} R _inst_8) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_9 _inst_10 (TopologicalAddGroup.toContinuousAdd.{u2} M₂ _inst_7 (AddCommGroup.toAddGroup.{u2} M₂ _inst_3) _inst_12))) (ContinuousLinearMap.restrictScalars.{u4, u3, u2, u1} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 f) (ContinuousLinearMap.restrictScalars.{u4, u3, u2, u1} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 g))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.restrict_scalars_add ContinuousLinearMap.restrictScalars_addₓ'. -/
@[simp]
theorem restrictScalars_add (f g : M →L[A] M₂) :
    (f + g).restrictScalars R = f.restrictScalars R + g.restrictScalars R :=
  rfl
#align continuous_linear_map.restrict_scalars_add ContinuousLinearMap.restrictScalars_add

/- warning: continuous_linear_map.restrict_scalars_neg -> ContinuousLinearMap.restrictScalars_neg is a dubious translation:
lean 3 declaration is
  forall {A : Type.{u1}} {M : Type.{u2}} {M₂ : Type.{u3}} [_inst_1 : Ring.{u1} A] [_inst_2 : AddCommGroup.{u2} M] [_inst_3 : AddCommGroup.{u3} M₂] [_inst_4 : Module.{u1, u2} A M (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)] [_inst_5 : Module.{u1, u3} A M₂ (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_6 : TopologicalSpace.{u2} M] [_inst_7 : TopologicalSpace.{u3} M₂] {R : Type.{u4}} [_inst_8 : Ring.{u4} R] [_inst_9 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)] [_inst_10 : Module.{u4, u3} R M₂ (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_11 : LinearMap.CompatibleSMul.{u2, u3, u4, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) R A (Ring.toSemiring.{u1} A _inst_1) (SMulZeroClass.toHasSmul.{u4, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (SMulWithZero.toSmulZeroClass.{u4, u2} R M (MulZeroClass.toHasZero.{u4} R (MulZeroOneClass.toMulZeroClass.{u4} R (MonoidWithZero.toMulZeroOneClass.{u4} R (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8))))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (MulActionWithZero.toSMulWithZero.{u4, u2} R M (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8)) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (Module.toMulActionWithZero.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_9)))) _inst_4 (SMulZeroClass.toHasSmul.{u4, u3} R M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u4, u3} R M₂ (MulZeroClass.toHasZero.{u4} R (MulZeroOneClass.toMulZeroClass.{u4} R (MonoidWithZero.toMulZeroOneClass.{u4} R (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u4, u3} R M₂ (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u4, u3} R M₂ (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_10)))) _inst_5] [_inst_12 : TopologicalAddGroup.{u3} M₂ _inst_7 (AddCommGroup.toAddGroup.{u3} M₂ _inst_3)] (f : ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5), Eq.{max (succ u2) (succ u3)} (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.restrictScalars.{u1, u2, u3, u4} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 (Neg.neg.{max u2 u3} (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.neg.{u1, u1, u2, u3} A _inst_1 A _inst_1 M _inst_6 _inst_2 M₂ _inst_7 _inst_3 _inst_4 _inst_5 (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) _inst_12) f)) (Neg.neg.{max u2 u3} (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.neg.{u4, u4, u2, u3} R _inst_8 R _inst_8 M _inst_6 _inst_2 M₂ _inst_7 _inst_3 _inst_9 _inst_10 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) _inst_12) (ContinuousLinearMap.restrictScalars.{u1, u2, u3, u4} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 f))
but is expected to have type
  forall {A : Type.{u4}} {M : Type.{u3}} {M₂ : Type.{u2}} [_inst_1 : Ring.{u4} A] [_inst_2 : AddCommGroup.{u3} M] [_inst_3 : AddCommGroup.{u2} M₂] [_inst_4 : Module.{u4, u3} A M (Ring.toSemiring.{u4} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_2)] [_inst_5 : Module.{u4, u2} A M₂ (Ring.toSemiring.{u4} A _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3)] [_inst_6 : TopologicalSpace.{u3} M] [_inst_7 : TopologicalSpace.{u2} M₂] {R : Type.{u1}} [_inst_8 : Ring.{u1} R] [_inst_9 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M _inst_2)] [_inst_10 : Module.{u1, u2} R M₂ (Ring.toSemiring.{u1} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3)] [_inst_11 : LinearMap.CompatibleSMul.{u3, u2, u1, u4} M M₂ (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) R A (Ring.toSemiring.{u4} A _inst_1) (SMulZeroClass.toSMul.{u1, u3} R M (NegZeroClass.toZero.{u3} M (SubNegZeroMonoid.toNegZeroClass.{u3} M (SubtractionMonoid.toSubNegZeroMonoid.{u3} M (SubtractionCommMonoid.toSubtractionMonoid.{u3} M (AddCommGroup.toDivisionAddCommMonoid.{u3} M _inst_2))))) (SMulWithZero.toSMulZeroClass.{u1, u3} R M (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_8))) (NegZeroClass.toZero.{u3} M (SubNegZeroMonoid.toNegZeroClass.{u3} M (SubtractionMonoid.toSubNegZeroMonoid.{u3} M (SubtractionCommMonoid.toSubtractionMonoid.{u3} M (AddCommGroup.toDivisionAddCommMonoid.{u3} M _inst_2))))) (MulActionWithZero.toSMulWithZero.{u1, u3} R M (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_8)) (NegZeroClass.toZero.{u3} M (SubNegZeroMonoid.toNegZeroClass.{u3} M (SubtractionMonoid.toSubNegZeroMonoid.{u3} M (SubtractionCommMonoid.toSubtractionMonoid.{u3} M (AddCommGroup.toDivisionAddCommMonoid.{u3} M _inst_2))))) (Module.toMulActionWithZero.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) _inst_9)))) _inst_4 (SMulZeroClass.toSMul.{u1, u2} R M₂ (NegZeroClass.toZero.{u2} M₂ (SubNegZeroMonoid.toNegZeroClass.{u2} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u2} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u1, u2} R M₂ (MonoidWithZero.toZero.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_8))) (NegZeroClass.toZero.{u2} M₂ (SubNegZeroMonoid.toNegZeroClass.{u2} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u2} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u1, u2} R M₂ (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_8)) (NegZeroClass.toZero.{u2} M₂ (SubNegZeroMonoid.toNegZeroClass.{u2} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u2} M₂ _inst_3))))) (Module.toMulActionWithZero.{u1, u2} R M₂ (Ring.toSemiring.{u1} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_10)))) _inst_5] [_inst_12 : TopologicalAddGroup.{u2} M₂ _inst_7 (AddCommGroup.toAddGroup.{u2} M₂ _inst_3)] (f : ContinuousLinearMap.{u4, u4, u3, u2} A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5), Eq.{max (succ u3) (succ u2)} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_8) (Ring.toSemiring.{u1} R _inst_8) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.restrictScalars.{u4, u3, u2, u1} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 (Neg.neg.{max u3 u2} (ContinuousLinearMap.{u4, u4, u3, u2} A A (Ring.toSemiring.{u4} A _inst_1) (Ring.toSemiring.{u4} A _inst_1) (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.neg.{u4, u4, u3, u2} A _inst_1 A _inst_1 M _inst_6 _inst_2 M₂ _inst_7 _inst_3 _inst_4 _inst_5 (RingHom.id.{u4} A (Semiring.toNonAssocSemiring.{u4} A (Ring.toSemiring.{u4} A _inst_1))) _inst_12) f)) (Neg.neg.{max u3 u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_8) (Ring.toSemiring.{u1} R _inst_8) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.neg.{u1, u1, u3, u2} R _inst_8 R _inst_8 M _inst_6 _inst_2 M₂ _inst_7 _inst_3 _inst_9 _inst_10 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_8))) _inst_12) (ContinuousLinearMap.restrictScalars.{u4, u3, u2, u1} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.restrict_scalars_neg ContinuousLinearMap.restrictScalars_negₓ'. -/
@[simp]
theorem restrictScalars_neg (f : M →L[A] M₂) : (-f).restrictScalars R = -f.restrictScalars R :=
  rfl
#align continuous_linear_map.restrict_scalars_neg ContinuousLinearMap.restrictScalars_neg

end

variable {S : Type _} [Ring S] [Module S M₂] [ContinuousConstSMul S M₂] [SMulCommClass A S M₂]
  [SMulCommClass R S M₂]

/- warning: continuous_linear_map.restrict_scalars_smul -> ContinuousLinearMap.restrictScalars_smul is a dubious translation:
lean 3 declaration is
  forall {A : Type.{u1}} {M : Type.{u2}} {M₂ : Type.{u3}} [_inst_1 : Ring.{u1} A] [_inst_2 : AddCommGroup.{u2} M] [_inst_3 : AddCommGroup.{u3} M₂] [_inst_4 : Module.{u1, u2} A M (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)] [_inst_5 : Module.{u1, u3} A M₂ (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_6 : TopologicalSpace.{u2} M] [_inst_7 : TopologicalSpace.{u3} M₂] {R : Type.{u4}} [_inst_8 : Ring.{u4} R] [_inst_9 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)] [_inst_10 : Module.{u4, u3} R M₂ (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_11 : LinearMap.CompatibleSMul.{u2, u3, u4, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) R A (Ring.toSemiring.{u1} A _inst_1) (SMulZeroClass.toHasSmul.{u4, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (SMulWithZero.toSmulZeroClass.{u4, u2} R M (MulZeroClass.toHasZero.{u4} R (MulZeroOneClass.toMulZeroClass.{u4} R (MonoidWithZero.toMulZeroOneClass.{u4} R (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8))))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (MulActionWithZero.toSMulWithZero.{u4, u2} R M (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8)) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (Module.toMulActionWithZero.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_9)))) _inst_4 (SMulZeroClass.toHasSmul.{u4, u3} R M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u4, u3} R M₂ (MulZeroClass.toHasZero.{u4} R (MulZeroOneClass.toMulZeroClass.{u4} R (MonoidWithZero.toMulZeroOneClass.{u4} R (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u4, u3} R M₂ (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u4, u3} R M₂ (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_10)))) _inst_5] {S : Type.{u5}} [_inst_12 : Ring.{u5} S] [_inst_13 : Module.{u5, u3} S M₂ (Ring.toSemiring.{u5} S _inst_12) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_14 : ContinuousConstSMul.{u5, u3} S M₂ _inst_7 (SMulZeroClass.toHasSmul.{u5, u3} S M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u5, u3} S M₂ (MulZeroClass.toHasZero.{u5} S (MulZeroOneClass.toMulZeroClass.{u5} S (MonoidWithZero.toMulZeroOneClass.{u5} S (Semiring.toMonoidWithZero.{u5} S (Ring.toSemiring.{u5} S _inst_12))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u5, u3} S M₂ (Semiring.toMonoidWithZero.{u5} S (Ring.toSemiring.{u5} S _inst_12)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u5, u3} S M₂ (Ring.toSemiring.{u5} S _inst_12) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_13))))] [_inst_15 : SMulCommClass.{u1, u5, u3} A S M₂ (SMulZeroClass.toHasSmul.{u1, u3} A M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u1, u3} A M₂ (MulZeroClass.toHasZero.{u1} A (MulZeroOneClass.toMulZeroClass.{u1} A (MonoidWithZero.toMulZeroOneClass.{u1} A (Semiring.toMonoidWithZero.{u1} A (Ring.toSemiring.{u1} A _inst_1))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u1, u3} A M₂ (Semiring.toMonoidWithZero.{u1} A (Ring.toSemiring.{u1} A _inst_1)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u1, u3} A M₂ (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_5)))) (SMulZeroClass.toHasSmul.{u5, u3} S M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u5, u3} S M₂ (MulZeroClass.toHasZero.{u5} S (MulZeroOneClass.toMulZeroClass.{u5} S (MonoidWithZero.toMulZeroOneClass.{u5} S (Semiring.toMonoidWithZero.{u5} S (Ring.toSemiring.{u5} S _inst_12))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u5, u3} S M₂ (Semiring.toMonoidWithZero.{u5} S (Ring.toSemiring.{u5} S _inst_12)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u5, u3} S M₂ (Ring.toSemiring.{u5} S _inst_12) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_13))))] [_inst_16 : SMulCommClass.{u4, u5, u3} R S M₂ (SMulZeroClass.toHasSmul.{u4, u3} R M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u4, u3} R M₂ (MulZeroClass.toHasZero.{u4} R (MulZeroOneClass.toMulZeroClass.{u4} R (MonoidWithZero.toMulZeroOneClass.{u4} R (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u4, u3} R M₂ (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u4, u3} R M₂ (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_10)))) (SMulZeroClass.toHasSmul.{u5, u3} S M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u5, u3} S M₂ (MulZeroClass.toHasZero.{u5} S (MulZeroOneClass.toMulZeroClass.{u5} S (MonoidWithZero.toMulZeroOneClass.{u5} S (Semiring.toMonoidWithZero.{u5} S (Ring.toSemiring.{u5} S _inst_12))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u5, u3} S M₂ (Semiring.toMonoidWithZero.{u5} S (Ring.toSemiring.{u5} S _inst_12)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u5, u3} S M₂ (Ring.toSemiring.{u5} S _inst_12) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_13))))] (c : S) (f : ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5), Eq.{max (succ u2) (succ u3)} (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.restrictScalars.{u1, u2, u3, u4} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 (SMul.smul.{u5, max u2 u3} S (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (MulAction.toHasSmul.{u5, max u2 u3} S (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (Ring.toMonoid.{u5} S _inst_12) (ContinuousLinearMap.mulAction.{u1, u1, u2, u3, u5} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5 S (Ring.toMonoid.{u5} S _inst_12) (Module.toDistribMulAction.{u5, u3} S M₂ (Ring.toSemiring.{u5} S _inst_12) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_13) _inst_15 _inst_14)) c f)) (SMul.smul.{u5, max u2 u3} S (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (MulAction.toHasSmul.{u5, max u2 u3} S (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (Ring.toMonoid.{u5} S _inst_12) (ContinuousLinearMap.mulAction.{u4, u4, u2, u3, u5} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10 S (Ring.toMonoid.{u5} S _inst_12) (Module.toDistribMulAction.{u5, u3} S M₂ (Ring.toSemiring.{u5} S _inst_12) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_13) _inst_16 _inst_14)) c (ContinuousLinearMap.restrictScalars.{u1, u2, u3, u4} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 f))
but is expected to have type
  forall {A : Type.{u5}} {M : Type.{u4}} {M₂ : Type.{u3}} [_inst_1 : Ring.{u5} A] [_inst_2 : AddCommGroup.{u4} M] [_inst_3 : AddCommGroup.{u3} M₂] [_inst_4 : Module.{u5, u4} A M (Ring.toSemiring.{u5} A _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M _inst_2)] [_inst_5 : Module.{u5, u3} A M₂ (Ring.toSemiring.{u5} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_6 : TopologicalSpace.{u4} M] [_inst_7 : TopologicalSpace.{u3} M₂] {R : Type.{u2}} [_inst_8 : Ring.{u2} R] [_inst_9 : Module.{u2, u4} R M (Ring.toSemiring.{u2} R _inst_8) (AddCommGroup.toAddCommMonoid.{u4} M _inst_2)] [_inst_10 : Module.{u2, u3} R M₂ (Ring.toSemiring.{u2} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_11 : LinearMap.CompatibleSMul.{u4, u3, u2, u5} M M₂ (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) R A (Ring.toSemiring.{u5} A _inst_1) (SMulZeroClass.toSMul.{u2, u4} R M (NegZeroClass.toZero.{u4} M (SubNegZeroMonoid.toNegZeroClass.{u4} M (SubtractionMonoid.toSubNegZeroMonoid.{u4} M (SubtractionCommMonoid.toSubtractionMonoid.{u4} M (AddCommGroup.toDivisionAddCommMonoid.{u4} M _inst_2))))) (SMulWithZero.toSMulZeroClass.{u2, u4} R M (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_8))) (NegZeroClass.toZero.{u4} M (SubNegZeroMonoid.toNegZeroClass.{u4} M (SubtractionMonoid.toSubNegZeroMonoid.{u4} M (SubtractionCommMonoid.toSubtractionMonoid.{u4} M (AddCommGroup.toDivisionAddCommMonoid.{u4} M _inst_2))))) (MulActionWithZero.toSMulWithZero.{u2, u4} R M (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_8)) (NegZeroClass.toZero.{u4} M (SubNegZeroMonoid.toNegZeroClass.{u4} M (SubtractionMonoid.toSubNegZeroMonoid.{u4} M (SubtractionCommMonoid.toSubtractionMonoid.{u4} M (AddCommGroup.toDivisionAddCommMonoid.{u4} M _inst_2))))) (Module.toMulActionWithZero.{u2, u4} R M (Ring.toSemiring.{u2} R _inst_8) (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) _inst_9)))) _inst_4 (SMulZeroClass.toSMul.{u2, u3} R M₂ (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u2, u3} R M₂ (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_8))) (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u2, u3} R M₂ (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_8)) (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (Module.toMulActionWithZero.{u2, u3} R M₂ (Ring.toSemiring.{u2} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_10)))) _inst_5] {S : Type.{u1}} [_inst_12 : Ring.{u1} S] [_inst_13 : Module.{u1, u3} S M₂ (Ring.toSemiring.{u1} S _inst_12) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_14 : ContinuousConstSMul.{u1, u3} S M₂ _inst_7 (SMulZeroClass.toSMul.{u1, u3} S M₂ (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u1, u3} S M₂ (MonoidWithZero.toZero.{u1} S (Semiring.toMonoidWithZero.{u1} S (Ring.toSemiring.{u1} S _inst_12))) (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u1, u3} S M₂ (Semiring.toMonoidWithZero.{u1} S (Ring.toSemiring.{u1} S _inst_12)) (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (Module.toMulActionWithZero.{u1, u3} S M₂ (Ring.toSemiring.{u1} S _inst_12) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_13))))] [_inst_15 : SMulCommClass.{u5, u1, u3} A S M₂ (SMulZeroClass.toSMul.{u5, u3} A M₂ (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u5, u3} A M₂ (MonoidWithZero.toZero.{u5} A (Semiring.toMonoidWithZero.{u5} A (Ring.toSemiring.{u5} A _inst_1))) (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u5, u3} A M₂ (Semiring.toMonoidWithZero.{u5} A (Ring.toSemiring.{u5} A _inst_1)) (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (Module.toMulActionWithZero.{u5, u3} A M₂ (Ring.toSemiring.{u5} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_5)))) (SMulZeroClass.toSMul.{u1, u3} S M₂ (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u1, u3} S M₂ (MonoidWithZero.toZero.{u1} S (Semiring.toMonoidWithZero.{u1} S (Ring.toSemiring.{u1} S _inst_12))) (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u1, u3} S M₂ (Semiring.toMonoidWithZero.{u1} S (Ring.toSemiring.{u1} S _inst_12)) (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (Module.toMulActionWithZero.{u1, u3} S M₂ (Ring.toSemiring.{u1} S _inst_12) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_13))))] [_inst_16 : SMulCommClass.{u2, u1, u3} R S M₂ (SMulZeroClass.toSMul.{u2, u3} R M₂ (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u2, u3} R M₂ (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_8))) (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u2, u3} R M₂ (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_8)) (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (Module.toMulActionWithZero.{u2, u3} R M₂ (Ring.toSemiring.{u2} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_10)))) (SMulZeroClass.toSMul.{u1, u3} S M₂ (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u1, u3} S M₂ (MonoidWithZero.toZero.{u1} S (Semiring.toMonoidWithZero.{u1} S (Ring.toSemiring.{u1} S _inst_12))) (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u1, u3} S M₂ (Semiring.toMonoidWithZero.{u1} S (Ring.toSemiring.{u1} S _inst_12)) (NegZeroClass.toZero.{u3} M₂ (SubNegZeroMonoid.toNegZeroClass.{u3} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u3} M₂ _inst_3))))) (Module.toMulActionWithZero.{u1, u3} S M₂ (Ring.toSemiring.{u1} S _inst_12) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_13))))] (c : S) (f : ContinuousLinearMap.{u5, u5, u4, u3} A A (Ring.toSemiring.{u5} A _inst_1) (Ring.toSemiring.{u5} A _inst_1) (RingHom.id.{u5} A (Semiring.toNonAssocSemiring.{u5} A (Ring.toSemiring.{u5} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5), Eq.{max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u2, u4, u3} R R (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.restrictScalars.{u5, u4, u3, u2} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 (HSMul.hSMul.{u1, max u3 u4, max u3 u4} S (ContinuousLinearMap.{u5, u5, u4, u3} A A (Ring.toSemiring.{u5} A _inst_1) (Ring.toSemiring.{u5} A _inst_1) (RingHom.id.{u5} A (Semiring.toNonAssocSemiring.{u5} A (Ring.toSemiring.{u5} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.{u5, u5, u4, u3} A A (Ring.toSemiring.{u5} A _inst_1) (Ring.toSemiring.{u5} A _inst_1) (RingHom.id.{u5} A (Semiring.toNonAssocSemiring.{u5} A (Ring.toSemiring.{u5} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (instHSMul.{u1, max u3 u4} S (ContinuousLinearMap.{u5, u5, u4, u3} A A (Ring.toSemiring.{u5} A _inst_1) (Ring.toSemiring.{u5} A _inst_1) (RingHom.id.{u5} A (Semiring.toNonAssocSemiring.{u5} A (Ring.toSemiring.{u5} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (MulAction.toSMul.{u1, max u3 u4} S (ContinuousLinearMap.{u5, u5, u4, u3} A A (Ring.toSemiring.{u5} A _inst_1) (Ring.toSemiring.{u5} A _inst_1) (RingHom.id.{u5} A (Semiring.toNonAssocSemiring.{u5} A (Ring.toSemiring.{u5} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (MonoidWithZero.toMonoid.{u1} S (Semiring.toMonoidWithZero.{u1} S (Ring.toSemiring.{u1} S _inst_12))) (ContinuousLinearMap.mulAction.{u5, u5, u4, u3, u1} A A (Ring.toSemiring.{u5} A _inst_1) (Ring.toSemiring.{u5} A _inst_1) (RingHom.id.{u5} A (Semiring.toNonAssocSemiring.{u5} A (Ring.toSemiring.{u5} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5 S (MonoidWithZero.toMonoid.{u1} S (Semiring.toMonoidWithZero.{u1} S (Ring.toSemiring.{u1} S _inst_12))) (Module.toDistribMulAction.{u1, u3} S M₂ (Ring.toSemiring.{u1} S _inst_12) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_13) _inst_15 _inst_14))) c f)) (HSMul.hSMul.{u1, max u3 u4, max u3 u4} S (ContinuousLinearMap.{u2, u2, u4, u3} R R (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.{u2, u2, u4, u3} R R (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (instHSMul.{u1, max u3 u4} S (ContinuousLinearMap.{u2, u2, u4, u3} R R (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (MulAction.toSMul.{u1, max u3 u4} S (ContinuousLinearMap.{u2, u2, u4, u3} R R (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (MonoidWithZero.toMonoid.{u1} S (Semiring.toMonoidWithZero.{u1} S (Ring.toSemiring.{u1} S _inst_12))) (ContinuousLinearMap.mulAction.{u2, u2, u4, u3, u1} R R (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10 S (MonoidWithZero.toMonoid.{u1} S (Semiring.toMonoidWithZero.{u1} S (Ring.toSemiring.{u1} S _inst_12))) (Module.toDistribMulAction.{u1, u3} S M₂ (Ring.toSemiring.{u1} S _inst_12) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_13) _inst_16 _inst_14))) c (ContinuousLinearMap.restrictScalars.{u5, u4, u3, u2} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 f))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.restrict_scalars_smul ContinuousLinearMap.restrictScalars_smulₓ'. -/
@[simp]
theorem restrictScalars_smul (c : S) (f : M →L[A] M₂) :
    (c • f).restrictScalars R = c • f.restrictScalars R :=
  rfl
#align continuous_linear_map.restrict_scalars_smul ContinuousLinearMap.restrictScalars_smul

variable (A M M₂ R S) [TopologicalAddGroup M₂]

#print ContinuousLinearMap.restrictScalarsₗ /-
/-- `continuous_linear_map.restrict_scalars` as a `linear_map`. See also
`continuous_linear_map.restrict_scalarsL`. -/
def restrictScalarsₗ : (M →L[A] M₂) →ₗ[S] M →L[R] M₂
    where
  toFun := restrictScalars R
  map_add' := restrictScalars_add
  map_smul' := restrictScalars_smul
#align continuous_linear_map.restrict_scalarsₗ ContinuousLinearMap.restrictScalarsₗ
-/

variable {A M M₂ R S}

/- warning: continuous_linear_map.coe_restrict_scalarsₗ -> ContinuousLinearMap.coe_restrictScalarsₗ is a dubious translation:
lean 3 declaration is
  forall {A : Type.{u1}} {M : Type.{u2}} {M₂ : Type.{u3}} [_inst_1 : Ring.{u1} A] [_inst_2 : AddCommGroup.{u2} M] [_inst_3 : AddCommGroup.{u3} M₂] [_inst_4 : Module.{u1, u2} A M (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)] [_inst_5 : Module.{u1, u3} A M₂ (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_6 : TopologicalSpace.{u2} M] [_inst_7 : TopologicalSpace.{u3} M₂] {R : Type.{u4}} [_inst_8 : Ring.{u4} R] [_inst_9 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)] [_inst_10 : Module.{u4, u3} R M₂ (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_11 : LinearMap.CompatibleSMul.{u2, u3, u4, u1} M M₂ (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) R A (Ring.toSemiring.{u1} A _inst_1) (SMulZeroClass.toHasSmul.{u4, u2} R M (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (SMulWithZero.toSmulZeroClass.{u4, u2} R M (MulZeroClass.toHasZero.{u4} R (MulZeroOneClass.toMulZeroClass.{u4} R (MonoidWithZero.toMulZeroOneClass.{u4} R (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8))))) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (MulActionWithZero.toSMulWithZero.{u4, u2} R M (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8)) (AddZeroClass.toHasZero.{u2} M (AddMonoid.toAddZeroClass.{u2} M (AddCommMonoid.toAddMonoid.{u2} M (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)))) (Module.toMulActionWithZero.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_9)))) _inst_4 (SMulZeroClass.toHasSmul.{u4, u3} R M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u4, u3} R M₂ (MulZeroClass.toHasZero.{u4} R (MulZeroOneClass.toMulZeroClass.{u4} R (MonoidWithZero.toMulZeroOneClass.{u4} R (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u4, u3} R M₂ (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u4, u3} R M₂ (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_10)))) _inst_5] {S : Type.{u5}} [_inst_12 : Ring.{u5} S] [_inst_13 : Module.{u5, u3} S M₂ (Ring.toSemiring.{u5} S _inst_12) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)] [_inst_14 : ContinuousConstSMul.{u5, u3} S M₂ _inst_7 (SMulZeroClass.toHasSmul.{u5, u3} S M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u5, u3} S M₂ (MulZeroClass.toHasZero.{u5} S (MulZeroOneClass.toMulZeroClass.{u5} S (MonoidWithZero.toMulZeroOneClass.{u5} S (Semiring.toMonoidWithZero.{u5} S (Ring.toSemiring.{u5} S _inst_12))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u5, u3} S M₂ (Semiring.toMonoidWithZero.{u5} S (Ring.toSemiring.{u5} S _inst_12)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u5, u3} S M₂ (Ring.toSemiring.{u5} S _inst_12) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_13))))] [_inst_15 : SMulCommClass.{u1, u5, u3} A S M₂ (SMulZeroClass.toHasSmul.{u1, u3} A M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u1, u3} A M₂ (MulZeroClass.toHasZero.{u1} A (MulZeroOneClass.toMulZeroClass.{u1} A (MonoidWithZero.toMulZeroOneClass.{u1} A (Semiring.toMonoidWithZero.{u1} A (Ring.toSemiring.{u1} A _inst_1))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u1, u3} A M₂ (Semiring.toMonoidWithZero.{u1} A (Ring.toSemiring.{u1} A _inst_1)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u1, u3} A M₂ (Ring.toSemiring.{u1} A _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_5)))) (SMulZeroClass.toHasSmul.{u5, u3} S M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u5, u3} S M₂ (MulZeroClass.toHasZero.{u5} S (MulZeroOneClass.toMulZeroClass.{u5} S (MonoidWithZero.toMulZeroOneClass.{u5} S (Semiring.toMonoidWithZero.{u5} S (Ring.toSemiring.{u5} S _inst_12))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u5, u3} S M₂ (Semiring.toMonoidWithZero.{u5} S (Ring.toSemiring.{u5} S _inst_12)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u5, u3} S M₂ (Ring.toSemiring.{u5} S _inst_12) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_13))))] [_inst_16 : SMulCommClass.{u4, u5, u3} R S M₂ (SMulZeroClass.toHasSmul.{u4, u3} R M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u4, u3} R M₂ (MulZeroClass.toHasZero.{u4} R (MulZeroOneClass.toMulZeroClass.{u4} R (MonoidWithZero.toMulZeroOneClass.{u4} R (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u4, u3} R M₂ (Semiring.toMonoidWithZero.{u4} R (Ring.toSemiring.{u4} R _inst_8)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u4, u3} R M₂ (Ring.toSemiring.{u4} R _inst_8) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_10)))) (SMulZeroClass.toHasSmul.{u5, u3} S M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (SMulWithZero.toSmulZeroClass.{u5, u3} S M₂ (MulZeroClass.toHasZero.{u5} S (MulZeroOneClass.toMulZeroClass.{u5} S (MonoidWithZero.toMulZeroOneClass.{u5} S (Semiring.toMonoidWithZero.{u5} S (Ring.toSemiring.{u5} S _inst_12))))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (MulActionWithZero.toSMulWithZero.{u5, u3} S M₂ (Semiring.toMonoidWithZero.{u5} S (Ring.toSemiring.{u5} S _inst_12)) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3)))) (Module.toMulActionWithZero.{u5, u3} S M₂ (Ring.toSemiring.{u5} S _inst_12) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_13))))] [_inst_17 : TopologicalAddGroup.{u3} M₂ _inst_7 (AddCommGroup.toAddGroup.{u3} M₂ _inst_3)], Eq.{succ (max u2 u3)} ((ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) -> (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10)) (coeFn.{succ (max u2 u3), succ (max u2 u3)} (LinearMap.{u5, u5, max u2 u3, max u2 u3} S S (Ring.toSemiring.{u5} S _inst_12) (Ring.toSemiring.{u5} S _inst_12) (RingHom.id.{u5} S (Semiring.toNonAssocSemiring.{u5} S (Ring.toSemiring.{u5} S _inst_12))) (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.addCommMonoid.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5 (ContinuousLinearMap.restrictScalarsₗ._proof_1.{u3} M₂ _inst_3 _inst_7 _inst_17)) (ContinuousLinearMap.addCommMonoid.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10 (ContinuousLinearMap.restrictScalarsₗ._proof_2.{u3} M₂ _inst_3 _inst_7 _inst_17)) (ContinuousLinearMap.module.{u1, u1, u5, u2, u3} A A S (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u5} S _inst_12) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_4 M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_5 _inst_13 _inst_15 _inst_14 (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) (ContinuousLinearMap.restrictScalarsₗ._proof_3.{u3} M₂ _inst_3 _inst_7 _inst_17)) (ContinuousLinearMap.module.{u4, u4, u5, u2, u3} R R S (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u5} S _inst_12) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_9 M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_10 _inst_13 _inst_16 _inst_14 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) (ContinuousLinearMap.restrictScalarsₗ._proof_4.{u3} M₂ _inst_3 _inst_7 _inst_17))) (fun (_x : LinearMap.{u5, u5, max u2 u3, max u2 u3} S S (Ring.toSemiring.{u5} S _inst_12) (Ring.toSemiring.{u5} S _inst_12) (RingHom.id.{u5} S (Semiring.toNonAssocSemiring.{u5} S (Ring.toSemiring.{u5} S _inst_12))) (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.addCommMonoid.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5 (ContinuousLinearMap.restrictScalarsₗ._proof_1.{u3} M₂ _inst_3 _inst_7 _inst_17)) (ContinuousLinearMap.addCommMonoid.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10 (ContinuousLinearMap.restrictScalarsₗ._proof_2.{u3} M₂ _inst_3 _inst_7 _inst_17)) (ContinuousLinearMap.module.{u1, u1, u5, u2, u3} A A S (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u5} S _inst_12) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_4 M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_5 _inst_13 _inst_15 _inst_14 (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) (ContinuousLinearMap.restrictScalarsₗ._proof_3.{u3} M₂ _inst_3 _inst_7 _inst_17)) (ContinuousLinearMap.module.{u4, u4, u5, u2, u3} R R S (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u5} S _inst_12) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_9 M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_10 _inst_13 _inst_16 _inst_14 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) (ContinuousLinearMap.restrictScalarsₗ._proof_4.{u3} M₂ _inst_3 _inst_7 _inst_17))) => (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) -> (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10)) (LinearMap.hasCoeToFun.{u5, u5, max u2 u3, max u2 u3} S S (ContinuousLinearMap.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10) (Ring.toSemiring.{u5} S _inst_12) (Ring.toSemiring.{u5} S _inst_12) (ContinuousLinearMap.addCommMonoid.{u1, u1, u2, u3} A A (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_4 _inst_5 (ContinuousLinearMap.restrictScalarsₗ._proof_1.{u3} M₂ _inst_3 _inst_7 _inst_17)) (ContinuousLinearMap.addCommMonoid.{u4, u4, u2, u3} R R (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_9 _inst_10 (ContinuousLinearMap.restrictScalarsₗ._proof_2.{u3} M₂ _inst_3 _inst_7 _inst_17)) (ContinuousLinearMap.module.{u1, u1, u5, u2, u3} A A S (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u1} A _inst_1) (Ring.toSemiring.{u5} S _inst_12) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_4 M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_5 _inst_13 _inst_15 _inst_14 (RingHom.id.{u1} A (Semiring.toNonAssocSemiring.{u1} A (Ring.toSemiring.{u1} A _inst_1))) (ContinuousLinearMap.restrictScalarsₗ._proof_3.{u3} M₂ _inst_3 _inst_7 _inst_17)) (ContinuousLinearMap.module.{u4, u4, u5, u2, u3} R R S (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u4} R _inst_8) (Ring.toSemiring.{u5} S _inst_12) M _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_9 M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_3) _inst_10 _inst_13 _inst_16 _inst_14 (RingHom.id.{u4} R (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_8))) (ContinuousLinearMap.restrictScalarsₗ._proof_4.{u3} M₂ _inst_3 _inst_7 _inst_17)) (RingHom.id.{u5} S (Semiring.toNonAssocSemiring.{u5} S (Ring.toSemiring.{u5} S _inst_12)))) (ContinuousLinearMap.restrictScalarsₗ.{u1, u2, u3, u4, u5} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 S _inst_12 _inst_13 _inst_14 _inst_15 _inst_16 _inst_17)) (ContinuousLinearMap.restrictScalars.{u1, u2, u3, u4} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11)
but is expected to have type
  forall {A : Type.{u3}} {M : Type.{u5}} {M₂ : Type.{u4}} [_inst_1 : Ring.{u3} A] [_inst_2 : AddCommGroup.{u5} M] [_inst_3 : AddCommGroup.{u4} M₂] [_inst_4 : Module.{u3, u5} A M (Ring.toSemiring.{u3} A _inst_1) (AddCommGroup.toAddCommMonoid.{u5} M _inst_2)] [_inst_5 : Module.{u3, u4} A M₂ (Ring.toSemiring.{u3} A _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3)] [_inst_6 : TopologicalSpace.{u5} M] [_inst_7 : TopologicalSpace.{u4} M₂] {R : Type.{u2}} [_inst_8 : Ring.{u2} R] [_inst_9 : Module.{u2, u5} R M (Ring.toSemiring.{u2} R _inst_8) (AddCommGroup.toAddCommMonoid.{u5} M _inst_2)] [_inst_10 : Module.{u2, u4} R M₂ (Ring.toSemiring.{u2} R _inst_8) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3)] [_inst_11 : LinearMap.CompatibleSMul.{u5, u4, u2, u3} M M₂ (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) R A (Ring.toSemiring.{u3} A _inst_1) (SMulZeroClass.toSMul.{u2, u5} R M (NegZeroClass.toZero.{u5} M (SubNegZeroMonoid.toNegZeroClass.{u5} M (SubtractionMonoid.toSubNegZeroMonoid.{u5} M (SubtractionCommMonoid.toSubtractionMonoid.{u5} M (AddCommGroup.toDivisionAddCommMonoid.{u5} M _inst_2))))) (SMulWithZero.toSMulZeroClass.{u2, u5} R M (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_8))) (NegZeroClass.toZero.{u5} M (SubNegZeroMonoid.toNegZeroClass.{u5} M (SubtractionMonoid.toSubNegZeroMonoid.{u5} M (SubtractionCommMonoid.toSubtractionMonoid.{u5} M (AddCommGroup.toDivisionAddCommMonoid.{u5} M _inst_2))))) (MulActionWithZero.toSMulWithZero.{u2, u5} R M (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_8)) (NegZeroClass.toZero.{u5} M (SubNegZeroMonoid.toNegZeroClass.{u5} M (SubtractionMonoid.toSubNegZeroMonoid.{u5} M (SubtractionCommMonoid.toSubtractionMonoid.{u5} M (AddCommGroup.toDivisionAddCommMonoid.{u5} M _inst_2))))) (Module.toMulActionWithZero.{u2, u5} R M (Ring.toSemiring.{u2} R _inst_8) (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) _inst_9)))) _inst_4 (SMulZeroClass.toSMul.{u2, u4} R M₂ (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u2, u4} R M₂ (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_8))) (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u2, u4} R M₂ (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_8)) (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (Module.toMulActionWithZero.{u2, u4} R M₂ (Ring.toSemiring.{u2} R _inst_8) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_10)))) _inst_5] {S : Type.{u1}} [_inst_12 : Ring.{u1} S] [_inst_13 : Module.{u1, u4} S M₂ (Ring.toSemiring.{u1} S _inst_12) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3)] [_inst_14 : ContinuousConstSMul.{u1, u4} S M₂ _inst_7 (SMulZeroClass.toSMul.{u1, u4} S M₂ (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u1, u4} S M₂ (MonoidWithZero.toZero.{u1} S (Semiring.toMonoidWithZero.{u1} S (Ring.toSemiring.{u1} S _inst_12))) (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u1, u4} S M₂ (Semiring.toMonoidWithZero.{u1} S (Ring.toSemiring.{u1} S _inst_12)) (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (Module.toMulActionWithZero.{u1, u4} S M₂ (Ring.toSemiring.{u1} S _inst_12) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_13))))] [_inst_15 : SMulCommClass.{u3, u1, u4} A S M₂ (SMulZeroClass.toSMul.{u3, u4} A M₂ (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u3, u4} A M₂ (MonoidWithZero.toZero.{u3} A (Semiring.toMonoidWithZero.{u3} A (Ring.toSemiring.{u3} A _inst_1))) (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u3, u4} A M₂ (Semiring.toMonoidWithZero.{u3} A (Ring.toSemiring.{u3} A _inst_1)) (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (Module.toMulActionWithZero.{u3, u4} A M₂ (Ring.toSemiring.{u3} A _inst_1) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_5)))) (SMulZeroClass.toSMul.{u1, u4} S M₂ (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u1, u4} S M₂ (MonoidWithZero.toZero.{u1} S (Semiring.toMonoidWithZero.{u1} S (Ring.toSemiring.{u1} S _inst_12))) (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u1, u4} S M₂ (Semiring.toMonoidWithZero.{u1} S (Ring.toSemiring.{u1} S _inst_12)) (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (Module.toMulActionWithZero.{u1, u4} S M₂ (Ring.toSemiring.{u1} S _inst_12) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_13))))] [_inst_16 : SMulCommClass.{u2, u1, u4} R S M₂ (SMulZeroClass.toSMul.{u2, u4} R M₂ (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u2, u4} R M₂ (MonoidWithZero.toZero.{u2} R (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_8))) (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u2, u4} R M₂ (Semiring.toMonoidWithZero.{u2} R (Ring.toSemiring.{u2} R _inst_8)) (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (Module.toMulActionWithZero.{u2, u4} R M₂ (Ring.toSemiring.{u2} R _inst_8) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_10)))) (SMulZeroClass.toSMul.{u1, u4} S M₂ (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (SMulWithZero.toSMulZeroClass.{u1, u4} S M₂ (MonoidWithZero.toZero.{u1} S (Semiring.toMonoidWithZero.{u1} S (Ring.toSemiring.{u1} S _inst_12))) (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (MulActionWithZero.toSMulWithZero.{u1, u4} S M₂ (Semiring.toMonoidWithZero.{u1} S (Ring.toSemiring.{u1} S _inst_12)) (NegZeroClass.toZero.{u4} M₂ (SubNegZeroMonoid.toNegZeroClass.{u4} M₂ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M₂ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M₂ (AddCommGroup.toDivisionAddCommMonoid.{u4} M₂ _inst_3))))) (Module.toMulActionWithZero.{u1, u4} S M₂ (Ring.toSemiring.{u1} S _inst_12) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_13))))] [_inst_17 : TopologicalAddGroup.{u4} M₂ _inst_7 (AddCommGroup.toAddGroup.{u4} M₂ _inst_3)], Eq.{max (succ u5) (succ u4)} (forall (ᾰ : ContinuousLinearMap.{u3, u3, u5, u4} A A (Ring.toSemiring.{u3} A _inst_1) (Ring.toSemiring.{u3} A _inst_1) (RingHom.id.{u3} A (Semiring.toNonAssocSemiring.{u3} A (Ring.toSemiring.{u3} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_4 _inst_5), (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : ContinuousLinearMap.{u3, u3, u5, u4} A A (Ring.toSemiring.{u3} A _inst_1) (Ring.toSemiring.{u3} A _inst_1) (RingHom.id.{u3} A (Semiring.toNonAssocSemiring.{u3} A (Ring.toSemiring.{u3} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_4 _inst_5) => ContinuousLinearMap.{u2, u2, u5, u4} R R (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_9 _inst_10) ᾰ) (FunLike.coe.{max (succ u5) (succ u4), max (succ u5) (succ u4), max (succ u5) (succ u4)} (LinearMap.{u1, u1, max u4 u5, max u4 u5} S S (Ring.toSemiring.{u1} S _inst_12) (Ring.toSemiring.{u1} S _inst_12) (RingHom.id.{u1} S (Semiring.toNonAssocSemiring.{u1} S (Ring.toSemiring.{u1} S _inst_12))) (ContinuousLinearMap.{u3, u3, u5, u4} A A (Ring.toSemiring.{u3} A _inst_1) (Ring.toSemiring.{u3} A _inst_1) (RingHom.id.{u3} A (Semiring.toNonAssocSemiring.{u3} A (Ring.toSemiring.{u3} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.{u2, u2, u5, u4} R R (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_9 _inst_10) (ContinuousLinearMap.addCommMonoid.{u3, u3, u5, u4} A A (Ring.toSemiring.{u3} A _inst_1) (Ring.toSemiring.{u3} A _inst_1) (RingHom.id.{u3} A (Semiring.toNonAssocSemiring.{u3} A (Ring.toSemiring.{u3} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_4 _inst_5 (TopologicalAddGroup.toContinuousAdd.{u4} M₂ _inst_7 (AddCommGroup.toAddGroup.{u4} M₂ _inst_3) _inst_17)) (ContinuousLinearMap.addCommMonoid.{u2, u2, u5, u4} R R (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_9 _inst_10 (TopologicalAddGroup.toContinuousAdd.{u4} M₂ _inst_7 (AddCommGroup.toAddGroup.{u4} M₂ _inst_3) _inst_17)) (ContinuousLinearMap.module.{u3, u3, u1, u5, u4} A A S (Ring.toSemiring.{u3} A _inst_1) (Ring.toSemiring.{u3} A _inst_1) (Ring.toSemiring.{u1} S _inst_12) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) _inst_4 M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_5 _inst_13 _inst_15 _inst_14 (RingHom.id.{u3} A (Semiring.toNonAssocSemiring.{u3} A (Ring.toSemiring.{u3} A _inst_1))) (TopologicalAddGroup.toContinuousAdd.{u4} M₂ _inst_7 (AddCommGroup.toAddGroup.{u4} M₂ _inst_3) _inst_17)) (ContinuousLinearMap.module.{u2, u2, u1, u5, u4} R R S (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u1} S _inst_12) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) _inst_9 M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_10 _inst_13 _inst_16 _inst_14 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) (TopologicalAddGroup.toContinuousAdd.{u4} M₂ _inst_7 (AddCommGroup.toAddGroup.{u4} M₂ _inst_3) _inst_17))) (ContinuousLinearMap.{u3, u3, u5, u4} A A (Ring.toSemiring.{u3} A _inst_1) (Ring.toSemiring.{u3} A _inst_1) (RingHom.id.{u3} A (Semiring.toNonAssocSemiring.{u3} A (Ring.toSemiring.{u3} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_4 _inst_5) (fun (_x : ContinuousLinearMap.{u3, u3, u5, u4} A A (Ring.toSemiring.{u3} A _inst_1) (Ring.toSemiring.{u3} A _inst_1) (RingHom.id.{u3} A (Semiring.toNonAssocSemiring.{u3} A (Ring.toSemiring.{u3} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_4 _inst_5) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : ContinuousLinearMap.{u3, u3, u5, u4} A A (Ring.toSemiring.{u3} A _inst_1) (Ring.toSemiring.{u3} A _inst_1) (RingHom.id.{u3} A (Semiring.toNonAssocSemiring.{u3} A (Ring.toSemiring.{u3} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_4 _inst_5) => ContinuousLinearMap.{u2, u2, u5, u4} R R (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_9 _inst_10) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, max u5 u4, max u5 u4} S S (ContinuousLinearMap.{u3, u3, u5, u4} A A (Ring.toSemiring.{u3} A _inst_1) (Ring.toSemiring.{u3} A _inst_1) (RingHom.id.{u3} A (Semiring.toNonAssocSemiring.{u3} A (Ring.toSemiring.{u3} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_4 _inst_5) (ContinuousLinearMap.{u2, u2, u5, u4} R R (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_9 _inst_10) (Ring.toSemiring.{u1} S _inst_12) (Ring.toSemiring.{u1} S _inst_12) (ContinuousLinearMap.addCommMonoid.{u3, u3, u5, u4} A A (Ring.toSemiring.{u3} A _inst_1) (Ring.toSemiring.{u3} A _inst_1) (RingHom.id.{u3} A (Semiring.toNonAssocSemiring.{u3} A (Ring.toSemiring.{u3} A _inst_1))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_4 _inst_5 (TopologicalAddGroup.toContinuousAdd.{u4} M₂ _inst_7 (AddCommGroup.toAddGroup.{u4} M₂ _inst_3) _inst_17)) (ContinuousLinearMap.addCommMonoid.{u2, u2, u5, u4} R R (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_9 _inst_10 (TopologicalAddGroup.toContinuousAdd.{u4} M₂ _inst_7 (AddCommGroup.toAddGroup.{u4} M₂ _inst_3) _inst_17)) (ContinuousLinearMap.module.{u3, u3, u1, u5, u4} A A S (Ring.toSemiring.{u3} A _inst_1) (Ring.toSemiring.{u3} A _inst_1) (Ring.toSemiring.{u1} S _inst_12) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) _inst_4 M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_5 _inst_13 _inst_15 _inst_14 (RingHom.id.{u3} A (Semiring.toNonAssocSemiring.{u3} A (Ring.toSemiring.{u3} A _inst_1))) (TopologicalAddGroup.toContinuousAdd.{u4} M₂ _inst_7 (AddCommGroup.toAddGroup.{u4} M₂ _inst_3) _inst_17)) (ContinuousLinearMap.module.{u2, u2, u1, u5, u4} R R S (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u2} R _inst_8) (Ring.toSemiring.{u1} S _inst_12) M _inst_6 (AddCommGroup.toAddCommMonoid.{u5} M _inst_2) _inst_9 M₂ _inst_7 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_3) _inst_10 _inst_13 _inst_16 _inst_14 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_8))) (TopologicalAddGroup.toContinuousAdd.{u4} M₂ _inst_7 (AddCommGroup.toAddGroup.{u4} M₂ _inst_3) _inst_17)) (RingHom.id.{u1} S (Semiring.toNonAssocSemiring.{u1} S (Ring.toSemiring.{u1} S _inst_12)))) (ContinuousLinearMap.restrictScalarsₗ.{u3, u5, u4, u2, u1} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11 S _inst_12 _inst_13 _inst_14 _inst_15 _inst_16 _inst_17)) (ContinuousLinearMap.restrictScalars.{u3, u5, u4, u2} A M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 R _inst_8 _inst_9 _inst_10 _inst_11)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_restrict_scalarsₗ ContinuousLinearMap.coe_restrictScalarsₗₓ'. -/
@[simp]
theorem coe_restrictScalarsₗ : ⇑(restrictScalarsₗ A M M₂ R S) = restrictScalars R :=
  rfl
#align continuous_linear_map.coe_restrict_scalarsₗ ContinuousLinearMap.coe_restrictScalarsₗ

end RestrictScalars

end ContinuousLinearMap

namespace ContinuousLinearEquiv

section AddCommMonoid

variable {R₁ : Type _} {R₂ : Type _} {R₃ : Type _} [Semiring R₁] [Semiring R₂] [Semiring R₃]
  {σ₁₂ : R₁ →+* R₂} {σ₂₁ : R₂ →+* R₁} [RingHomInvPair σ₁₂ σ₂₁] [RingHomInvPair σ₂₁ σ₁₂]
  {σ₂₃ : R₂ →+* R₃} {σ₃₂ : R₃ →+* R₂} [RingHomInvPair σ₂₃ σ₃₂] [RingHomInvPair σ₃₂ σ₂₃]
  {σ₁₃ : R₁ →+* R₃} {σ₃₁ : R₃ →+* R₁} [RingHomInvPair σ₁₃ σ₃₁] [RingHomInvPair σ₃₁ σ₁₃]
  [RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] [RingHomCompTriple σ₃₂ σ₂₁ σ₃₁] {M₁ : Type _}
  [TopologicalSpace M₁] [AddCommMonoid M₁] {M'₁ : Type _} [TopologicalSpace M'₁] [AddCommMonoid M'₁]
  {M₂ : Type _} [TopologicalSpace M₂] [AddCommMonoid M₂] {M₃ : Type _} [TopologicalSpace M₃]
  [AddCommMonoid M₃] {M₄ : Type _} [TopologicalSpace M₄] [AddCommMonoid M₄] [Module R₁ M₁]
  [Module R₁ M'₁] [Module R₂ M₂] [Module R₃ M₃]

include σ₂₁

#print ContinuousLinearEquiv.toContinuousLinearMap /-
/-- A continuous linear equivalence induces a continuous linear map. -/
def toContinuousLinearMap (e : M₁ ≃SL[σ₁₂] M₂) : M₁ →SL[σ₁₂] M₂ :=
  { e.toLinearEquiv.toLinearMap with cont := e.continuous_toFun }
#align continuous_linear_equiv.to_continuous_linear_map ContinuousLinearEquiv.toContinuousLinearMap
-/

/-- Coerce continuous linear equivs to continuous linear maps. -/
instance : Coe (M₁ ≃SL[σ₁₂] M₂) (M₁ →SL[σ₁₂] M₂) :=
  ⟨toContinuousLinearMap⟩

instance : ContinuousSemilinearEquivClass (M₁ ≃SL[σ₁₂] M₂) σ₁₂ M₁ M₂
    where
  coe f := f
  inv f := f.invFun
  coe_injective' f g h₁ h₂ := by
    cases' f with f' _
    cases' g with g' _
    cases f'
    cases g'
    congr
  left_inv f := f.left_inv
  right_inv f := f.right_inv
  map_add f := f.map_add'
  map_smulₛₗ f := f.map_smul'
  map_continuous := continuous_toFun
  inv_continuous := continuous_invFun

-- see Note [function coercion]
/-- Coerce continuous linear equivs to maps. -/
instance : CoeFun (M₁ ≃SL[σ₁₂] M₂) fun _ => M₁ → M₂ :=
  ⟨fun f => f⟩

/- warning: continuous_linear_equiv.coe_def_rev clashes with [anonymous] -> [anonymous]
warning: continuous_linear_equiv.coe_def_rev -> [anonymous] is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u_1}} {R₂ : Type.{u_2}} [_inst_1 : Semiring.{u_1} R₁] [_inst_2 : Semiring.{u_2} R₂] {σ₁₂ : RingHom.{u_1, u_2} R₁ R₂ (Semiring.toNonAssocSemiring.{u_1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u_2} R₂ _inst_2)} {σ₂₁ : RingHom.{u_2, u_1} R₂ R₁ (Semiring.toNonAssocSemiring.{u_2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u_1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u_1, u_2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u_2, u_1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u_4}} [_inst_12 : TopologicalSpace.{u_4} M₁] [_inst_13 : AddCommMonoid.{u_4} M₁] {M₂ : Type.{u_6}} [_inst_16 : TopologicalSpace.{u_6} M₂] [_inst_17 : AddCommMonoid.{u_6} M₂] [_inst_22 : Module.{u_1, u_4} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u_2, u_6} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{max (succ u_4) (succ u_6)} (ContinuousLinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.toContinuousLinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e) ((fun (a : Sort.{max (succ u_4) (succ u_6)}) (b : Sort.{max (succ u_4) (succ u_6)}) [self : HasLiftT.{max (succ u_4) (succ u_6), max (succ u_4) (succ u_6)} a b] => self.0) (ContinuousLinearEquiv.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (HasLiftT.mk.{max (succ u_4) (succ u_6), max (succ u_4) (succ u_6)} (ContinuousLinearEquiv.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (CoeTCₓ.coe.{max (succ u_4) (succ u_6), max (succ u_4) (succ u_6)} (ContinuousLinearEquiv.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (coeBase.{max (succ u_4) (succ u_6), max (succ u_4) (succ u_6)} (ContinuousLinearEquiv.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u_1, u_2, u_4, u_6} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e)
but is expected to have type
  forall {R₁ : Type.{u}} {R₂ : Type.{v}}, (Nat -> R₁ -> R₂) -> Nat -> (List.{u} R₁) -> (List.{v} R₂)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.coe_def_rev [anonymous]ₓ'. -/
@[simp]
theorem [anonymous] (e : M₁ ≃SL[σ₁₂] M₂) : e.toContinuousLinearMap = e :=
  rfl
#align continuous_linear_equiv.coe_def_rev [anonymous]

/- warning: continuous_linear_equiv.coe_apply -> ContinuousLinearEquiv.coe_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (b : M₁), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) b) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e b)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (b : M₁), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) b) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24))) (ContinuousLinearEquiv.toContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e) b) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e b)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.coe_apply ContinuousLinearEquiv.coe_applyₓ'. -/
theorem coe_apply (e : M₁ ≃SL[σ₁₂] M₂) (b : M₁) : (e : M₁ →SL[σ₁₂] M₂) b = e b :=
  rfl
#align continuous_linear_equiv.coe_apply ContinuousLinearEquiv.coe_apply

/- warning: continuous_linear_equiv.coe_to_linear_equiv -> ContinuousLinearEquiv.coe_toLinearEquiv is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (f : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{max (succ u3) (succ u4)} (M₁ -> M₂) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ M₂ _inst_13 _inst_17 _inst_22 _inst_24) (fun (_x : LinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ M₂ _inst_13 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (LinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_13 _inst_17 _inst_22 _inst_24 σ₁₂ σ₂₁ _inst_4 _inst_5) (ContinuousLinearEquiv.toLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 f)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) f)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (f : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{max (succ u2) (succ u1)} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Data.FunLike.Embedding._hyg.19 : M₁) => M₂) ᾰ) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (LinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ M₂ _inst_13 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Data.FunLike.Embedding._hyg.19 : M₁) => M₂) _x) (EmbeddingLike.toFunLike.{max (succ u2) (succ u1), succ u2, succ u1} (LinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ M₂ _inst_13 _inst_17 _inst_22 _inst_24) M₁ M₂ (EquivLike.toEmbeddingLike.{max (succ u2) (succ u1), succ u2, succ u1} (LinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ M₂ _inst_13 _inst_17 _inst_22 _inst_24) M₁ M₂ (AddEquivClass.toEquivLike.{max u2 u1, u2, u1} (LinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ M₂ _inst_13 _inst_17 _inst_22 _inst_24) M₁ M₂ (AddZeroClass.toAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13))) (AddZeroClass.toAdd.{u1} M₂ (AddMonoid.toAddZeroClass.{u1} M₂ (AddCommMonoid.toAddMonoid.{u1} M₂ _inst_17))) (SemilinearEquivClass.toAddEquivClass.{max u2 u1, u4, u3, u2, u1} (LinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ M₂ _inst_13 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ M₂ _inst_13 _inst_17 _inst_22 _inst_24 (LinearEquiv.instSemilinearEquivClassLinearEquiv.{u4, u3, u2, u1} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_13 _inst_17 _inst_22 _inst_24 σ₁₂ σ₂₁ _inst_4 _inst_5))))) (ContinuousLinearEquiv.toLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 f)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) f)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.coe_to_linear_equiv ContinuousLinearEquiv.coe_toLinearEquivₓ'. -/
@[simp]
theorem coe_toLinearEquiv (f : M₁ ≃SL[σ₁₂] M₂) : ⇑f.toLinearEquiv = f :=
  rfl
#align continuous_linear_equiv.coe_to_linear_equiv ContinuousLinearEquiv.coe_toLinearEquiv

/- warning: continuous_linear_equiv.coe_coe -> ContinuousLinearEquiv.coe_coe is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{max (succ u3) (succ u4)} (M₁ -> M₂) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{max (succ u2) (succ u1)} (forall (ᾰ : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) ᾰ) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24))) (ContinuousLinearEquiv.toContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.coe_coe ContinuousLinearEquiv.coe_coeₓ'. -/
@[simp, norm_cast]
theorem coe_coe (e : M₁ ≃SL[σ₁₂] M₂) : ⇑(e : M₁ →SL[σ₁₂] M₂) = e :=
  rfl
#align continuous_linear_equiv.coe_coe ContinuousLinearEquiv.coe_coe

/- warning: continuous_linear_equiv.to_linear_equiv_injective -> ContinuousLinearEquiv.toLinearEquiv_injective is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17], Function.Injective.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (LinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ M₂ _inst_13 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.toLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u1}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u1} R₂] {σ₁₂ : RingHom.{u2, u1} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2)} {σ₂₁ : RingHom.{u1, u2} R₂ R₁ (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u4}} [_inst_12 : TopologicalSpace.{u4} M₁] [_inst_13 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u3}} [_inst_16 : TopologicalSpace.{u3} M₂] [_inst_17 : AddCommMonoid.{u3} M₂] [_inst_22 : Module.{u2, u4} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u1, u3} R₂ M₂ _inst_2 _inst_17], Function.Injective.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (LinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ M₂ _inst_13 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.toLinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.to_linear_equiv_injective ContinuousLinearEquiv.toLinearEquiv_injectiveₓ'. -/
theorem toLinearEquiv_injective :
    Function.Injective (toLinearEquiv : (M₁ ≃SL[σ₁₂] M₂) → M₁ ≃ₛₗ[σ₁₂] M₂)
  | ⟨e, _, _⟩, ⟨e', _, _⟩, rfl => rfl
#align continuous_linear_equiv.to_linear_equiv_injective ContinuousLinearEquiv.toLinearEquiv_injective

/- warning: continuous_linear_equiv.ext -> ContinuousLinearEquiv.ext is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] {f : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24} {g : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24}, (Eq.{max (succ u3) (succ u4)} ((fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) f) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) f) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) g)) -> (Eq.{max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) f g)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] {f : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24} {g : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24}, (Eq.{max (succ u2) (succ u1)} (forall (a : M₁), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) a) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) f) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) g)) -> (Eq.{max (succ u2) (succ u1)} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) f g)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.ext ContinuousLinearEquiv.extₓ'. -/
@[ext]
theorem ext {f g : M₁ ≃SL[σ₁₂] M₂} (h : (f : M₁ → M₂) = g) : f = g :=
  toLinearEquiv_injective <| LinearEquiv.ext <| congr_fun h
#align continuous_linear_equiv.ext ContinuousLinearEquiv.ext

/- warning: continuous_linear_equiv.coe_injective -> ContinuousLinearEquiv.coe_injective is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17], Function.Injective.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))))
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u1}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u1} R₂] {σ₁₂ : RingHom.{u2, u1} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2)} {σ₂₁ : RingHom.{u1, u2} R₂ R₁ (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u4}} [_inst_12 : TopologicalSpace.{u4} M₁] [_inst_13 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u3}} [_inst_16 : TopologicalSpace.{u3} M₂] [_inst_17 : AddCommMonoid.{u3} M₂] [_inst_22 : Module.{u2, u4} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u1, u3} R₂ M₂ _inst_2 _inst_17], Function.Injective.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.toContinuousLinearMap.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.coe_injective ContinuousLinearEquiv.coe_injectiveₓ'. -/
theorem coe_injective : Function.Injective (coe : (M₁ ≃SL[σ₁₂] M₂) → M₁ →SL[σ₁₂] M₂) :=
  fun e e' h => ext <| funext <| ContinuousLinearMap.ext_iff.1 h
#align continuous_linear_equiv.coe_injective ContinuousLinearEquiv.coe_injective

/- warning: continuous_linear_equiv.coe_inj -> ContinuousLinearEquiv.coe_inj is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] {e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24} {e' : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24}, Iff (Eq.{max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e')) (Eq.{max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e e')
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] {e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24} {e' : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24}, Iff (Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.toContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e) (ContinuousLinearEquiv.toContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e')) (Eq.{max (succ u2) (succ u1)} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e e')
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.coe_inj ContinuousLinearEquiv.coe_injₓ'. -/
@[simp, norm_cast]
theorem coe_inj {e e' : M₁ ≃SL[σ₁₂] M₂} : (e : M₁ →SL[σ₁₂] M₂) = e' ↔ e = e' :=
  coe_injective.eq_iff
#align continuous_linear_equiv.coe_inj ContinuousLinearEquiv.coe_inj

#print ContinuousLinearEquiv.toHomeomorph /-
/-- A continuous linear equivalence induces a homeomorphism. -/
def toHomeomorph (e : M₁ ≃SL[σ₁₂] M₂) : M₁ ≃ₜ M₂ :=
  { e with toEquiv := e.toLinearEquiv.toEquiv }
#align continuous_linear_equiv.to_homeomorph ContinuousLinearEquiv.toHomeomorph
-/

/- warning: continuous_linear_equiv.coe_to_homeomorph -> ContinuousLinearEquiv.coe_toHomeomorph is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{max (succ u3) (succ u4)} (M₁ -> M₂) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (Homeomorph.{u3, u4} M₁ M₂ _inst_12 _inst_16) (fun (_x : Homeomorph.{u3, u4} M₁ M₂ _inst_12 _inst_16) => M₁ -> M₂) (Homeomorph.hasCoeToFun.{u3, u4} M₁ M₂ _inst_12 _inst_16) (ContinuousLinearEquiv.toHomeomorph.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{max (succ u2) (succ u1)} (M₁ -> M₂) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (Homeomorph.{u2, u1} M₁ M₂ _inst_12 _inst_16) M₁ (fun (_x : M₁) => M₂) (EmbeddingLike.toFunLike.{max (succ u2) (succ u1), succ u2, succ u1} (Homeomorph.{u2, u1} M₁ M₂ _inst_12 _inst_16) M₁ M₂ (EquivLike.toEmbeddingLike.{max (succ u2) (succ u1), succ u2, succ u1} (Homeomorph.{u2, u1} M₁ M₂ _inst_12 _inst_16) M₁ M₂ (Homeomorph.instEquivLikeHomeomorph.{u2, u1} M₁ M₂ _inst_12 _inst_16))) (ContinuousLinearEquiv.toHomeomorph.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.coe_to_homeomorph ContinuousLinearEquiv.coe_toHomeomorphₓ'. -/
@[simp]
theorem coe_toHomeomorph (e : M₁ ≃SL[σ₁₂] M₂) : ⇑e.toHomeomorph = e :=
  rfl
#align continuous_linear_equiv.coe_to_homeomorph ContinuousLinearEquiv.coe_toHomeomorph

/- warning: continuous_linear_equiv.image_closure -> ContinuousLinearEquiv.image_closure is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (s : Set.{u3} M₁), Eq.{succ u4} (Set.{u4} M₂) (Set.image.{u3, u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) (closure.{u3} M₁ _inst_12 s)) (closure.{u4} M₂ _inst_16 (Set.image.{u3, u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) s))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (s : Set.{u2} M₁), Eq.{succ u1} (Set.{u1} M₂) (Set.image.{u2, u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) (closure.{u2} M₁ _inst_12 s)) (closure.{u1} M₂ _inst_16 (Set.image.{u2, u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) s))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.image_closure ContinuousLinearEquiv.image_closureₓ'. -/
theorem image_closure (e : M₁ ≃SL[σ₁₂] M₂) (s : Set M₁) : e '' closure s = closure (e '' s) :=
  e.toHomeomorph.image_closure s
#align continuous_linear_equiv.image_closure ContinuousLinearEquiv.image_closure

/- warning: continuous_linear_equiv.preimage_closure -> ContinuousLinearEquiv.preimage_closure is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (s : Set.{u4} M₂), Eq.{succ u3} (Set.{u3} M₁) (Set.preimage.{u3, u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) (closure.{u4} M₂ _inst_16 s)) (closure.{u3} M₁ _inst_12 (Set.preimage.{u3, u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) s))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (s : Set.{u1} M₂), Eq.{succ u2} (Set.{u2} M₁) (Set.preimage.{u2, u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) (closure.{u1} M₂ _inst_16 s)) (closure.{u2} M₁ _inst_12 (Set.preimage.{u2, u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) s))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.preimage_closure ContinuousLinearEquiv.preimage_closureₓ'. -/
theorem preimage_closure (e : M₁ ≃SL[σ₁₂] M₂) (s : Set M₂) : e ⁻¹' closure s = closure (e ⁻¹' s) :=
  e.toHomeomorph.preimage_closure s
#align continuous_linear_equiv.preimage_closure ContinuousLinearEquiv.preimage_closure

/- warning: continuous_linear_equiv.is_closed_image -> ContinuousLinearEquiv.isClosed_image is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {s : Set.{u3} M₁}, Iff (IsClosed.{u4} M₂ _inst_16 (Set.image.{u3, u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) s)) (IsClosed.{u3} M₁ _inst_12 s)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {s : Set.{u2} M₁}, Iff (IsClosed.{u1} M₂ _inst_16 (Set.image.{u2, u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) s)) (IsClosed.{u2} M₁ _inst_12 s)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.is_closed_image ContinuousLinearEquiv.isClosed_imageₓ'. -/
@[simp]
theorem isClosed_image (e : M₁ ≃SL[σ₁₂] M₂) {s : Set M₁} : IsClosed (e '' s) ↔ IsClosed s :=
  e.toHomeomorph.isClosed_image
#align continuous_linear_equiv.is_closed_image ContinuousLinearEquiv.isClosed_image

/- warning: continuous_linear_equiv.map_nhds_eq -> ContinuousLinearEquiv.map_nhds_eq is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (x : M₁), Eq.{succ u4} (Filter.{u4} M₂) (Filter.map.{u3, u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) (nhds.{u3} M₁ _inst_12 x)) (nhds.{u4} M₂ _inst_16 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e x))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (x : M₁), Eq.{succ u1} (Filter.{u1} M₂) (Filter.map.{u2, u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) (nhds.{u2} M₁ _inst_12 x)) (nhds.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_16 (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.map_nhds_eq ContinuousLinearEquiv.map_nhds_eqₓ'. -/
theorem map_nhds_eq (e : M₁ ≃SL[σ₁₂] M₂) (x : M₁) : map e (𝓝 x) = 𝓝 (e x) :=
  e.toHomeomorph.map_nhds_eq x
#align continuous_linear_equiv.map_nhds_eq ContinuousLinearEquiv.map_nhds_eq

/- warning: continuous_linear_equiv.map_zero -> ContinuousLinearEquiv.map_zero is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e (OfNat.ofNat.{u3} M₁ 0 (OfNat.mk.{u3} M₁ 0 (Zero.zero.{u3} M₁ (AddZeroClass.toHasZero.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_13))))))) (OfNat.ofNat.{u4} M₂ 0 (OfNat.mk.{u4} M₂ 0 (Zero.zero.{u4} M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_17))))))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (OfNat.ofNat.{u2} M₁ 0 (Zero.toOfNat0.{u2} M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13))))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e (OfNat.ofNat.{u2} M₁ 0 (Zero.toOfNat0.{u2} M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13))))) (OfNat.ofNat.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (OfNat.ofNat.{u2} M₁ 0 (Zero.toOfNat0.{u2} M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13))))) 0 (Zero.toOfNat0.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (OfNat.ofNat.{u2} M₁ 0 (Zero.toOfNat0.{u2} M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13))))) (AddMonoid.toZero.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (OfNat.ofNat.{u2} M₁ 0 (Zero.toOfNat0.{u2} M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13))))) (AddCommMonoid.toAddMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (OfNat.ofNat.{u2} M₁ 0 (Zero.toOfNat0.{u2} M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13))))) _inst_17))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.map_zero ContinuousLinearEquiv.map_zeroₓ'. -/
-- Make some straightforward lemmas available to `simp`.
@[simp]
theorem map_zero (e : M₁ ≃SL[σ₁₂] M₂) : e (0 : M₁) = 0 :=
  (e : M₁ →SL[σ₁₂] M₂).map_zero
#align continuous_linear_equiv.map_zero ContinuousLinearEquiv.map_zero

/- warning: continuous_linear_equiv.map_add -> ContinuousLinearEquiv.map_add is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (x : M₁) (y : M₁), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e (HAdd.hAdd.{u3, u3, u3} M₁ M₁ M₁ (instHAdd.{u3} M₁ (AddZeroClass.toHasAdd.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_13)))) x y)) (HAdd.hAdd.{u4, u4, u4} M₂ M₂ M₂ (instHAdd.{u4} M₂ (AddZeroClass.toHasAdd.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_17)))) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e x) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e y))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (x : M₁) (y : M₁), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (HAdd.hAdd.{u2, u2, u2} M₁ M₁ M₁ (instHAdd.{u2} M₁ (AddZeroClass.toAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13)))) x y)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e (HAdd.hAdd.{u2, u2, u2} M₁ M₁ M₁ (instHAdd.{u2} M₁ (AddZeroClass.toAdd.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13)))) x y)) (HAdd.hAdd.{u1, u1, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) y) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (instHAdd.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddZeroClass.toAdd.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddMonoid.toAddZeroClass.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_17)))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e y))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.map_add ContinuousLinearEquiv.map_addₓ'. -/
@[simp]
theorem map_add (e : M₁ ≃SL[σ₁₂] M₂) (x y : M₁) : e (x + y) = e x + e y :=
  (e : M₁ →SL[σ₁₂] M₂).map_add x y
#align continuous_linear_equiv.map_add ContinuousLinearEquiv.map_add

/- warning: continuous_linear_equiv.map_smulₛₗ -> ContinuousLinearEquiv.map_smulₛₗ is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (c : R₁) (x : M₁), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e (SMul.smul.{u1, u3} R₁ M₁ (SMulZeroClass.toHasSmul.{u1, u3} R₁ M₁ (AddZeroClass.toHasZero.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_13))) (SMulWithZero.toSmulZeroClass.{u1, u3} R₁ M₁ (MulZeroClass.toHasZero.{u1} R₁ (MulZeroOneClass.toMulZeroClass.{u1} R₁ (MonoidWithZero.toMulZeroOneClass.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)))) (AddZeroClass.toHasZero.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_13))) (MulActionWithZero.toSMulWithZero.{u1, u3} R₁ M₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_13))) (Module.toMulActionWithZero.{u1, u3} R₁ M₁ _inst_1 _inst_13 _inst_22)))) c x)) (SMul.smul.{u2, u4} R₂ M₂ (SMulZeroClass.toHasSmul.{u2, u4} R₂ M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_17))) (SMulWithZero.toSmulZeroClass.{u2, u4} R₂ M₂ (MulZeroClass.toHasZero.{u2} R₂ (MulZeroOneClass.toMulZeroClass.{u2} R₂ (MonoidWithZero.toMulZeroOneClass.{u2} R₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2)))) (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_17))) (MulActionWithZero.toSMulWithZero.{u2, u4} R₂ M₂ (Semiring.toMonoidWithZero.{u2} R₂ _inst_2) (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_17))) (Module.toMulActionWithZero.{u2, u4} R₂ M₂ _inst_2 _inst_17 _inst_24)))) (coeFn.{max (succ u1) (succ u2), max (succ u1) (succ u2)} (RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)) (fun (_x : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)) => R₁ -> R₂) (RingHom.hasCoeToFun.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)) σ₁₂ c) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e x))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (c : R₁) (x : M₁), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (HSMul.hSMul.{u4, u2, u2} R₁ M₁ M₁ (instHSMul.{u4, u2} R₁ M₁ (SMulZeroClass.toSMul.{u4, u2} R₁ M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13)) (SMulWithZero.toSMulZeroClass.{u4, u2} R₁ M₁ (MonoidWithZero.toZero.{u4} R₁ (Semiring.toMonoidWithZero.{u4} R₁ _inst_1)) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13)) (MulActionWithZero.toSMulWithZero.{u4, u2} R₁ M₁ (Semiring.toMonoidWithZero.{u4} R₁ _inst_1) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13)) (Module.toMulActionWithZero.{u4, u2} R₁ M₁ _inst_1 _inst_13 _inst_22))))) c x)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e (HSMul.hSMul.{u4, u2, u2} R₁ M₁ M₁ (instHSMul.{u4, u2} R₁ M₁ (SMulZeroClass.toSMul.{u4, u2} R₁ M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13)) (SMulWithZero.toSMulZeroClass.{u4, u2} R₁ M₁ (MonoidWithZero.toZero.{u4} R₁ (Semiring.toMonoidWithZero.{u4} R₁ _inst_1)) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13)) (MulActionWithZero.toSMulWithZero.{u4, u2} R₁ M₁ (Semiring.toMonoidWithZero.{u4} R₁ _inst_1) (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13)) (Module.toMulActionWithZero.{u4, u2} R₁ M₁ _inst_1 _inst_13 _inst_22))))) c x)) (HSMul.hSMul.{u3, u1, u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (instHSMul.{u3, u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (SMulZeroClass.toSMul.{u3, u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddMonoid.toZero.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_17)) (SMulWithZero.toSMulZeroClass.{u3, u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (MonoidWithZero.toZero.{u3} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) (Semiring.toMonoidWithZero.{u3} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) _inst_2)) (AddMonoid.toZero.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_17)) (MulActionWithZero.toSMulWithZero.{u3, u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (Semiring.toMonoidWithZero.{u3} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) _inst_2) (AddMonoid.toZero.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_17)) (Module.toMulActionWithZero.{u3, u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) c) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_2 _inst_17 _inst_24))))) (FunLike.coe.{max (succ u4) (succ u3), succ u4, succ u3} (RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)) R₁ (fun (_x : R₁) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : R₁) => R₂) _x) (MulHomClass.toFunLike.{max u4 u3, u4, u3} (RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)) R₁ R₂ (NonUnitalNonAssocSemiring.toMul.{u4} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1))) (NonUnitalNonAssocSemiring.toMul.{u3} R₂ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u3} R₂ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2))) (NonUnitalRingHomClass.toMulHomClass.{max u4 u3, u4, u3} (RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)) R₁ R₂ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u3} R₂ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)) (RingHomClass.toNonUnitalRingHomClass.{max u4 u3, u4, u3} (RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)) R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (RingHom.instRingHomClassRingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2))))) σ₁₂ c) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.map_smulₛₗ ContinuousLinearEquiv.map_smulₛₗₓ'. -/
@[simp]
theorem map_smulₛₗ (e : M₁ ≃SL[σ₁₂] M₂) (c : R₁) (x : M₁) : e (c • x) = σ₁₂ c • e x :=
  (e : M₁ →SL[σ₁₂] M₂).map_smulₛₗ c x
#align continuous_linear_equiv.map_smulₛₗ ContinuousLinearEquiv.map_smulₛₗ

omit σ₂₁

/- warning: continuous_linear_equiv.map_smul -> ContinuousLinearEquiv.map_smul is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_16 : TopologicalSpace.{u3} M₂] [_inst_17 : AddCommMonoid.{u3} M₂] [_inst_22 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_13] [_inst_26 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_17] (e : ContinuousLinearEquiv.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (c : R₁) (x : M₁), Eq.{succ u3} M₂ (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (fun (_x : ContinuousLinearEquiv.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) e (SMul.smul.{u1, u2} R₁ M₁ (SMulZeroClass.toHasSmul.{u1, u2} R₁ M₁ (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13))) (SMulWithZero.toSmulZeroClass.{u1, u2} R₁ M₁ (MulZeroClass.toHasZero.{u1} R₁ (MulZeroOneClass.toMulZeroClass.{u1} R₁ (MonoidWithZero.toMulZeroOneClass.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)))) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13))) (MulActionWithZero.toSMulWithZero.{u1, u2} R₁ M₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u2} M₁ (AddMonoid.toAddZeroClass.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13))) (Module.toMulActionWithZero.{u1, u2} R₁ M₁ _inst_1 _inst_13 _inst_22)))) c x)) (SMul.smul.{u1, u3} R₁ M₂ (SMulZeroClass.toHasSmul.{u1, u3} R₁ M₂ (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ _inst_17))) (SMulWithZero.toSmulZeroClass.{u1, u3} R₁ M₂ (MulZeroClass.toHasZero.{u1} R₁ (MulZeroOneClass.toMulZeroClass.{u1} R₁ (MonoidWithZero.toMulZeroOneClass.{u1} R₁ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1)))) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ _inst_17))) (MulActionWithZero.toSMulWithZero.{u1, u3} R₁ M₂ (Semiring.toMonoidWithZero.{u1} R₁ _inst_1) (AddZeroClass.toHasZero.{u3} M₂ (AddMonoid.toAddZeroClass.{u3} M₂ (AddCommMonoid.toAddMonoid.{u3} M₂ _inst_17))) (Module.toMulActionWithZero.{u1, u3} R₁ M₂ _inst_1 _inst_17 _inst_26)))) c (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (fun (_x : ContinuousLinearEquiv.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) e x))
but is expected to have type
  forall {R₁ : Type.{u3}} [_inst_1 : Semiring.{u3} R₁] {M₁ : Type.{u1}} [_inst_12 : TopologicalSpace.{u1} M₁] [_inst_13 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u2}} [_inst_16 : TopologicalSpace.{u2} M₂] [_inst_17 : AddCommMonoid.{u2} M₂] [_inst_22 : Module.{u3, u1} R₁ M₁ _inst_1 _inst_13] [_inst_26 : Module.{u3, u2} R₁ M₂ _inst_1 _inst_17] (e : ContinuousLinearEquiv.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHomInvPair.ids.{u3} R₁ _inst_1) (RingHomInvPair.ids.{u3} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (c : R₁) (x : M₁), Eq.{succ u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (HSMul.hSMul.{u3, u1, u1} R₁ M₁ M₁ (instHSMul.{u3, u1} R₁ M₁ (SMulZeroClass.toSMul.{u3, u1} R₁ M₁ (AddMonoid.toZero.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_13)) (SMulWithZero.toSMulZeroClass.{u3, u1} R₁ M₁ (MonoidWithZero.toZero.{u3} R₁ (Semiring.toMonoidWithZero.{u3} R₁ _inst_1)) (AddMonoid.toZero.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_13)) (MulActionWithZero.toSMulWithZero.{u3, u1} R₁ M₁ (Semiring.toMonoidWithZero.{u3} R₁ _inst_1) (AddMonoid.toZero.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_13)) (Module.toMulActionWithZero.{u3, u1} R₁ M₁ _inst_1 _inst_13 _inst_22))))) c x)) (FunLike.coe.{max (succ u1) (succ u2), succ u1, succ u2} (ContinuousLinearEquiv.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHomInvPair.ids.{u3} R₁ _inst_1) (RingHomInvPair.ids.{u3} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u1 u2, u1, u2} (ContinuousLinearEquiv.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHomInvPair.ids.{u3} R₁ _inst_1) (RingHomInvPair.ids.{u3} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u2, u3, u3, u1, u2} (ContinuousLinearEquiv.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHomInvPair.ids.{u3} R₁ _inst_1) (RingHomInvPair.ids.{u3} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u1 u2, u3, u3, u1, u2} (ContinuousLinearEquiv.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHomInvPair.ids.{u3} R₁ _inst_1) (RingHomInvPair.ids.{u3} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHomInvPair.ids.{u3} R₁ _inst_1) (RingHomInvPair.ids.{u3} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHomInvPair.ids.{u3} R₁ _inst_1) (RingHomInvPair.ids.{u3} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26)))) e (HSMul.hSMul.{u3, u1, u1} R₁ M₁ M₁ (instHSMul.{u3, u1} R₁ M₁ (SMulZeroClass.toSMul.{u3, u1} R₁ M₁ (AddMonoid.toZero.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_13)) (SMulWithZero.toSMulZeroClass.{u3, u1} R₁ M₁ (MonoidWithZero.toZero.{u3} R₁ (Semiring.toMonoidWithZero.{u3} R₁ _inst_1)) (AddMonoid.toZero.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_13)) (MulActionWithZero.toSMulWithZero.{u3, u1} R₁ M₁ (Semiring.toMonoidWithZero.{u3} R₁ _inst_1) (AddMonoid.toZero.{u1} M₁ (AddCommMonoid.toAddMonoid.{u1} M₁ _inst_13)) (Module.toMulActionWithZero.{u3, u1} R₁ M₁ _inst_1 _inst_13 _inst_22))))) c x)) (HSMul.hSMul.{u3, u2, u2} R₁ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (instHSMul.{u3, u2} R₁ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (SMulZeroClass.toSMul.{u3, u2} R₁ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddMonoid.toZero.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_17)) (SMulWithZero.toSMulZeroClass.{u3, u2} R₁ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (MonoidWithZero.toZero.{u3} R₁ (Semiring.toMonoidWithZero.{u3} R₁ _inst_1)) (AddMonoid.toZero.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_17)) (MulActionWithZero.toSMulWithZero.{u3, u2} R₁ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (Semiring.toMonoidWithZero.{u3} R₁ _inst_1) (AddMonoid.toZero.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_17)) (Module.toMulActionWithZero.{u3, u2} R₁ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_1 _inst_17 _inst_26))))) c (FunLike.coe.{max (succ u1) (succ u2), succ u1, succ u2} (ContinuousLinearEquiv.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHomInvPair.ids.{u3} R₁ _inst_1) (RingHomInvPair.ids.{u3} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u1 u2, u1, u2} (ContinuousLinearEquiv.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHomInvPair.ids.{u3} R₁ _inst_1) (RingHomInvPair.ids.{u3} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u2, u3, u3, u1, u2} (ContinuousLinearEquiv.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHomInvPair.ids.{u3} R₁ _inst_1) (RingHomInvPair.ids.{u3} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u1 u2, u3, u3, u1, u2} (ContinuousLinearEquiv.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHomInvPair.ids.{u3} R₁ _inst_1) (RingHomInvPair.ids.{u3} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHomInvPair.ids.{u3} R₁ _inst_1) (RingHomInvPair.ids.{u3} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u3, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHom.id.{u3} R₁ (Semiring.toNonAssocSemiring.{u3} R₁ _inst_1)) (RingHomInvPair.ids.{u3} R₁ _inst_1) (RingHomInvPair.ids.{u3} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26)))) e x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.map_smul ContinuousLinearEquiv.map_smulₓ'. -/
@[simp]
theorem map_smul [Module R₁ M₂] (e : M₁ ≃L[R₁] M₂) (c : R₁) (x : M₁) : e (c • x) = c • e x :=
  (e : M₁ →L[R₁] M₂).map_smul c x
#align continuous_linear_equiv.map_smul ContinuousLinearEquiv.map_smul

include σ₂₁

/- warning: continuous_linear_equiv.map_eq_zero_iff -> ContinuousLinearEquiv.map_eq_zero_iff is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {x : M₁}, Iff (Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e x) (OfNat.ofNat.{u4} M₂ 0 (OfNat.mk.{u4} M₂ 0 (Zero.zero.{u4} M₂ (AddZeroClass.toHasZero.{u4} M₂ (AddMonoid.toAddZeroClass.{u4} M₂ (AddCommMonoid.toAddMonoid.{u4} M₂ _inst_17))))))) (Eq.{succ u3} M₁ x (OfNat.ofNat.{u3} M₁ 0 (OfNat.mk.{u3} M₁ 0 (Zero.zero.{u3} M₁ (AddZeroClass.toHasZero.{u3} M₁ (AddMonoid.toAddZeroClass.{u3} M₁ (AddCommMonoid.toAddMonoid.{u3} M₁ _inst_13)))))))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {x : M₁}, Iff (Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e x) (OfNat.ofNat.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) 0 (Zero.toOfNat0.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddMonoid.toZero.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (AddCommMonoid.toAddMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) _inst_17))))) (Eq.{succ u2} M₁ x (OfNat.ofNat.{u2} M₁ 0 (Zero.toOfNat0.{u2} M₁ (AddMonoid.toZero.{u2} M₁ (AddCommMonoid.toAddMonoid.{u2} M₁ _inst_13)))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.map_eq_zero_iff ContinuousLinearEquiv.map_eq_zero_iffₓ'. -/
@[simp]
theorem map_eq_zero_iff (e : M₁ ≃SL[σ₁₂] M₂) {x : M₁} : e x = 0 ↔ x = 0 :=
  e.toLinearEquiv.map_eq_zero_iff
#align continuous_linear_equiv.map_eq_zero_iff ContinuousLinearEquiv.map_eq_zero_iff

attribute [continuity]
  ContinuousLinearEquiv.continuous_toFun ContinuousLinearEquiv.continuous_invFun

/- warning: continuous_linear_equiv.continuous -> ContinuousLinearEquiv.continuous is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Continuous.{u3, u4} M₁ M₂ _inst_12 _inst_16 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Continuous.{u2, u1} M₁ M₂ _inst_12 _inst_16 (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.continuous ContinuousLinearEquiv.continuousₓ'. -/
@[continuity]
protected theorem continuous (e : M₁ ≃SL[σ₁₂] M₂) : Continuous (e : M₁ → M₂) :=
  e.continuous_toFun
#align continuous_linear_equiv.continuous ContinuousLinearEquiv.continuous

/- warning: continuous_linear_equiv.continuous_on -> ContinuousLinearEquiv.continuousOn is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {s : Set.{u3} M₁}, ContinuousOn.{u3, u4} M₁ M₂ _inst_12 _inst_16 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) s
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {s : Set.{u2} M₁}, ContinuousOn.{u2, u1} M₁ M₂ _inst_12 _inst_16 (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) s
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.continuous_on ContinuousLinearEquiv.continuousOnₓ'. -/
protected theorem continuousOn (e : M₁ ≃SL[σ₁₂] M₂) {s : Set M₁} : ContinuousOn (e : M₁ → M₂) s :=
  e.Continuous.ContinuousOn
#align continuous_linear_equiv.continuous_on ContinuousLinearEquiv.continuousOn

/- warning: continuous_linear_equiv.continuous_at -> ContinuousLinearEquiv.continuousAt is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {x : M₁}, ContinuousAt.{u3, u4} M₁ M₂ _inst_12 _inst_16 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) x
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {x : M₁}, ContinuousAt.{u2, u1} M₁ M₂ _inst_12 _inst_16 (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) x
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.continuous_at ContinuousLinearEquiv.continuousAtₓ'. -/
protected theorem continuousAt (e : M₁ ≃SL[σ₁₂] M₂) {x : M₁} : ContinuousAt (e : M₁ → M₂) x :=
  e.Continuous.ContinuousAt
#align continuous_linear_equiv.continuous_at ContinuousLinearEquiv.continuousAt

/- warning: continuous_linear_equiv.continuous_within_at -> ContinuousLinearEquiv.continuousWithinAt is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {s : Set.{u3} M₁} {x : M₁}, ContinuousWithinAt.{u3, u4} M₁ M₂ _inst_12 _inst_16 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) s x
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {s : Set.{u2} M₁} {x : M₁}, ContinuousWithinAt.{u2, u1} M₁ M₂ _inst_12 _inst_16 (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) s x
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.continuous_within_at ContinuousLinearEquiv.continuousWithinAtₓ'. -/
protected theorem continuousWithinAt (e : M₁ ≃SL[σ₁₂] M₂) {s : Set M₁} {x : M₁} :
    ContinuousWithinAt (e : M₁ → M₂) s x :=
  e.Continuous.ContinuousWithinAt
#align continuous_linear_equiv.continuous_within_at ContinuousLinearEquiv.continuousWithinAt

/- warning: continuous_linear_equiv.comp_continuous_on_iff -> ContinuousLinearEquiv.comp_continuousOn_iff is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] {α : Type.{u5}} [_inst_26 : TopologicalSpace.{u5} α] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {f : α -> M₁} {s : Set.{u5} α}, Iff (ContinuousOn.{u5, u4} α M₂ _inst_26 _inst_16 (Function.comp.{succ u5, succ u3, succ u4} α M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) f) s) (ContinuousOn.{u5, u3} α M₁ _inst_26 _inst_12 f s)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] {α : Type.{u5}} [_inst_26 : TopologicalSpace.{u5} α] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {f : α -> M₁} {s : Set.{u5} α}, Iff (ContinuousOn.{u5, u1} α M₂ _inst_26 _inst_16 (Function.comp.{succ u5, succ u2, succ u1} α M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) f) s) (ContinuousOn.{u5, u2} α M₁ _inst_26 _inst_12 f s)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.comp_continuous_on_iff ContinuousLinearEquiv.comp_continuousOn_iffₓ'. -/
theorem comp_continuousOn_iff {α : Type _} [TopologicalSpace α] (e : M₁ ≃SL[σ₁₂] M₂) {f : α → M₁}
    {s : Set α} : ContinuousOn (e ∘ f) s ↔ ContinuousOn f s :=
  e.toHomeomorph.comp_continuousOn_iff _ _
#align continuous_linear_equiv.comp_continuous_on_iff ContinuousLinearEquiv.comp_continuousOn_iff

/- warning: continuous_linear_equiv.comp_continuous_iff -> ContinuousLinearEquiv.comp_continuous_iff is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] {α : Type.{u5}} [_inst_26 : TopologicalSpace.{u5} α] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {f : α -> M₁}, Iff (Continuous.{u5, u4} α M₂ _inst_26 _inst_16 (Function.comp.{succ u5, succ u3, succ u4} α M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) f)) (Continuous.{u5, u3} α M₁ _inst_26 _inst_12 f)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] {α : Type.{u5}} [_inst_26 : TopologicalSpace.{u5} α] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {f : α -> M₁}, Iff (Continuous.{u5, u1} α M₂ _inst_26 _inst_16 (Function.comp.{succ u5, succ u2, succ u1} α M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) f)) (Continuous.{u5, u2} α M₁ _inst_26 _inst_12 f)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.comp_continuous_iff ContinuousLinearEquiv.comp_continuous_iffₓ'. -/
theorem comp_continuous_iff {α : Type _} [TopologicalSpace α] (e : M₁ ≃SL[σ₁₂] M₂) {f : α → M₁} :
    Continuous (e ∘ f) ↔ Continuous f :=
  e.toHomeomorph.comp_continuous_iff
#align continuous_linear_equiv.comp_continuous_iff ContinuousLinearEquiv.comp_continuous_iff

omit σ₂₁

/- warning: continuous_linear_equiv.ext₁ -> ContinuousLinearEquiv.ext₁ is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] [_inst_22 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_13] [_inst_26 : TopologicalSpace.{u1} R₁] {f : ContinuousLinearEquiv.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u1} R₁ _inst_1) _inst_22} {g : ContinuousLinearEquiv.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u1} R₁ _inst_1) _inst_22}, (Eq.{succ u2} M₁ (coeFn.{max (succ u1) (succ u2), max (succ u1) (succ u2)} (ContinuousLinearEquiv.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u1} R₁ _inst_1) _inst_22) (fun (_x : ContinuousLinearEquiv.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u1} R₁ _inst_1) _inst_22) => R₁ -> M₁) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u1} R₁ _inst_1) _inst_22) f (OfNat.ofNat.{u1} R₁ 1 (OfNat.mk.{u1} R₁ 1 (One.one.{u1} R₁ (AddMonoidWithOne.toOne.{u1} R₁ (AddCommMonoidWithOne.toAddMonoidWithOne.{u1} R₁ (NonAssocSemiring.toAddCommMonoidWithOne.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)))))))) (coeFn.{max (succ u1) (succ u2), max (succ u1) (succ u2)} (ContinuousLinearEquiv.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u1} R₁ _inst_1) _inst_22) (fun (_x : ContinuousLinearEquiv.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u1} R₁ _inst_1) _inst_22) => R₁ -> M₁) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u1} R₁ _inst_1) _inst_22) g (OfNat.ofNat.{u1} R₁ 1 (OfNat.mk.{u1} R₁ 1 (One.one.{u1} R₁ (AddMonoidWithOne.toOne.{u1} R₁ (AddCommMonoidWithOne.toAddMonoidWithOne.{u1} R₁ (NonAssocSemiring.toAddCommMonoidWithOne.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))))))))) -> (Eq.{max (succ u1) (succ u2)} (ContinuousLinearEquiv.{u1, u1, u1, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u1} R₁ _inst_1) _inst_22) f g)
but is expected to have type
  forall {R₁ : Type.{u2}} [_inst_1 : Semiring.{u2} R₁] {M₁ : Type.{u1}} [_inst_12 : TopologicalSpace.{u1} M₁] [_inst_13 : AddCommMonoid.{u1} M₁] [_inst_22 : Module.{u2, u1} R₁ M₁ _inst_1 _inst_13] [_inst_26 : TopologicalSpace.{u2} R₁] {f : ContinuousLinearEquiv.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHomInvPair.ids.{u2} R₁ _inst_1) (RingHomInvPair.ids.{u2} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22} {g : ContinuousLinearEquiv.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHomInvPair.ids.{u2} R₁ _inst_1) (RingHomInvPair.ids.{u2} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22}, (Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₁) (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1)))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHomInvPair.ids.{u2} R₁ _inst_1) (RingHomInvPair.ids.{u2} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22) R₁ (fun (_x : R₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHomInvPair.ids.{u2} R₁ _inst_1) (RingHomInvPair.ids.{u2} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22) R₁ M₁ _inst_26 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u2, u2, u2, u1} (ContinuousLinearEquiv.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHomInvPair.ids.{u2} R₁ _inst_1) (RingHomInvPair.ids.{u2} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u2, u2, u2, u1} (ContinuousLinearEquiv.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHomInvPair.ids.{u2} R₁ _inst_1) (RingHomInvPair.ids.{u2} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHomInvPair.ids.{u2} R₁ _inst_1) (RingHomInvPair.ids.{u2} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHomInvPair.ids.{u2} R₁ _inst_1) (RingHomInvPair.ids.{u2} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22)))) f (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1)))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHomInvPair.ids.{u2} R₁ _inst_1) (RingHomInvPair.ids.{u2} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22) R₁ (fun (_x : R₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R₁) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHomInvPair.ids.{u2} R₁ _inst_1) (RingHomInvPair.ids.{u2} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22) R₁ M₁ _inst_26 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u2, u2, u2, u1} (ContinuousLinearEquiv.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHomInvPair.ids.{u2} R₁ _inst_1) (RingHomInvPair.ids.{u2} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u2, u2, u2, u1} (ContinuousLinearEquiv.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHomInvPair.ids.{u2} R₁ _inst_1) (RingHomInvPair.ids.{u2} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHomInvPair.ids.{u2} R₁ _inst_1) (RingHomInvPair.ids.{u2} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHomInvPair.ids.{u2} R₁ _inst_1) (RingHomInvPair.ids.{u2} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22)))) g (OfNat.ofNat.{u2} R₁ 1 (One.toOfNat1.{u2} R₁ (Semiring.toOne.{u2} R₁ _inst_1))))) -> (Eq.{max (succ u2) (succ u1)} (ContinuousLinearEquiv.{u2, u2, u2, u1} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHom.id.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)) (RingHomInvPair.ids.{u2} R₁ _inst_1) (RingHomInvPair.ids.{u2} R₁ _inst_1) R₁ _inst_26 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R₁ (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R₁ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1))) M₁ _inst_12 _inst_13 (Semiring.toModule.{u2} R₁ _inst_1) _inst_22) f g)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.ext₁ ContinuousLinearEquiv.ext₁ₓ'. -/
/-- An extensionality lemma for `R ≃L[R] M`. -/
theorem ext₁ [TopologicalSpace R₁] {f g : R₁ ≃L[R₁] M₁} (h : f 1 = g 1) : f = g :=
  ext <| funext fun x => mul_one x ▸ by rw [← smul_eq_mul, map_smul, h, map_smul]
#align continuous_linear_equiv.ext₁ ContinuousLinearEquiv.ext₁

section

variable (R₁ M₁)

#print ContinuousLinearEquiv.refl /-
/-- The identity map as a continuous linear equivalence. -/
@[refl]
protected def refl : M₁ ≃L[R₁] M₁ :=
  { LinearEquiv.refl R₁ M₁ with
    continuous_toFun := continuous_id
    continuous_invFun := continuous_id }
#align continuous_linear_equiv.refl ContinuousLinearEquiv.refl
-/

end

#print ContinuousLinearEquiv.coe_refl /-
@[simp, norm_cast]
theorem coe_refl : ↑(ContinuousLinearEquiv.refl R₁ M₁) = ContinuousLinearMap.id R₁ M₁ :=
  rfl
#align continuous_linear_equiv.coe_refl ContinuousLinearEquiv.coe_refl
-/

#print ContinuousLinearEquiv.coe_refl' /-
@[simp, norm_cast]
theorem coe_refl' : ⇑(ContinuousLinearEquiv.refl R₁ M₁) = id :=
  rfl
#align continuous_linear_equiv.coe_refl' ContinuousLinearEquiv.coe_refl'
-/

#print ContinuousLinearEquiv.symm /-
/-- The inverse of a continuous linear equivalence as a continuous linear equivalence-/
@[symm]
protected def symm (e : M₁ ≃SL[σ₁₂] M₂) : M₂ ≃SL[σ₂₁] M₁ :=
  { e.toLinearEquiv.symm with
    continuous_toFun := e.continuous_invFun
    continuous_invFun := e.continuous_toFun }
#align continuous_linear_equiv.symm ContinuousLinearEquiv.symm
-/

include σ₂₁

/- warning: continuous_linear_equiv.symm_to_linear_equiv -> ContinuousLinearEquiv.symm_toLinearEquiv is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{max (succ u4) (succ u3)} (LinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ M₁ _inst_17 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.toLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (LinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_13 _inst_17 _inst_22 _inst_24 σ₁₂ σ₂₁ _inst_4 _inst_5 (ContinuousLinearEquiv.toLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{max (succ u2) (succ u1)} (LinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ M₁ _inst_17 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.toLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (LinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ M₁ M₂ _inst_1 _inst_2 _inst_13 _inst_17 _inst_22 _inst_24 σ₁₂ σ₂₁ _inst_4 _inst_5 (ContinuousLinearEquiv.toLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.symm_to_linear_equiv ContinuousLinearEquiv.symm_toLinearEquivₓ'. -/
@[simp]
theorem symm_toLinearEquiv (e : M₁ ≃SL[σ₁₂] M₂) : e.symm.toLinearEquiv = e.toLinearEquiv.symm :=
  by
  ext
  rfl
#align continuous_linear_equiv.symm_to_linear_equiv ContinuousLinearEquiv.symm_toLinearEquiv

/- warning: continuous_linear_equiv.symm_to_homeomorph -> ContinuousLinearEquiv.symm_toHomeomorph is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{max (succ u4) (succ u3)} (Homeomorph.{u4, u3} M₂ M₁ _inst_16 _inst_12) (Homeomorph.symm.{u3, u4} M₁ M₂ _inst_12 _inst_16 (ContinuousLinearEquiv.toHomeomorph.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (ContinuousLinearEquiv.toHomeomorph.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{max (succ u2) (succ u1)} (Homeomorph.{u1, u2} M₂ M₁ _inst_16 _inst_12) (Homeomorph.symm.{u2, u1} M₁ M₂ _inst_12 _inst_16 (ContinuousLinearEquiv.toHomeomorph.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (ContinuousLinearEquiv.toHomeomorph.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.symm_to_homeomorph ContinuousLinearEquiv.symm_toHomeomorphₓ'. -/
@[simp]
theorem symm_toHomeomorph (e : M₁ ≃SL[σ₁₂] M₂) : e.toHomeomorph.symm = e.symm.toHomeomorph :=
  rfl
#align continuous_linear_equiv.symm_to_homeomorph ContinuousLinearEquiv.symm_toHomeomorph

#print ContinuousLinearEquiv.Simps.apply /-
/-- See Note [custom simps projection]. We need to specify this projection explicitly in this case,
  because it is a composition of multiple projections. -/
def Simps.apply (h : M₁ ≃SL[σ₁₂] M₂) : M₁ → M₂ :=
  h
#align continuous_linear_equiv.simps.apply ContinuousLinearEquiv.Simps.apply
-/

#print ContinuousLinearEquiv.Simps.symm_apply /-
/-- See Note [custom simps projection] -/
def Simps.symm_apply (h : M₁ ≃SL[σ₁₂] M₂) : M₂ → M₁ :=
  h.symm
#align continuous_linear_equiv.simps.symm_apply ContinuousLinearEquiv.Simps.symm_apply
-/

initialize_simps_projections ContinuousLinearEquiv (to_linear_equiv_to_fun → apply,
  to_linear_equiv_inv_fun → symm_apply)

/- warning: continuous_linear_equiv.symm_map_nhds_eq -> ContinuousLinearEquiv.symm_map_nhds_eq is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (x : M₁), Eq.{succ u3} (Filter.{u3} M₁) (Filter.map.{u4, u3} M₂ M₁ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearEquiv.hasCoeToFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (nhds.{u4} M₂ _inst_16 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e x))) (nhds.{u3} M₁ _inst_12 x)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (x : M₁), Eq.{succ u2} (Filter.{u2} M₁) (Filter.map.{u1, u2} M₂ M₁ (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22)))) (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (nhds.{u1} M₂ _inst_16 (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e x))) (nhds.{u2} M₁ _inst_12 x)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.symm_map_nhds_eq ContinuousLinearEquiv.symm_map_nhds_eqₓ'. -/
theorem symm_map_nhds_eq (e : M₁ ≃SL[σ₁₂] M₂) (x : M₁) : map e.symm (𝓝 (e x)) = 𝓝 x :=
  e.toHomeomorph.symm_map_nhds_eq x
#align continuous_linear_equiv.symm_map_nhds_eq ContinuousLinearEquiv.symm_map_nhds_eq

omit σ₂₁

include σ₂₁ σ₃₂ σ₃₁

#print ContinuousLinearEquiv.trans /-
/-- The composition of two continuous linear equivalences as a continuous linear equivalence. -/
@[trans]
protected def trans (e₁ : M₁ ≃SL[σ₁₂] M₂) (e₂ : M₂ ≃SL[σ₂₃] M₃) : M₁ ≃SL[σ₁₃] M₃ :=
  {
    e₁.toLinearEquiv.trans
      e₂.toLinearEquiv with
    continuous_toFun := e₂.continuous_toFun.comp e₁.continuous_toFun
    continuous_invFun := e₁.continuous_invFun.comp e₂.continuous_invFun }
#align continuous_linear_equiv.trans ContinuousLinearEquiv.trans
-/

include σ₁₃

/- warning: continuous_linear_equiv.trans_to_linear_equiv -> ContinuousLinearEquiv.trans_toLinearEquiv is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} {R₃ : Type.{u3}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] [_inst_3 : Semiring.{u3} R₃] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₃₂ : RingHom.{u3, u2} R₃ R₂ (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} [_inst_6 : RingHomInvPair.{u2, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂] [_inst_7 : RingHomInvPair.{u3, u2} R₃ R₂ _inst_3 _inst_2 σ₃₂ σ₂₃] {σ₁₃ : RingHom.{u1, u3} R₁ R₃ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₃₁ : RingHom.{u3, u1} R₃ R₁ (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_8 : RingHomInvPair.{u1, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁] [_inst_9 : RingHomInvPair.{u3, u1} R₃ R₁ _inst_3 _inst_1 σ₃₁ σ₁₃] [_inst_10 : RingHomCompTriple.{u1, u2, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] [_inst_11 : RingHomCompTriple.{u3, u2, u1} R₃ R₂ R₁ _inst_3 _inst_2 _inst_1 σ₃₂ σ₂₁ σ₃₁] {M₁ : Type.{u4}} [_inst_12 : TopologicalSpace.{u4} M₁] [_inst_13 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u5}} [_inst_16 : TopologicalSpace.{u5} M₂] [_inst_17 : AddCommMonoid.{u5} M₂] {M₃ : Type.{u6}} [_inst_18 : TopologicalSpace.{u6} M₃] [_inst_19 : AddCommMonoid.{u6} M₃] [_inst_22 : Module.{u1, u4} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u5} R₂ M₂ _inst_2 _inst_17] [_inst_25 : Module.{u3, u6} R₃ M₃ _inst_3 _inst_19] (e₁ : ContinuousLinearEquiv.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (e₂ : ContinuousLinearEquiv.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25), Eq.{max (succ u4) (succ u6)} (LinearEquiv.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ M₃ _inst_13 _inst_19 _inst_22 _inst_25) (ContinuousLinearEquiv.toLinearEquiv.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25 (ContinuousLinearEquiv.trans.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₁ _inst_4 _inst_5 σ₂₃ σ₃₂ _inst_6 _inst_7 σ₁₃ σ₃₁ _inst_8 _inst_9 _inst_10 _inst_11 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_22 _inst_24 _inst_25 e₁ e₂)) (LinearEquiv.trans.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ M₁ M₂ M₃ _inst_1 _inst_2 _inst_3 _inst_13 _inst_17 _inst_19 _inst_22 _inst_24 _inst_25 σ₁₂ σ₂₃ σ₁₃ σ₂₁ σ₃₂ σ₃₁ _inst_10 _inst_11 _inst_4 _inst_6 _inst_8 _inst_5 _inst_7 _inst_9 (ContinuousLinearEquiv.toLinearEquiv.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e₁) (ContinuousLinearEquiv.toLinearEquiv.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25 e₂))
but is expected to have type
  forall {R₁ : Type.{u6}} {R₂ : Type.{u5}} {R₃ : Type.{u2}} [_inst_1 : Semiring.{u6} R₁] [_inst_2 : Semiring.{u5} R₂] [_inst_3 : Semiring.{u2} R₃] {σ₁₂ : RingHom.{u6, u5} R₁ R₂ (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2)} {σ₂₁ : RingHom.{u5, u6} R₂ R₁ (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u6, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u5, u6} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {σ₂₃ : RingHom.{u5, u2} R₂ R₃ (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3)} {σ₃₂ : RingHom.{u2, u5} R₃ R₂ (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2)} [_inst_6 : RingHomInvPair.{u5, u2} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂] [_inst_7 : RingHomInvPair.{u2, u5} R₃ R₂ _inst_3 _inst_2 σ₃₂ σ₂₃] {σ₁₃ : RingHom.{u6, u2} R₁ R₃ (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3)} {σ₃₁ : RingHom.{u2, u6} R₃ R₁ (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1)} [_inst_8 : RingHomInvPair.{u6, u2} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁] [_inst_9 : RingHomInvPair.{u2, u6} R₃ R₁ _inst_3 _inst_1 σ₃₁ σ₁₃] [_inst_10 : RingHomCompTriple.{u6, u5, u2} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] [_inst_11 : RingHomCompTriple.{u2, u5, u6} R₃ R₂ R₁ _inst_3 _inst_2 _inst_1 σ₃₂ σ₂₁ σ₃₁] {M₁ : Type.{u4}} [_inst_12 : TopologicalSpace.{u4} M₁] [_inst_13 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u3}} [_inst_16 : TopologicalSpace.{u3} M₂] [_inst_17 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u1}} [_inst_18 : TopologicalSpace.{u1} M₃] [_inst_19 : AddCommMonoid.{u1} M₃] [_inst_22 : Module.{u6, u4} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u5, u3} R₂ M₂ _inst_2 _inst_17] [_inst_25 : Module.{u2, u1} R₃ M₃ _inst_3 _inst_19] (e₁ : ContinuousLinearEquiv.{u6, u5, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (e₂ : ContinuousLinearEquiv.{u5, u2, u3, u1} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25), Eq.{max (succ u4) (succ u1)} (LinearEquiv.{u6, u2, u4, u1} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ M₃ _inst_13 _inst_19 _inst_22 _inst_25) (ContinuousLinearEquiv.toLinearEquiv.{u6, u2, u4, u1} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25 (ContinuousLinearEquiv.trans.{u6, u5, u2, u4, u3, u1} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₁ _inst_4 _inst_5 σ₂₃ σ₃₂ _inst_6 _inst_7 σ₁₃ σ₃₁ _inst_8 _inst_9 _inst_10 _inst_11 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_22 _inst_24 _inst_25 e₁ e₂)) (LinearEquiv.trans.{u6, u5, u2, u4, u3, u1} R₁ R₂ R₃ M₁ M₂ M₃ _inst_1 _inst_2 _inst_3 _inst_13 _inst_17 _inst_19 _inst_22 _inst_24 _inst_25 σ₁₂ σ₂₃ σ₁₃ σ₂₁ σ₃₂ σ₃₁ _inst_10 _inst_11 _inst_4 _inst_6 _inst_8 _inst_5 _inst_7 _inst_9 (ContinuousLinearEquiv.toLinearEquiv.{u6, u5, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e₁) (ContinuousLinearEquiv.toLinearEquiv.{u5, u2, u3, u1} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25 e₂))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.trans_to_linear_equiv ContinuousLinearEquiv.trans_toLinearEquivₓ'. -/
@[simp]
theorem trans_toLinearEquiv (e₁ : M₁ ≃SL[σ₁₂] M₂) (e₂ : M₂ ≃SL[σ₂₃] M₃) :
    (e₁.trans e₂).toLinearEquiv = e₁.toLinearEquiv.trans e₂.toLinearEquiv :=
  by
  ext
  rfl
#align continuous_linear_equiv.trans_to_linear_equiv ContinuousLinearEquiv.trans_toLinearEquiv

omit σ₁₃ σ₂₁ σ₃₂ σ₃₁

/- warning: continuous_linear_equiv.prod -> ContinuousLinearEquiv.prod is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_16 : TopologicalSpace.{u3} M₂] [_inst_17 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_18 : TopologicalSpace.{u4} M₃] [_inst_19 : AddCommMonoid.{u4} M₃] {M₄ : Type.{u5}} [_inst_20 : TopologicalSpace.{u5} M₄] [_inst_21 : AddCommMonoid.{u5} M₄] [_inst_22 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_13] [_inst_26 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_17] [_inst_27 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_19] [_inst_28 : Module.{u1, u5} R₁ M₄ _inst_1 _inst_21], (ContinuousLinearEquiv.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) -> (ContinuousLinearEquiv.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) -> (ContinuousLinearEquiv.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28))
but is expected to have type
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_16 : TopologicalSpace.{u3} M₂] [_inst_17 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_18 : TopologicalSpace.{u4} M₃] [_inst_19 : AddCommMonoid.{u4} M₃] {M₄ : Type.{u5}} [_inst_20 : TopologicalSpace.{u5} M₄] [_inst_21 : AddCommMonoid.{u5} M₄] [_inst_22 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_13] [_inst_26 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_17] [_inst_27 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_19] [_inst_28 : Module.{u1, u5} R₁ M₄ _inst_1 _inst_21], (ContinuousLinearEquiv.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) -> (ContinuousLinearEquiv.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) -> (ContinuousLinearEquiv.{u1, u1, max u4 u2, max u5 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) (Prod.{u2, u4} M₁ M₃) (instTopologicalSpaceProd.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.instAddCommMonoidSum.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.{u3, u5} M₂ M₄) (instTopologicalSpaceProd.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.instAddCommMonoidSum.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.prod ContinuousLinearEquiv.prodₓ'. -/
/-- Product of two continuous linear equivalences. The map comes from `equiv.prod_congr`. -/
def prod [Module R₁ M₂] [Module R₁ M₃] [Module R₁ M₄] (e : M₁ ≃L[R₁] M₂) (e' : M₃ ≃L[R₁] M₄) :
    (M₁ × M₃) ≃L[R₁] M₂ × M₄ :=
  {
    e.toLinearEquiv.Prod
      e'.toLinearEquiv with
    continuous_toFun := e.continuous_toFun.Prod_map e'.continuous_toFun
    continuous_invFun := e.continuous_invFun.Prod_map e'.continuous_invFun }
#align continuous_linear_equiv.prod ContinuousLinearEquiv.prod

/- warning: continuous_linear_equiv.prod_apply -> ContinuousLinearEquiv.prod_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_16 : TopologicalSpace.{u3} M₂] [_inst_17 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_18 : TopologicalSpace.{u4} M₃] [_inst_19 : AddCommMonoid.{u4} M₃] {M₄ : Type.{u5}} [_inst_20 : TopologicalSpace.{u5} M₄] [_inst_21 : AddCommMonoid.{u5} M₄] [_inst_22 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_13] [_inst_26 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_17] [_inst_27 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_19] [_inst_28 : Module.{u1, u5} R₁ M₄ _inst_1 _inst_21] (e : ContinuousLinearEquiv.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (e' : ContinuousLinearEquiv.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) (x : Prod.{u2, u4} M₁ M₃), Eq.{max (succ u3) (succ u5)} (Prod.{u3, u5} M₂ M₄) (coeFn.{max (succ (max u2 u4)) (succ (max u3 u5)), max (succ (max u2 u4)) (succ (max u3 u5))} (ContinuousLinearEquiv.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) (fun (_x : ContinuousLinearEquiv.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) => (Prod.{u2, u4} M₁ M₃) -> (Prod.{u3, u5} M₂ M₄)) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) (ContinuousLinearEquiv.prod.{u1, u2, u3, u4, u5} R₁ _inst_1 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_22 _inst_26 _inst_27 _inst_28 e e') x) (Prod.mk.{u3, u5} M₂ M₄ (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (fun (_x : ContinuousLinearEquiv.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) e (Prod.fst.{u2, u4} M₁ M₃ x)) (coeFn.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearEquiv.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) (fun (_x : ContinuousLinearEquiv.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) => M₃ -> M₄) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) e' (Prod.snd.{u2, u4} M₁ M₃ x)))
but is expected to have type
  forall {R₁ : Type.{u5}} [_inst_1 : Semiring.{u5} R₁] {M₁ : Type.{u1}} [_inst_12 : TopologicalSpace.{u1} M₁] [_inst_13 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] {M₃ : Type.{u3}} [_inst_18 : TopologicalSpace.{u3} M₃] [_inst_19 : AddCommMonoid.{u3} M₃] {M₄ : Type.{u2}} [_inst_20 : TopologicalSpace.{u2} M₄] [_inst_21 : AddCommMonoid.{u2} M₄] [_inst_22 : Module.{u5, u1} R₁ M₁ _inst_1 _inst_13] [_inst_26 : Module.{u5, u4} R₁ M₂ _inst_1 _inst_17] [_inst_27 : Module.{u5, u3} R₁ M₃ _inst_1 _inst_19] [_inst_28 : Module.{u5, u2} R₁ M₄ _inst_1 _inst_21] (e : ContinuousLinearEquiv.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (e' : ContinuousLinearEquiv.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) (x : Prod.{u1, u3} M₁ M₃), Eq.{max (succ u4) (succ u2)} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Prod.{u1, u3} M₁ M₃) => Prod.{u4, u2} M₂ M₄) x) (FunLike.coe.{max (max (max (succ u1) (succ u4)) (succ u3)) (succ u2), max (succ u1) (succ u3), max (succ u4) (succ u2)} (ContinuousLinearEquiv.{u5, u5, max u3 u1, max u2 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_12 _inst_18) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_13 _inst_19) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_16 _inst_20) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) (Prod.{u1, u3} M₁ M₃) (fun (_x : Prod.{u1, u3} M₁ M₃) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Prod.{u1, u3} M₁ M₃) => Prod.{u4, u2} M₂ M₄) _x) (ContinuousMapClass.toFunLike.{max (max (max u1 u4) u3) u2, max u1 u3, max u4 u2} (ContinuousLinearEquiv.{u5, u5, max u3 u1, max u2 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_12 _inst_18) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_13 _inst_19) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_16 _inst_20) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) (Prod.{u1, u3} M₁ M₃) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_12 _inst_18) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_16 _inst_20) (ContinuousSemilinearMapClass.toContinuousMapClass.{max (max (max u1 u4) u3) u2, u5, u5, max u1 u3, max u4 u2} (ContinuousLinearEquiv.{u5, u5, max u3 u1, max u2 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_12 _inst_18) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_13 _inst_19) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_16 _inst_20) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_12 _inst_18) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_13 _inst_19) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_16 _inst_20) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28) (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max (max (max u1 u4) u3) u2, u5, u5, max u1 u3, max u4 u2} (ContinuousLinearEquiv.{u5, u5, max u3 u1, max u2 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_12 _inst_18) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_13 _inst_19) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_16 _inst_20) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_12 _inst_18) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_13 _inst_19) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_16 _inst_20) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28) (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u5, u5, max u1 u3, max u4 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_12 _inst_18) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_13 _inst_19) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_16 _inst_20) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28))))) (ContinuousLinearEquiv.prod.{u5, u1, u4, u3, u2} R₁ _inst_1 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_22 _inst_26 _inst_27 _inst_28 e e') x) (Prod.mk.{u4, u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (Prod.fst.{u1, u3} M₁ M₃ x)) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₃) => M₄) (Prod.snd.{u1, u3} M₁ M₃ x)) (FunLike.coe.{max (succ u1) (succ u4), succ u1, succ u4} (ContinuousLinearEquiv.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u1 u4, u1, u4} (ContinuousLinearEquiv.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u4, u5, u5, u1, u4} (ContinuousLinearEquiv.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u1 u4, u5, u5, u1, u4} (ContinuousLinearEquiv.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26)))) e (Prod.fst.{u1, u3} M₁ M₃ x)) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (ContinuousLinearEquiv.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) M₃ (fun (_x : M₃) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₃) => M₄) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u3, u2} (ContinuousLinearEquiv.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) M₃ M₄ _inst_18 _inst_20 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u5, u5, u3, u2} (ContinuousLinearEquiv.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u3 u2, u5, u5, u3, u2} (ContinuousLinearEquiv.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28)))) e' (Prod.snd.{u1, u3} M₁ M₃ x)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.prod_apply ContinuousLinearEquiv.prod_applyₓ'. -/
@[simp, norm_cast]
theorem prod_apply [Module R₁ M₂] [Module R₁ M₃] [Module R₁ M₄] (e : M₁ ≃L[R₁] M₂)
    (e' : M₃ ≃L[R₁] M₄) (x) : e.Prod e' x = (e x.1, e' x.2) :=
  rfl
#align continuous_linear_equiv.prod_apply ContinuousLinearEquiv.prod_apply

/- warning: continuous_linear_equiv.coe_prod -> ContinuousLinearEquiv.coe_prod is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_16 : TopologicalSpace.{u3} M₂] [_inst_17 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_18 : TopologicalSpace.{u4} M₃] [_inst_19 : AddCommMonoid.{u4} M₃] {M₄ : Type.{u5}} [_inst_20 : TopologicalSpace.{u5} M₄] [_inst_21 : AddCommMonoid.{u5} M₄] [_inst_22 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_13] [_inst_26 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_17] [_inst_27 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_19] [_inst_28 : Module.{u1, u5} R₁ M₄ _inst_1 _inst_21] (e : ContinuousLinearEquiv.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (e' : ContinuousLinearEquiv.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28), Eq.{max (succ (max u2 u4)) (succ (max u3 u5))} (ContinuousLinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) ((fun (a : Sort.{max (succ (max u2 u4)) (succ (max u3 u5))}) (b : Sort.{max (succ (max u2 u4)) (succ (max u3 u5))}) [self : HasLiftT.{max (succ (max u2 u4)) (succ (max u3 u5)), max (succ (max u2 u4)) (succ (max u3 u5))} a b] => self.0) (ContinuousLinearEquiv.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) (ContinuousLinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) (HasLiftT.mk.{max (succ (max u2 u4)) (succ (max u3 u5)), max (succ (max u2 u4)) (succ (max u3 u5))} (ContinuousLinearEquiv.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) (ContinuousLinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) (CoeTCₓ.coe.{max (succ (max u2 u4)) (succ (max u3 u5)), max (succ (max u2 u4)) (succ (max u3 u5))} (ContinuousLinearEquiv.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) (ContinuousLinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) (coeBase.{max (succ (max u2 u4)) (succ (max u3 u5)), max (succ (max u2 u4)) (succ (max u3 u5))} (ContinuousLinearEquiv.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) (ContinuousLinearMap.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28))))) (ContinuousLinearEquiv.prod.{u1, u2, u3, u4, u5} R₁ _inst_1 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_22 _inst_26 _inst_27 _inst_28 e e')) (ContinuousLinearMap.prodMap.{u1, u2, u3, u4, u5} R₁ _inst_1 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_22 _inst_26 _inst_27 _inst_28 ((fun (a : Sort.{max (succ u2) (succ u3)}) (b : Sort.{max (succ u2) (succ u3)}) [self : HasLiftT.{max (succ u2) (succ u3), max (succ u2) (succ u3)} a b] => self.0) (ContinuousLinearEquiv.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (HasLiftT.mk.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (CoeTCₓ.coe.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (coeBase.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (ContinuousLinearMap.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26)))) e) ((fun (a : Sort.{max (succ u4) (succ u5)}) (b : Sort.{max (succ u4) (succ u5)}) [self : HasLiftT.{max (succ u4) (succ u5), max (succ u4) (succ u5)} a b] => self.0) (ContinuousLinearEquiv.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) (ContinuousLinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) (HasLiftT.mk.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearEquiv.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) (ContinuousLinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) (CoeTCₓ.coe.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearEquiv.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) (ContinuousLinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) (coeBase.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearEquiv.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) (ContinuousLinearMap.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28)))) e'))
but is expected to have type
  forall {R₁ : Type.{u5}} [_inst_1 : Semiring.{u5} R₁] {M₁ : Type.{u1}} [_inst_12 : TopologicalSpace.{u1} M₁] [_inst_13 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] {M₃ : Type.{u3}} [_inst_18 : TopologicalSpace.{u3} M₃] [_inst_19 : AddCommMonoid.{u3} M₃] {M₄ : Type.{u2}} [_inst_20 : TopologicalSpace.{u2} M₄] [_inst_21 : AddCommMonoid.{u2} M₄] [_inst_22 : Module.{u5, u1} R₁ M₁ _inst_1 _inst_13] [_inst_26 : Module.{u5, u4} R₁ M₂ _inst_1 _inst_17] [_inst_27 : Module.{u5, u3} R₁ M₃ _inst_1 _inst_19] [_inst_28 : Module.{u5, u2} R₁ M₄ _inst_1 _inst_21] (e : ContinuousLinearEquiv.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (e' : ContinuousLinearEquiv.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28), Eq.{max (max (max (succ u1) (succ u4)) (succ u3)) (succ u2)} (ContinuousLinearMap.{u5, u5, max u1 u3, max u4 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_12 _inst_18) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_13 _inst_19) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_16 _inst_20) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28)) (ContinuousLinearEquiv.toContinuousLinearMap.{u5, u5, max u1 u3, max u4 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_12 _inst_18) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_13 _inst_19) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_16 _inst_20) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28) (ContinuousLinearEquiv.prod.{u5, u1, u4, u3, u2} R₁ _inst_1 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_22 _inst_26 _inst_27 _inst_28 e e')) (ContinuousLinearMap.prodMap.{u5, u1, u4, u3, u2} R₁ _inst_1 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_22 _inst_26 _inst_27 _inst_28 (ContinuousLinearEquiv.toContinuousLinearMap.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26 e) (ContinuousLinearEquiv.toContinuousLinearMap.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28 e'))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.coe_prod ContinuousLinearEquiv.coe_prodₓ'. -/
@[simp, norm_cast]
theorem coe_prod [Module R₁ M₂] [Module R₁ M₃] [Module R₁ M₄] (e : M₁ ≃L[R₁] M₂)
    (e' : M₃ ≃L[R₁] M₄) :
    (e.Prod e' : M₁ × M₃ →L[R₁] M₂ × M₄) = (e : M₁ →L[R₁] M₂).Prod_map (e' : M₃ →L[R₁] M₄) :=
  rfl
#align continuous_linear_equiv.coe_prod ContinuousLinearEquiv.coe_prod

/- warning: continuous_linear_equiv.prod_symm -> ContinuousLinearEquiv.prod_symm is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} [_inst_1 : Semiring.{u1} R₁] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u3}} [_inst_16 : TopologicalSpace.{u3} M₂] [_inst_17 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u4}} [_inst_18 : TopologicalSpace.{u4} M₃] [_inst_19 : AddCommMonoid.{u4} M₃] {M₄ : Type.{u5}} [_inst_20 : TopologicalSpace.{u5} M₄] [_inst_21 : AddCommMonoid.{u5} M₄] [_inst_22 : Module.{u1, u2} R₁ M₁ _inst_1 _inst_13] [_inst_26 : Module.{u1, u3} R₁ M₂ _inst_1 _inst_17] [_inst_27 : Module.{u1, u4} R₁ M₃ _inst_1 _inst_19] [_inst_28 : Module.{u1, u5} R₁ M₄ _inst_1 _inst_21] (e : ContinuousLinearEquiv.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (e' : ContinuousLinearEquiv.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28), Eq.{max (succ (max u3 u5)) (succ (max u2 u4))} (ContinuousLinearEquiv.{u1, u1, max u3 u5, max u2 u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27)) (ContinuousLinearEquiv.symm.{u1, u1, max u2 u4, max u3 u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) (Prod.{u2, u4} M₁ M₃) (Prod.topologicalSpace.{u2, u4} M₁ M₃ _inst_12 _inst_18) (Prod.addCommMonoid.{u2, u4} M₁ M₃ _inst_13 _inst_19) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_16 _inst_20) (Prod.addCommMonoid.{u3, u5} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u1, u2, u4} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u1, u3, u5} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28) (ContinuousLinearEquiv.prod.{u1, u2, u3, u4, u5} R₁ _inst_1 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_22 _inst_26 _inst_27 _inst_28 e e')) (ContinuousLinearEquiv.prod.{u1, u3, u2, u5, u4} R₁ _inst_1 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 M₄ _inst_20 _inst_21 M₃ _inst_18 _inst_19 _inst_26 _inst_22 _inst_28 _inst_27 (ContinuousLinearEquiv.symm.{u1, u1, u2, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26 e) (ContinuousLinearEquiv.symm.{u1, u1, u4, u5} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) (RingHomInvPair.ids.{u1} R₁ _inst_1) (RingHomInvPair.ids.{u1} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28 e'))
but is expected to have type
  forall {R₁ : Type.{u5}} [_inst_1 : Semiring.{u5} R₁] {M₁ : Type.{u1}} [_inst_12 : TopologicalSpace.{u1} M₁] [_inst_13 : AddCommMonoid.{u1} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] {M₃ : Type.{u3}} [_inst_18 : TopologicalSpace.{u3} M₃] [_inst_19 : AddCommMonoid.{u3} M₃] {M₄ : Type.{u2}} [_inst_20 : TopologicalSpace.{u2} M₄] [_inst_21 : AddCommMonoid.{u2} M₄] [_inst_22 : Module.{u5, u1} R₁ M₁ _inst_1 _inst_13] [_inst_26 : Module.{u5, u4} R₁ M₂ _inst_1 _inst_17] [_inst_27 : Module.{u5, u3} R₁ M₃ _inst_1 _inst_19] [_inst_28 : Module.{u5, u2} R₁ M₄ _inst_1 _inst_21] (e : ContinuousLinearEquiv.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26) (e' : ContinuousLinearEquiv.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28), Eq.{max (max (max (succ u1) (succ u4)) (succ u3)) (succ u2)} (ContinuousLinearEquiv.{u5, u5, max u4 u2, max u1 u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_16 _inst_20) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_17 _inst_21) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_12 _inst_18) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_13 _inst_19) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27)) (ContinuousLinearEquiv.symm.{u5, u5, max u1 u3, max u4 u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) (Prod.{u1, u3} M₁ M₃) (instTopologicalSpaceProd.{u1, u3} M₁ M₃ _inst_12 _inst_18) (Prod.instAddCommMonoidSum.{u1, u3} M₁ M₃ _inst_13 _inst_19) (Prod.{u4, u2} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M₂ M₄ _inst_16 _inst_20) (Prod.instAddCommMonoidSum.{u4, u2} M₂ M₄ _inst_17 _inst_21) (Prod.module.{u5, u1, u3} R₁ M₁ M₃ _inst_1 _inst_13 _inst_19 _inst_22 _inst_27) (Prod.module.{u5, u4, u2} R₁ M₂ M₄ _inst_1 _inst_17 _inst_21 _inst_26 _inst_28) (ContinuousLinearEquiv.prod.{u5, u1, u4, u3, u2} R₁ _inst_1 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_22 _inst_26 _inst_27 _inst_28 e e')) (ContinuousLinearEquiv.prod.{u5, u4, u1, u2, u3} R₁ _inst_1 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 M₄ _inst_20 _inst_21 M₃ _inst_18 _inst_19 _inst_26 _inst_22 _inst_28 _inst_27 (ContinuousLinearEquiv.symm.{u5, u5, u1, u4} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_26 e) (ContinuousLinearEquiv.symm.{u5, u5, u3, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHom.id.{u5} R₁ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)) (RingHomInvPair.ids.{u5} R₁ _inst_1) (RingHomInvPair.ids.{u5} R₁ _inst_1) M₃ _inst_18 _inst_19 M₄ _inst_20 _inst_21 _inst_27 _inst_28 e'))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.prod_symm ContinuousLinearEquiv.prod_symmₓ'. -/
theorem prod_symm [Module R₁ M₂] [Module R₁ M₃] [Module R₁ M₄] (e : M₁ ≃L[R₁] M₂)
    (e' : M₃ ≃L[R₁] M₄) : (e.Prod e').symm = e.symm.Prod e'.symm :=
  rfl
#align continuous_linear_equiv.prod_symm ContinuousLinearEquiv.prod_symm

include σ₂₁

/- warning: continuous_linear_equiv.bijective -> ContinuousLinearEquiv.bijective is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Function.Bijective.{succ u3, succ u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Function.Bijective.{succ u2, succ u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.bijective ContinuousLinearEquiv.bijectiveₓ'. -/
protected theorem bijective (e : M₁ ≃SL[σ₁₂] M₂) : Function.Bijective e :=
  e.toLinearEquiv.toEquiv.Bijective
#align continuous_linear_equiv.bijective ContinuousLinearEquiv.bijective

/- warning: continuous_linear_equiv.injective -> ContinuousLinearEquiv.injective is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Function.Injective.{succ u3, succ u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Function.Injective.{succ u2, succ u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.injective ContinuousLinearEquiv.injectiveₓ'. -/
protected theorem injective (e : M₁ ≃SL[σ₁₂] M₂) : Function.Injective e :=
  e.toLinearEquiv.toEquiv.Injective
#align continuous_linear_equiv.injective ContinuousLinearEquiv.injective

/- warning: continuous_linear_equiv.surjective -> ContinuousLinearEquiv.surjective is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Function.Surjective.{succ u3, succ u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Function.Surjective.{succ u2, succ u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.surjective ContinuousLinearEquiv.surjectiveₓ'. -/
protected theorem surjective (e : M₁ ≃SL[σ₁₂] M₂) : Function.Surjective e :=
  e.toLinearEquiv.toEquiv.Surjective
#align continuous_linear_equiv.surjective ContinuousLinearEquiv.surjective

include σ₃₂ σ₃₁ σ₁₃

/- warning: continuous_linear_equiv.trans_apply -> ContinuousLinearEquiv.trans_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} {R₃ : Type.{u3}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] [_inst_3 : Semiring.{u3} R₃] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₃₂ : RingHom.{u3, u2} R₃ R₂ (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} [_inst_6 : RingHomInvPair.{u2, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂] [_inst_7 : RingHomInvPair.{u3, u2} R₃ R₂ _inst_3 _inst_2 σ₃₂ σ₂₃] {σ₁₃ : RingHom.{u1, u3} R₁ R₃ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₃₁ : RingHom.{u3, u1} R₃ R₁ (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_8 : RingHomInvPair.{u1, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁] [_inst_9 : RingHomInvPair.{u3, u1} R₃ R₁ _inst_3 _inst_1 σ₃₁ σ₁₃] [_inst_10 : RingHomCompTriple.{u1, u2, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] [_inst_11 : RingHomCompTriple.{u3, u2, u1} R₃ R₂ R₁ _inst_3 _inst_2 _inst_1 σ₃₂ σ₂₁ σ₃₁] {M₁ : Type.{u4}} [_inst_12 : TopologicalSpace.{u4} M₁] [_inst_13 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u5}} [_inst_16 : TopologicalSpace.{u5} M₂] [_inst_17 : AddCommMonoid.{u5} M₂] {M₃ : Type.{u6}} [_inst_18 : TopologicalSpace.{u6} M₃] [_inst_19 : AddCommMonoid.{u6} M₃] [_inst_22 : Module.{u1, u4} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u5} R₂ M₂ _inst_2 _inst_17] [_inst_25 : Module.{u3, u6} R₃ M₃ _inst_3 _inst_19] (e₁ : ContinuousLinearEquiv.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (e₂ : ContinuousLinearEquiv.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) (c : M₁), Eq.{succ u6} M₃ (coeFn.{max (succ u4) (succ u6), max (succ u4) (succ u6)} (ContinuousLinearEquiv.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) (fun (_x : ContinuousLinearEquiv.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) => M₁ -> M₃) (ContinuousLinearEquiv.hasCoeToFun.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) (ContinuousLinearEquiv.trans.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₁ _inst_4 _inst_5 σ₂₃ σ₃₂ _inst_6 _inst_7 σ₁₃ σ₃₁ _inst_8 _inst_9 _inst_10 _inst_11 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_22 _inst_24 _inst_25 e₁ e₂) c) (coeFn.{max (succ u5) (succ u6), max (succ u5) (succ u6)} (ContinuousLinearEquiv.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) (fun (_x : ContinuousLinearEquiv.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) => M₂ -> M₃) (ContinuousLinearEquiv.hasCoeToFun.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) e₂ (coeFn.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearEquiv.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e₁ c))
but is expected to have type
  forall {R₁ : Type.{u6}} {R₂ : Type.{u5}} {R₃ : Type.{u2}} [_inst_1 : Semiring.{u6} R₁] [_inst_2 : Semiring.{u5} R₂] [_inst_3 : Semiring.{u2} R₃] {σ₁₂ : RingHom.{u6, u5} R₁ R₂ (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2)} {σ₂₁ : RingHom.{u5, u6} R₂ R₁ (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u6, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u5, u6} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {σ₂₃ : RingHom.{u5, u2} R₂ R₃ (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3)} {σ₃₂ : RingHom.{u2, u5} R₃ R₂ (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2)} [_inst_6 : RingHomInvPair.{u5, u2} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂] [_inst_7 : RingHomInvPair.{u2, u5} R₃ R₂ _inst_3 _inst_2 σ₃₂ σ₂₃] {σ₁₃ : RingHom.{u6, u2} R₁ R₃ (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3)} {σ₃₁ : RingHom.{u2, u6} R₃ R₁ (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1)} [_inst_8 : RingHomInvPair.{u6, u2} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁] [_inst_9 : RingHomInvPair.{u2, u6} R₃ R₁ _inst_3 _inst_1 σ₃₁ σ₁₃] [_inst_10 : RingHomCompTriple.{u6, u5, u2} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] [_inst_11 : RingHomCompTriple.{u2, u5, u6} R₃ R₂ R₁ _inst_3 _inst_2 _inst_1 σ₃₂ σ₂₁ σ₃₁] {M₁ : Type.{u4}} [_inst_12 : TopologicalSpace.{u4} M₁] [_inst_13 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u3}} [_inst_16 : TopologicalSpace.{u3} M₂] [_inst_17 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u1}} [_inst_18 : TopologicalSpace.{u1} M₃] [_inst_19 : AddCommMonoid.{u1} M₃] [_inst_22 : Module.{u6, u4} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u5, u3} R₂ M₂ _inst_2 _inst_17] [_inst_25 : Module.{u2, u1} R₃ M₃ _inst_3 _inst_19] (e₁ : ContinuousLinearEquiv.{u6, u5, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (e₂ : ContinuousLinearEquiv.{u5, u2, u3, u1} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) (c : M₁), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) c) (FunLike.coe.{max (succ u4) (succ u1), succ u4, succ u1} (ContinuousLinearEquiv.{u6, u2, u4, u1} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) _x) (ContinuousMapClass.toFunLike.{max u4 u1, u4, u1} (ContinuousLinearEquiv.{u6, u2, u4, u1} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) M₁ M₃ _inst_12 _inst_18 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u6, u2, u4, u1} (ContinuousLinearEquiv.{u6, u2, u4, u1} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u4 u1, u6, u2, u4, u1} (ContinuousLinearEquiv.{u6, u2, u4, u1} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u6, u2, u4, u1} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25)))) (ContinuousLinearEquiv.trans.{u6, u5, u2, u4, u3, u1} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₁ _inst_4 _inst_5 σ₂₃ σ₃₂ _inst_6 _inst_7 σ₁₃ σ₃₁ _inst_8 _inst_9 _inst_10 _inst_11 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_22 _inst_24 _inst_25 e₁ e₂) c) (FunLike.coe.{max (succ u3) (succ u1), succ u3, succ u1} (ContinuousLinearEquiv.{u5, u2, u3, u1} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₃) _x) (ContinuousMapClass.toFunLike.{max u3 u1, u3, u1} (ContinuousLinearEquiv.{u5, u2, u3, u1} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) M₂ M₃ _inst_16 _inst_18 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u1, u5, u2, u3, u1} (ContinuousLinearEquiv.{u5, u2, u3, u1} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u3 u1, u5, u2, u3, u1} (ContinuousLinearEquiv.{u5, u2, u3, u1} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u5, u2, u3, u1} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25)))) e₂ (FunLike.coe.{max (succ u4) (succ u3), succ u4, succ u3} (ContinuousLinearEquiv.{u6, u5, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u4 u3, u4, u3} (ContinuousLinearEquiv.{u6, u5, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u3, u6, u5, u4, u3} (ContinuousLinearEquiv.{u6, u5, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u4 u3, u6, u5, u4, u3} (ContinuousLinearEquiv.{u6, u5, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u6, u5, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e₁ c))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.trans_apply ContinuousLinearEquiv.trans_applyₓ'. -/
@[simp]
theorem trans_apply (e₁ : M₁ ≃SL[σ₁₂] M₂) (e₂ : M₂ ≃SL[σ₂₃] M₃) (c : M₁) :
    (e₁.trans e₂) c = e₂ (e₁ c) :=
  rfl
#align continuous_linear_equiv.trans_apply ContinuousLinearEquiv.trans_apply

omit σ₃₂ σ₃₁ σ₁₃

/- warning: continuous_linear_equiv.apply_symm_apply -> ContinuousLinearEquiv.apply_symm_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (c : M₂), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearEquiv.hasCoeToFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e) c)) c
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (c : M₂), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (a : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) a) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22)))) (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e) c)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22)))) (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e) c)) c
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.apply_symm_apply ContinuousLinearEquiv.apply_symm_applyₓ'. -/
@[simp]
theorem apply_symm_apply (e : M₁ ≃SL[σ₁₂] M₂) (c : M₂) : e (e.symm c) = c :=
  e.1.right_inv c
#align continuous_linear_equiv.apply_symm_apply ContinuousLinearEquiv.apply_symm_apply

/- warning: continuous_linear_equiv.symm_apply_apply -> ContinuousLinearEquiv.symm_apply_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (b : M₁), Eq.{succ u3} M₁ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearEquiv.hasCoeToFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e b)) b
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (b : M₁), Eq.{succ u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (a : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) a) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e b)) (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22)))) (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e b)) b
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.symm_apply_apply ContinuousLinearEquiv.symm_apply_applyₓ'. -/
@[simp]
theorem symm_apply_apply (e : M₁ ≃SL[σ₁₂] M₂) (b : M₁) : e.symm (e b) = b :=
  e.1.left_inv b
#align continuous_linear_equiv.symm_apply_apply ContinuousLinearEquiv.symm_apply_apply

include σ₁₂ σ₂₃ σ₁₃ σ₃₁

/- warning: continuous_linear_equiv.symm_trans_apply -> ContinuousLinearEquiv.symm_trans_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} {R₃ : Type.{u3}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] [_inst_3 : Semiring.{u3} R₃] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₃₂ : RingHom.{u3, u2} R₃ R₂ (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} [_inst_6 : RingHomInvPair.{u2, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂] [_inst_7 : RingHomInvPair.{u3, u2} R₃ R₂ _inst_3 _inst_2 σ₃₂ σ₂₃] {σ₁₃ : RingHom.{u1, u3} R₁ R₃ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₃₁ : RingHom.{u3, u1} R₃ R₁ (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_8 : RingHomInvPair.{u1, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁] [_inst_9 : RingHomInvPair.{u3, u1} R₃ R₁ _inst_3 _inst_1 σ₃₁ σ₁₃] [_inst_10 : RingHomCompTriple.{u1, u2, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] [_inst_11 : RingHomCompTriple.{u3, u2, u1} R₃ R₂ R₁ _inst_3 _inst_2 _inst_1 σ₃₂ σ₂₁ σ₃₁] {M₁ : Type.{u4}} [_inst_12 : TopologicalSpace.{u4} M₁] [_inst_13 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u5}} [_inst_16 : TopologicalSpace.{u5} M₂] [_inst_17 : AddCommMonoid.{u5} M₂] {M₃ : Type.{u6}} [_inst_18 : TopologicalSpace.{u6} M₃] [_inst_19 : AddCommMonoid.{u6} M₃] [_inst_22 : Module.{u1, u4} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u5} R₂ M₂ _inst_2 _inst_17] [_inst_25 : Module.{u3, u6} R₃ M₃ _inst_3 _inst_19] (e₁ : ContinuousLinearEquiv.{u2, u1, u5, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (e₂ : ContinuousLinearEquiv.{u3, u2, u6, u5} R₃ R₂ _inst_3 _inst_2 σ₃₂ σ₂₃ _inst_7 _inst_6 M₃ _inst_18 _inst_19 M₂ _inst_16 _inst_17 _inst_25 _inst_24) (c : M₁), Eq.{succ u6} M₃ (coeFn.{max (succ u4) (succ u6), max (succ u4) (succ u6)} (ContinuousLinearEquiv.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) (fun (_x : ContinuousLinearEquiv.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) => M₁ -> M₃) (ContinuousLinearEquiv.hasCoeToFun.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) (ContinuousLinearEquiv.symm.{u3, u1, u6, u4} R₃ R₁ _inst_3 _inst_1 σ₃₁ σ₁₃ _inst_9 _inst_8 M₃ _inst_18 _inst_19 M₁ _inst_12 _inst_13 _inst_25 _inst_22 (ContinuousLinearEquiv.trans.{u3, u2, u1, u6, u5, u4} R₃ R₂ R₁ _inst_3 _inst_2 _inst_1 σ₃₂ σ₂₃ _inst_7 _inst_6 σ₂₁ σ₁₂ _inst_5 _inst_4 σ₃₁ σ₁₃ _inst_9 _inst_8 _inst_11 _inst_10 M₃ _inst_18 _inst_19 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_25 _inst_24 _inst_22 e₂ e₁)) c) (coeFn.{max (succ u5) (succ u6), max (succ u5) (succ u6)} (ContinuousLinearEquiv.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) (fun (_x : ContinuousLinearEquiv.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) => M₂ -> M₃) (ContinuousLinearEquiv.hasCoeToFun.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) (ContinuousLinearEquiv.symm.{u3, u2, u6, u5} R₃ R₂ _inst_3 _inst_2 σ₃₂ σ₂₃ _inst_7 _inst_6 M₃ _inst_18 _inst_19 M₂ _inst_16 _inst_17 _inst_25 _inst_24 e₂) (coeFn.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearEquiv.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.symm.{u2, u1, u5, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 e₁) c))
but is expected to have type
  forall {R₁ : Type.{u5}} {R₂ : Type.{u6}} {R₃ : Type.{u2}} [_inst_1 : Semiring.{u5} R₁] [_inst_2 : Semiring.{u6} R₂] [_inst_3 : Semiring.{u2} R₃] {σ₁₂ : RingHom.{u5, u6} R₁ R₂ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2)} {σ₂₁ : RingHom.{u6, u5} R₂ R₁ (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u5, u6} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u6, u5} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {σ₂₃ : RingHom.{u6, u2} R₂ R₃ (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3)} {σ₃₂ : RingHom.{u2, u6} R₃ R₂ (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u6} R₂ _inst_2)} [_inst_6 : RingHomInvPair.{u6, u2} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂] [_inst_7 : RingHomInvPair.{u2, u6} R₃ R₂ _inst_3 _inst_2 σ₃₂ σ₂₃] {σ₁₃ : RingHom.{u5, u2} R₁ R₃ (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3)} {σ₃₁ : RingHom.{u2, u5} R₃ R₁ (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u5} R₁ _inst_1)} [_inst_8 : RingHomInvPair.{u5, u2} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁] [_inst_9 : RingHomInvPair.{u2, u5} R₃ R₁ _inst_3 _inst_1 σ₃₁ σ₁₃] [_inst_10 : RingHomCompTriple.{u5, u6, u2} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] [_inst_11 : RingHomCompTriple.{u2, u6, u5} R₃ R₂ R₁ _inst_3 _inst_2 _inst_1 σ₃₂ σ₂₁ σ₃₁] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] {M₃ : Type.{u1}} [_inst_18 : TopologicalSpace.{u1} M₃] [_inst_19 : AddCommMonoid.{u1} M₃] [_inst_22 : Module.{u5, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u6, u4} R₂ M₂ _inst_2 _inst_17] [_inst_25 : Module.{u2, u1} R₃ M₃ _inst_3 _inst_19] (e₁ : ContinuousLinearEquiv.{u6, u5, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (e₂ : ContinuousLinearEquiv.{u2, u6, u1, u4} R₃ R₂ _inst_3 _inst_2 σ₃₂ σ₂₃ _inst_7 _inst_6 M₃ _inst_18 _inst_19 M₂ _inst_16 _inst_17 _inst_25 _inst_24) (c : M₁), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) c) (FunLike.coe.{max (succ u3) (succ u1), succ u3, succ u1} (ContinuousLinearEquiv.{u5, u2, u3, u1} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₃) _x) (ContinuousMapClass.toFunLike.{max u3 u1, u3, u1} (ContinuousLinearEquiv.{u5, u2, u3, u1} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) M₁ M₃ _inst_12 _inst_18 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u1, u5, u2, u3, u1} (ContinuousLinearEquiv.{u5, u2, u3, u1} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u3 u1, u5, u2, u3, u1} (ContinuousLinearEquiv.{u5, u2, u3, u1} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u5, u2, u3, u1} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25)))) (ContinuousLinearEquiv.symm.{u2, u5, u1, u3} R₃ R₁ _inst_3 _inst_1 σ₃₁ σ₁₃ _inst_9 _inst_8 M₃ _inst_18 _inst_19 M₁ _inst_12 _inst_13 _inst_25 _inst_22 (ContinuousLinearEquiv.trans.{u2, u6, u5, u1, u4, u3} R₃ R₂ R₁ _inst_3 _inst_2 _inst_1 σ₃₂ σ₂₃ _inst_7 _inst_6 σ₂₁ σ₁₂ _inst_5 _inst_4 σ₃₁ σ₁₃ _inst_9 _inst_8 _inst_11 _inst_10 M₃ _inst_18 _inst_19 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_25 _inst_24 _inst_22 e₂ e₁)) c) (FunLike.coe.{max (succ u4) (succ u1), succ u4, succ u1} (ContinuousLinearEquiv.{u6, u2, u4, u1} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₃) _x) (ContinuousMapClass.toFunLike.{max u4 u1, u4, u1} (ContinuousLinearEquiv.{u6, u2, u4, u1} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) M₂ M₃ _inst_16 _inst_18 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u6, u2, u4, u1} (ContinuousLinearEquiv.{u6, u2, u4, u1} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u4 u1, u6, u2, u4, u1} (ContinuousLinearEquiv.{u6, u2, u4, u1} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u6, u2, u4, u1} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25)))) (ContinuousLinearEquiv.symm.{u2, u6, u1, u4} R₃ R₂ _inst_3 _inst_2 σ₃₂ σ₂₃ _inst_7 _inst_6 M₃ _inst_18 _inst_19 M₂ _inst_16 _inst_17 _inst_25 _inst_24 e₂) (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearEquiv.{u5, u6, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearEquiv.{u5, u6, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u5, u6, u3, u4} (ContinuousLinearEquiv.{u5, u6, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u3 u4, u5, u6, u3, u4} (ContinuousLinearEquiv.{u5, u6, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u5, u6, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) (ContinuousLinearEquiv.symm.{u6, u5, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 e₁) c))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.symm_trans_apply ContinuousLinearEquiv.symm_trans_applyₓ'. -/
@[simp]
theorem symm_trans_apply (e₁ : M₂ ≃SL[σ₂₁] M₁) (e₂ : M₃ ≃SL[σ₃₂] M₂) (c : M₁) :
    (e₂.trans e₁).symm c = e₂.symm (e₁.symm c) :=
  rfl
#align continuous_linear_equiv.symm_trans_apply ContinuousLinearEquiv.symm_trans_apply

omit σ₁₂ σ₂₃ σ₁₃ σ₃₁

/- warning: continuous_linear_equiv.symm_image_image -> ContinuousLinearEquiv.symm_image_image is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (s : Set.{u3} M₁), Eq.{succ u3} (Set.{u3} M₁) (Set.image.{u4, u3} M₂ M₁ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearEquiv.hasCoeToFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (Set.image.{u3, u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) s)) s
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (s : Set.{u2} M₁), Eq.{succ u2} (Set.{u2} M₁) (Set.image.{u1, u2} M₂ M₁ (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22)))) (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (Set.image.{u2, u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) s)) s
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.symm_image_image ContinuousLinearEquiv.symm_image_imageₓ'. -/
@[simp]
theorem symm_image_image (e : M₁ ≃SL[σ₁₂] M₂) (s : Set M₁) : e.symm '' (e '' s) = s :=
  e.toLinearEquiv.toEquiv.symm_image_image s
#align continuous_linear_equiv.symm_image_image ContinuousLinearEquiv.symm_image_image

/- warning: continuous_linear_equiv.image_symm_image -> ContinuousLinearEquiv.image_symm_image is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (s : Set.{u4} M₂), Eq.{succ u4} (Set.{u4} M₂) (Set.image.{u3, u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) (Set.image.{u4, u3} M₂ M₁ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearEquiv.hasCoeToFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) s)) s
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (s : Set.{u1} M₂), Eq.{succ u1} (Set.{u1} M₂) (Set.image.{u2, u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) (Set.image.{u1, u2} M₂ M₁ (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22)))) (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) s)) s
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.image_symm_image ContinuousLinearEquiv.image_symm_imageₓ'. -/
@[simp]
theorem image_symm_image (e : M₁ ≃SL[σ₁₂] M₂) (s : Set M₂) : e '' (e.symm '' s) = s :=
  e.symm.symm_image_image s
#align continuous_linear_equiv.image_symm_image ContinuousLinearEquiv.image_symm_image

include σ₃₂ σ₃₁

/- warning: continuous_linear_equiv.comp_coe -> ContinuousLinearEquiv.comp_coe is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} {R₃ : Type.{u3}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] [_inst_3 : Semiring.{u3} R₃] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {σ₂₃ : RingHom.{u2, u3} R₂ R₃ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₃₂ : RingHom.{u3, u2} R₃ R₂ (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} [_inst_6 : RingHomInvPair.{u2, u3} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂] [_inst_7 : RingHomInvPair.{u3, u2} R₃ R₂ _inst_3 _inst_2 σ₃₂ σ₂₃] {σ₁₃ : RingHom.{u1, u3} R₁ R₃ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3)} {σ₃₁ : RingHom.{u3, u1} R₃ R₁ (Semiring.toNonAssocSemiring.{u3} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_8 : RingHomInvPair.{u1, u3} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁] [_inst_9 : RingHomInvPair.{u3, u1} R₃ R₁ _inst_3 _inst_1 σ₃₁ σ₁₃] [_inst_10 : RingHomCompTriple.{u1, u2, u3} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] [_inst_11 : RingHomCompTriple.{u3, u2, u1} R₃ R₂ R₁ _inst_3 _inst_2 _inst_1 σ₃₂ σ₂₁ σ₃₁] {M₁ : Type.{u4}} [_inst_12 : TopologicalSpace.{u4} M₁] [_inst_13 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u5}} [_inst_16 : TopologicalSpace.{u5} M₂] [_inst_17 : AddCommMonoid.{u5} M₂] {M₃ : Type.{u6}} [_inst_18 : TopologicalSpace.{u6} M₃] [_inst_19 : AddCommMonoid.{u6} M₃] [_inst_22 : Module.{u1, u4} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u5} R₂ M₂ _inst_2 _inst_17] [_inst_25 : Module.{u3, u6} R₃ M₃ _inst_3 _inst_19] (f : ContinuousLinearEquiv.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (f' : ContinuousLinearEquiv.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25), Eq.{max (succ u4) (succ u6)} (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) (ContinuousLinearMap.comp.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_22 _inst_24 _inst_25 _inst_10 ((fun (a : Sort.{max (succ u5) (succ u6)}) (b : Sort.{max (succ u5) (succ u6)}) [self : HasLiftT.{max (succ u5) (succ u6), max (succ u5) (succ u6)} a b] => self.0) (ContinuousLinearEquiv.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) (HasLiftT.mk.{max (succ u5) (succ u6), max (succ u5) (succ u6)} (ContinuousLinearEquiv.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) (CoeTCₓ.coe.{max (succ u5) (succ u6), max (succ u5) (succ u6)} (ContinuousLinearEquiv.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) (coeBase.{max (succ u5) (succ u6), max (succ u5) (succ u6)} (ContinuousLinearEquiv.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) (ContinuousLinearMap.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u2, u3, u5, u6} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25)))) f') ((fun (a : Sort.{max (succ u4) (succ u5)}) (b : Sort.{max (succ u4) (succ u5)}) [self : HasLiftT.{max (succ u4) (succ u5), max (succ u4) (succ u5)} a b] => self.0) (ContinuousLinearEquiv.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (HasLiftT.mk.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearEquiv.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (CoeTCₓ.coe.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearEquiv.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (coeBase.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearEquiv.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u2, u4, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) f)) ((fun (a : Sort.{max (succ u4) (succ u6)}) (b : Sort.{max (succ u4) (succ u6)}) [self : HasLiftT.{max (succ u4) (succ u6), max (succ u4) (succ u6)} a b] => self.0) (ContinuousLinearEquiv.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) (HasLiftT.mk.{max (succ u4) (succ u6), max (succ u4) (succ u6)} (ContinuousLinearEquiv.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) (CoeTCₓ.coe.{max (succ u4) (succ u6), max (succ u4) (succ u6)} (ContinuousLinearEquiv.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) (coeBase.{max (succ u4) (succ u6), max (succ u4) (succ u6)} (ContinuousLinearEquiv.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) (ContinuousLinearMap.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u3, u4, u6} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25)))) (ContinuousLinearEquiv.trans.{u1, u2, u3, u4, u5, u6} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₁ _inst_4 _inst_5 σ₂₃ σ₃₂ _inst_6 _inst_7 σ₁₃ σ₃₁ _inst_8 _inst_9 _inst_10 _inst_11 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_22 _inst_24 _inst_25 f f'))
but is expected to have type
  forall {R₁ : Type.{u6}} {R₂ : Type.{u5}} {R₃ : Type.{u2}} [_inst_1 : Semiring.{u6} R₁] [_inst_2 : Semiring.{u5} R₂] [_inst_3 : Semiring.{u2} R₃] {σ₁₂ : RingHom.{u6, u5} R₁ R₂ (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2)} {σ₂₁ : RingHom.{u5, u6} R₂ R₁ (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u6, u5} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u5, u6} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {σ₂₃ : RingHom.{u5, u2} R₂ R₃ (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3)} {σ₃₂ : RingHom.{u2, u5} R₃ R₂ (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u5} R₂ _inst_2)} [_inst_6 : RingHomInvPair.{u5, u2} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂] [_inst_7 : RingHomInvPair.{u2, u5} R₃ R₂ _inst_3 _inst_2 σ₃₂ σ₂₃] {σ₁₃ : RingHom.{u6, u2} R₁ R₃ (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3)} {σ₃₁ : RingHom.{u2, u6} R₃ R₁ (Semiring.toNonAssocSemiring.{u2} R₃ _inst_3) (Semiring.toNonAssocSemiring.{u6} R₁ _inst_1)} [_inst_8 : RingHomInvPair.{u6, u2} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁] [_inst_9 : RingHomInvPair.{u2, u6} R₃ R₁ _inst_3 _inst_1 σ₃₁ σ₁₃] [_inst_10 : RingHomCompTriple.{u6, u5, u2} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃] [_inst_11 : RingHomCompTriple.{u2, u5, u6} R₃ R₂ R₁ _inst_3 _inst_2 _inst_1 σ₃₂ σ₂₁ σ₃₁] {M₁ : Type.{u4}} [_inst_12 : TopologicalSpace.{u4} M₁] [_inst_13 : AddCommMonoid.{u4} M₁] {M₂ : Type.{u3}} [_inst_16 : TopologicalSpace.{u3} M₂] [_inst_17 : AddCommMonoid.{u3} M₂] {M₃ : Type.{u1}} [_inst_18 : TopologicalSpace.{u1} M₃] [_inst_19 : AddCommMonoid.{u1} M₃] [_inst_22 : Module.{u6, u4} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u5, u3} R₂ M₂ _inst_2 _inst_17] [_inst_25 : Module.{u2, u1} R₃ M₃ _inst_3 _inst_19] (f : ContinuousLinearEquiv.{u6, u5, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (f' : ContinuousLinearEquiv.{u5, u2, u3, u1} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25), Eq.{max (succ u4) (succ u1)} (ContinuousLinearMap.{u6, u2, u4, u1} R₁ R₃ _inst_1 _inst_3 σ₁₃ M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25) (ContinuousLinearMap.comp.{u6, u5, u2, u4, u3, u1} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₃ σ₁₃ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_22 _inst_24 _inst_25 _inst_10 (ContinuousLinearEquiv.toContinuousLinearMap.{u5, u2, u3, u1} R₂ R₃ _inst_2 _inst_3 σ₂₃ σ₃₂ _inst_6 _inst_7 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_24 _inst_25 f') (ContinuousLinearEquiv.toContinuousLinearMap.{u6, u5, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 f)) (ContinuousLinearEquiv.toContinuousLinearMap.{u6, u2, u4, u1} R₁ R₃ _inst_1 _inst_3 σ₁₃ σ₃₁ _inst_8 _inst_9 M₁ _inst_12 _inst_13 M₃ _inst_18 _inst_19 _inst_22 _inst_25 (ContinuousLinearEquiv.trans.{u6, u5, u2, u4, u3, u1} R₁ R₂ R₃ _inst_1 _inst_2 _inst_3 σ₁₂ σ₂₁ _inst_4 _inst_5 σ₂₃ σ₃₂ _inst_6 _inst_7 σ₁₃ σ₃₁ _inst_8 _inst_9 _inst_10 _inst_11 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₃ _inst_18 _inst_19 _inst_22 _inst_24 _inst_25 f f'))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.comp_coe ContinuousLinearEquiv.comp_coeₓ'. -/
@[simp, norm_cast]
theorem comp_coe (f : M₁ ≃SL[σ₁₂] M₂) (f' : M₂ ≃SL[σ₂₃] M₃) :
    (f' : M₂ →SL[σ₂₃] M₃).comp (f : M₁ →SL[σ₁₂] M₂) = (f.trans f' : M₁ →SL[σ₁₃] M₃) :=
  rfl
#align continuous_linear_equiv.comp_coe ContinuousLinearEquiv.comp_coe

omit σ₃₂ σ₃₁ σ₂₁

/- warning: continuous_linear_equiv.coe_comp_coe_symm -> ContinuousLinearEquiv.coe_comp_coe_symm is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{succ u4} (ContinuousLinearMap.{u2, u2, u4, u4} R₂ R₂ _inst_2 _inst_2 (RingHom.id.{u2} R₂ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)) M₂ _inst_16 _inst_17 M₂ _inst_16 _inst_17 _inst_24 _inst_24) (ContinuousLinearMap.comp.{u2, u1, u2, u4, u3, u4} R₂ R₁ R₂ _inst_2 _inst_1 _inst_2 σ₂₁ σ₁₂ (RingHom.id.{u2} R₂ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)) M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_24 _inst_22 _inst_24 (RingHomInvPair.triples₂.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) ((fun (a : Sort.{max (succ u4) (succ u3)}) (b : Sort.{max (succ u4) (succ u3)}) [self : HasLiftT.{max (succ u4) (succ u3), max (succ u4) (succ u3)} a b] => self.0) (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (HasLiftT.mk.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (CoeTCₓ.coe.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (coeBase.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22)))) (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e))) (ContinuousLinearMap.id.{u2, u4} R₂ _inst_2 M₂ _inst_16 _inst_17 _inst_24)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{succ u1} (ContinuousLinearMap.{u3, u3, u1, u1} R₂ R₂ _inst_2 _inst_2 (RingHom.id.{u3} R₂ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)) M₂ _inst_16 _inst_17 M₂ _inst_16 _inst_17 _inst_24 _inst_24) (ContinuousLinearMap.comp.{u3, u4, u3, u1, u2, u1} R₂ R₁ R₂ _inst_2 _inst_1 _inst_2 σ₂₁ σ₁₂ (RingHom.id.{u3} R₂ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)) M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_24 _inst_22 _inst_24 (RingHomInvPair.triples₂.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4) (ContinuousLinearEquiv.toContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e) (ContinuousLinearEquiv.toContinuousLinearMap.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e))) (ContinuousLinearMap.id.{u3, u1} R₂ _inst_2 M₂ _inst_16 _inst_17 _inst_24)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.coe_comp_coe_symm ContinuousLinearEquiv.coe_comp_coe_symmₓ'. -/
@[simp]
theorem coe_comp_coe_symm (e : M₁ ≃SL[σ₁₂] M₂) :
    (e : M₁ →SL[σ₁₂] M₂).comp (e.symm : M₂ →SL[σ₂₁] M₁) = ContinuousLinearMap.id R₂ M₂ :=
  ContinuousLinearMap.ext e.apply_symm_apply
#align continuous_linear_equiv.coe_comp_coe_symm ContinuousLinearEquiv.coe_comp_coe_symm

/- warning: continuous_linear_equiv.coe_symm_comp_coe -> ContinuousLinearEquiv.coe_symm_comp_coe is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{succ u3} (ContinuousLinearMap.{u1, u1, u3, u3} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_12 _inst_13 M₁ _inst_12 _inst_13 _inst_22 _inst_22) (ContinuousLinearMap.comp.{u1, u2, u1, u3, u4, u3} R₁ R₂ R₁ _inst_1 _inst_2 _inst_1 σ₁₂ σ₂₁ (RingHom.id.{u1} R₁ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_22 _inst_24 _inst_22 (RingHomInvPair.triples₂.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5) ((fun (a : Sort.{max (succ u4) (succ u3)}) (b : Sort.{max (succ u4) (succ u3)}) [self : HasLiftT.{max (succ u4) (succ u3), max (succ u4) (succ u3)} a b] => self.0) (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (HasLiftT.mk.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (CoeTCₓ.coe.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (coeBase.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22)))) (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (CoeTCₓ.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e)) (ContinuousLinearMap.id.{u1, u3} R₁ _inst_1 M₁ _inst_12 _inst_13 _inst_22)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{succ u2} (ContinuousLinearMap.{u4, u4, u2, u2} R₁ R₁ _inst_1 _inst_1 (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_12 _inst_13 M₁ _inst_12 _inst_13 _inst_22 _inst_22) (ContinuousLinearMap.comp.{u4, u3, u4, u2, u1, u2} R₁ R₂ R₁ _inst_1 _inst_2 _inst_1 σ₁₂ σ₂₁ (RingHom.id.{u4} R₁ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)) M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_22 _inst_24 _inst_22 (RingHomInvPair.triples₂.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5) (ContinuousLinearEquiv.toContinuousLinearMap.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (ContinuousLinearEquiv.toContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (ContinuousLinearMap.id.{u4, u2} R₁ _inst_1 M₁ _inst_12 _inst_13 _inst_22)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.coe_symm_comp_coe ContinuousLinearEquiv.coe_symm_comp_coeₓ'. -/
@[simp]
theorem coe_symm_comp_coe (e : M₁ ≃SL[σ₁₂] M₂) :
    (e.symm : M₂ →SL[σ₂₁] M₁).comp (e : M₁ →SL[σ₁₂] M₂) = ContinuousLinearMap.id R₁ M₁ :=
  ContinuousLinearMap.ext e.symm_apply_apply
#align continuous_linear_equiv.coe_symm_comp_coe ContinuousLinearEquiv.coe_symm_comp_coe

include σ₂₁

/- warning: continuous_linear_equiv.symm_comp_self -> ContinuousLinearEquiv.symm_comp_self is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{succ u3} (M₁ -> M₁) (Function.comp.{succ u3, succ u4, succ u3} M₁ M₂ M₁ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearEquiv.hasCoeToFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e)) (id.{succ u3} M₁)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{succ u2} (M₁ -> M₁) (Function.comp.{succ u2, succ u1, succ u2} M₁ M₂ M₁ (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22)))) (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e)) (id.{succ u2} M₁)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.symm_comp_self ContinuousLinearEquiv.symm_comp_selfₓ'. -/
@[simp]
theorem symm_comp_self (e : M₁ ≃SL[σ₁₂] M₂) : (e.symm : M₂ → M₁) ∘ (e : M₁ → M₂) = id :=
  by
  ext x
  exact symm_apply_apply e x
#align continuous_linear_equiv.symm_comp_self ContinuousLinearEquiv.symm_comp_self

/- warning: continuous_linear_equiv.self_comp_symm -> ContinuousLinearEquiv.self_comp_symm is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{succ u4} (M₂ -> M₂) (Function.comp.{succ u4, succ u3, succ u4} M₂ M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearEquiv.hasCoeToFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e))) (id.{succ u4} M₂)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{succ u1} (M₂ -> M₂) (Function.comp.{succ u1, succ u2, succ u1} M₂ M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22)))) (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e))) (id.{succ u1} M₂)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.self_comp_symm ContinuousLinearEquiv.self_comp_symmₓ'. -/
@[simp]
theorem self_comp_symm (e : M₁ ≃SL[σ₁₂] M₂) : (e : M₁ → M₂) ∘ (e.symm : M₂ → M₁) = id :=
  by
  ext x
  exact apply_symm_apply e x
#align continuous_linear_equiv.self_comp_symm ContinuousLinearEquiv.self_comp_symm

/- warning: continuous_linear_equiv.symm_symm -> ContinuousLinearEquiv.symm_symm is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.symm.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) e
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24), Eq.{max (succ u2) (succ u1)} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.symm.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) e
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.symm_symm ContinuousLinearEquiv.symm_symmₓ'. -/
@[simp]
theorem symm_symm (e : M₁ ≃SL[σ₁₂] M₂) : e.symm.symm = e :=
  by
  ext x
  rfl
#align continuous_linear_equiv.symm_symm ContinuousLinearEquiv.symm_symm

omit σ₂₁

#print ContinuousLinearEquiv.refl_symm /-
@[simp]
theorem refl_symm : (ContinuousLinearEquiv.refl R₁ M₁).symm = ContinuousLinearEquiv.refl R₁ M₁ :=
  rfl
#align continuous_linear_equiv.refl_symm ContinuousLinearEquiv.refl_symm
-/

include σ₂₁

/- warning: continuous_linear_equiv.symm_symm_apply -> ContinuousLinearEquiv.symm_symm_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (x : M₁), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.symm.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) x) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e x)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (x : M₁), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) (ContinuousLinearEquiv.symm.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e x)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.symm_symm_apply ContinuousLinearEquiv.symm_symm_applyₓ'. -/
theorem symm_symm_apply (e : M₁ ≃SL[σ₁₂] M₂) (x : M₁) : e.symm.symm x = e x :=
  rfl
#align continuous_linear_equiv.symm_symm_apply ContinuousLinearEquiv.symm_symm_apply

/- warning: continuous_linear_equiv.symm_apply_eq -> ContinuousLinearEquiv.symm_apply_eq is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {x : M₂} {y : M₁}, Iff (Eq.{succ u3} M₁ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearEquiv.hasCoeToFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e) x) y) (Eq.{succ u4} M₂ x (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e y))
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {x : M₂} {y : (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) x}, Iff (Eq.{succ u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) x) (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22)))) (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e) x) y) (Eq.{succ u1} M₂ x (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e y))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.symm_apply_eq ContinuousLinearEquiv.symm_apply_eqₓ'. -/
theorem symm_apply_eq (e : M₁ ≃SL[σ₁₂] M₂) {x y} : e.symm x = y ↔ x = e y :=
  e.toLinearEquiv.symm_apply_eq
#align continuous_linear_equiv.symm_apply_eq ContinuousLinearEquiv.symm_apply_eq

/- warning: continuous_linear_equiv.eq_symm_apply -> ContinuousLinearEquiv.eq_symm_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {x : M₂} {y : M₁}, Iff (Eq.{succ u3} M₁ y (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearEquiv.hasCoeToFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e) x)) (Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e y) x)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) {x : M₂} {y : (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) x}, Iff (Eq.{succ u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) x) y (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22)))) (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e) x)) (Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) y) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e y) x)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.eq_symm_apply ContinuousLinearEquiv.eq_symm_applyₓ'. -/
theorem eq_symm_apply (e : M₁ ≃SL[σ₁₂] M₂) {x y} : y = e.symm x ↔ e y = x :=
  e.toLinearEquiv.eq_symm_apply
#align continuous_linear_equiv.eq_symm_apply ContinuousLinearEquiv.eq_symm_apply

/- warning: continuous_linear_equiv.image_eq_preimage -> ContinuousLinearEquiv.image_eq_preimage is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (s : Set.{u3} M₁), Eq.{succ u4} (Set.{u4} M₂) (Set.image.{u3, u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) s) (Set.preimage.{u4, u3} M₂ M₁ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearEquiv.hasCoeToFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) s)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (s : Set.{u2} M₁), Eq.{succ u1} (Set.{u1} M₂) (Set.image.{u2, u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) s) (Set.preimage.{u1, u2} M₂ M₁ (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22)))) (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) s)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.image_eq_preimage ContinuousLinearEquiv.image_eq_preimageₓ'. -/
protected theorem image_eq_preimage (e : M₁ ≃SL[σ₁₂] M₂) (s : Set M₁) : e '' s = e.symm ⁻¹' s :=
  e.toLinearEquiv.toEquiv.image_eq_preimage s
#align continuous_linear_equiv.image_eq_preimage ContinuousLinearEquiv.image_eq_preimage

/- warning: continuous_linear_equiv.image_symm_eq_preimage -> ContinuousLinearEquiv.image_symm_eq_preimage is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (s : Set.{u4} M₂), Eq.{succ u3} (Set.{u3} M₁) (Set.image.{u4, u3} M₂ M₁ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearEquiv.hasCoeToFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) s) (Set.preimage.{u3, u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) s)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (s : Set.{u1} M₂), Eq.{succ u2} (Set.{u2} M₁) (Set.image.{u1, u2} M₂ M₁ (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22)))) (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) s) (Set.preimage.{u2, u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) s)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.image_symm_eq_preimage ContinuousLinearEquiv.image_symm_eq_preimageₓ'. -/
protected theorem image_symm_eq_preimage (e : M₁ ≃SL[σ₁₂] M₂) (s : Set M₂) :
    e.symm '' s = e ⁻¹' s := by rw [e.symm.image_eq_preimage, e.symm_symm]
#align continuous_linear_equiv.image_symm_eq_preimage ContinuousLinearEquiv.image_symm_eq_preimage

/- warning: continuous_linear_equiv.symm_preimage_preimage -> ContinuousLinearEquiv.symm_preimage_preimage is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (s : Set.{u4} M₂), Eq.{succ u4} (Set.{u4} M₂) (Set.preimage.{u4, u3} M₂ M₁ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearEquiv.hasCoeToFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (Set.preimage.{u3, u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) s)) s
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (s : Set.{u1} M₂), Eq.{succ u1} (Set.{u1} M₂) (Set.preimage.{u1, u2} M₂ M₁ (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22)))) (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) (Set.preimage.{u2, u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) s)) s
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.symm_preimage_preimage ContinuousLinearEquiv.symm_preimage_preimageₓ'. -/
@[simp]
protected theorem symm_preimage_preimage (e : M₁ ≃SL[σ₁₂] M₂) (s : Set M₂) :
    e.symm ⁻¹' (e ⁻¹' s) = s :=
  e.toLinearEquiv.toEquiv.symm_preimage_preimage s
#align continuous_linear_equiv.symm_preimage_preimage ContinuousLinearEquiv.symm_preimage_preimage

/- warning: continuous_linear_equiv.preimage_symm_preimage -> ContinuousLinearEquiv.preimage_symm_preimage is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (s : Set.{u3} M₁), Eq.{succ u3} (Set.{u3} M₁) (Set.preimage.{u3, u4} M₁ M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) e) (Set.preimage.{u4, u3} M₂ M₁ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearEquiv.hasCoeToFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) s)) s
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (s : Set.{u2} M₁), Eq.{succ u2} (Set.{u2} M₁) (Set.preimage.{u2, u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) e) (Set.preimage.{u1, u2} M₂ M₁ (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22)))) (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 e)) s)) s
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.preimage_symm_preimage ContinuousLinearEquiv.preimage_symm_preimageₓ'. -/
@[simp]
protected theorem preimage_symm_preimage (e : M₁ ≃SL[σ₁₂] M₂) (s : Set M₁) :
    e ⁻¹' (e.symm ⁻¹' s) = s :=
  e.symm.symm_preimage_preimage s
#align continuous_linear_equiv.preimage_symm_preimage ContinuousLinearEquiv.preimage_symm_preimage

/- warning: continuous_linear_equiv.uniform_embedding -> ContinuousLinearEquiv.uniformEmbedding is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {E₁ : Type.{u3}} {E₂ : Type.{u4}} [_inst_26 : UniformSpace.{u3} E₁] [_inst_27 : UniformSpace.{u4} E₂] [_inst_28 : AddCommGroup.{u3} E₁] [_inst_29 : AddCommGroup.{u4} E₂] [_inst_30 : Module.{u1, u3} R₁ E₁ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28)] [_inst_31 : Module.{u2, u4} R₂ E₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29)] [_inst_32 : UniformAddGroup.{u3} E₁ _inst_26 (AddCommGroup.toAddGroup.{u3} E₁ _inst_28)] [_inst_33 : UniformAddGroup.{u4} E₂ _inst_27 (AddCommGroup.toAddGroup.{u4} E₂ _inst_29)] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ (UniformSpace.toTopologicalSpace.{u3} E₁ _inst_26) (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28) E₂ (UniformSpace.toTopologicalSpace.{u4} E₂ _inst_27) (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29) _inst_30 _inst_31), UniformEmbedding.{u3, u4} E₁ E₂ _inst_26 _inst_27 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ (UniformSpace.toTopologicalSpace.{u3} E₁ _inst_26) (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28) E₂ (UniformSpace.toTopologicalSpace.{u4} E₂ _inst_27) (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29) _inst_30 _inst_31) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ (UniformSpace.toTopologicalSpace.{u3} E₁ _inst_26) (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28) E₂ (UniformSpace.toTopologicalSpace.{u4} E₂ _inst_27) (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29) _inst_30 _inst_31) => E₁ -> E₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ (UniformSpace.toTopologicalSpace.{u3} E₁ _inst_26) (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28) E₂ (UniformSpace.toTopologicalSpace.{u4} E₂ _inst_27) (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29) _inst_30 _inst_31) e)
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u1}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u1} R₂] {σ₁₂ : RingHom.{u2, u1} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2)} {σ₂₁ : RingHom.{u1, u2} R₂ R₁ (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {E₁ : Type.{u4}} {E₂ : Type.{u3}} [_inst_26 : UniformSpace.{u4} E₁] [_inst_27 : UniformSpace.{u3} E₂] [_inst_28 : AddCommGroup.{u4} E₁] [_inst_29 : AddCommGroup.{u3} E₂] [_inst_30 : Module.{u2, u4} R₁ E₁ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28)] [_inst_31 : Module.{u1, u3} R₂ E₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29)] [_inst_32 : UniformAddGroup.{u4} E₁ _inst_26 (AddCommGroup.toAddGroup.{u4} E₁ _inst_28)] [_inst_33 : UniformAddGroup.{u3} E₂ _inst_27 (AddCommGroup.toAddGroup.{u3} E₂ _inst_29)] (e : ContinuousLinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_26) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) E₂ (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_27) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31), UniformEmbedding.{u4, u3} E₁ E₂ _inst_26 _inst_27 (FunLike.coe.{max (succ u4) (succ u3), succ u4, succ u3} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_26) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) E₂ (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_27) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31) E₁ (fun (_x : E₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : E₁) => E₂) _x) (ContinuousMapClass.toFunLike.{max u4 u3, u4, u3} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_26) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) E₂ (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_27) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31) E₁ E₂ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_26) (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_27) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u3, u2, u1, u4, u3} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_26) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) E₂ (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_27) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31) R₁ R₂ _inst_1 _inst_2 σ₁₂ E₁ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_26) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) E₂ (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_27) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u4 u3, u2, u1, u4, u3} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_26) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) E₂ (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_27) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_26) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) E₂ (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_27) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_26) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) E₂ (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_27) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31)))) e)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.uniform_embedding ContinuousLinearEquiv.uniformEmbeddingₓ'. -/
protected theorem uniformEmbedding {E₁ E₂ : Type _} [UniformSpace E₁] [UniformSpace E₂]
    [AddCommGroup E₁] [AddCommGroup E₂] [Module R₁ E₁] [Module R₂ E₂] [UniformAddGroup E₁]
    [UniformAddGroup E₂] (e : E₁ ≃SL[σ₁₂] E₂) : UniformEmbedding e :=
  e.toLinearEquiv.toEquiv.UniformEmbedding e.toContinuousLinearMap.UniformContinuous
    e.symm.toContinuousLinearMap.UniformContinuous
#align continuous_linear_equiv.uniform_embedding ContinuousLinearEquiv.uniformEmbedding

/- warning: linear_equiv.uniform_embedding -> LinearEquiv.uniformEmbedding is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {E₁ : Type.{u3}} {E₂ : Type.{u4}} [_inst_26 : UniformSpace.{u3} E₁] [_inst_27 : UniformSpace.{u4} E₂] [_inst_28 : AddCommGroup.{u3} E₁] [_inst_29 : AddCommGroup.{u4} E₂] [_inst_30 : Module.{u1, u3} R₁ E₁ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28)] [_inst_31 : Module.{u2, u4} R₂ E₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29)] [_inst_32 : UniformAddGroup.{u3} E₁ _inst_26 (AddCommGroup.toAddGroup.{u3} E₁ _inst_28)] [_inst_33 : UniformAddGroup.{u4} E₂ _inst_27 (AddCommGroup.toAddGroup.{u4} E₂ _inst_29)] (e : LinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29) _inst_30 _inst_31), (Continuous.{u3, u4} E₁ E₂ (UniformSpace.toTopologicalSpace.{u3} E₁ _inst_26) (UniformSpace.toTopologicalSpace.{u4} E₂ _inst_27) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29) _inst_30 _inst_31) (fun (_x : LinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29) _inst_30 _inst_31) => E₁ -> E₂) (LinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ E₁ E₂ _inst_1 _inst_2 (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29) _inst_30 _inst_31 σ₁₂ σ₂₁ _inst_4 _inst_5) e)) -> (Continuous.{u4, u3} E₂ E₁ (UniformSpace.toTopologicalSpace.{u4} E₂ _inst_27) (UniformSpace.toTopologicalSpace.{u3} E₁ _inst_26) (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (LinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 E₂ E₁ (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29) (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28) _inst_31 _inst_30) (fun (_x : LinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 E₂ E₁ (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29) (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28) _inst_31 _inst_30) => E₂ -> E₁) (LinearEquiv.hasCoeToFun.{u2, u1, u4, u3} R₂ R₁ E₂ E₁ _inst_2 _inst_1 (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29) (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28) _inst_31 _inst_30 σ₂₁ σ₁₂ _inst_5 _inst_4) (LinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ E₁ E₂ _inst_1 _inst_2 (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29) _inst_30 _inst_31 σ₁₂ σ₂₁ _inst_4 _inst_5 e))) -> (UniformEmbedding.{u3, u4} E₁ E₂ _inst_26 _inst_27 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29) _inst_30 _inst_31) (fun (_x : LinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29) _inst_30 _inst_31) => E₁ -> E₂) (LinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ E₁ E₂ _inst_1 _inst_2 (AddCommGroup.toAddCommMonoid.{u3} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u4} E₂ _inst_29) _inst_30 _inst_31 σ₁₂ σ₂₁ _inst_4 _inst_5) e))
but is expected to have type
  forall {R₁ : Type.{u2}} {R₂ : Type.{u1}} [_inst_1 : Semiring.{u2} R₁] [_inst_2 : Semiring.{u1} R₂] {σ₁₂ : RingHom.{u2, u1} R₁ R₂ (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2)} {σ₂₁ : RingHom.{u1, u2} R₂ R₁ (Semiring.toNonAssocSemiring.{u1} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u2} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {E₁ : Type.{u4}} {E₂ : Type.{u3}} [_inst_26 : UniformSpace.{u4} E₁] [_inst_27 : UniformSpace.{u3} E₂] [_inst_28 : AddCommGroup.{u4} E₁] [_inst_29 : AddCommGroup.{u3} E₂] [_inst_30 : Module.{u2, u4} R₁ E₁ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28)] [_inst_31 : Module.{u1, u3} R₂ E₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29)] [_inst_32 : UniformAddGroup.{u4} E₁ _inst_26 (AddCommGroup.toAddGroup.{u4} E₁ _inst_28)] [_inst_33 : UniformAddGroup.{u3} E₂ _inst_27 (AddCommGroup.toAddGroup.{u3} E₂ _inst_29)] (e : LinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31), (Continuous.{u4, u3} E₁ E₂ (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_26) (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_27) (FunLike.coe.{max (succ u4) (succ u3), succ u4, succ u3} (LinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31) E₁ (fun (_x : E₁) => (fun (x._@.Mathlib.Data.FunLike.Embedding._hyg.19 : E₁) => E₂) _x) (EmbeddingLike.toFunLike.{max (succ u4) (succ u3), succ u4, succ u3} (LinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31) E₁ E₂ (EquivLike.toEmbeddingLike.{max (succ u4) (succ u3), succ u4, succ u3} (LinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31) E₁ E₂ (AddEquivClass.toEquivLike.{max u4 u3, u4, u3} (LinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31) E₁ E₂ (AddZeroClass.toAdd.{u4} E₁ (AddMonoid.toAddZeroClass.{u4} E₁ (AddCommMonoid.toAddMonoid.{u4} E₁ (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28)))) (AddZeroClass.toAdd.{u3} E₂ (AddMonoid.toAddZeroClass.{u3} E₂ (AddCommMonoid.toAddMonoid.{u3} E₂ (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29)))) (SemilinearEquivClass.toAddEquivClass.{max u4 u3, u2, u1, u4, u3} (LinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31 (LinearEquiv.instSemilinearEquivClassLinearEquiv.{u2, u1, u4, u3} R₁ R₂ E₁ E₂ _inst_1 _inst_2 (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31 σ₁₂ σ₂₁ _inst_4 _inst_5))))) e)) -> (Continuous.{u3, u4} E₂ E₁ (UniformSpace.toTopologicalSpace.{u3} E₂ _inst_27) (UniformSpace.toTopologicalSpace.{u4} E₁ _inst_26) (FunLike.coe.{max (succ u4) (succ u3), succ u3, succ u4} (LinearEquiv.{u1, u2, u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 E₂ E₁ (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) _inst_31 _inst_30) E₂ (fun (_x : E₂) => (fun (x._@.Mathlib.Data.FunLike.Embedding._hyg.19 : E₂) => E₁) _x) (EmbeddingLike.toFunLike.{max (succ u4) (succ u3), succ u3, succ u4} (LinearEquiv.{u1, u2, u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 E₂ E₁ (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) _inst_31 _inst_30) E₂ E₁ (EquivLike.toEmbeddingLike.{max (succ u4) (succ u3), succ u3, succ u4} (LinearEquiv.{u1, u2, u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 E₂ E₁ (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) _inst_31 _inst_30) E₂ E₁ (AddEquivClass.toEquivLike.{max u4 u3, u3, u4} (LinearEquiv.{u1, u2, u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 E₂ E₁ (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) _inst_31 _inst_30) E₂ E₁ (AddZeroClass.toAdd.{u3} E₂ (AddMonoid.toAddZeroClass.{u3} E₂ (AddCommMonoid.toAddMonoid.{u3} E₂ (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29)))) (AddZeroClass.toAdd.{u4} E₁ (AddMonoid.toAddZeroClass.{u4} E₁ (AddCommMonoid.toAddMonoid.{u4} E₁ (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28)))) (SemilinearEquivClass.toAddEquivClass.{max u4 u3, u1, u2, u3, u4} (LinearEquiv.{u1, u2, u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 E₂ E₁ (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) _inst_31 _inst_30) R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 E₂ E₁ (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) _inst_31 _inst_30 (LinearEquiv.instSemilinearEquivClassLinearEquiv.{u1, u2, u3, u4} R₂ R₁ E₂ E₁ _inst_2 _inst_1 (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) _inst_31 _inst_30 σ₂₁ σ₁₂ _inst_5 _inst_4))))) (LinearEquiv.symm.{u2, u1, u4, u3} R₁ R₂ E₁ E₂ _inst_1 _inst_2 (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31 σ₁₂ σ₂₁ _inst_4 _inst_5 e))) -> (UniformEmbedding.{u4, u3} E₁ E₂ _inst_26 _inst_27 (FunLike.coe.{max (succ u4) (succ u3), succ u4, succ u3} (LinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31) E₁ (fun (_x : E₁) => (fun (x._@.Mathlib.Data.FunLike.Embedding._hyg.19 : E₁) => E₂) _x) (EmbeddingLike.toFunLike.{max (succ u4) (succ u3), succ u4, succ u3} (LinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31) E₁ E₂ (EquivLike.toEmbeddingLike.{max (succ u4) (succ u3), succ u4, succ u3} (LinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31) E₁ E₂ (AddEquivClass.toEquivLike.{max u4 u3, u4, u3} (LinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31) E₁ E₂ (AddZeroClass.toAdd.{u4} E₁ (AddMonoid.toAddZeroClass.{u4} E₁ (AddCommMonoid.toAddMonoid.{u4} E₁ (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28)))) (AddZeroClass.toAdd.{u3} E₂ (AddMonoid.toAddZeroClass.{u3} E₂ (AddCommMonoid.toAddMonoid.{u3} E₂ (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29)))) (SemilinearEquivClass.toAddEquivClass.{max u4 u3, u2, u1, u4, u3} (LinearEquiv.{u2, u1, u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 E₁ E₂ (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31 (LinearEquiv.instSemilinearEquivClassLinearEquiv.{u2, u1, u4, u3} R₁ R₂ E₁ E₂ _inst_1 _inst_2 (AddCommGroup.toAddCommMonoid.{u4} E₁ _inst_28) (AddCommGroup.toAddCommMonoid.{u3} E₂ _inst_29) _inst_30 _inst_31 σ₁₂ σ₂₁ _inst_4 _inst_5))))) e))
Case conversion may be inaccurate. Consider using '#align linear_equiv.uniform_embedding LinearEquiv.uniformEmbeddingₓ'. -/
protected theorem LinearEquiv.uniformEmbedding {E₁ E₂ : Type _} [UniformSpace E₁] [UniformSpace E₂]
    [AddCommGroup E₁] [AddCommGroup E₂] [Module R₁ E₁] [Module R₂ E₂] [UniformAddGroup E₁]
    [UniformAddGroup E₂] (e : E₁ ≃ₛₗ[σ₁₂] E₂) (h₁ : Continuous e) (h₂ : Continuous e.symm) :
    UniformEmbedding e :=
  ContinuousLinearEquiv.uniformEmbedding
    ({ e with
        continuous_toFun := h₁
        continuous_invFun := h₂ } :
      E₁ ≃SL[σ₁₂] E₂)
#align linear_equiv.uniform_embedding LinearEquiv.uniformEmbedding

omit σ₂₁

/- warning: continuous_linear_equiv.equiv_of_inverse -> ContinuousLinearEquiv.equivOfInverse is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (f₁ : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (f₂ : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22), (Function.LeftInverse.{succ u3, succ u4} M₁ M₂ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearMap.toFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) f₂) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) f₁)) -> (Function.RightInverse.{succ u3, succ u4} M₁ M₂ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearMap.toFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) f₂) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) f₁)) -> (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)
but is expected to have type
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (f₁ : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (f₂ : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22), (Function.LeftInverse.{succ u3, succ u4} M₁ M₂ (FunLike.coe.{max (succ u3) (succ u4), succ u4, succ u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u4, u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u2, u1, u4, u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22))) f₂) (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24))) f₁)) -> (Function.RightInverse.{succ u3, succ u4} M₁ M₂ (FunLike.coe.{max (succ u3) (succ u4), succ u4, succ u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u4, u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u2, u1, u4, u3} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22))) f₂) (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u3 u4, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u4, u1, u2, u3, u4} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24))) f₁)) -> (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.equiv_of_inverse ContinuousLinearEquiv.equivOfInverseₓ'. -/
/-- Create a `continuous_linear_equiv` from two `continuous_linear_map`s that are
inverse of each other. -/
def equivOfInverse (f₁ : M₁ →SL[σ₁₂] M₂) (f₂ : M₂ →SL[σ₂₁] M₁) (h₁ : Function.LeftInverse f₂ f₁)
    (h₂ : Function.RightInverse f₂ f₁) : M₁ ≃SL[σ₁₂] M₂ :=
  { f₁ with
    toFun := f₁
    continuous_toFun := f₁.Continuous
    invFun := f₂
    continuous_invFun := f₂.Continuous
    left_inv := h₁
    right_inv := h₂ }
#align continuous_linear_equiv.equiv_of_inverse ContinuousLinearEquiv.equivOfInverse

include σ₂₁

/- warning: continuous_linear_equiv.equiv_of_inverse_apply -> ContinuousLinearEquiv.equivOfInverse_apply is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (f₁ : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (f₂ : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (h₁ : Function.LeftInverse.{succ u3, succ u4} M₁ M₂ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearMap.toFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) f₂) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) f₁)) (h₂ : Function.RightInverse.{succ u3, succ u4} M₁ M₂ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearMap.toFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) f₂) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) f₁)) (x : M₁), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (ContinuousLinearEquiv.equivOfInverse.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 f₁ f₂ h₁ h₂) x) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) f₁ x)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (f₁ : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (f₂ : ContinuousLinearMap.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (h₁ : Function.LeftInverse.{succ u2, succ u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearMap.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearMap.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearMap.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22))) f₂) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24))) f₁)) (h₂ : Function.RightInverse.{succ u2, succ u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearMap.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearMap.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearMap.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22))) f₂) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24))) f₁)) (x : M₁), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24)))) (ContinuousLinearEquiv.equivOfInverse.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 f₁ f₂ h₁ h₂) x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24))) f₁ x)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.equiv_of_inverse_apply ContinuousLinearEquiv.equivOfInverse_applyₓ'. -/
@[simp]
theorem equivOfInverse_apply (f₁ : M₁ →SL[σ₁₂] M₂) (f₂ h₁ h₂ x) :
    equivOfInverse f₁ f₂ h₁ h₂ x = f₁ x :=
  rfl
#align continuous_linear_equiv.equiv_of_inverse_apply ContinuousLinearEquiv.equivOfInverse_apply

/- warning: continuous_linear_equiv.symm_equiv_of_inverse -> ContinuousLinearEquiv.symm_equivOfInverse is a dubious translation:
lean 3 declaration is
  forall {R₁ : Type.{u1}} {R₂ : Type.{u2}} [_inst_1 : Semiring.{u1} R₁] [_inst_2 : Semiring.{u2} R₂] {σ₁₂ : RingHom.{u1, u2} R₁ R₂ (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2)} {σ₂₁ : RingHom.{u2, u1} R₂ R₁ (Semiring.toNonAssocSemiring.{u2} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u1} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u1, u2} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u2, u1} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u3}} [_inst_12 : TopologicalSpace.{u3} M₁] [_inst_13 : AddCommMonoid.{u3} M₁] {M₂ : Type.{u4}} [_inst_16 : TopologicalSpace.{u4} M₂] [_inst_17 : AddCommMonoid.{u4} M₂] [_inst_22 : Module.{u1, u3} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u2, u4} R₂ M₂ _inst_2 _inst_17] (f₁ : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (f₂ : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (h₁ : Function.LeftInverse.{succ u3, succ u4} M₁ M₂ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearMap.toFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) f₂) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) f₁)) (h₂ : Function.RightInverse.{succ u3, succ u4} M₁ M₂ (coeFn.{max (succ u4) (succ u3), max (succ u4) (succ u3)} (ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (fun (_x : ContinuousLinearMap.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) => M₂ -> M₁) (ContinuousLinearMap.toFun.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) f₂) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) => M₁ -> M₂) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) f₁)), Eq.{max (succ u4) (succ u3)} (ContinuousLinearEquiv.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.symm.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.equivOfInverse.{u1, u2, u3, u4} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 f₁ f₂ h₁ h₂)) (ContinuousLinearEquiv.equivOfInverse.{u2, u1, u4, u3} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 f₂ f₁ h₂ h₁)
but is expected to have type
  forall {R₁ : Type.{u4}} {R₂ : Type.{u3}} [_inst_1 : Semiring.{u4} R₁] [_inst_2 : Semiring.{u3} R₂] {σ₁₂ : RingHom.{u4, u3} R₁ R₂ (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1) (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2)} {σ₂₁ : RingHom.{u3, u4} R₂ R₁ (Semiring.toNonAssocSemiring.{u3} R₂ _inst_2) (Semiring.toNonAssocSemiring.{u4} R₁ _inst_1)} [_inst_4 : RingHomInvPair.{u4, u3} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁] [_inst_5 : RingHomInvPair.{u3, u4} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂] {M₁ : Type.{u2}} [_inst_12 : TopologicalSpace.{u2} M₁] [_inst_13 : AddCommMonoid.{u2} M₁] {M₂ : Type.{u1}} [_inst_16 : TopologicalSpace.{u1} M₂] [_inst_17 : AddCommMonoid.{u1} M₂] [_inst_22 : Module.{u4, u2} R₁ M₁ _inst_1 _inst_13] [_inst_24 : Module.{u3, u1} R₂ M₂ _inst_2 _inst_17] (f₁ : ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) (f₂ : ContinuousLinearMap.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (h₁ : Function.LeftInverse.{succ u2, succ u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearMap.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearMap.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearMap.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22))) f₂) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24))) f₁)) (h₂ : Function.RightInverse.{succ u2, succ u1} M₁ M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearMap.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M₁) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearMap.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) M₂ M₁ _inst_16 _inst_12 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u4, u1, u2} (ContinuousLinearMap.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22))) f₂) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ (fun (_x : M₁) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₁) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) M₁ M₂ _inst_12 _inst_16 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24) R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24))) f₁)), Eq.{max (succ u2) (succ u1)} (ContinuousLinearEquiv.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22) (ContinuousLinearEquiv.symm.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 (ContinuousLinearEquiv.equivOfInverse.{u4, u3, u2, u1} R₁ R₂ _inst_1 _inst_2 σ₁₂ σ₂₁ _inst_4 _inst_5 M₁ _inst_12 _inst_13 M₂ _inst_16 _inst_17 _inst_22 _inst_24 f₁ f₂ h₁ h₂)) (ContinuousLinearEquiv.equivOfInverse.{u3, u4, u1, u2} R₂ R₁ _inst_2 _inst_1 σ₂₁ σ₁₂ _inst_5 _inst_4 M₂ _inst_16 _inst_17 M₁ _inst_12 _inst_13 _inst_24 _inst_22 f₂ f₁ h₂ h₁)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.symm_equiv_of_inverse ContinuousLinearEquiv.symm_equivOfInverseₓ'. -/
@[simp]
theorem symm_equivOfInverse (f₁ : M₁ →SL[σ₁₂] M₂) (f₂ h₁ h₂) :
    (equivOfInverse f₁ f₂ h₁ h₂).symm = equivOfInverse f₂ f₁ h₂ h₁ :=
  rfl
#align continuous_linear_equiv.symm_equiv_of_inverse ContinuousLinearEquiv.symm_equivOfInverse

omit σ₂₁

variable (M₁)

#print ContinuousLinearEquiv.automorphismGroup /-
/-- The continuous linear equivalences from `M` to itself form a group under composition. -/
instance automorphismGroup : Group (M₁ ≃L[R₁] M₁)
    where
  mul f g := g.trans f
  one := ContinuousLinearEquiv.refl R₁ M₁
  inv f := f.symm
  mul_assoc f g h := by
    ext
    rfl
  mul_one f := by
    ext
    rfl
  one_mul f := by
    ext
    rfl
  mul_left_inv f := by
    ext
    exact f.left_inv x
#align continuous_linear_equiv.automorphism_group ContinuousLinearEquiv.automorphismGroup
-/

variable {M₁} {R₄ : Type _} [Semiring R₄] [Module R₄ M₄] {σ₃₄ : R₃ →+* R₄} {σ₄₃ : R₄ →+* R₃}
  [RingHomInvPair σ₃₄ σ₄₃] [RingHomInvPair σ₄₃ σ₃₄] {σ₂₄ : R₂ →+* R₄} {σ₁₄ : R₁ →+* R₄}
  [RingHomCompTriple σ₂₁ σ₁₄ σ₂₄] [RingHomCompTriple σ₂₄ σ₄₃ σ₂₃] [RingHomCompTriple σ₁₃ σ₃₄ σ₁₄]

#print ContinuousLinearEquiv.ulift /-
/-- The continuous linear equivalence between `ulift M₁` and `M₁`. -/
def ulift : ULift M₁ ≃L[R₁] M₁ :=
  { Equiv.ulift with
    map_add' := fun x y => rfl
    map_smul' := fun c x => rfl
    continuous_toFun := continuous_uLift_down
    continuous_invFun := continuous_uLift_up }
#align continuous_linear_equiv.ulift ContinuousLinearEquiv.ulift
-/

include σ₂₁ σ₃₄ σ₂₃ σ₂₄ σ₁₃

#print ContinuousLinearEquiv.arrowCongrEquiv /-
/-- A pair of continuous (semi)linear equivalences generates an equivalence between the spaces of
continuous linear maps. See also `continuous_linear_equiv.arrow_congr`. -/
@[simps]
def arrowCongrEquiv (e₁₂ : M₁ ≃SL[σ₁₂] M₂) (e₄₃ : M₄ ≃SL[σ₄₃] M₃) :
    (M₁ →SL[σ₁₄] M₄) ≃ (M₂ →SL[σ₂₃] M₃)
    where
  toFun f := (e₄₃ : M₄ →SL[σ₄₃] M₃).comp (f.comp (e₁₂.symm : M₂ →SL[σ₂₁] M₁))
  invFun f := (e₄₃.symm : M₃ →SL[σ₃₄] M₄).comp (f.comp (e₁₂ : M₁ →SL[σ₁₂] M₂))
  left_inv f :=
    ContinuousLinearMap.ext fun x => by
      simp only [ContinuousLinearMap.comp_apply, symm_apply_apply, coe_coe]
  right_inv f :=
    ContinuousLinearMap.ext fun x => by
      simp only [ContinuousLinearMap.comp_apply, apply_symm_apply, coe_coe]
#align continuous_linear_equiv.arrow_congr_equiv ContinuousLinearEquiv.arrowCongrEquiv
-/

end AddCommMonoid

section AddCommGroup

variable {R : Type _} [Semiring R] {M : Type _} [TopologicalSpace M] [AddCommGroup M] {M₂ : Type _}
  [TopologicalSpace M₂] [AddCommGroup M₂] {M₃ : Type _} [TopologicalSpace M₃] [AddCommGroup M₃]
  {M₄ : Type _} [TopologicalSpace M₄] [AddCommGroup M₄] [Module R M] [Module R M₂] [Module R M₃]
  [Module R M₄]

variable [TopologicalAddGroup M₄]

/- warning: continuous_linear_equiv.skew_prod -> ContinuousLinearEquiv.skewProd is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {M : Type.{u2}} [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommGroup.{u2} M] {M₂ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₂] [_inst_5 : AddCommGroup.{u3} M₂] {M₃ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₃] [_inst_7 : AddCommGroup.{u4} M₃] {M₄ : Type.{u5}} [_inst_8 : TopologicalSpace.{u5} M₄] [_inst_9 : AddCommGroup.{u5} M₄] [_inst_10 : Module.{u1, u2} R M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3)] [_inst_11 : Module.{u1, u3} R M₂ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5)] [_inst_12 : Module.{u1, u4} R M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7)] [_inst_13 : Module.{u1, u5} R M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9)] [_inst_14 : TopologicalAddGroup.{u5} M₄ _inst_8 (AddCommGroup.toAddGroup.{u5} M₄ _inst_9)], (ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11) -> (ContinuousLinearEquiv.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_12 _inst_13) -> (ContinuousLinearMap.{u1, u1, u2, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_10 _inst_13) -> (ContinuousLinearEquiv.{u1, u1, max u2 u4, max u3 u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Prod.{u2, u4} M M₃) (Prod.topologicalSpace.{u2, u4} M M₃ _inst_2 _inst_6) (Prod.addCommMonoid.{u2, u4} M M₃ (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7)) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_4 _inst_8) (Prod.addCommMonoid.{u3, u5} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9)) (Prod.module.{u1, u2, u4} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) _inst_10 _inst_12) (Prod.module.{u1, u3, u5} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_11 _inst_13))
but is expected to have type
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {M : Type.{u2}} [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommGroup.{u2} M] {M₂ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₂] [_inst_5 : AddCommGroup.{u3} M₂] {M₃ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₃] [_inst_7 : AddCommGroup.{u4} M₃] {M₄ : Type.{u5}} [_inst_8 : TopologicalSpace.{u5} M₄] [_inst_9 : AddCommGroup.{u5} M₄] [_inst_10 : Module.{u1, u2} R M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3)] [_inst_11 : Module.{u1, u3} R M₂ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5)] [_inst_12 : Module.{u1, u4} R M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7)] [_inst_13 : Module.{u1, u5} R M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9)] [_inst_14 : TopologicalAddGroup.{u5} M₄ _inst_8 (AddCommGroup.toAddGroup.{u5} M₄ _inst_9)], (ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11) -> (ContinuousLinearEquiv.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_12 _inst_13) -> (ContinuousLinearMap.{u1, u1, u2, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_10 _inst_13) -> (ContinuousLinearEquiv.{u1, u1, max u4 u2, max u5 u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Prod.{u2, u4} M M₃) (instTopologicalSpaceProd.{u2, u4} M M₃ _inst_2 _inst_6) (Prod.instAddCommMonoidSum.{u2, u4} M M₃ (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7)) (Prod.{u3, u5} M₂ M₄) (instTopologicalSpaceProd.{u3, u5} M₂ M₄ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u3, u5} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9)) (Prod.module.{u1, u2, u4} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) _inst_10 _inst_12) (Prod.module.{u1, u3, u5} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_11 _inst_13))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.skew_prod ContinuousLinearEquiv.skewProdₓ'. -/
/-- Equivalence given by a block lower diagonal matrix. `e` and `e'` are diagonal square blocks,
  and `f` is a rectangular block below the diagonal. -/
def skewProd (e : M ≃L[R] M₂) (e' : M₃ ≃L[R] M₄) (f : M →L[R] M₄) : (M × M₃) ≃L[R] M₂ × M₄ :=
  {
    e.toLinearEquiv.skewProd e'.toLinearEquiv
      ↑f with
    continuous_toFun :=
      (e.continuous_toFun.comp continuous_fst).prod_mk
        ((e'.continuous_toFun.comp continuous_snd).add <| f.Continuous.comp continuous_fst)
    continuous_invFun :=
      (e.continuous_invFun.comp continuous_fst).prod_mk
        (e'.continuous_invFun.comp <|
          continuous_snd.sub <| f.Continuous.comp <| e.continuous_invFun.comp continuous_fst) }
#align continuous_linear_equiv.skew_prod ContinuousLinearEquiv.skewProd

/- warning: continuous_linear_equiv.skew_prod_apply -> ContinuousLinearEquiv.skewProd_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {M : Type.{u2}} [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommGroup.{u2} M] {M₂ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₂] [_inst_5 : AddCommGroup.{u3} M₂] {M₃ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₃] [_inst_7 : AddCommGroup.{u4} M₃] {M₄ : Type.{u5}} [_inst_8 : TopologicalSpace.{u5} M₄] [_inst_9 : AddCommGroup.{u5} M₄] [_inst_10 : Module.{u1, u2} R M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3)] [_inst_11 : Module.{u1, u3} R M₂ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5)] [_inst_12 : Module.{u1, u4} R M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7)] [_inst_13 : Module.{u1, u5} R M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9)] [_inst_14 : TopologicalAddGroup.{u5} M₄ _inst_8 (AddCommGroup.toAddGroup.{u5} M₄ _inst_9)] (e : ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11) (e' : ContinuousLinearEquiv.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_12 _inst_13) (f : ContinuousLinearMap.{u1, u1, u2, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_10 _inst_13) (x : Prod.{u2, u4} M M₃), Eq.{max (succ u3) (succ u5)} (Prod.{u3, u5} M₂ M₄) (coeFn.{max (succ (max u2 u4)) (succ (max u3 u5)), max (succ (max u2 u4)) (succ (max u3 u5))} (ContinuousLinearEquiv.{u1, u1, max u2 u4, max u3 u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Prod.{u2, u4} M M₃) (Prod.topologicalSpace.{u2, u4} M M₃ _inst_2 _inst_6) (Prod.addCommMonoid.{u2, u4} M M₃ (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7)) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_4 _inst_8) (Prod.addCommMonoid.{u3, u5} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9)) (Prod.module.{u1, u2, u4} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) _inst_10 _inst_12) (Prod.module.{u1, u3, u5} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_11 _inst_13)) (fun (_x : ContinuousLinearEquiv.{u1, u1, max u2 u4, max u3 u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Prod.{u2, u4} M M₃) (Prod.topologicalSpace.{u2, u4} M M₃ _inst_2 _inst_6) (Prod.addCommMonoid.{u2, u4} M M₃ (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7)) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_4 _inst_8) (Prod.addCommMonoid.{u3, u5} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9)) (Prod.module.{u1, u2, u4} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) _inst_10 _inst_12) (Prod.module.{u1, u3, u5} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_11 _inst_13)) => (Prod.{u2, u4} M M₃) -> (Prod.{u3, u5} M₂ M₄)) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, max u2 u4, max u3 u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Prod.{u2, u4} M M₃) (Prod.topologicalSpace.{u2, u4} M M₃ _inst_2 _inst_6) (Prod.addCommMonoid.{u2, u4} M M₃ (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7)) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_4 _inst_8) (Prod.addCommMonoid.{u3, u5} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9)) (Prod.module.{u1, u2, u4} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) _inst_10 _inst_12) (Prod.module.{u1, u3, u5} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_11 _inst_13)) (ContinuousLinearEquiv.skewProd.{u1, u2, u3, u4, u5} R _inst_1 M _inst_2 _inst_3 M₂ _inst_4 _inst_5 M₃ _inst_6 _inst_7 M₄ _inst_8 _inst_9 _inst_10 _inst_11 _inst_12 _inst_13 _inst_14 e e' f) x) (Prod.mk.{u3, u5} M₂ M₄ (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11) (fun (_x : ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11) => M -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11) e (Prod.fst.{u2, u4} M M₃ x)) (HAdd.hAdd.{u5, u5, u5} M₄ M₄ M₄ (instHAdd.{u5} M₄ (AddZeroClass.toHasAdd.{u5} M₄ (AddMonoid.toAddZeroClass.{u5} M₄ (SubNegMonoid.toAddMonoid.{u5} M₄ (AddGroup.toSubNegMonoid.{u5} M₄ (AddCommGroup.toAddGroup.{u5} M₄ _inst_9)))))) (coeFn.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearEquiv.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_12 _inst_13) (fun (_x : ContinuousLinearEquiv.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_12 _inst_13) => M₃ -> M₄) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_12 _inst_13) e' (Prod.snd.{u2, u4} M M₃ x)) (coeFn.{max (succ u2) (succ u5), max (succ u2) (succ u5)} (ContinuousLinearMap.{u1, u1, u2, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_10 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_10 _inst_13) => M -> M₄) (ContinuousLinearMap.toFun.{u1, u1, u2, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_10 _inst_13) f (Prod.fst.{u2, u4} M M₃ x))))
but is expected to have type
  forall {R : Type.{u5}} [_inst_1 : Semiring.{u5} R] {M : Type.{u4}} [_inst_2 : TopologicalSpace.{u4} M] [_inst_3 : AddCommGroup.{u4} M] {M₂ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₂] [_inst_5 : AddCommGroup.{u3} M₂] {M₃ : Type.{u2}} [_inst_6 : TopologicalSpace.{u2} M₃] [_inst_7 : AddCommGroup.{u2} M₃] {M₄ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₄] [_inst_9 : AddCommGroup.{u1} M₄] [_inst_10 : Module.{u5, u4} R M _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3)] [_inst_11 : Module.{u5, u3} R M₂ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5)] [_inst_12 : Module.{u5, u2} R M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)] [_inst_13 : Module.{u5, u1} R M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)] [_inst_14 : TopologicalAddGroup.{u1} M₄ _inst_8 (AddCommGroup.toAddGroup.{u1} M₄ _inst_9)] (e : ContinuousLinearEquiv.{u5, u5, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11) (e' : ContinuousLinearEquiv.{u5, u5, u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_12 _inst_13) (f : ContinuousLinearMap.{u5, u5, u4, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13) (x : Prod.{u4, u2} M M₃), Eq.{max (succ u3) (succ u1)} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Prod.{u4, u2} M M₃) => Prod.{u3, u1} M₂ M₄) x) (FunLike.coe.{max (max (max (succ u4) (succ u3)) (succ u2)) (succ u1), max (succ u4) (succ u2), max (succ u3) (succ u1)} (ContinuousLinearEquiv.{u5, u5, max u2 u4, max u1 u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) (Prod.{u4, u2} M M₃) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (Prod.instAddCommMonoidSum.{u4, u2} M M₃ (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)) (Prod.{u3, u1} M₂ M₄) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u3, u1} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)) (Prod.module.{u5, u4, u2} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_10 _inst_12) (Prod.module.{u5, u3, u1} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_11 _inst_13)) (Prod.{u4, u2} M M₃) (fun (_x : Prod.{u4, u2} M M₃) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Prod.{u4, u2} M M₃) => Prod.{u3, u1} M₂ M₄) _x) (ContinuousMapClass.toFunLike.{max (max (max u4 u3) u2) u1, max u4 u2, max u3 u1} (ContinuousLinearEquiv.{u5, u5, max u2 u4, max u1 u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) (Prod.{u4, u2} M M₃) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (Prod.instAddCommMonoidSum.{u4, u2} M M₃ (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)) (Prod.{u3, u1} M₂ M₄) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u3, u1} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)) (Prod.module.{u5, u4, u2} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_10 _inst_12) (Prod.module.{u5, u3, u1} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_11 _inst_13)) (Prod.{u4, u2} M M₃) (Prod.{u3, u1} M₂ M₄) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (ContinuousSemilinearMapClass.toContinuousMapClass.{max (max (max u4 u3) u2) u1, u5, u5, max u4 u2, max u3 u1} (ContinuousLinearEquiv.{u5, u5, max u2 u4, max u1 u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) (Prod.{u4, u2} M M₃) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (Prod.instAddCommMonoidSum.{u4, u2} M M₃ (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)) (Prod.{u3, u1} M₂ M₄) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u3, u1} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)) (Prod.module.{u5, u4, u2} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_10 _inst_12) (Prod.module.{u5, u3, u1} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_11 _inst_13)) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (Prod.{u4, u2} M M₃) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (Prod.instAddCommMonoidSum.{u4, u2} M M₃ (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)) (Prod.{u3, u1} M₂ M₄) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u3, u1} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)) (Prod.module.{u5, u4, u2} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_10 _inst_12) (Prod.module.{u5, u3, u1} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_11 _inst_13) (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max (max (max u4 u3) u2) u1, u5, u5, max u4 u2, max u3 u1} (ContinuousLinearEquiv.{u5, u5, max u2 u4, max u1 u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) (Prod.{u4, u2} M M₃) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (Prod.instAddCommMonoidSum.{u4, u2} M M₃ (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)) (Prod.{u3, u1} M₂ M₄) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u3, u1} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)) (Prod.module.{u5, u4, u2} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_10 _inst_12) (Prod.module.{u5, u3, u1} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_11 _inst_13)) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) (Prod.{u4, u2} M M₃) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (Prod.instAddCommMonoidSum.{u4, u2} M M₃ (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)) (Prod.{u3, u1} M₂ M₄) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u3, u1} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)) (Prod.module.{u5, u4, u2} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_10 _inst_12) (Prod.module.{u5, u3, u1} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_11 _inst_13) (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u5, u5, max u4 u2, max u3 u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) (Prod.{u4, u2} M M₃) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (Prod.instAddCommMonoidSum.{u4, u2} M M₃ (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)) (Prod.{u3, u1} M₂ M₄) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u3, u1} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)) (Prod.module.{u5, u4, u2} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_10 _inst_12) (Prod.module.{u5, u3, u1} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_11 _inst_13))))) (ContinuousLinearEquiv.skewProd.{u5, u4, u3, u2, u1} R _inst_1 M _inst_2 _inst_3 M₂ _inst_4 _inst_5 M₃ _inst_6 _inst_7 M₄ _inst_8 _inst_9 _inst_10 _inst_11 _inst_12 _inst_13 _inst_14 e e' f) x) (Prod.mk.{u3, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) (Prod.fst.{u4, u2} M M₃ x)) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₃) => M₄) (Prod.snd.{u4, u2} M M₃ x)) (FunLike.coe.{max (succ u4) (succ u3), succ u4, succ u3} (ContinuousLinearEquiv.{u5, u5, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u4 u3, u4, u3} (ContinuousLinearEquiv.{u5, u5, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11) M M₂ _inst_2 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u3, u5, u5, u4, u3} (ContinuousLinearEquiv.{u5, u5, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u4 u3, u5, u5, u4, u3} (ContinuousLinearEquiv.{u5, u5, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u5, u5, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11)))) e (Prod.fst.{u4, u2} M M₃ x)) (HAdd.hAdd.{u1, u1, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₃) => M₄) (Prod.snd.{u4, u2} M M₃ x)) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₄) (Prod.fst.{u4, u2} M M₃ x)) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₃) => M₄) (Prod.snd.{u4, u2} M M₃ x)) (instHAdd.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₃) => M₄) (Prod.snd.{u4, u2} M M₃ x)) (AddZeroClass.toAdd.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₃) => M₄) (Prod.snd.{u4, u2} M M₃ x)) (AddMonoid.toAddZeroClass.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₃) => M₄) (Prod.snd.{u4, u2} M M₃ x)) (SubNegMonoid.toAddMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₃) => M₄) (Prod.snd.{u4, u2} M M₃ x)) (AddGroup.toSubNegMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₃) => M₄) (Prod.snd.{u4, u2} M M₃ x)) (AddCommGroup.toAddGroup.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₃) => M₄) (Prod.snd.{u4, u2} M M₃ x)) _inst_9)))))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u5, u5, u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_12 _inst_13) M₃ (fun (_x : M₃) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₃) => M₄) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u5, u5, u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_12 _inst_13) M₃ M₄ _inst_6 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u5, u5, u2, u1} (ContinuousLinearEquiv.{u5, u5, u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_12 _inst_13) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_12 _inst_13 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u5, u5, u2, u1} (ContinuousLinearEquiv.{u5, u5, u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_12 _inst_13) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_12 _inst_13 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u5, u5, u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_12 _inst_13)))) e' (Prod.snd.{u4, u2} M M₃ x)) (FunLike.coe.{max (succ u4) (succ u1), succ u4, succ u1} (ContinuousLinearMap.{u5, u5, u4, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₄) _x) (ContinuousMapClass.toFunLike.{max u4 u1, u4, u1} (ContinuousLinearMap.{u5, u5, u4, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13) M M₄ _inst_2 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u5, u5, u4, u1} (ContinuousLinearMap.{u5, u5, u4, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u5, u5, u4, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13))) f (Prod.fst.{u4, u2} M M₃ x))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.skew_prod_apply ContinuousLinearEquiv.skewProd_applyₓ'. -/
@[simp]
theorem skewProd_apply (e : M ≃L[R] M₂) (e' : M₃ ≃L[R] M₄) (f : M →L[R] M₄) (x) :
    e.skewProd e' f x = (e x.1, e' x.2 + f x.1) :=
  rfl
#align continuous_linear_equiv.skew_prod_apply ContinuousLinearEquiv.skewProd_apply

/- warning: continuous_linear_equiv.skew_prod_symm_apply -> ContinuousLinearEquiv.skewProd_symm_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Semiring.{u1} R] {M : Type.{u2}} [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommGroup.{u2} M] {M₂ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₂] [_inst_5 : AddCommGroup.{u3} M₂] {M₃ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₃] [_inst_7 : AddCommGroup.{u4} M₃] {M₄ : Type.{u5}} [_inst_8 : TopologicalSpace.{u5} M₄] [_inst_9 : AddCommGroup.{u5} M₄] [_inst_10 : Module.{u1, u2} R M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3)] [_inst_11 : Module.{u1, u3} R M₂ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5)] [_inst_12 : Module.{u1, u4} R M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7)] [_inst_13 : Module.{u1, u5} R M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9)] [_inst_14 : TopologicalAddGroup.{u5} M₄ _inst_8 (AddCommGroup.toAddGroup.{u5} M₄ _inst_9)] (e : ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11) (e' : ContinuousLinearEquiv.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_12 _inst_13) (f : ContinuousLinearMap.{u1, u1, u2, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_10 _inst_13) (x : Prod.{u3, u5} M₂ M₄), Eq.{max (succ u2) (succ u4)} (Prod.{u2, u4} M M₃) (coeFn.{max (succ (max u3 u5)) (succ (max u2 u4)), max (succ (max u3 u5)) (succ (max u2 u4))} (ContinuousLinearEquiv.{u1, u1, max u3 u5, max u2 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_4 _inst_8) (Prod.addCommMonoid.{u3, u5} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9)) (Prod.{u2, u4} M M₃) (Prod.topologicalSpace.{u2, u4} M M₃ _inst_2 _inst_6) (Prod.addCommMonoid.{u2, u4} M M₃ (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7)) (Prod.module.{u1, u3, u5} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_11 _inst_13) (Prod.module.{u1, u2, u4} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) _inst_10 _inst_12)) (fun (_x : ContinuousLinearEquiv.{u1, u1, max u3 u5, max u2 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_4 _inst_8) (Prod.addCommMonoid.{u3, u5} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9)) (Prod.{u2, u4} M M₃) (Prod.topologicalSpace.{u2, u4} M M₃ _inst_2 _inst_6) (Prod.addCommMonoid.{u2, u4} M M₃ (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7)) (Prod.module.{u1, u3, u5} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_11 _inst_13) (Prod.module.{u1, u2, u4} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) _inst_10 _inst_12)) => (Prod.{u3, u5} M₂ M₄) -> (Prod.{u2, u4} M M₃)) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, max u3 u5, max u2 u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_4 _inst_8) (Prod.addCommMonoid.{u3, u5} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9)) (Prod.{u2, u4} M M₃) (Prod.topologicalSpace.{u2, u4} M M₃ _inst_2 _inst_6) (Prod.addCommMonoid.{u2, u4} M M₃ (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7)) (Prod.module.{u1, u3, u5} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_11 _inst_13) (Prod.module.{u1, u2, u4} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) _inst_10 _inst_12)) (ContinuousLinearEquiv.symm.{u1, u1, max u2 u4, max u3 u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) (Prod.{u2, u4} M M₃) (Prod.topologicalSpace.{u2, u4} M M₃ _inst_2 _inst_6) (Prod.addCommMonoid.{u2, u4} M M₃ (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7)) (Prod.{u3, u5} M₂ M₄) (Prod.topologicalSpace.{u3, u5} M₂ M₄ _inst_4 _inst_8) (Prod.addCommMonoid.{u3, u5} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9)) (Prod.module.{u1, u2, u4} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) _inst_10 _inst_12) (Prod.module.{u1, u3, u5} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_11 _inst_13) (ContinuousLinearEquiv.skewProd.{u1, u2, u3, u4, u5} R _inst_1 M _inst_2 _inst_3 M₂ _inst_4 _inst_5 M₃ _inst_6 _inst_7 M₄ _inst_8 _inst_9 _inst_10 _inst_11 _inst_12 _inst_13 _inst_14 e e' f)) x) (Prod.mk.{u2, u4} M M₃ (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_11 _inst_10) (fun (_x : ContinuousLinearEquiv.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_11 _inst_10) => M₂ -> M) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_11 _inst_10) (ContinuousLinearEquiv.symm.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11 e) (Prod.fst.{u3, u5} M₂ M₄ x)) (coeFn.{max (succ u5) (succ u4), max (succ u5) (succ u4)} (ContinuousLinearEquiv.{u1, u1, u5, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) _inst_13 _inst_12) (fun (_x : ContinuousLinearEquiv.{u1, u1, u5, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) _inst_13 _inst_12) => M₄ -> M₃) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u5, u4} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) _inst_13 _inst_12) (ContinuousLinearEquiv.symm.{u1, u1, u4, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_12 _inst_13 e') (HSub.hSub.{u5, u5, u5} M₄ M₄ M₄ (instHSub.{u5} M₄ (SubNegMonoid.toHasSub.{u5} M₄ (AddGroup.toSubNegMonoid.{u5} M₄ (AddCommGroup.toAddGroup.{u5} M₄ _inst_9)))) (Prod.snd.{u3, u5} M₂ M₄ x) (coeFn.{max (succ u2) (succ u5), max (succ u2) (succ u5)} (ContinuousLinearMap.{u1, u1, u2, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_10 _inst_13) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_10 _inst_13) => M -> M₄) (ContinuousLinearMap.toFun.{u1, u1, u2, u5} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u5} M₄ _inst_9) _inst_10 _inst_13) f (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_11 _inst_10) (fun (_x : ContinuousLinearEquiv.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_11 _inst_10) => M₂ -> M) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u3, u2} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_11 _inst_10) (ContinuousLinearEquiv.symm.{u1, u1, u2, u3} R R _inst_1 _inst_1 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R _inst_1) (RingHomInvPair.ids.{u1} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11 e) (Prod.fst.{u3, u5} M₂ M₄ x))))))
but is expected to have type
  forall {R : Type.{u5}} [_inst_1 : Semiring.{u5} R] {M : Type.{u4}} [_inst_2 : TopologicalSpace.{u4} M] [_inst_3 : AddCommGroup.{u4} M] {M₂ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₂] [_inst_5 : AddCommGroup.{u3} M₂] {M₃ : Type.{u2}} [_inst_6 : TopologicalSpace.{u2} M₃] [_inst_7 : AddCommGroup.{u2} M₃] {M₄ : Type.{u1}} [_inst_8 : TopologicalSpace.{u1} M₄] [_inst_9 : AddCommGroup.{u1} M₄] [_inst_10 : Module.{u5, u4} R M _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3)] [_inst_11 : Module.{u5, u3} R M₂ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5)] [_inst_12 : Module.{u5, u2} R M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)] [_inst_13 : Module.{u5, u1} R M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)] [_inst_14 : TopologicalAddGroup.{u1} M₄ _inst_8 (AddCommGroup.toAddGroup.{u1} M₄ _inst_9)] (e : ContinuousLinearEquiv.{u5, u5, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11) (e' : ContinuousLinearEquiv.{u5, u5, u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_12 _inst_13) (f : ContinuousLinearMap.{u5, u5, u4, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13) (x : Prod.{u3, u1} M₂ M₄), Eq.{max (succ u4) (succ u2)} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Prod.{u3, u1} M₂ M₄) => Prod.{u4, u2} M M₃) x) (FunLike.coe.{max (max (max (succ u4) (succ u3)) (succ u2)) (succ u1), max (succ u3) (succ u1), max (succ u4) (succ u2)} (ContinuousLinearEquiv.{u5, u5, max u3 u1, max u4 u2} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) (Prod.{u3, u1} M₂ M₄) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u3, u1} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)) (Prod.{u4, u2} M M₃) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (Prod.instAddCommMonoidSum.{u4, u2} M M₃ (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)) (Prod.module.{u5, u3, u1} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_11 _inst_13) (Prod.module.{u5, u4, u2} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_10 _inst_12)) (Prod.{u3, u1} M₂ M₄) (fun (_x : Prod.{u3, u1} M₂ M₄) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Prod.{u3, u1} M₂ M₄) => Prod.{u4, u2} M M₃) _x) (ContinuousMapClass.toFunLike.{max (max (max u4 u3) u2) u1, max u3 u1, max u4 u2} (ContinuousLinearEquiv.{u5, u5, max u3 u1, max u4 u2} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) (Prod.{u3, u1} M₂ M₄) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u3, u1} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)) (Prod.{u4, u2} M M₃) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (Prod.instAddCommMonoidSum.{u4, u2} M M₃ (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)) (Prod.module.{u5, u3, u1} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_11 _inst_13) (Prod.module.{u5, u4, u2} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_10 _inst_12)) (Prod.{u3, u1} M₂ M₄) (Prod.{u4, u2} M M₃) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (ContinuousSemilinearMapClass.toContinuousMapClass.{max (max (max u4 u3) u2) u1, u5, u5, max u3 u1, max u4 u2} (ContinuousLinearEquiv.{u5, u5, max u3 u1, max u4 u2} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) (Prod.{u3, u1} M₂ M₄) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u3, u1} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)) (Prod.{u4, u2} M M₃) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (Prod.instAddCommMonoidSum.{u4, u2} M M₃ (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)) (Prod.module.{u5, u3, u1} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_11 _inst_13) (Prod.module.{u5, u4, u2} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_10 _inst_12)) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (Prod.{u3, u1} M₂ M₄) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u3, u1} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)) (Prod.{u4, u2} M M₃) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (Prod.instAddCommMonoidSum.{u4, u2} M M₃ (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)) (Prod.module.{u5, u3, u1} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_11 _inst_13) (Prod.module.{u5, u4, u2} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_10 _inst_12) (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max (max (max u4 u3) u2) u1, u5, u5, max u3 u1, max u4 u2} (ContinuousLinearEquiv.{u5, u5, max u3 u1, max u4 u2} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) (Prod.{u3, u1} M₂ M₄) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u3, u1} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)) (Prod.{u4, u2} M M₃) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (Prod.instAddCommMonoidSum.{u4, u2} M M₃ (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)) (Prod.module.{u5, u3, u1} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_11 _inst_13) (Prod.module.{u5, u4, u2} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_10 _inst_12)) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) (Prod.{u3, u1} M₂ M₄) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u3, u1} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)) (Prod.{u4, u2} M M₃) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (Prod.instAddCommMonoidSum.{u4, u2} M M₃ (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)) (Prod.module.{u5, u3, u1} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_11 _inst_13) (Prod.module.{u5, u4, u2} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_10 _inst_12) (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u5, u5, max u3 u1, max u4 u2} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) (Prod.{u3, u1} M₂ M₄) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u3, u1} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)) (Prod.{u4, u2} M M₃) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (Prod.instAddCommMonoidSum.{u4, u2} M M₃ (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)) (Prod.module.{u5, u3, u1} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_11 _inst_13) (Prod.module.{u5, u4, u2} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_10 _inst_12))))) (ContinuousLinearEquiv.symm.{u5, u5, max u4 u2, max u3 u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) (Prod.{u4, u2} M M₃) (instTopologicalSpaceProd.{u4, u2} M M₃ _inst_2 _inst_6) (Prod.instAddCommMonoidSum.{u4, u2} M M₃ (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7)) (Prod.{u3, u1} M₂ M₄) (instTopologicalSpaceProd.{u3, u1} M₂ M₄ _inst_4 _inst_8) (Prod.instAddCommMonoidSum.{u3, u1} M₂ M₄ (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9)) (Prod.module.{u5, u4, u2} R M M₃ _inst_1 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_10 _inst_12) (Prod.module.{u5, u3, u1} R M₂ M₄ _inst_1 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_11 _inst_13) (ContinuousLinearEquiv.skewProd.{u5, u4, u3, u2, u1} R _inst_1 M _inst_2 _inst_3 M₂ _inst_4 _inst_5 M₃ _inst_6 _inst_7 M₄ _inst_8 _inst_9 _inst_10 _inst_11 _inst_12 _inst_13 _inst_14 e e' f)) x) (Prod.mk.{u4, u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) (Prod.fst.{u3, u1} M₂ M₄ x)) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₄) => M₃) (HSub.hSub.{u1, u1, u1} M₄ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₄) (FunLike.coe.{max (succ u4) (succ u3), succ u3, succ u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) M₂ (fun (a : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) a) (ContinuousMapClass.toFunLike.{max u4 u3, u3, u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) M₂ M _inst_4 _inst_2 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u3, u5, u5, u3, u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u4 u3, u5, u5, u3, u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10)))) (ContinuousLinearEquiv.symm.{u5, u5, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11 e) (Prod.fst.{u3, u1} M₂ M₄ x))) M₄ (instHSub.{u1} M₄ (SubNegMonoid.toSub.{u1} M₄ (AddGroup.toSubNegMonoid.{u1} M₄ (AddCommGroup.toAddGroup.{u1} M₄ _inst_9)))) (Prod.snd.{u3, u1} M₂ M₄ x) (FunLike.coe.{max (succ u4) (succ u1), succ u4, succ u1} (ContinuousLinearMap.{u5, u5, u4, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13) M (fun (a : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₄) a) (ContinuousMapClass.toFunLike.{max u4 u1, u4, u1} (ContinuousLinearMap.{u5, u5, u4, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13) M M₄ _inst_2 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u5, u5, u4, u1} (ContinuousLinearMap.{u5, u5, u4, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u5, u5, u4, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13))) f (FunLike.coe.{max (succ u4) (succ u3), succ u3, succ u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) M₂ (fun (a : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) a) (ContinuousMapClass.toFunLike.{max u4 u3, u3, u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) M₂ M _inst_4 _inst_2 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u3, u5, u5, u3, u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u4 u3, u5, u5, u3, u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10)))) (ContinuousLinearEquiv.symm.{u5, u5, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11 e) (Prod.fst.{u3, u1} M₂ M₄ x))))) (FunLike.coe.{max (succ u4) (succ u3), succ u3, succ u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) _x) (ContinuousMapClass.toFunLike.{max u4 u3, u3, u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) M₂ M _inst_4 _inst_2 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u3, u5, u5, u3, u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u4 u3, u5, u5, u3, u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10)))) (ContinuousLinearEquiv.symm.{u5, u5, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11 e) (Prod.fst.{u3, u1} M₂ M₄ x)) (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearEquiv.{u5, u5, u1, u2} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_13 _inst_12) M₄ (fun (_x : M₄) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₄) => M₃) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearEquiv.{u5, u5, u1, u2} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_13 _inst_12) M₄ M₃ _inst_8 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u5, u5, u1, u2} (ContinuousLinearEquiv.{u5, u5, u1, u2} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_13 _inst_12) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_13 _inst_12 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u5, u5, u1, u2} (ContinuousLinearEquiv.{u5, u5, u1, u2} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_13 _inst_12) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_13 _inst_12 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u5, u5, u1, u2} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) _inst_13 _inst_12)))) (ContinuousLinearEquiv.symm.{u5, u5, u2, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₃ _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M₃ _inst_7) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_12 _inst_13 e') (HSub.hSub.{u1, u1, u1} M₄ ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₄) (FunLike.coe.{max (succ u4) (succ u3), succ u3, succ u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) M₂ (fun (a : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) a) (ContinuousMapClass.toFunLike.{max u4 u3, u3, u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) M₂ M _inst_4 _inst_2 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u3, u5, u5, u3, u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u4 u3, u5, u5, u3, u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10)))) (ContinuousLinearEquiv.symm.{u5, u5, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11 e) (Prod.fst.{u3, u1} M₂ M₄ x))) M₄ (instHSub.{u1} M₄ (SubNegMonoid.toSub.{u1} M₄ (AddGroup.toSubNegMonoid.{u1} M₄ (AddCommGroup.toAddGroup.{u1} M₄ _inst_9)))) (Prod.snd.{u3, u1} M₂ M₄ x) (FunLike.coe.{max (succ u4) (succ u1), succ u4, succ u1} (ContinuousLinearMap.{u5, u5, u4, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₄) _x) (ContinuousMapClass.toFunLike.{max u4 u1, u4, u1} (ContinuousLinearMap.{u5, u5, u4, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13) M M₄ _inst_2 _inst_8 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u1, u5, u5, u4, u1} (ContinuousLinearMap.{u5, u5, u4, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13 (ContinuousLinearMap.continuousSemilinearMapClass.{u5, u5, u4, u1} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₄ _inst_8 (AddCommGroup.toAddCommMonoid.{u1} M₄ _inst_9) _inst_10 _inst_13))) f (FunLike.coe.{max (succ u4) (succ u3), succ u3, succ u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) _x) (ContinuousMapClass.toFunLike.{max u4 u3, u3, u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) M₂ M _inst_4 _inst_2 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u4 u3, u5, u5, u3, u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u4 u3, u5, u5, u3, u4} (ContinuousLinearEquiv.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10) R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u5, u5, u3, u4} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) _inst_11 _inst_10)))) (ContinuousLinearEquiv.symm.{u5, u5, u4, u3} R R _inst_1 _inst_1 (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHom.id.{u5} R (Semiring.toNonAssocSemiring.{u5} R _inst_1)) (RingHomInvPair.ids.{u5} R _inst_1) (RingHomInvPair.ids.{u5} R _inst_1) M _inst_2 (AddCommGroup.toAddCommMonoid.{u4} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_10 _inst_11 e) (Prod.fst.{u3, u1} M₂ M₄ x))))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.skew_prod_symm_apply ContinuousLinearEquiv.skewProd_symm_applyₓ'. -/
@[simp]
theorem skewProd_symm_apply (e : M ≃L[R] M₂) (e' : M₃ ≃L[R] M₄) (f : M →L[R] M₄) (x) :
    (e.skewProd e' f).symm x = (e.symm x.1, e'.symm (x.2 - f (e.symm x.1))) :=
  rfl
#align continuous_linear_equiv.skew_prod_symm_apply ContinuousLinearEquiv.skewProd_symm_apply

end AddCommGroup

section Ring

variable {R : Type _} [Ring R] {R₂ : Type _} [Ring R₂] {M : Type _} [TopologicalSpace M]
  [AddCommGroup M] [Module R M] {M₂ : Type _} [TopologicalSpace M₂] [AddCommGroup M₂] [Module R₂ M₂]

variable {σ₁₂ : R →+* R₂} {σ₂₁ : R₂ →+* R} [RingHomInvPair σ₁₂ σ₂₁] [RingHomInvPair σ₂₁ σ₁₂]

include σ₂₁

/- warning: continuous_linear_equiv.map_sub -> ContinuousLinearEquiv.map_sub is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u3}} [_inst_3 : TopologicalSpace.{u3} M] [_inst_4 : AddCommGroup.{u3} M] [_inst_5 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_4)] {M₂ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₂] [_inst_7 : AddCommGroup.{u4} M₂] [_inst_8 : Module.{u2, u4} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} {σ₂₁ : RingHom.{u2, u1} R₂ R (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2)) (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))} [_inst_9 : RingHomInvPair.{u1, u2} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁] [_inst_10 : RingHomInvPair.{u2, u1} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ σ₁₂] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) (x : M) (y : M), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) => M -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) e (HSub.hSub.{u3, u3, u3} M M M (instHSub.{u3} M (SubNegMonoid.toHasSub.{u3} M (AddGroup.toSubNegMonoid.{u3} M (AddCommGroup.toAddGroup.{u3} M _inst_4)))) x y)) (HSub.hSub.{u4, u4, u4} M₂ M₂ M₂ (instHSub.{u4} M₂ (SubNegMonoid.toHasSub.{u4} M₂ (AddGroup.toSubNegMonoid.{u4} M₂ (AddCommGroup.toAddGroup.{u4} M₂ _inst_7)))) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) => M -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) e x) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) => M -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) e y))
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Ring.{u4} R] {R₂ : Type.{u3}} [_inst_2 : Ring.{u3} R₂] {M : Type.{u2}} [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_8 : Module.{u3, u1} R₂ M₂ (Ring.toSemiring.{u3} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] {σ₁₂ : RingHom.{u4, u3} R R₂ (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1)) (Semiring.toNonAssocSemiring.{u3} R₂ (Ring.toSemiring.{u3} R₂ _inst_2))} {σ₂₁ : RingHom.{u3, u4} R₂ R (Semiring.toNonAssocSemiring.{u3} R₂ (Ring.toSemiring.{u3} R₂ _inst_2)) (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))} [_inst_9 : RingHomInvPair.{u4, u3} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁] [_inst_10 : RingHomInvPair.{u3, u4} R₂ R (Ring.toSemiring.{u3} R₂ _inst_2) (Ring.toSemiring.{u4} R _inst_1) σ₂₁ σ₁₂] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) (x : M) (y : M), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) (HSub.hSub.{u2, u2, u2} M M M (instHSub.{u2} M (SubNegMonoid.toSub.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_4)))) x y)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) M M₂ _inst_3 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8)))) e (HSub.hSub.{u2, u2, u2} M M M (instHSub.{u2} M (SubNegMonoid.toSub.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_4)))) x y)) (HSub.hSub.{u1, u1, u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) y) ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (instHSub.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (SubNegMonoid.toSub.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (AddGroup.toSubNegMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (AddCommGroup.toAddGroup.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) _inst_7)))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) M M₂ _inst_3 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8)))) e x) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) M M₂ _inst_3 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8)))) e y))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.map_sub ContinuousLinearEquiv.map_subₓ'. -/
@[simp]
theorem map_sub (e : M ≃SL[σ₁₂] M₂) (x y : M) : e (x - y) = e x - e y :=
  (e : M →SL[σ₁₂] M₂).map_sub x y
#align continuous_linear_equiv.map_sub ContinuousLinearEquiv.map_sub

/- warning: continuous_linear_equiv.map_neg -> ContinuousLinearEquiv.map_neg is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {R₂ : Type.{u2}} [_inst_2 : Ring.{u2} R₂] {M : Type.{u3}} [_inst_3 : TopologicalSpace.{u3} M] [_inst_4 : AddCommGroup.{u3} M] [_inst_5 : Module.{u1, u3} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M _inst_4)] {M₂ : Type.{u4}} [_inst_6 : TopologicalSpace.{u4} M₂] [_inst_7 : AddCommGroup.{u4} M₂] [_inst_8 : Module.{u2, u4} R₂ M₂ (Ring.toSemiring.{u2} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7)] {σ₁₂ : RingHom.{u1, u2} R R₂ (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)) (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2))} {σ₂₁ : RingHom.{u2, u1} R₂ R (NonAssocRing.toNonAssocSemiring.{u2} R₂ (Ring.toNonAssocRing.{u2} R₂ _inst_2)) (NonAssocRing.toNonAssocSemiring.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1))} [_inst_9 : RingHomInvPair.{u1, u2} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁] [_inst_10 : RingHomInvPair.{u2, u1} R₂ R (Ring.toSemiring.{u2} R₂ _inst_2) (Ring.toSemiring.{u1} R _inst_1) σ₂₁ σ₁₂] (e : ContinuousLinearEquiv.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) (x : M), Eq.{succ u4} M₂ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) => M -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) e (Neg.neg.{u3} M (SubNegMonoid.toHasNeg.{u3} M (AddGroup.toSubNegMonoid.{u3} M (AddCommGroup.toAddGroup.{u3} M _inst_4))) x)) (Neg.neg.{u4} M₂ (SubNegMonoid.toHasNeg.{u4} M₂ (AddGroup.toSubNegMonoid.{u4} M₂ (AddCommGroup.toAddGroup.{u4} M₂ _inst_7))) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearEquiv.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) (fun (_x : ContinuousLinearEquiv.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) => M -> M₂) (ContinuousLinearEquiv.hasCoeToFun.{u1, u2, u3, u4} R R₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u2} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u3} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M₂ _inst_7) _inst_5 _inst_8) e x))
but is expected to have type
  forall {R : Type.{u4}} [_inst_1 : Ring.{u4} R] {R₂ : Type.{u3}} [_inst_2 : Ring.{u3} R₂] {M : Type.{u2}} [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u4, u2} R M (Ring.toSemiring.{u4} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_8 : Module.{u3, u1} R₂ M₂ (Ring.toSemiring.{u3} R₂ _inst_2) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] {σ₁₂ : RingHom.{u4, u3} R R₂ (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1)) (Semiring.toNonAssocSemiring.{u3} R₂ (Ring.toSemiring.{u3} R₂ _inst_2))} {σ₂₁ : RingHom.{u3, u4} R₂ R (Semiring.toNonAssocSemiring.{u3} R₂ (Ring.toSemiring.{u3} R₂ _inst_2)) (Semiring.toNonAssocSemiring.{u4} R (Ring.toSemiring.{u4} R _inst_1))} [_inst_9 : RingHomInvPair.{u4, u3} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁] [_inst_10 : RingHomInvPair.{u3, u4} R₂ R (Ring.toSemiring.{u3} R₂ _inst_2) (Ring.toSemiring.{u4} R _inst_1) σ₂₁ σ₁₂] (e : ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) (x : M), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) (Neg.neg.{u2} M (NegZeroClass.toNeg.{u2} M (SubNegZeroMonoid.toNegZeroClass.{u2} M (SubtractionMonoid.toSubNegZeroMonoid.{u2} M (SubtractionCommMonoid.toSubtractionMonoid.{u2} M (AddCommGroup.toDivisionAddCommMonoid.{u2} M _inst_4))))) x)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) M M₂ _inst_3 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8)))) e (Neg.neg.{u2} M (NegZeroClass.toNeg.{u2} M (SubNegZeroMonoid.toNegZeroClass.{u2} M (SubtractionMonoid.toSubNegZeroMonoid.{u2} M (SubtractionCommMonoid.toSubtractionMonoid.{u2} M (AddCommGroup.toDivisionAddCommMonoid.{u2} M _inst_4))))) x)) (Neg.neg.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (NegZeroClass.toNeg.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (SubNegZeroMonoid.toNegZeroClass.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (SubtractionMonoid.toSubNegZeroMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (SubtractionCommMonoid.toSubtractionMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) (AddCommGroup.toDivisionAddCommMonoid.{u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) x) _inst_7))))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) M M₂ _inst_3 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearEquiv.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8) R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u4, u3, u2, u1} R R₂ (Ring.toSemiring.{u4} R _inst_1) (Ring.toSemiring.{u3} R₂ _inst_2) σ₁₂ σ₂₁ _inst_9 _inst_10 M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_8)))) e x))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.map_neg ContinuousLinearEquiv.map_negₓ'. -/
@[simp]
theorem map_neg (e : M ≃SL[σ₁₂] M₂) (x : M) : e (-x) = -e x :=
  (e : M →SL[σ₁₂] M₂).map_neg x
#align continuous_linear_equiv.map_neg ContinuousLinearEquiv.map_neg

omit σ₂₁

section

/-! The next theorems cover the identification between `M ≃L[𝕜] M`and the group of units of the ring
`M →L[R] M`. -/


variable [TopologicalAddGroup M]

/- warning: continuous_linear_equiv.of_unit -> ContinuousLinearEquiv.ofUnit is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {M : Type.{u2}} [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] [_inst_11 : TopologicalAddGroup.{u2} M _inst_3 (AddCommGroup.toAddGroup.{u2} M _inst_4)], (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11))) -> (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.ofUnit._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.ofUnit._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5)
but is expected to have type
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {M : Type.{u2}} [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)], (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) -> (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.of_unit ContinuousLinearEquiv.ofUnitₓ'. -/
/-- An invertible continuous linear map `f` determines a continuous equivalence from `M` to itself.
-/
def ofUnit (f : (M →L[R] M)ˣ) : M ≃L[R] M
    where
  toLinearEquiv :=
    { toFun := f.val
      map_add' := by simp
      map_smul' := by simp
      invFun := f.inv
      left_inv := fun x =>
        show (f.inv * f.val) x = x by
          rw [f.inv_val]
          simp
      right_inv := fun x =>
        show (f.val * f.inv) x = x by
          rw [f.val_inv]
          simp }
  continuous_toFun := f.val.Continuous
  continuous_invFun := f.inv.Continuous
#align continuous_linear_equiv.of_unit ContinuousLinearEquiv.ofUnit

/- warning: continuous_linear_equiv.to_unit -> ContinuousLinearEquiv.toUnit is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {M : Type.{u2}} [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] [_inst_11 : TopologicalAddGroup.{u2} M _inst_3 (AddCommGroup.toAddGroup.{u2} M _inst_4)], (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.toUnit._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.toUnit._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) -> (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11)))
but is expected to have type
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {M : Type.{u2}} [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)], (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) -> (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.to_unit ContinuousLinearEquiv.toUnitₓ'. -/
/-- A continuous equivalence from `M` to itself determines an invertible continuous linear map. -/
def toUnit (f : M ≃L[R] M) : (M →L[R] M)ˣ where
  val := f
  inv := f.symm
  val_inv := by
    ext
    simp
  inv_val := by
    ext
    simp
#align continuous_linear_equiv.to_unit ContinuousLinearEquiv.toUnit

variable (R M)

/- warning: continuous_linear_equiv.units_equiv -> ContinuousLinearEquiv.unitsEquiv is a dubious translation:
lean 3 declaration is
  forall (R : Type.{u1}) [_inst_1 : Ring.{u1} R] (M : Type.{u2}) [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] [_inst_11 : TopologicalAddGroup.{u2} M _inst_3 (AddCommGroup.toAddGroup.{u2} M _inst_4)], MulEquiv.{u2, u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11))) (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MulOneClass.toHasMul.{u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11))) (Units.mulOneClass.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11)))) (MulOneClass.toHasMul.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Monoid.toMulOneClass.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (DivInvMonoid.toMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Group.toDivInvMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearEquiv.automorphismGroup.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))))
but is expected to have type
  forall (R : Type.{u1}) [_inst_1 : Ring.{u1} R] (M : Type.{u2}) [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)], MulEquiv.{u2, u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MulOneClass.toMul.{u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (Units.instMulOneClassUnits.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))) (MulOneClass.toMul.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Monoid.toMulOneClass.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (DivInvMonoid.toMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Group.toDivInvMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearEquiv.automorphismGroup.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.units_equiv ContinuousLinearEquiv.unitsEquivₓ'. -/
/-- The units of the algebra of continuous `R`-linear endomorphisms of `M` is multiplicatively
equivalent to the type of continuous linear equivalences between `M` and itself. -/
def unitsEquiv : (M →L[R] M)ˣ ≃* M ≃L[R] M
    where
  toFun := ofUnit
  invFun := toUnit
  left_inv f := by
    ext
    rfl
  right_inv f := by
    ext
    rfl
  map_mul' x y := by
    ext
    rfl
#align continuous_linear_equiv.units_equiv ContinuousLinearEquiv.unitsEquiv

/- warning: continuous_linear_equiv.units_equiv_apply -> ContinuousLinearEquiv.unitsEquiv_apply is a dubious translation:
lean 3 declaration is
  forall (R : Type.{u1}) [_inst_1 : Ring.{u1} R] (M : Type.{u2}) [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] [_inst_11 : TopologicalAddGroup.{u2} M _inst_3 (AddCommGroup.toAddGroup.{u2} M _inst_4)] (f : Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11))) (x : M), Eq.{succ u2} M (coeFn.{succ u2, succ u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (fun (_x : ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) => M -> M) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (coeFn.{succ u2, succ u2} (MulEquiv.{u2, u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11))) (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MulOneClass.toHasMul.{u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11))) (Units.mulOneClass.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11)))) (MulOneClass.toHasMul.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Monoid.toMulOneClass.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (DivInvMonoid.toMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Group.toDivInvMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearEquiv.automorphismGroup.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))))) (fun (_x : MulEquiv.{u2, u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11))) (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MulOneClass.toHasMul.{u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11))) (Units.mulOneClass.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11)))) (MulOneClass.toHasMul.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Monoid.toMulOneClass.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (DivInvMonoid.toMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Group.toDivInvMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearEquiv.automorphismGroup.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))))) => (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11))) -> (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5)) (MulEquiv.hasCoeToFun.{u2, u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11))) (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MulOneClass.toHasMul.{u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11))) (Units.mulOneClass.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11)))) (MulOneClass.toHasMul.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Monoid.toMulOneClass.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (DivInvMonoid.toMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Group.toDivInvMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquiv._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquiv._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearEquiv.automorphismGroup.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))))) (ContinuousLinearEquiv.unitsEquiv.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11) f) x) (coeFn.{succ u2, succ u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11))) (fun (x : Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11))) => M -> M) (coeFnTrans.{succ u2, succ u2, succ u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11))) (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) => M -> M) (ContinuousLinearMap.toFun.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (coeBaseAux.{succ u2, succ u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11))) (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Units.hasCoe.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Ring.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.ring.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5 _inst_11))))) f x)
but is expected to have type
  forall (R : Type.{u1}) [_inst_1 : Ring.{u1} R] (M : Type.{u2}) [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] (_inst_11 : Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (f : M), Eq.{succ u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M) f) (FunLike.coe.{succ u2, succ u2, succ u2} ((fun (x._@.Mathlib.Data.FunLike.Embedding._hyg.19 : Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) => ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) _inst_11) M (fun (a : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M) a) (ContinuousMapClass.toFunLike.{u2, u2, u2} ((fun (x._@.Mathlib.Data.FunLike.Embedding._hyg.19 : Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) => ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) _inst_11) M M _inst_3 _inst_3 (ContinuousSemilinearMapClass.toContinuousMapClass.{u2, u1, u1, u2, u2} ((fun (x._@.Mathlib.Data.FunLike.Embedding._hyg.19 : Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) => ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{u2, u1, u1, u2, u2} ((fun (x._@.Mathlib.Data.FunLike.Embedding._hyg.19 : Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) => ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5)))) (FunLike.coe.{succ u2, succ u2, succ u2} (MulEquiv.{u2, u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MulOneClass.toMul.{u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (Units.instMulOneClassUnits.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))) (MulOneClass.toMul.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Monoid.toMulOneClass.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (DivInvMonoid.toMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Group.toDivInvMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearEquiv.automorphismGroup.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))))) (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (fun (a : Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) => (fun (x._@.Mathlib.Data.FunLike.Embedding._hyg.19 : Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) => ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) a) (EmbeddingLike.toFunLike.{succ u2, succ u2, succ u2} (MulEquiv.{u2, u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MulOneClass.toMul.{u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (Units.instMulOneClassUnits.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))) (MulOneClass.toMul.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Monoid.toMulOneClass.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (DivInvMonoid.toMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Group.toDivInvMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearEquiv.automorphismGroup.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))))) (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (EquivLike.toEmbeddingLike.{succ u2, succ u2, succ u2} (MulEquiv.{u2, u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MulOneClass.toMul.{u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (Units.instMulOneClassUnits.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))) (MulOneClass.toMul.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Monoid.toMulOneClass.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (DivInvMonoid.toMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Group.toDivInvMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearEquiv.automorphismGroup.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))))) (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MulEquivClass.toEquivLike.{u2, u2, u2} (MulEquiv.{u2, u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MulOneClass.toMul.{u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (Units.instMulOneClassUnits.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))) (MulOneClass.toMul.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Monoid.toMulOneClass.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (DivInvMonoid.toMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Group.toDivInvMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearEquiv.automorphismGroup.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))))) (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MulOneClass.toMul.{u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (Units.instMulOneClassUnits.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))) (MulOneClass.toMul.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Monoid.toMulOneClass.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (DivInvMonoid.toMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Group.toDivInvMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearEquiv.automorphismGroup.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))))) (MulEquiv.instMulEquivClassMulEquiv.{u2, u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MulOneClass.toMul.{u2} (Units.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))) (Units.instMulOneClassUnits.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)))) (MulOneClass.toMul.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Monoid.toMulOneClass.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (DivInvMonoid.toMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (Group.toDivInvMonoid.{u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearEquiv.automorphismGroup.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5))))))))) (ContinuousLinearEquiv.unitsEquiv.{u1, u2} R _inst_1 M _inst_3 _inst_4 _inst_5) _inst_11) f) (FunLike.coe.{succ u2, succ u2, succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) M (fun (a : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M) a) (ContinuousMapClass.toFunLike.{u2, u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) M M _inst_3 _inst_3 (ContinuousSemilinearMapClass.toContinuousMapClass.{u2, u1, u1, u2, u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5))) (Units.val.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (MonoidWithZero.toMonoid.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) _inst_11) f)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.units_equiv_apply ContinuousLinearEquiv.unitsEquiv_applyₓ'. -/
@[simp]
theorem unitsEquiv_apply (f : (M →L[R] M)ˣ) (x : M) : unitsEquiv R M f x = f x :=
  rfl
#align continuous_linear_equiv.units_equiv_apply ContinuousLinearEquiv.unitsEquiv_apply

end

section

variable (R) [TopologicalSpace R] [ContinuousMul R]

/- warning: continuous_linear_equiv.units_equiv_aut -> ContinuousLinearEquiv.unitsEquivAut is a dubious translation:
lean 3 declaration is
  forall (R : Type.{u1}) [_inst_1 : Ring.{u1} R] [_inst_11 : TopologicalSpace.{u1} R] [_inst_12 : ContinuousMul.{u1} R _inst_11 (Distrib.toHasMul.{u1} R (Ring.toDistrib.{u1} R _inst_1))], Equiv.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))
but is expected to have type
  forall (R : Type.{u1}) [_inst_1 : Ring.{u1} R] [_inst_11 : TopologicalSpace.{u1} R] [_inst_12 : ContinuousMul.{u1} R _inst_11 (NonUnitalNonAssocRing.toMul.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))], Equiv.{succ u1, succ u1} (Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.units_equiv_aut ContinuousLinearEquiv.unitsEquivAutₓ'. -/
/-- Continuous linear equivalences `R ≃L[R] R` are enumerated by `Rˣ`. -/
def unitsEquivAut : Rˣ ≃ R ≃L[R] R
    where
  toFun u :=
    equivOfInverse (ContinuousLinearMap.smulRight (1 : R →L[R] R) ↑u)
      (ContinuousLinearMap.smulRight (1 : R →L[R] R) ↑u⁻¹) (fun x => by simp) fun x => by simp
  invFun e :=
    ⟨e 1, e.symm 1, by rw [← smul_eq_mul, ← map_smul, smul_eq_mul, mul_one, symm_apply_apply], by
      rw [← smul_eq_mul, ← map_smul, smul_eq_mul, mul_one, apply_symm_apply]⟩
  left_inv u := Units.ext <| by simp
  right_inv e := ext₁ <| by simp
#align continuous_linear_equiv.units_equiv_aut ContinuousLinearEquiv.unitsEquivAut

variable {R}

/- warning: continuous_linear_equiv.units_equiv_aut_apply -> ContinuousLinearEquiv.unitsEquivAut_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] [_inst_11 : TopologicalSpace.{u1} R] [_inst_12 : ContinuousMul.{u1} R _inst_11 (Distrib.toHasMul.{u1} R (Ring.toDistrib.{u1} R _inst_1))] (u : Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) (x : R), Eq.{succ u1} R (coeFn.{succ u1, succ u1} (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (fun (_x : ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) => R -> R) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (coeFn.{succ u1, succ u1} (Equiv.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (fun (_x : Equiv.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) => (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) -> (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (Equiv.hasCoeToFun.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (ContinuousLinearEquiv.unitsEquivAut.{u1} R _inst_1 _inst_11 _inst_12) u) x) (HMul.hMul.{u1, u1, u1} R R R (instHMul.{u1} R (Distrib.toHasMul.{u1} R (Ring.toDistrib.{u1} R _inst_1))) x ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) R (HasLiftT.mk.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) R (CoeTCₓ.coe.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) R (coeBase.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) R (Units.hasCoe.{u1} R (Ring.toMonoid.{u1} R _inst_1))))) u))
but is expected to have type
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] [_inst_11 : TopologicalSpace.{u1} R] [_inst_12 : ContinuousMul.{u1} R _inst_11 (NonUnitalNonAssocRing.toMul.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))] (u : Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (x : R), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R) => R) x) (FunLike.coe.{succ u1, succ u1, succ u1} ((fun (x._@.Mathlib.Logic.Equiv.Defs._hyg.808 : Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) => ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) u) R (fun (_x : R) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R) => R) _x) (ContinuousMapClass.toFunLike.{u1, u1, u1} ((fun (x._@.Mathlib.Logic.Equiv.Defs._hyg.808 : Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) => ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) u) R R _inst_11 _inst_11 (ContinuousSemilinearMapClass.toContinuousMapClass.{u1, u1, u1, u1, u1} ((fun (x._@.Mathlib.Logic.Equiv.Defs._hyg.808 : Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) => ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) u) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{u1, u1, u1, u1, u1} ((fun (x._@.Mathlib.Logic.Equiv.Defs._hyg.808 : Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) => ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) u) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))))) (FunLike.coe.{succ u1, succ u1, succ u1} (Equiv.{succ u1, succ u1} (Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (fun (_x : Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) => (fun (x._@.Mathlib.Logic.Equiv.Defs._hyg.808 : Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) => ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) _x) (Equiv.instFunLikeEquiv.{succ u1, succ u1} (Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (ContinuousLinearEquiv.unitsEquivAut.{u1} R _inst_1 _inst_11 _inst_12) u) x) (HMul.hMul.{u1, u1, u1} R R R (instHMul.{u1} R (NonUnitalNonAssocRing.toMul.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) x (Units.val.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))) u))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.units_equiv_aut_apply ContinuousLinearEquiv.unitsEquivAut_applyₓ'. -/
@[simp]
theorem unitsEquivAut_apply (u : Rˣ) (x : R) : unitsEquivAut R u x = x * u :=
  rfl
#align continuous_linear_equiv.units_equiv_aut_apply ContinuousLinearEquiv.unitsEquivAut_apply

/- warning: continuous_linear_equiv.units_equiv_aut_apply_symm -> ContinuousLinearEquiv.unitsEquivAut_apply_symm is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] [_inst_11 : TopologicalSpace.{u1} R] [_inst_12 : ContinuousMul.{u1} R _inst_11 (Distrib.toHasMul.{u1} R (Ring.toDistrib.{u1} R _inst_1))] (u : Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) (x : R), Eq.{succ u1} R (coeFn.{succ u1, succ u1} (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (fun (_x : ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) => R -> R) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.symm.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (coeFn.{succ u1, succ u1} (Equiv.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (fun (_x : Equiv.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) => (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) -> (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (Equiv.hasCoeToFun.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (ContinuousLinearEquiv.unitsEquivAut.{u1} R _inst_1 _inst_11 _inst_12) u)) x) (HMul.hMul.{u1, u1, u1} R R R (instHMul.{u1} R (Distrib.toHasMul.{u1} R (Ring.toDistrib.{u1} R _inst_1))) x ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) R (HasLiftT.mk.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) R (CoeTCₓ.coe.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) R (coeBase.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) R (Units.hasCoe.{u1} R (Ring.toMonoid.{u1} R _inst_1))))) (Inv.inv.{u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) (Units.hasInv.{u1} R (Ring.toMonoid.{u1} R _inst_1)) u)))
but is expected to have type
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] [_inst_11 : TopologicalSpace.{u1} R] [_inst_12 : ContinuousMul.{u1} R _inst_11 (NonUnitalNonAssocRing.toMul.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))] (u : Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (x : R), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R) => R) x) (FunLike.coe.{succ u1, succ u1, succ u1} (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R (fun (_x : R) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R) => R) _x) (ContinuousMapClass.toFunLike.{u1, u1, u1} (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R R _inst_11 _inst_11 (ContinuousSemilinearMapClass.toContinuousMapClass.{u1, u1, u1, u1, u1} (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{u1, u1, u1, u1, u1} (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))))) (ContinuousLinearEquiv.symm.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (FunLike.coe.{succ u1, succ u1, succ u1} (Equiv.{succ u1, succ u1} (Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (fun (_x : Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) => (fun (x._@.Mathlib.Logic.Equiv.Defs._hyg.808 : Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) => ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) _x) (Equiv.instFunLikeEquiv.{succ u1, succ u1} (Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (ContinuousLinearEquiv.unitsEquivAut.{u1} R _inst_1 _inst_11 _inst_12) u)) x) (HMul.hMul.{u1, u1, u1} R ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R) => R) x) R (instHMul.{u1} R (NonUnitalNonAssocRing.toMul.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) x (Units.val.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (Inv.inv.{u1} (Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (Units.instInv.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) u)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.units_equiv_aut_apply_symm ContinuousLinearEquiv.unitsEquivAut_apply_symmₓ'. -/
@[simp]
theorem unitsEquivAut_apply_symm (u : Rˣ) (x : R) : (unitsEquivAut R u).symm x = x * ↑u⁻¹ :=
  rfl
#align continuous_linear_equiv.units_equiv_aut_apply_symm ContinuousLinearEquiv.unitsEquivAut_apply_symm

/- warning: continuous_linear_equiv.units_equiv_aut_symm_apply -> ContinuousLinearEquiv.unitsEquivAut_symm_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] [_inst_11 : TopologicalSpace.{u1} R] [_inst_12 : ContinuousMul.{u1} R _inst_11 (Distrib.toHasMul.{u1} R (Ring.toDistrib.{u1} R _inst_1))] (e : ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))), Eq.{succ u1} R ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) R (HasLiftT.mk.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) R (CoeTCₓ.coe.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) R (coeBase.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) R (Units.hasCoe.{u1} R (Ring.toMonoid.{u1} R _inst_1))))) (coeFn.{succ u1, succ u1} (Equiv.{succ u1, succ u1} (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1))) (fun (_x : Equiv.{succ u1, succ u1} (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1))) => (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) -> (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1))) (Equiv.hasCoeToFun.{succ u1, succ u1} (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1))) (Equiv.symm.{succ u1, succ u1} (Units.{u1} R (Ring.toMonoid.{u1} R _inst_1)) (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.unitsEquivAut._proof_2.{u1} R _inst_1) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut.{u1} R _inst_1 _inst_11 _inst_12)) e)) (coeFn.{succ u1, succ u1} (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (fun (_x : ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) => R -> R) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (AddCommGroup.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toAddCommGroup.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) e (OfNat.ofNat.{u1} R 1 (OfNat.mk.{u1} R 1 (One.one.{u1} R (AddMonoidWithOne.toOne.{u1} R (AddGroupWithOne.toAddMonoidWithOne.{u1} R (AddCommGroupWithOne.toAddGroupWithOne.{u1} R (Ring.toAddCommGroupWithOne.{u1} R _inst_1))))))))
but is expected to have type
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] [_inst_11 : TopologicalSpace.{u1} R] [_inst_12 : ContinuousMul.{u1} R _inst_11 (NonUnitalNonAssocRing.toMul.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))] (e : ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))), Eq.{succ u1} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R) => R) (OfNat.ofNat.{u1} R 1 (One.toOfNat1.{u1} R (Semiring.toOne.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) (Units.val.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (FunLike.coe.{succ u1, succ u1, succ u1} (Equiv.{succ u1, succ u1} (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (fun (_x : ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) => (fun (x._@.Mathlib.Logic.Equiv.Defs._hyg.808 : ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) => Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) _x) (Equiv.instFunLikeEquiv.{succ u1, succ u1} (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1))))) (Equiv.symm.{succ u1, succ u1} (Units.{u1} R (MonoidWithZero.toMonoid.{u1} R (Semiring.toMonoidWithZero.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.unitsEquivAut.{u1} R _inst_1 _inst_11 _inst_12)) e)) (FunLike.coe.{succ u1, succ u1, succ u1} (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R (fun (_x : R) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : R) => R) _x) (ContinuousMapClass.toFunLike.{u1, u1, u1} (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R R _inst_11 _inst_11 (ContinuousSemilinearMapClass.toContinuousMapClass.{u1, u1, u1, u1, u1} (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{u1, u1, u1, u1, u1} (ContinuousLinearEquiv.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1))) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, u1, u1} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) R _inst_11 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} R (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} R (NonAssocRing.toNonUnitalNonAssocRing.{u1} R (Ring.toNonAssocRing.{u1} R _inst_1)))) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (Semiring.toModule.{u1} R (Ring.toSemiring.{u1} R _inst_1)))))) e (OfNat.ofNat.{u1} R 1 (One.toOfNat1.{u1} R (Semiring.toOne.{u1} R (Ring.toSemiring.{u1} R _inst_1)))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.units_equiv_aut_symm_apply ContinuousLinearEquiv.unitsEquivAut_symm_applyₓ'. -/
@[simp]
theorem unitsEquivAut_symm_apply (e : R ≃L[R] R) : ↑((unitsEquivAut R).symm e) = e 1 :=
  rfl
#align continuous_linear_equiv.units_equiv_aut_symm_apply ContinuousLinearEquiv.unitsEquivAut_symm_apply

end

variable [Module R M₂] [TopologicalAddGroup M]

open _Root_.ContinuousLinearMap (id fst snd)

open _Root_.LinearMap (mem_ker)

/- warning: continuous_linear_equiv.equiv_of_right_inverse -> ContinuousLinearEquiv.equivOfRightInverse is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {M : Type.{u2}} [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] {M₂ : Type.{u3}} [_inst_6 : TopologicalSpace.{u3} M₂] [_inst_7 : AddCommGroup.{u3} M₂] [_inst_11 : Module.{u1, u3} R M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)] [_inst_12 : TopologicalAddGroup.{u2} M _inst_3 (AddCommGroup.toAddGroup.{u2} M _inst_4)] (f₁ : ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (f₂ : ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5), (Function.RightInverse.{succ u2, succ u3} M M₂ (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) => M₂ -> M) (ContinuousLinearMap.toFun.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) f₂) (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) f₁)) -> (ContinuousLinearEquiv.{u1, u1, u2, max u3 u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.equivOfRightInverse._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.equivOfRightInverse._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Prod.topologicalSpace.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_6 (Subtype.topologicalSpace.{u2} M (fun (x : M) => Membership.Mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.addCommMonoid.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u1, u3, u2} R M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))))
but is expected to have type
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {M : Type.{u2}} [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] {M₂ : Type.{u3}} [_inst_6 : TopologicalSpace.{u3} M₂] [_inst_7 : AddCommGroup.{u3} M₂] [_inst_11 : Module.{u1, u3} R M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)] [_inst_12 : TopologicalAddGroup.{u2} M _inst_3 (AddCommGroup.toAddGroup.{u2} M _inst_4)] (f₁ : ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (f₂ : ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5), (Function.RightInverse.{succ u2, succ u3} M M₂ (FunLike.coe.{max (succ u2) (succ u3), succ u3, succ u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) _x) (ContinuousMapClass.toFunLike.{max u2 u3, u3, u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) M₂ M _inst_6 _inst_3 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u3, u1, u1, u3, u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5))) f₂) (FunLike.coe.{max (succ u2) (succ u3), succ u2, succ u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u3, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) M M₂ _inst_3 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11))) f₁)) -> (ContinuousLinearEquiv.{u1, u1, u2, max u2 u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u3, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u3, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u3, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u1, u3, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.equiv_of_right_inverse ContinuousLinearEquiv.equivOfRightInverseₓ'. -/
/-- A pair of continuous linear maps such that `f₁ ∘ f₂ = id` generates a continuous
linear equivalence `e` between `M` and `M₂ × f₁.ker` such that `(e x).2 = x` for `x ∈ f₁.ker`,
`(e x).1 = f₁ x`, and `(e (f₂ y)).2 = 0`. The map is given by `e x = (f₁ x, x - f₂ (f₁ x))`. -/
def equivOfRightInverse (f₁ : M →L[R] M₂) (f₂ : M₂ →L[R] M) (h : Function.RightInverse f₂ f₁) :
    M ≃L[R] M₂ × ker f₁ :=
  equivOfInverse (f₁.Prod (f₁.projKerOfRightInverse f₂ h)) (f₂.coprod (ker f₁).subtypeL)
    (fun x => by simp) fun ⟨x, y⟩ => by simp [h x]
#align continuous_linear_equiv.equiv_of_right_inverse ContinuousLinearEquiv.equivOfRightInverse

/- warning: continuous_linear_equiv.fst_equiv_of_right_inverse -> ContinuousLinearEquiv.fst_equivOfRightInverse is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {M : Type.{u2}} [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] {M₂ : Type.{u3}} [_inst_6 : TopologicalSpace.{u3} M₂] [_inst_7 : AddCommGroup.{u3} M₂] [_inst_11 : Module.{u1, u3} R M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)] [_inst_12 : TopologicalAddGroup.{u2} M _inst_3 (AddCommGroup.toAddGroup.{u2} M _inst_4)] (f₁ : ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (f₂ : ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) (h : Function.RightInverse.{succ u2, succ u3} M M₂ (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) => M₂ -> M) (ContinuousLinearMap.toFun.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) f₂) (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) f₁)) (x : M), Eq.{succ u3} M₂ (Prod.fst.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (coeFn.{max (succ u2) (succ (max u3 u2)), max (succ u2) (succ (max u3 u2))} (ContinuousLinearEquiv.{u1, u1, u2, max u3 u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.equivOfRightInverse._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.equivOfRightInverse._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Prod.topologicalSpace.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_6 (Subtype.topologicalSpace.{u2} M (fun (x : M) => Membership.Mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.addCommMonoid.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u1, u3, u2} R M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (fun (_x : ContinuousLinearEquiv.{u1, u1, u2, max u3 u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.equivOfRightInverse._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.equivOfRightInverse._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Prod.topologicalSpace.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_6 (Subtype.topologicalSpace.{u2} M (fun (x : M) => Membership.Mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.addCommMonoid.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u1, u3, u2} R M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) => M -> (Prod.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u2, max u3 u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.equivOfRightInverse._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.equivOfRightInverse._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Prod.topologicalSpace.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_6 (Subtype.topologicalSpace.{u2} M (fun (x : M) => Membership.Mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.addCommMonoid.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u1, u3, u2} R M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (ContinuousLinearEquiv.equivOfRightInverse.{u1, u2, u3} R _inst_1 M _inst_3 _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_11 _inst_12 f₁ f₂ h) x)) (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) f₁ x)
but is expected to have type
  forall {R : Type.{u3}} [_inst_1 : Ring.{u3} R] {M : Type.{u2}} [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_11 : Module.{u3, u1} R M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] [_inst_12 : TopologicalAddGroup.{u2} M _inst_3 (AddCommGroup.toAddGroup.{u2} M _inst_4)] (f₁ : ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (f₂ : ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) (h : Function.RightInverse.{succ u2, succ u1} M M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) M₂ M _inst_6 _inst_3 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u1, u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5))) f₂) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) M M₂ _inst_3 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11))) f₁)) (x : M), Eq.{succ u1} M₂ (Prod.fst.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, max (succ u2) (succ u1)} (ContinuousLinearEquiv.{u3, u3, u2, max u2 u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, max u2 u1} (ContinuousLinearEquiv.{u3, u3, u2, max u2 u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) M (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) _inst_3 (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u2, max u2 u1} (ContinuousLinearEquiv.{u3, u3, u2, max u2 u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u3, u2, max u2 u1} (ContinuousLinearEquiv.{u3, u3, u2, max u2 u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u3, u2, max u2 u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))))))) (ContinuousLinearEquiv.equivOfRightInverse.{u3, u2, u1} R _inst_1 M _inst_3 _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_11 _inst_12 f₁ f₂ h) x)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) M M₂ _inst_3 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11))) f₁ x)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.fst_equiv_of_right_inverse ContinuousLinearEquiv.fst_equivOfRightInverseₓ'. -/
@[simp]
theorem fst_equivOfRightInverse (f₁ : M →L[R] M₂) (f₂ : M₂ →L[R] M)
    (h : Function.RightInverse f₂ f₁) (x : M) : (equivOfRightInverse f₁ f₂ h x).1 = f₁ x :=
  rfl
#align continuous_linear_equiv.fst_equiv_of_right_inverse ContinuousLinearEquiv.fst_equivOfRightInverse

/- warning: continuous_linear_equiv.snd_equiv_of_right_inverse -> ContinuousLinearEquiv.snd_equivOfRightInverse is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {M : Type.{u2}} [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] {M₂ : Type.{u3}} [_inst_6 : TopologicalSpace.{u3} M₂] [_inst_7 : AddCommGroup.{u3} M₂] [_inst_11 : Module.{u1, u3} R M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)] [_inst_12 : TopologicalAddGroup.{u2} M _inst_3 (AddCommGroup.toAddGroup.{u2} M _inst_4)] (f₁ : ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (f₂ : ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) (h : Function.RightInverse.{succ u2, succ u3} M M₂ (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) => M₂ -> M) (ContinuousLinearMap.toFun.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) f₂) (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) f₁)) (x : M), Eq.{succ u2} M ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) M (HasLiftT.mk.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) M (CoeTCₓ.coe.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) M (coeBase.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) M (coeSubtype.{succ u2} M (fun (x : M) => Membership.Mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)))))) (Prod.snd.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (coeFn.{max (succ u2) (succ (max u3 u2)), max (succ u2) (succ (max u3 u2))} (ContinuousLinearEquiv.{u1, u1, u2, max u3 u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.equivOfRightInverse._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.equivOfRightInverse._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Prod.topologicalSpace.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_6 (Subtype.topologicalSpace.{u2} M (fun (x : M) => Membership.Mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.addCommMonoid.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u1, u3, u2} R M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (fun (_x : ContinuousLinearEquiv.{u1, u1, u2, max u3 u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.equivOfRightInverse._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.equivOfRightInverse._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Prod.topologicalSpace.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_6 (Subtype.topologicalSpace.{u2} M (fun (x : M) => Membership.Mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.addCommMonoid.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u1, u3, u2} R M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) => M -> (Prod.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, u2, max u3 u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.equivOfRightInverse._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.equivOfRightInverse._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Prod.topologicalSpace.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_6 (Subtype.topologicalSpace.{u2} M (fun (x : M) => Membership.Mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.addCommMonoid.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u1, u3, u2} R M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (ContinuousLinearEquiv.equivOfRightInverse.{u1, u2, u3} R _inst_1 M _inst_3 _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_11 _inst_12 f₁ f₂ h) x))) (HSub.hSub.{u2, u2, u2} M M M (instHSub.{u2} M (SubNegMonoid.toHasSub.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_4)))) x (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) => M₂ -> M) (ContinuousLinearMap.toFun.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) f₂ (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) f₁ x)))
but is expected to have type
  forall {R : Type.{u3}} [_inst_1 : Ring.{u3} R] {M : Type.{u2}} [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_11 : Module.{u3, u1} R M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] [_inst_12 : TopologicalAddGroup.{u2} M _inst_3 (AddCommGroup.toAddGroup.{u2} M _inst_4)] (f₁ : ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (f₂ : ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) (h : Function.RightInverse.{succ u2, succ u1} M M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) M₂ M _inst_6 _inst_3 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u1, u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5))) f₂) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) M M₂ _inst_3 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11))) f₁)) (x : M), Eq.{succ u2} M (Subtype.val.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Set.{u2} M) (Set.instMembershipSet.{u2} M) x (SetLike.coe.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Prod.snd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (FunLike.coe.{max (succ u2) (succ u1), succ u2, max (succ u2) (succ u1)} (ContinuousLinearEquiv.{u3, u3, u2, max u2 u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, max u2 u1} (ContinuousLinearEquiv.{u3, u3, u2, max u2 u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) M (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) _inst_3 (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u2, max u2 u1} (ContinuousLinearEquiv.{u3, u3, u2, max u2 u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u3, u2, max u2 u1} (ContinuousLinearEquiv.{u3, u3, u2, max u2 u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u3, u2, max u2 u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))))))) (ContinuousLinearEquiv.equivOfRightInverse.{u3, u2, u1} R _inst_1 M _inst_3 _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_11 _inst_12 f₁ f₂ h) x))) (HSub.hSub.{u2, u2, u2} M ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) M (fun (a : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) a) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) M M₂ _inst_3 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11))) f₁ x)) M (instHSub.{u2} M (SubNegMonoid.toSub.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_4)))) x (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) M₂ M _inst_6 _inst_3 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u1, u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5))) f₂ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) M M₂ _inst_3 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11))) f₁ x)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.snd_equiv_of_right_inverse ContinuousLinearEquiv.snd_equivOfRightInverseₓ'. -/
@[simp]
theorem snd_equivOfRightInverse (f₁ : M →L[R] M₂) (f₂ : M₂ →L[R] M)
    (h : Function.RightInverse f₂ f₁) (x : M) :
    ((equivOfRightInverse f₁ f₂ h x).2 : M) = x - f₂ (f₁ x) :=
  rfl
#align continuous_linear_equiv.snd_equiv_of_right_inverse ContinuousLinearEquiv.snd_equivOfRightInverse

/- warning: continuous_linear_equiv.equiv_of_right_inverse_symm_apply -> ContinuousLinearEquiv.equivOfRightInverse_symm_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {M : Type.{u2}} [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] {M₂ : Type.{u3}} [_inst_6 : TopologicalSpace.{u3} M₂] [_inst_7 : AddCommGroup.{u3} M₂] [_inst_11 : Module.{u1, u3} R M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)] [_inst_12 : TopologicalAddGroup.{u2} M _inst_3 (AddCommGroup.toAddGroup.{u2} M _inst_4)] (f₁ : ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (f₂ : ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) (h : Function.RightInverse.{succ u2, succ u3} M M₂ (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) => M₂ -> M) (ContinuousLinearMap.toFun.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) f₂) (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) f₁)) (y : Prod.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))), Eq.{succ u2} M (coeFn.{max (succ (max u3 u2)) (succ u2), max (succ (max u3 u2)) (succ u2)} (ContinuousLinearEquiv.{u1, u1, max u3 u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.equivOfRightInverse._proof_2.{u1} R _inst_1) (ContinuousLinearEquiv.equivOfRightInverse._proof_1.{u1} R _inst_1) (Prod.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Prod.topologicalSpace.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_6 (Subtype.topologicalSpace.{u2} M (fun (x : M) => Membership.Mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.addCommMonoid.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.module.{u1, u3, u2} R M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5) (fun (_x : ContinuousLinearEquiv.{u1, u1, max u3 u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.equivOfRightInverse._proof_2.{u1} R _inst_1) (ContinuousLinearEquiv.equivOfRightInverse._proof_1.{u1} R _inst_1) (Prod.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Prod.topologicalSpace.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_6 (Subtype.topologicalSpace.{u2} M (fun (x : M) => Membership.Mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.addCommMonoid.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.module.{u1, u3, u2} R M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5) => (Prod.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) -> M) (ContinuousLinearEquiv.hasCoeToFun.{u1, u1, max u3 u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.equivOfRightInverse._proof_2.{u1} R _inst_1) (ContinuousLinearEquiv.equivOfRightInverse._proof_1.{u1} R _inst_1) (Prod.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Prod.topologicalSpace.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_6 (Subtype.topologicalSpace.{u2} M (fun (x : M) => Membership.Mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.addCommMonoid.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.module.{u1, u3, u2} R M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5) (ContinuousLinearEquiv.symm.{u1, u1, u2, max u3 u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearEquiv.equivOfRightInverse._proof_1.{u1} R _inst_1) (ContinuousLinearEquiv.equivOfRightInverse._proof_2.{u1} R _inst_1) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Prod.topologicalSpace.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_6 (Subtype.topologicalSpace.{u2} M (fun (x : M) => Membership.Mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.addCommMonoid.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u1, u3, u2} R M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) (Submodule.addCommMonoid.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (ContinuousLinearEquiv.equivOfRightInverse.{u1, u2, u3} R _inst_1 M _inst_3 _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_11 _inst_12 f₁ f₂ h)) y) (HAdd.hAdd.{u2, u2, u2} M M M (instHAdd.{u2} M (AddZeroClass.toHasAdd.{u2} M (AddMonoid.toAddZeroClass.{u2} M (SubNegMonoid.toAddMonoid.{u2} M (AddGroup.toSubNegMonoid.{u2} M (AddCommGroup.toAddGroup.{u2} M _inst_4)))))) (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) => M₂ -> M) (ContinuousLinearMap.toFun.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) f₂ (Prod.fst.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) y)) ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) M (HasLiftT.mk.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) M (CoeTCₓ.coe.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) M (coeBase.{succ u2, succ u2} (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) M (coeSubtype.{succ u2} M (fun (x : M) => Membership.Mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)))))) (Prod.snd.{u3, u2} M₂ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_5 _inst_11)) f₁)) y)))
but is expected to have type
  forall {R : Type.{u3}} [_inst_1 : Ring.{u3} R] {M : Type.{u2}} [_inst_3 : TopologicalSpace.{u2} M] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] {M₂ : Type.{u1}} [_inst_6 : TopologicalSpace.{u1} M₂] [_inst_7 : AddCommGroup.{u1} M₂] [_inst_11 : Module.{u3, u1} R M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7)] [_inst_12 : TopologicalAddGroup.{u2} M _inst_3 (AddCommGroup.toAddGroup.{u2} M _inst_4)] (f₁ : ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (f₂ : ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) (h : Function.RightInverse.{succ u2, succ u1} M M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) M₂ M _inst_6 _inst_3 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u1, u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5))) f₂) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) M M₂ _inst_3 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11))) f₁)) (y : Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))), Eq.{succ u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) => M) y) (FunLike.coe.{max (succ u2) (succ u1), max (succ u2) (succ u1), succ u2} (ContinuousLinearEquiv.{u3, u3, max u2 u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (fun (_x : Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) => M) _x) (ContinuousMapClass.toFunLike.{max u2 u1, max u2 u1, u2} (ContinuousLinearEquiv.{u3, u3, max u2 u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) M (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) _inst_3 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, max u2 u1, u2} (ContinuousLinearEquiv.{u3, u3, max u2 u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u2 u1, u3, u3, max u2 u1, u2} (ContinuousLinearEquiv.{u3, u3, max u2 u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u3, u3, max u2 u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5)))) (ContinuousLinearEquiv.symm.{u3, u3, u2, max u2 u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_1)) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (Prod.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)))) (instTopologicalSpaceProd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_6 (instTopologicalSpaceSubtype.{u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_3)) (Prod.instAddCommMonoidSum.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) _inst_5 (Prod.module.{u3, u1, u2} R M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) (Submodule.addCommMonoid.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁)) _inst_11 (Submodule.module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (ContinuousLinearEquiv.equivOfRightInverse.{u3, u2, u1} R _inst_1 M _inst_3 _inst_4 _inst_5 M₂ _inst_6 _inst_7 _inst_11 _inst_12 f₁ f₂ h)) y) (HAdd.hAdd.{u2, u2, u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) (Prod.fst.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) y)) M ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) (Prod.fst.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) y)) (instHAdd.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) (Prod.fst.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) y)) (AddZeroClass.toAdd.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) (Prod.fst.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) y)) (AddMonoid.toAddZeroClass.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) (Prod.fst.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) y)) (SubNegMonoid.toAddMonoid.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) (Prod.fst.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) y)) (AddGroup.toSubNegMonoid.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) (Prod.fst.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) y)) (AddCommGroup.toAddGroup.{u2} ((fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) (Prod.fst.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) y)) _inst_4)))))) (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) M₂ M _inst_6 _inst_3 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u1, u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_11 _inst_5))) f₂ (Prod.fst.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) y)) (Subtype.val.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Set.{u2} M) (Set.instMembershipSet.{u2} M) x (SetLike.coe.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) (Prod.snd.{u1, u2} M₂ (Subtype.{succ u2} M (fun (x : M) => Membership.mem.{u2, u2} M (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (SetLike.instMembership.{u2, u2} (Submodule.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) M (Submodule.setLike.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) x (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_3 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_7) _inst_5 _inst_11)) f₁))) y)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.equiv_of_right_inverse_symm_apply ContinuousLinearEquiv.equivOfRightInverse_symm_applyₓ'. -/
@[simp]
theorem equivOfRightInverse_symm_apply (f₁ : M →L[R] M₂) (f₂ : M₂ →L[R] M)
    (h : Function.RightInverse f₂ f₁) (y : M₂ × ker f₁) :
    (equivOfRightInverse f₁ f₂ h).symm y = f₂ y.1 + y.2 :=
  rfl
#align continuous_linear_equiv.equiv_of_right_inverse_symm_apply ContinuousLinearEquiv.equivOfRightInverse_symm_apply

end Ring

section

variable (ι R M : Type _) [Unique ι] [Semiring R] [AddCommMonoid M] [Module R M]
  [TopologicalSpace M]

#print ContinuousLinearEquiv.funUnique /-
/-- If `ι` has a unique element, then `ι → M` is continuously linear equivalent to `M`. -/
def funUnique : (ι → M) ≃L[R] M :=
  { Homeomorph.funUnique ι M with toLinearEquiv := LinearEquiv.funUnique ι R M }
#align continuous_linear_equiv.fun_unique ContinuousLinearEquiv.funUnique
-/

variable {ι R M}

/- warning: continuous_linear_equiv.coe_fun_unique -> ContinuousLinearEquiv.coe_funUnique is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} {R : Type.{u2}} {M : Type.{u3}} [_inst_1 : Unique.{succ u1} ι] [_inst_2 : Semiring.{u2} R] [_inst_3 : AddCommMonoid.{u3} M] [_inst_4 : Module.{u2, u3} R M _inst_2 _inst_3] [_inst_5 : TopologicalSpace.{u3} M], Eq.{max (succ (max u1 u3)) (succ u3)} ((ι -> M) -> M) (coeFn.{max (succ (max u1 u3)) (succ u3), max (succ (max u1 u3)) (succ u3)} (ContinuousLinearEquiv.{u2, u2, max u1 u3, u3} R R _inst_2 _inst_2 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (RingHomInvPair.ids.{u2} R _inst_2) (RingHomInvPair.ids.{u2} R _inst_2) (ι -> M) (Pi.topologicalSpace.{u1, u3} ι (fun (ᾰ : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u1, u3} ι (fun (ᾰ : ι) => M) (fun (i : ι) => _inst_3)) M _inst_5 _inst_3 (Pi.Function.module.{u1, u2, u3} ι R M _inst_2 _inst_3 _inst_4) _inst_4) (fun (_x : ContinuousLinearEquiv.{u2, u2, max u1 u3, u3} R R _inst_2 _inst_2 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (RingHomInvPair.ids.{u2} R _inst_2) (RingHomInvPair.ids.{u2} R _inst_2) (ι -> M) (Pi.topologicalSpace.{u1, u3} ι (fun (ᾰ : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u1, u3} ι (fun (ᾰ : ι) => M) (fun (i : ι) => _inst_3)) M _inst_5 _inst_3 (Pi.Function.module.{u1, u2, u3} ι R M _inst_2 _inst_3 _inst_4) _inst_4) => (ι -> M) -> M) (ContinuousLinearEquiv.hasCoeToFun.{u2, u2, max u1 u3, u3} R R _inst_2 _inst_2 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (RingHomInvPair.ids.{u2} R _inst_2) (RingHomInvPair.ids.{u2} R _inst_2) (ι -> M) (Pi.topologicalSpace.{u1, u3} ι (fun (ᾰ : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u1, u3} ι (fun (ᾰ : ι) => M) (fun (i : ι) => _inst_3)) M _inst_5 _inst_3 (Pi.Function.module.{u1, u2, u3} ι R M _inst_2 _inst_3 _inst_4) _inst_4) (ContinuousLinearEquiv.funUnique.{u1, u2, u3} ι R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5)) (Function.eval.{succ u1, succ u3} ι (fun (x : ι) => M) (Inhabited.default.{succ u1} ι (Unique.inhabited.{succ u1} ι _inst_1)))
but is expected to have type
  forall {ι : Type.{u3}} {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Unique.{succ u3} ι] [_inst_2 : Semiring.{u1} R] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_2 _inst_3] [_inst_5 : TopologicalSpace.{u2} M], Eq.{max (succ u3) (succ u2)} (forall (ᾰ : ι -> M), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : ι -> M) => M) ᾰ) (FunLike.coe.{max (succ u3) (succ u2), max (succ u3) (succ u2), succ u2} (ContinuousLinearEquiv.{u1, u1, max u3 u2, u2} R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) (ι -> M) (Pi.topologicalSpace.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (i : ι) => _inst_3)) M _inst_5 _inst_3 (Pi.module.{u3, u2, u1} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) R _inst_2 (fun (i : ι) => _inst_3) (fun (i : ι) => _inst_4)) _inst_4) (ι -> M) (fun (_x : ι -> M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : ι -> M) => M) _x) (ContinuousMapClass.toFunLike.{max u3 u2, max u3 u2, u2} (ContinuousLinearEquiv.{u1, u1, max u3 u2, u2} R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) (ι -> M) (Pi.topologicalSpace.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (i : ι) => _inst_3)) M _inst_5 _inst_3 (Pi.module.{u3, u2, u1} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) R _inst_2 (fun (i : ι) => _inst_3) (fun (i : ι) => _inst_4)) _inst_4) (ι -> M) M (Pi.topologicalSpace.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (a : ι) => _inst_5)) _inst_5 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u1, u1, max u3 u2, u2} (ContinuousLinearEquiv.{u1, u1, max u3 u2, u2} R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) (ι -> M) (Pi.topologicalSpace.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (i : ι) => _inst_3)) M _inst_5 _inst_3 (Pi.module.{u3, u2, u1} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) R _inst_2 (fun (i : ι) => _inst_3) (fun (i : ι) => _inst_4)) _inst_4) R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (ι -> M) (Pi.topologicalSpace.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (i : ι) => _inst_3)) M _inst_5 _inst_3 (Pi.module.{u3, u2, u1} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) R _inst_2 (fun (i : ι) => _inst_3) (fun (i : ι) => _inst_4)) _inst_4 (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u3 u2, u1, u1, max u3 u2, u2} (ContinuousLinearEquiv.{u1, u1, max u3 u2, u2} R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) (ι -> M) (Pi.topologicalSpace.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (i : ι) => _inst_3)) M _inst_5 _inst_3 (Pi.module.{u3, u2, u1} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) R _inst_2 (fun (i : ι) => _inst_3) (fun (i : ι) => _inst_4)) _inst_4) R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) (ι -> M) (Pi.topologicalSpace.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (i : ι) => _inst_3)) M _inst_5 _inst_3 (Pi.module.{u3, u2, u1} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) R _inst_2 (fun (i : ι) => _inst_3) (fun (i : ι) => _inst_4)) _inst_4 (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, max u3 u2, u2} R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) (ι -> M) (Pi.topologicalSpace.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (i : ι) => _inst_3)) M _inst_5 _inst_3 (Pi.module.{u3, u2, u1} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) R _inst_2 (fun (i : ι) => _inst_3) (fun (i : ι) => _inst_4)) _inst_4)))) (ContinuousLinearEquiv.funUnique.{u3, u1, u2} ι R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5)) (Function.eval.{succ u3, succ u2} ι (fun (x : ι) => M) (Inhabited.default.{succ u3} ι (Unique.instInhabited.{succ u3} ι _inst_1)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.coe_fun_unique ContinuousLinearEquiv.coe_funUniqueₓ'. -/
@[simp]
theorem coe_funUnique : ⇑(funUnique ι R M) = Function.eval default :=
  rfl
#align continuous_linear_equiv.coe_fun_unique ContinuousLinearEquiv.coe_funUnique

/- warning: continuous_linear_equiv.coe_fun_unique_symm -> ContinuousLinearEquiv.coe_funUnique_symm is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} {R : Type.{u2}} {M : Type.{u3}} [_inst_1 : Unique.{succ u1} ι] [_inst_2 : Semiring.{u2} R] [_inst_3 : AddCommMonoid.{u3} M] [_inst_4 : Module.{u2, u3} R M _inst_2 _inst_3] [_inst_5 : TopologicalSpace.{u3} M], Eq.{max (succ u3) (succ (max u1 u3))} (M -> ι -> M) (coeFn.{max (succ u3) (succ (max u1 u3)), max (succ u3) (succ (max u1 u3))} (ContinuousLinearEquiv.{u2, u2, u3, max u1 u3} R R _inst_2 _inst_2 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (RingHomInvPair.ids.{u2} R _inst_2) (RingHomInvPair.ids.{u2} R _inst_2) M _inst_5 _inst_3 (ι -> M) (Pi.topologicalSpace.{u1, u3} ι (fun (ᾰ : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u1, u3} ι (fun (ᾰ : ι) => M) (fun (i : ι) => _inst_3)) _inst_4 (Pi.Function.module.{u1, u2, u3} ι R M _inst_2 _inst_3 _inst_4)) (fun (_x : ContinuousLinearEquiv.{u2, u2, u3, max u1 u3} R R _inst_2 _inst_2 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (RingHomInvPair.ids.{u2} R _inst_2) (RingHomInvPair.ids.{u2} R _inst_2) M _inst_5 _inst_3 (ι -> M) (Pi.topologicalSpace.{u1, u3} ι (fun (ᾰ : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u1, u3} ι (fun (ᾰ : ι) => M) (fun (i : ι) => _inst_3)) _inst_4 (Pi.Function.module.{u1, u2, u3} ι R M _inst_2 _inst_3 _inst_4)) => M -> ι -> M) (ContinuousLinearEquiv.hasCoeToFun.{u2, u2, u3, max u1 u3} R R _inst_2 _inst_2 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (RingHomInvPair.ids.{u2} R _inst_2) (RingHomInvPair.ids.{u2} R _inst_2) M _inst_5 _inst_3 (ι -> M) (Pi.topologicalSpace.{u1, u3} ι (fun (ᾰ : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u1, u3} ι (fun (ᾰ : ι) => M) (fun (i : ι) => _inst_3)) _inst_4 (Pi.Function.module.{u1, u2, u3} ι R M _inst_2 _inst_3 _inst_4)) (ContinuousLinearEquiv.symm.{u2, u2, max u1 u3, u3} R R _inst_2 _inst_2 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_2)) (RingHomInvPair.ids.{u2} R _inst_2) (RingHomInvPair.ids.{u2} R _inst_2) (ι -> M) (Pi.topologicalSpace.{u1, u3} ι (fun (ᾰ : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u1, u3} ι (fun (ᾰ : ι) => M) (fun (i : ι) => _inst_3)) M _inst_5 _inst_3 (Pi.Function.module.{u1, u2, u3} ι R M _inst_2 _inst_3 _inst_4) _inst_4 (ContinuousLinearEquiv.funUnique.{u1, u2, u3} ι R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5))) (Function.const.{succ u3, succ u1} M ι)
but is expected to have type
  forall {ι : Type.{u3}} {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Unique.{succ u3} ι] [_inst_2 : Semiring.{u1} R] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_2 _inst_3] [_inst_5 : TopologicalSpace.{u2} M], Eq.{max (succ u3) (succ u2)} (forall (ᾰ : M), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => ι -> M) ᾰ) (FunLike.coe.{max (succ u3) (succ u2), succ u2, max (succ u3) (succ u2)} (ContinuousLinearEquiv.{u1, u1, u2, max u3 u2} R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) M _inst_5 _inst_3 (ι -> M) (Pi.topologicalSpace.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (i : ι) => _inst_3)) _inst_4 (Pi.module.{u3, u2, u1} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) R _inst_2 (fun (i : ι) => _inst_3) (fun (i : ι) => _inst_4))) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => ι -> M) _x) (ContinuousMapClass.toFunLike.{max u3 u2, u2, max u3 u2} (ContinuousLinearEquiv.{u1, u1, u2, max u3 u2} R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) M _inst_5 _inst_3 (ι -> M) (Pi.topologicalSpace.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (i : ι) => _inst_3)) _inst_4 (Pi.module.{u3, u2, u1} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) R _inst_2 (fun (i : ι) => _inst_3) (fun (i : ι) => _inst_4))) M (ι -> M) _inst_5 (Pi.topologicalSpace.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (a : ι) => _inst_5)) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u3 u2, u1, u1, u2, max u3 u2} (ContinuousLinearEquiv.{u1, u1, u2, max u3 u2} R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) M _inst_5 _inst_3 (ι -> M) (Pi.topologicalSpace.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (i : ι) => _inst_3)) _inst_4 (Pi.module.{u3, u2, u1} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) R _inst_2 (fun (i : ι) => _inst_3) (fun (i : ι) => _inst_4))) R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) M _inst_5 _inst_3 (ι -> M) (Pi.topologicalSpace.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (i : ι) => _inst_3)) _inst_4 (Pi.module.{u3, u2, u1} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) R _inst_2 (fun (i : ι) => _inst_3) (fun (i : ι) => _inst_4)) (ContinuousSemilinearEquivClass.continuousSemilinearMapClass.{max u3 u2, u1, u1, u2, max u3 u2} (ContinuousLinearEquiv.{u1, u1, u2, max u3 u2} R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) M _inst_5 _inst_3 (ι -> M) (Pi.topologicalSpace.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (i : ι) => _inst_3)) _inst_4 (Pi.module.{u3, u2, u1} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) R _inst_2 (fun (i : ι) => _inst_3) (fun (i : ι) => _inst_4))) R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) M _inst_5 _inst_3 (ι -> M) (Pi.topologicalSpace.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (i : ι) => _inst_3)) _inst_4 (Pi.module.{u3, u2, u1} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) R _inst_2 (fun (i : ι) => _inst_3) (fun (i : ι) => _inst_4)) (ContinuousLinearEquiv.continuousSemilinearEquivClass.{u1, u1, u2, max u3 u2} R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) M _inst_5 _inst_3 (ι -> M) (Pi.topologicalSpace.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u3, u2} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) (fun (i : ι) => _inst_3)) _inst_4 (Pi.module.{u3, u2, u1} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) R _inst_2 (fun (i : ι) => _inst_3) (fun (i : ι) => _inst_4)))))) (ContinuousLinearEquiv.symm.{u1, u1, max u3 u2, u2} R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) (ι -> M) (Pi.topologicalSpace.{u3, u2} ι (fun (ᾰ : ι) => M) (fun (a : ι) => _inst_5)) (Pi.addCommMonoid.{u3, u2} ι (fun (ᾰ : ι) => M) (fun (i : ι) => _inst_3)) M _inst_5 _inst_3 (Pi.module.{u3, u2, u1} ι (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61164 : ι) => M) R _inst_2 (fun (i : ι) => _inst_3) (fun (i : ι) => _inst_4)) _inst_4 (ContinuousLinearEquiv.funUnique.{u3, u1, u2} ι R M _inst_1 _inst_2 _inst_3 _inst_4 _inst_5))) (Function.const.{succ u2, succ u3} M ι)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.coe_fun_unique_symm ContinuousLinearEquiv.coe_funUnique_symmₓ'. -/
@[simp]
theorem coe_funUnique_symm : ⇑(funUnique ι R M).symm = Function.const ι :=
  rfl
#align continuous_linear_equiv.coe_fun_unique_symm ContinuousLinearEquiv.coe_funUnique_symm

variable (R M)

/- warning: continuous_linear_equiv.pi_fin_two -> ContinuousLinearEquiv.piFinTwo is a dubious translation:
lean 3 declaration is
  forall (R : Type.{u1}) [_inst_2 : Semiring.{u1} R] (M : (Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) -> Type.{u2}) [_inst_6 : forall (i : Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))), AddCommMonoid.{u2} (M i)] [_inst_7 : forall (i : Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))), Module.{u1, u2} R (M i) _inst_2 (_inst_6 i)] [_inst_8 : forall (i : Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))), TopologicalSpace.{u2} (M i)], ContinuousLinearEquiv.{u1, u1, u2, u2} R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) (forall (i : Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))), M i) (Pi.topologicalSpace.{0, u2} (Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) (fun (i : Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) => M i) (fun (a : Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) => _inst_8 a)) (Pi.addCommMonoid.{0, u2} (Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) (fun (i : Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) => M i) (fun (i : Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) => _inst_6 i)) (Prod.{u2, u2} (M (OfNat.ofNat.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 0 (OfNat.mk.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 0 (Zero.zero.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) (Fin.hasZeroOfNeZero (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)) ContinuousLinearEquiv.piFinTwo._proof_1))))) (M (OfNat.ofNat.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 1 (OfNat.mk.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 1 (One.one.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) (Fin.hasOneOfNeZero (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)) ContinuousLinearEquiv.piFinTwo._proof_2)))))) (Prod.topologicalSpace.{u2, u2} (M (OfNat.ofNat.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 0 (OfNat.mk.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 0 (Zero.zero.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) (Fin.hasZeroOfNeZero (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)) ContinuousLinearEquiv.piFinTwo._proof_1))))) (M (OfNat.ofNat.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 1 (OfNat.mk.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 1 (One.one.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) (Fin.hasOneOfNeZero (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)) ContinuousLinearEquiv.piFinTwo._proof_2))))) (_inst_8 (OfNat.ofNat.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 0 (OfNat.mk.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 0 (Zero.zero.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) (Fin.hasZeroOfNeZero (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)) ContinuousLinearEquiv.piFinTwo._proof_1))))) (_inst_8 (OfNat.ofNat.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 1 (OfNat.mk.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 1 (One.one.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) (Fin.hasOneOfNeZero (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)) ContinuousLinearEquiv.piFinTwo._proof_2)))))) (Prod.addCommMonoid.{u2, u2} (M (OfNat.ofNat.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 0 (OfNat.mk.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 0 (Zero.zero.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) (Fin.hasZeroOfNeZero (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)) ContinuousLinearEquiv.piFinTwo._proof_1))))) (M (OfNat.ofNat.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 1 (OfNat.mk.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 1 (One.one.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) (Fin.hasOneOfNeZero (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)) ContinuousLinearEquiv.piFinTwo._proof_2))))) (_inst_6 (OfNat.ofNat.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 0 (OfNat.mk.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 0 (Zero.zero.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) (Fin.hasZeroOfNeZero (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)) ContinuousLinearEquiv.piFinTwo._proof_1))))) (_inst_6 (OfNat.ofNat.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 1 (OfNat.mk.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 1 (One.one.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) (Fin.hasOneOfNeZero (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)) ContinuousLinearEquiv.piFinTwo._proof_2)))))) (Pi.module.{0, u2, u1} (Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) (fun (i : Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) => M i) R _inst_2 (fun (i : Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) => _inst_6 i) (fun (i : Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) => _inst_7 i)) (Prod.module.{u1, u2, u2} R (M (OfNat.ofNat.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 0 (OfNat.mk.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 0 (Zero.zero.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) (Fin.hasZeroOfNeZero (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)) ContinuousLinearEquiv.piFinTwo._proof_1))))) (M (OfNat.ofNat.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 1 (OfNat.mk.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 1 (One.one.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) (Fin.hasOneOfNeZero (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)) ContinuousLinearEquiv.piFinTwo._proof_2))))) _inst_2 (_inst_6 (OfNat.ofNat.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 0 (OfNat.mk.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 0 (Zero.zero.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) (Fin.hasZeroOfNeZero (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)) ContinuousLinearEquiv.piFinTwo._proof_1))))) (_inst_6 (OfNat.ofNat.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 1 (OfNat.mk.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 1 (One.one.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) (Fin.hasOneOfNeZero (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)) ContinuousLinearEquiv.piFinTwo._proof_2))))) (_inst_7 (OfNat.ofNat.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 0 (OfNat.mk.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 0 (Zero.zero.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) (Fin.hasZeroOfNeZero (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)) ContinuousLinearEquiv.piFinTwo._proof_1))))) (_inst_7 (OfNat.ofNat.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 1 (OfNat.mk.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) 1 (One.one.{0} (Fin (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))) (Fin.hasOneOfNeZero (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne)) ContinuousLinearEquiv.piFinTwo._proof_2))))))
but is expected to have type
  forall (R : Type.{u1}) [_inst_2 : Semiring.{u1} R] (M : (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) -> Type.{u2}) [_inst_6 : forall (i : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))), AddCommMonoid.{u2} (M i)] [_inst_7 : forall (i : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))), Module.{u1, u2} R (M i) _inst_2 (_inst_6 i)] [_inst_8 : forall (i : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))), TopologicalSpace.{u2} (M i)], ContinuousLinearEquiv.{u1, u1, u2, u2} R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) (forall (i : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))), M i) (Pi.topologicalSpace.{0, u2} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) (fun (i : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) => M i) (fun (a : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) => _inst_8 a)) (Pi.addCommMonoid.{0, u2} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) (fun (i : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) => M i) (fun (i : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) => _inst_6 i)) (Prod.{u2, u2} (M (OfNat.ofNat.{0} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) 0 (Fin.instOfNatFin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) 0 (NeZero.succ (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))))) (M (OfNat.ofNat.{0} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) 1 (Fin.instOfNatFin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) 1 (NeZero.succ (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))))))) (instTopologicalSpaceProd.{u2, u2} (M (OfNat.ofNat.{0} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) 0 (Fin.instOfNatFin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) 0 (NeZero.succ (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))))) (M (OfNat.ofNat.{0} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) 1 (Fin.instOfNatFin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) 1 (NeZero.succ (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))))) (_inst_8 (OfNat.ofNat.{0} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) 0 (Fin.instOfNatFin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) 0 (NeZero.succ (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))))) (_inst_8 (OfNat.ofNat.{0} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) 1 (Fin.instOfNatFin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) 1 (NeZero.succ (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))))))) (Prod.instAddCommMonoidSum.{u2, u2} (M (OfNat.ofNat.{0} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) 0 (Fin.instOfNatFin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) 0 (NeZero.succ (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))))) (M (OfNat.ofNat.{0} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) 1 (Fin.instOfNatFin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) 1 (NeZero.succ (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))))) (_inst_6 (OfNat.ofNat.{0} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) 0 (Fin.instOfNatFin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) 0 (NeZero.succ (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))))) (_inst_6 (OfNat.ofNat.{0} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) 1 (Fin.instOfNatFin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) 1 (NeZero.succ (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))))))) (Pi.module.{0, u2, u1} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) (fun (i : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) => M i) R _inst_2 (fun (i : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) => _inst_6 i) (fun (i : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) => _inst_7 i)) (Prod.module.{u1, u2, u2} R (M (OfNat.ofNat.{0} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) 0 (Fin.instOfNatFin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) 0 (NeZero.succ (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))))) (M (OfNat.ofNat.{0} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) 1 (Fin.instOfNatFin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) 1 (NeZero.succ (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))))) _inst_2 (_inst_6 (OfNat.ofNat.{0} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) 0 (Fin.instOfNatFin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) 0 (NeZero.succ (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))))) (_inst_6 (OfNat.ofNat.{0} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) 1 (Fin.instOfNatFin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) 1 (NeZero.succ (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))))) (_inst_7 (OfNat.ofNat.{0} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) 0 (Fin.instOfNatFin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) 0 (NeZero.succ (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))))) (_inst_7 (OfNat.ofNat.{0} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) 1 (Fin.instOfNatFin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) 1 (NeZero.succ (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.pi_fin_two ContinuousLinearEquiv.piFinTwoₓ'. -/
/-- Continuous linear equivalence between dependent functions `Π i : fin 2, M i` and `M 0 × M 1`. -/
@[simps (config := { fullyApplied := false })]
def piFinTwo (M : Fin 2 → Type _) [∀ i, AddCommMonoid (M i)] [∀ i, Module R (M i)]
    [∀ i, TopologicalSpace (M i)] : (∀ i, M i) ≃L[R] M 0 × M 1 :=
  { Homeomorph.piFinTwo M with toLinearEquiv := LinearEquiv.piFinTwo R M }
#align continuous_linear_equiv.pi_fin_two ContinuousLinearEquiv.piFinTwo

/- warning: continuous_linear_equiv.fin_two_arrow -> ContinuousLinearEquiv.finTwoArrow is a dubious translation:
lean 3 declaration is
  forall (R : Type.{u1}) (M : Type.{u2}) [_inst_2 : Semiring.{u1} R] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_2 _inst_3] [_inst_5 : TopologicalSpace.{u2} M], ContinuousLinearEquiv.{u1, u1, u2, u2} R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) ((Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) -> M) (Pi.topologicalSpace.{0, u2} (Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) (fun (ᾰ : Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) => M) (fun (a : Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) => _inst_5)) (Pi.addCommMonoid.{0, u2} (Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) (fun (ᾰ : Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) => M) (fun (i : Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) => _inst_3)) (Prod.{u2, u2} M M) (Prod.topologicalSpace.{u2, u2} M M _inst_5 _inst_5) (Prod.addCommMonoid.{u2, u2} M M _inst_3 _inst_3) (Pi.Function.module.{0, u1, u2} (Fin (OfNat.ofNat.{0} Nat 2 (OfNat.mk.{0} Nat 2 (bit0.{0} Nat Nat.hasAdd (One.one.{0} Nat Nat.hasOne))))) R M _inst_2 _inst_3 _inst_4) (Prod.module.{u1, u2, u2} R M M _inst_2 _inst_3 _inst_3 _inst_4 _inst_4)
but is expected to have type
  forall (R : Type.{u1}) (M : Type.{u2}) [_inst_2 : Semiring.{u1} R] [_inst_3 : AddCommMonoid.{u2} M] [_inst_4 : Module.{u1, u2} R M _inst_2 _inst_3] [_inst_5 : TopologicalSpace.{u2} M], ContinuousLinearEquiv.{u1, u1, u2, u2} R R _inst_2 _inst_2 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_2)) (RingHomInvPair.ids.{u1} R _inst_2) (RingHomInvPair.ids.{u1} R _inst_2) ((Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) -> M) (Pi.topologicalSpace.{0, u2} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) (fun (ᾰ : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) => M) (fun (a : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) => _inst_5)) (Pi.addCommMonoid.{0, u2} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) (fun (ᾰ : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) => M) (fun (i : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) => _inst_3)) (Prod.{u2, u2} M M) (instTopologicalSpaceProd.{u2, u2} M M _inst_5 _inst_5) (Prod.instAddCommMonoidSum.{u2, u2} M M _inst_3 _inst_3) (Pi.module.{0, u2, u1} (Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) (fun (a._@.Mathlib.Topology.Algebra.Module.Basic._hyg.61449 : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) => M) R _inst_2 (fun (i : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) => _inst_3) (fun (i : Fin (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))) => _inst_4)) (Prod.module.{u1, u2, u2} R M M _inst_2 _inst_3 _inst_3 _inst_4 _inst_4)
Case conversion may be inaccurate. Consider using '#align continuous_linear_equiv.fin_two_arrow ContinuousLinearEquiv.finTwoArrowₓ'. -/
/-- Continuous linear equivalence between vectors in `M² = fin 2 → M` and `M × M`. -/
@[simps (config := { fullyApplied := false })]
def finTwoArrow : (Fin 2 → M) ≃L[R] M × M :=
  { piFinTwo R fun _ => M with toLinearEquiv := LinearEquiv.finTwoArrow R M }
#align continuous_linear_equiv.fin_two_arrow ContinuousLinearEquiv.finTwoArrow

end

end ContinuousLinearEquiv

namespace ContinuousLinearMap

open Classical

variable {R : Type _} {M : Type _} {M₂ : Type _} [TopologicalSpace M] [TopologicalSpace M₂]

section

variable [Semiring R]

variable [AddCommMonoid M₂] [Module R M₂]

variable [AddCommMonoid M] [Module R M]

#print ContinuousLinearMap.inverse /-
/-- Introduce a function `inverse` from `M →L[R] M₂` to `M₂ →L[R] M`, which sends `f` to `f.symm` if
`f` is a continuous linear equivalence and to `0` otherwise.  This definition is somewhat ad hoc,
but one needs a fully (rather than partially) defined inverse function for some purposes, including
for calculus. -/
noncomputable def inverse : (M →L[R] M₂) → M₂ →L[R] M := fun f =>
  if h : ∃ e : M ≃L[R] M₂, (e : M →L[R] M₂) = f then ((Classical.choose h).symm : M₂ →L[R] M) else 0
#align continuous_linear_map.inverse ContinuousLinearMap.inverse
-/

/- warning: continuous_linear_map.inverse_equiv -> ContinuousLinearMap.inverse_equiv is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} {M₂ : Type.{u3}} [_inst_1 : TopologicalSpace.{u2} M] [_inst_2 : TopologicalSpace.{u3} M₂] [_inst_3 : Semiring.{u1} R] [_inst_4 : AddCommMonoid.{u3} M₂] [_inst_5 : Module.{u1, u3} R M₂ _inst_3 _inst_4] [_inst_6 : AddCommMonoid.{u2} M] [_inst_7 : Module.{u1, u2} R M _inst_3 _inst_6] (e : ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5), Eq.{max (succ u3) (succ u2)} (ContinuousLinearMap.{u1, u1, u3, u2} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) (ContinuousLinearMap.inverse.{u1, u2, u3} R M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 ((fun (a : Sort.{max (succ u2) (succ u3)}) (b : Sort.{max (succ u2) (succ u3)}) [self : HasLiftT.{max (succ u2) (succ u3), max (succ u2) (succ u3)} a b] => self.0) (ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (ContinuousLinearMap.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (HasLiftT.mk.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (ContinuousLinearMap.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (CoeTCₓ.coe.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (ContinuousLinearMap.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (coeBase.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (ContinuousLinearMap.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5)))) e)) ((fun (a : Sort.{max (succ u3) (succ u2)}) (b : Sort.{max (succ u3) (succ u2)}) [self : HasLiftT.{max (succ u3) (succ u2), max (succ u3) (succ u2)} a b] => self.0) (ContinuousLinearEquiv.{u1, u1, u3, u2} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) (ContinuousLinearMap.{u1, u1, u3, u2} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) (HasLiftT.mk.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) (ContinuousLinearMap.{u1, u1, u3, u2} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) (CoeTCₓ.coe.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) (ContinuousLinearMap.{u1, u1, u3, u2} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) (coeBase.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) (ContinuousLinearMap.{u1, u1, u3, u2} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u1, u3, u2} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7)))) (ContinuousLinearEquiv.symm.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5 e))
but is expected to have type
  forall {R : Type.{u3}} {M : Type.{u2}} {M₂ : Type.{u1}} [_inst_1 : TopologicalSpace.{u2} M] [_inst_2 : TopologicalSpace.{u1} M₂] [_inst_3 : Semiring.{u3} R] [_inst_4 : AddCommMonoid.{u1} M₂] [_inst_5 : Module.{u3, u1} R M₂ _inst_3 _inst_4] [_inst_6 : AddCommMonoid.{u2} M] [_inst_7 : Module.{u3, u2} R M _inst_3 _inst_6] (e : ContinuousLinearEquiv.{u3, u3, u2, u1} R R _inst_3 _inst_3 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) (RingHomInvPair.ids.{u3} R _inst_3) (RingHomInvPair.ids.{u3} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5), Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u3, u3, u1, u2} R R _inst_3 _inst_3 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) (ContinuousLinearMap.inverse.{u3, u2, u1} R M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 (ContinuousLinearEquiv.toContinuousLinearMap.{u3, u3, u2, u1} R R _inst_3 _inst_3 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) (RingHomInvPair.ids.{u3} R _inst_3) (RingHomInvPair.ids.{u3} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5 e)) (ContinuousLinearEquiv.toContinuousLinearMap.{u3, u3, u1, u2} R R _inst_3 _inst_3 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) (RingHomInvPair.ids.{u3} R _inst_3) (RingHomInvPair.ids.{u3} R _inst_3) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7 (ContinuousLinearEquiv.symm.{u3, u3, u2, u1} R R _inst_3 _inst_3 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) (RingHomInvPair.ids.{u3} R _inst_3) (RingHomInvPair.ids.{u3} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5 e))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.inverse_equiv ContinuousLinearMap.inverse_equivₓ'. -/
/-- By definition, if `f` is invertible then `inverse f = f.symm`. -/
@[simp]
theorem inverse_equiv (e : M ≃L[R] M₂) : inverse (e : M →L[R] M₂) = e.symm :=
  by
  have h : ∃ e' : M ≃L[R] M₂, (e' : M →L[R] M₂) = ↑e := ⟨e, rfl⟩
  simp only [inverse, dif_pos h]
  congr
  exact_mod_cast Classical.choose_spec h
#align continuous_linear_map.inverse_equiv ContinuousLinearMap.inverse_equiv

/- warning: continuous_linear_map.inverse_non_equiv -> ContinuousLinearMap.inverse_non_equiv is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} {M₂ : Type.{u3}} [_inst_1 : TopologicalSpace.{u2} M] [_inst_2 : TopologicalSpace.{u3} M₂] [_inst_3 : Semiring.{u1} R] [_inst_4 : AddCommMonoid.{u3} M₂] [_inst_5 : Module.{u1, u3} R M₂ _inst_3 _inst_4] [_inst_6 : AddCommMonoid.{u2} M] [_inst_7 : Module.{u1, u2} R M _inst_3 _inst_6] (f : ContinuousLinearMap.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5), (Not (Exists.{max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (fun (e' : ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) => Eq.{max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) ((fun (a : Sort.{max (succ u2) (succ u3)}) (b : Sort.{max (succ u2) (succ u3)}) [self : HasLiftT.{max (succ u2) (succ u3), max (succ u2) (succ u3)} a b] => self.0) (ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (ContinuousLinearMap.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (HasLiftT.mk.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (ContinuousLinearMap.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (CoeTCₓ.coe.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (ContinuousLinearMap.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (coeBase.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearEquiv.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (ContinuousLinearMap.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u1, u2, u3} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R _inst_3) (RingHomInvPair.ids.{u1} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5)))) e') f))) -> (Eq.{max (succ u3) (succ u2)} (ContinuousLinearMap.{u1, u1, u3, u2} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) (ContinuousLinearMap.inverse.{u1, u2, u3} R M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 f) (OfNat.ofNat.{max u3 u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) 0 (OfNat.mk.{max u3 u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) 0 (Zero.zero.{max u3 u2} (ContinuousLinearMap.{u1, u1, u3, u2} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) (ContinuousLinearMap.zero.{u1, u1, u3, u2} R R _inst_3 _inst_3 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_3)) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7)))))
but is expected to have type
  forall {R : Type.{u3}} {M : Type.{u2}} {M₂ : Type.{u1}} [_inst_1 : TopologicalSpace.{u2} M] [_inst_2 : TopologicalSpace.{u1} M₂] [_inst_3 : Semiring.{u3} R] [_inst_4 : AddCommMonoid.{u1} M₂] [_inst_5 : Module.{u3, u1} R M₂ _inst_3 _inst_4] [_inst_6 : AddCommMonoid.{u2} M] [_inst_7 : Module.{u3, u2} R M _inst_3 _inst_6] (f : ContinuousLinearMap.{u3, u3, u2, u1} R R _inst_3 _inst_3 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5), (Not (Exists.{max (succ u2) (succ u1)} (ContinuousLinearEquiv.{u3, u3, u2, u1} R R _inst_3 _inst_3 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) (RingHomInvPair.ids.{u3} R _inst_3) (RingHomInvPair.ids.{u3} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (fun (e' : ContinuousLinearEquiv.{u3, u3, u2, u1} R R _inst_3 _inst_3 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) (RingHomInvPair.ids.{u3} R _inst_3) (RingHomInvPair.ids.{u3} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) => Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u3, u3, u2, u1} R R _inst_3 _inst_3 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5) (ContinuousLinearEquiv.toContinuousLinearMap.{u3, u3, u2, u1} R R _inst_3 _inst_3 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) (RingHomInvPair.ids.{u3} R _inst_3) (RingHomInvPair.ids.{u3} R _inst_3) M _inst_1 _inst_6 M₂ _inst_2 _inst_4 _inst_7 _inst_5 e') f))) -> (Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u3, u3, u1, u2} R R _inst_3 _inst_3 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) (ContinuousLinearMap.inverse.{u3, u2, u1} R M M₂ _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 _inst_6 _inst_7 f) (OfNat.ofNat.{max u2 u1} (ContinuousLinearMap.{u3, u3, u1, u2} R R _inst_3 _inst_3 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) 0 (Zero.toOfNat0.{max u2 u1} (ContinuousLinearMap.{u3, u3, u1, u2} R R _inst_3 _inst_3 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7) (ContinuousLinearMap.zero.{u3, u3, u1, u2} R R _inst_3 _inst_3 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_3)) M₂ _inst_2 _inst_4 M _inst_1 _inst_6 _inst_5 _inst_7))))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.inverse_non_equiv ContinuousLinearMap.inverse_non_equivₓ'. -/
/-- By definition, if `f` is not invertible then `inverse f = 0`. -/
@[simp]
theorem inverse_non_equiv (f : M →L[R] M₂) (h : ¬∃ e' : M ≃L[R] M₂, ↑e' = f) : inverse f = 0 :=
  dif_neg h
#align continuous_linear_map.inverse_non_equiv ContinuousLinearMap.inverse_non_equiv

end

section

variable [Ring R]

variable [AddCommGroup M] [TopologicalAddGroup M] [Module R M]

variable [AddCommGroup M₂] [Module R M₂]

/- warning: continuous_linear_map.ring_inverse_equiv -> ContinuousLinearMap.ring_inverse_equiv is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : TopologicalSpace.{u2} M] [_inst_3 : Ring.{u1} R] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : TopologicalAddGroup.{u2} M _inst_1 (AddCommGroup.toAddGroup.{u2} M _inst_4)] [_inst_6 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] (e : ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6), Eq.{succ u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (Ring.inverse.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_3) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6) ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (HasLiftT.mk.{succ u2, succ u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (CoeTCₓ.coe.{succ u2, succ u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (coeBase.{succ u2, succ u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6)))) e)) (ContinuousLinearMap.inverse.{u1, u2, u2} R M M _inst_1 _inst_1 (Ring.toSemiring.{u1} R _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (HasLiftT.mk.{succ u2, succ u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (CoeTCₓ.coe.{succ u2, succ u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (coeBase.{succ u2, succ u2} (ContinuousLinearEquiv.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6)))) e))
but is expected to have type
  forall {R : Type.{u2}} {M : Type.{u1}} [_inst_1 : TopologicalSpace.{u1} M] [_inst_3 : Ring.{u2} R] [_inst_4 : AddCommGroup.{u1} M] [_inst_5 : Module.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_3) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4)] (_inst_6 : ContinuousLinearEquiv.{u2, u2, u1, u1} R R (Ring.toSemiring.{u2} R _inst_3) (Ring.toSemiring.{u2} R _inst_3) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_3))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_3))) (RingHomInvPair.ids.{u2} R (Ring.toSemiring.{u2} R _inst_3)) (RingHomInvPair.ids.{u2} R (Ring.toSemiring.{u2} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_5 _inst_5), Eq.{succ u1} (ContinuousLinearMap.{u2, u2, u1, u1} R R (Ring.toSemiring.{u2} R _inst_3) (Ring.toSemiring.{u2} R _inst_3) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_5 _inst_5) (Ring.inverse.{u1} (ContinuousLinearMap.{u2, u2, u1, u1} R R (Ring.toSemiring.{u2} R _inst_3) (Ring.toSemiring.{u2} R _inst_3) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u2, u1} R (Ring.toSemiring.{u2} R _inst_3) M _inst_1 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_5) (ContinuousLinearEquiv.toContinuousLinearMap.{u2, u2, u1, u1} R R (Ring.toSemiring.{u2} R _inst_3) (Ring.toSemiring.{u2} R _inst_3) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_3))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_3))) (RingHomInvPair.ids.{u2} R (Ring.toSemiring.{u2} R _inst_3)) (RingHomInvPair.ids.{u2} R (Ring.toSemiring.{u2} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_5 _inst_5 _inst_6)) (ContinuousLinearMap.inverse.{u2, u1, u1} R M M _inst_1 _inst_1 (Ring.toSemiring.{u2} R _inst_3) (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_5 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_5 (ContinuousLinearEquiv.toContinuousLinearMap.{u2, u2, u1, u1} R R (Ring.toSemiring.{u2} R _inst_3) (Ring.toSemiring.{u2} R _inst_3) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_3))) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_3))) (RingHomInvPair.ids.{u2} R (Ring.toSemiring.{u2} R _inst_3)) (RingHomInvPair.ids.{u2} R (Ring.toSemiring.{u2} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u1} M _inst_4) _inst_5 _inst_5 _inst_6))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.ring_inverse_equiv ContinuousLinearMap.ring_inverse_equivₓ'. -/
@[simp]
theorem ring_inverse_equiv (e : M ≃L[R] M) : Ring.inverse ↑e = inverse (e : M →L[R] M) :=
  by
  suffices Ring.inverse ((ContinuousLinearEquiv.unitsEquiv _ _).symm e : M →L[R] M) = inverse ↑e by
    convert this
  simp
  rfl
#align continuous_linear_map.ring_inverse_equiv ContinuousLinearMap.ring_inverse_equiv

/- warning: continuous_linear_map.to_ring_inverse -> ContinuousLinearMap.to_ring_inverse is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} {M₂ : Type.{u3}} [_inst_1 : TopologicalSpace.{u2} M] [_inst_2 : TopologicalSpace.{u3} M₂] [_inst_3 : Ring.{u1} R] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : TopologicalAddGroup.{u2} M _inst_1 (AddCommGroup.toAddGroup.{u2} M _inst_4)] [_inst_6 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] [_inst_7 : AddCommGroup.{u3} M₂] [_inst_8 : Module.{u1, u3} R M₂ (Ring.toSemiring.{u1} R _inst_3) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7)] (e : ContinuousLinearEquiv.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_6 _inst_8) (f : ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_6 _inst_8), Eq.{max (succ u3) (succ u2)} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (ContinuousLinearMap.inverse.{u1, u2, u3} R M M₂ _inst_1 _inst_2 (Ring.toSemiring.{u1} R _inst_3) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_8 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 f) (ContinuousLinearMap.comp.{u1, u1, u1, u3, u2, u2} R R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6 _inst_6 (RingHomCompTriple.ids.{u1, u1} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3)))) (Ring.inverse.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_3) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6) (ContinuousLinearMap.comp.{u1, u1, u1, u2, u3, u2} R R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_8 _inst_6 (RingHomCompTriple.right_ids.{u1, u1} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3)))) ((fun (a : Sort.{max (succ u3) (succ u2)}) (b : Sort.{max (succ u3) (succ u2)}) [self : HasLiftT.{max (succ u3) (succ u2), max (succ u3) (succ u2)} a b] => self.0) (ContinuousLinearEquiv.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (HasLiftT.mk.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (CoeTCₓ.coe.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (coeBase.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6)))) (ContinuousLinearEquiv.symm.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_6 _inst_8 e)) f)) ((fun (a : Sort.{max (succ u3) (succ u2)}) (b : Sort.{max (succ u3) (succ u2)}) [self : HasLiftT.{max (succ u3) (succ u2), max (succ u3) (succ u2)} a b] => self.0) (ContinuousLinearEquiv.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (HasLiftT.mk.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (CoeTCₓ.coe.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (coeBase.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearEquiv.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6) (ContinuousLinearEquiv.ContinuousLinearMap.coe.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_8 _inst_6)))) (ContinuousLinearEquiv.symm.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) (RingHomInvPair.ids.{u1} R (Ring.toSemiring.{u1} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_7) _inst_6 _inst_8 e)))
but is expected to have type
  forall {R : Type.{u3}} {M : Type.{u2}} {M₂ : Type.{u1}} [_inst_1 : TopologicalSpace.{u2} M] [_inst_2 : TopologicalSpace.{u1} M₂] [_inst_3 : Ring.{u3} R] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)] [_inst_6 : AddCommGroup.{u1} M₂] [_inst_7 : Module.{u3, u1} R M₂ (Ring.toSemiring.{u3} R _inst_3) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_6)] (_inst_8 : ContinuousLinearEquiv.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_3) (Ring.toSemiring.{u3} R _inst_3) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_3)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_6) _inst_5 _inst_7) (e : ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_3) (Ring.toSemiring.{u3} R _inst_3) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_6) _inst_5 _inst_7), Eq.{max (succ u2) (succ u1)} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_3) (Ring.toSemiring.{u3} R _inst_3) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_6) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_7 _inst_5) (ContinuousLinearMap.inverse.{u3, u2, u1} R M M₂ _inst_1 _inst_2 (Ring.toSemiring.{u3} R _inst_3) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_6) _inst_7 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 e) (ContinuousLinearMap.comp.{u3, u3, u3, u1, u2, u2} R R R (Ring.toSemiring.{u3} R _inst_3) (Ring.toSemiring.{u3} R _inst_3) (Ring.toSemiring.{u3} R _inst_3) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_6) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_7 _inst_5 _inst_5 (RingHomCompTriple.ids.{u3, u3} R R (Ring.toSemiring.{u3} R _inst_3) (Ring.toSemiring.{u3} R _inst_3) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3)))) (Ring.inverse.{u2} (ContinuousLinearMap.{u3, u3, u2, u2} R R (Ring.toSemiring.{u3} R _inst_3) (Ring.toSemiring.{u3} R _inst_3) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u3, u2} R (Ring.toSemiring.{u3} R _inst_3) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5) (ContinuousLinearMap.comp.{u3, u3, u3, u2, u1, u2} R R R (Ring.toSemiring.{u3} R _inst_3) (Ring.toSemiring.{u3} R _inst_3) (Ring.toSemiring.{u3} R _inst_3) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_6) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_7 _inst_5 (RingHomCompTriple.ids.{u3, u3} R R (Ring.toSemiring.{u3} R _inst_3) (Ring.toSemiring.{u3} R _inst_3) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3)))) (ContinuousLinearEquiv.toContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_3) (Ring.toSemiring.{u3} R _inst_3) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_3)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_3)) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_6) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_7 _inst_5 (ContinuousLinearEquiv.symm.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_3) (Ring.toSemiring.{u3} R _inst_3) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_3)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_6) _inst_5 _inst_7 _inst_8)) e)) (ContinuousLinearEquiv.toContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_3) (Ring.toSemiring.{u3} R _inst_3) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_3)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_3)) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_6) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_7 _inst_5 (ContinuousLinearEquiv.symm.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_3) (Ring.toSemiring.{u3} R _inst_3) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_3))) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_3)) (RingHomInvPair.ids.{u3} R (Ring.toSemiring.{u3} R _inst_3)) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M₂ _inst_2 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_6) _inst_5 _inst_7 _inst_8)))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.to_ring_inverse ContinuousLinearMap.to_ring_inverseₓ'. -/
/-- The function `continuous_linear_equiv.inverse` can be written in terms of `ring.inverse` for the
ring of self-maps of the domain. -/
theorem to_ring_inverse (e : M ≃L[R] M₂) (f : M →L[R] M₂) :
    inverse f = Ring.inverse ((e.symm : M₂ →L[R] M).comp f) ∘L ↑e.symm :=
  by
  by_cases h₁ : ∃ e' : M ≃L[R] M₂, ↑e' = f
  · obtain ⟨e', he'⟩ := h₁
    rw [← he']
    change _ = Ring.inverse ↑(e'.trans e.symm) ∘L ↑e.symm
    ext
    simp
  · suffices ¬IsUnit ((e.symm : M₂ →L[R] M).comp f) by simp [this, h₁]
    contrapose! h₁
    rcases h₁ with ⟨F, hF⟩
    use (ContinuousLinearEquiv.unitsEquiv _ _ F).trans e
    ext
    dsimp
    rw [coeFn_coe_base' F, hF]
    simp
#align continuous_linear_map.to_ring_inverse ContinuousLinearMap.to_ring_inverse

/- warning: continuous_linear_map.ring_inverse_eq_map_inverse -> ContinuousLinearMap.ring_inverse_eq_map_inverse is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : TopologicalSpace.{u2} M] [_inst_3 : Ring.{u1} R] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : TopologicalAddGroup.{u2} M _inst_1 (AddCommGroup.toAddGroup.{u2} M _inst_4)] [_inst_6 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)], Eq.{succ u2} ((ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) -> (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6)) (Ring.inverse.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 _inst_6) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_3) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6)) (ContinuousLinearMap.inverse.{u1, u2, u2} R M M _inst_1 _inst_1 (Ring.toSemiring.{u1} R _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_6)
but is expected to have type
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : TopologicalSpace.{u2} M] [_inst_3 : Ring.{u1} R] [_inst_4 : AddCommGroup.{u2} M] [_inst_5 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4)], Eq.{succ u2} ((ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) -> (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5)) (Ring.inverse.{u2} (ContinuousLinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_3) (Ring.toSemiring.{u1} R _inst_3) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_3))) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 _inst_5) (ContinuousLinearMap.monoidWithZero.{u1, u2} R (Ring.toSemiring.{u1} R _inst_3) M _inst_1 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)) (ContinuousLinearMap.inverse.{u1, u2, u2} R M M _inst_1 _inst_1 (Ring.toSemiring.{u1} R _inst_3) (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5 (AddCommGroup.toAddCommMonoid.{u2} M _inst_4) _inst_5)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.ring_inverse_eq_map_inverse ContinuousLinearMap.ring_inverse_eq_map_inverseₓ'. -/
theorem ring_inverse_eq_map_inverse : Ring.inverse = @inverse R M M _ _ _ _ _ _ _ :=
  by
  ext
  simp [to_ring_inverse (ContinuousLinearEquiv.refl R M)]
#align continuous_linear_map.ring_inverse_eq_map_inverse ContinuousLinearMap.ring_inverse_eq_map_inverse

end

end ContinuousLinearMap

namespace Submodule

variable {R : Type _} [Ring R] {M : Type _} [TopologicalSpace M] [AddCommGroup M] [Module R M]
  {M₂ : Type _} [TopologicalSpace M₂] [AddCommGroup M₂] [Module R M₂]

open ContinuousLinearMap

#print Submodule.ClosedComplemented /-
/-- A submodule `p` is called *complemented* if there exists a continuous projection `M →ₗ[R] p`. -/
def ClosedComplemented (p : Submodule R M) : Prop :=
  ∃ f : M →L[R] p, ∀ x : p, f x = x
#align submodule.closed_complemented Submodule.ClosedComplemented
-/

/- warning: submodule.closed_complemented.has_closed_complement -> Submodule.ClosedComplemented.has_closed_complement is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {M : Type.{u2}} [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommGroup.{u2} M] [_inst_4 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3)] {p : Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4} [_inst_8 : T1Space.{u2} (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4)) p) (Subtype.topologicalSpace.{u2} M (fun (x : M) => Membership.Mem.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4)) x p) _inst_2)], (Submodule.ClosedComplemented.{u1, u2} R _inst_1 M _inst_2 _inst_3 _inst_4 p) -> (Exists.{succ u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) (fun (q : Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) => Exists.{0} (IsClosed.{u2} M _inst_2 ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) (Set.{u2} M) (HasLiftT.mk.{succ u2, succ u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) (Set.{u2} M) (CoeTCₓ.coe.{succ u2, succ u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) (Set.{u2} M) (SetLike.Set.hasCoeT.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4)))) q)) (fun (hq : IsClosed.{u2} M _inst_2 ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) (Set.{u2} M) (HasLiftT.mk.{succ u2, succ u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) (Set.{u2} M) (CoeTCₓ.coe.{succ u2, succ u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) (Set.{u2} M) (SetLike.Set.hasCoeT.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4)))) q)) => IsCompl.{u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) (SetLike.partialOrder.{u2, u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) M (Submodule.setLike.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4)) (CompleteLattice.toBoundedOrder.{u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) (Submodule.completeLattice.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4)) p q)))
but is expected to have type
  forall {R : Type.{u2}} [_inst_1 : Ring.{u2} R] {M : Type.{u1}} [_inst_2 : TopologicalSpace.{u1} M] [_inst_3 : AddCommGroup.{u1} M] [_inst_4 : Module.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3)] {p : Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4} [_inst_8 : T1Space.{u1} (Subtype.{succ u1} M (fun (x : M) => Membership.mem.{u1, u1} M (Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4) M (Submodule.setLike.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4)) x p)) (instTopologicalSpaceSubtype.{u1} M (fun (x : M) => Membership.mem.{u1, u1} M (Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4) M (Submodule.setLike.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4)) x p) _inst_2)], (Submodule.ClosedComplemented.{u2, u1} R _inst_1 M _inst_2 _inst_3 _inst_4 p) -> (Exists.{succ u1} (Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4) (fun (q : Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4) => Exists.{0} (IsClosed.{u1} M _inst_2 (SetLike.coe.{u1, u1} (Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4) M (Submodule.setLike.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4) q)) (fun (hq : IsClosed.{u1} M _inst_2 (SetLike.coe.{u1, u1} (Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4) M (Submodule.setLike.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4) q)) => IsCompl.{u1} (Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4) (OmegaCompletePartialOrder.toPartialOrder.{u1} (Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4) (CompleteLattice.instOmegaCompletePartialOrder.{u1} (Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4) (Submodule.completeLattice.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4))) (CompleteLattice.toBoundedOrder.{u1} (Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4) (Submodule.completeLattice.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4)) p q)))
Case conversion may be inaccurate. Consider using '#align submodule.closed_complemented.has_closed_complement Submodule.ClosedComplemented.has_closed_complementₓ'. -/
theorem ClosedComplemented.has_closed_complement {p : Submodule R M} [T1Space p]
    (h : ClosedComplemented p) : ∃ (q : Submodule R M)(hq : IsClosed (q : Set M)), IsCompl p q :=
  Exists.elim h fun f hf => ⟨ker f, f.isClosed_ker, LinearMap.isCompl_of_proj hf⟩
#align submodule.closed_complemented.has_closed_complement Submodule.ClosedComplemented.has_closed_complement

#print Submodule.ClosedComplemented.isClosed /-
protected theorem ClosedComplemented.isClosed [TopologicalAddGroup M] [T1Space M]
    {p : Submodule R M} (h : ClosedComplemented p) : IsClosed (p : Set M) :=
  by
  rcases h with ⟨f, hf⟩
  have : ker (id R M - p.subtypeL.comp f) = p := LinearMap.ker_id_sub_eq_of_proj hf
  exact this ▸ is_closed_ker _
#align submodule.closed_complemented.is_closed Submodule.ClosedComplemented.isClosed
-/

/- warning: submodule.closed_complemented_bot -> Submodule.closedComplemented_bot is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {M : Type.{u2}} [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommGroup.{u2} M] [_inst_4 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3)], Submodule.ClosedComplemented.{u1, u2} R _inst_1 M _inst_2 _inst_3 _inst_4 (Bot.bot.{u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) (Submodule.hasBot.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4))
but is expected to have type
  forall {R : Type.{u2}} [_inst_1 : Ring.{u2} R] {M : Type.{u1}} [_inst_2 : TopologicalSpace.{u1} M] [_inst_3 : AddCommGroup.{u1} M] [_inst_4 : Module.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3)], Submodule.ClosedComplemented.{u2, u1} R _inst_1 M _inst_2 _inst_3 _inst_4 (Bot.bot.{u1} (Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4) (Submodule.instBotSubmodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4))
Case conversion may be inaccurate. Consider using '#align submodule.closed_complemented_bot Submodule.closedComplemented_botₓ'. -/
@[simp]
theorem closedComplemented_bot : ClosedComplemented (⊥ : Submodule R M) :=
  ⟨0, fun x => by simp only [zero_apply, eq_zero_of_bot_submodule x]⟩
#align submodule.closed_complemented_bot Submodule.closedComplemented_bot

/- warning: submodule.closed_complemented_top -> Submodule.closedComplemented_top is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {M : Type.{u2}} [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommGroup.{u2} M] [_inst_4 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3)], Submodule.ClosedComplemented.{u1, u2} R _inst_1 M _inst_2 _inst_3 _inst_4 (Top.top.{u2} (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4) (Submodule.hasTop.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_4))
but is expected to have type
  forall {R : Type.{u2}} [_inst_1 : Ring.{u2} R] {M : Type.{u1}} [_inst_2 : TopologicalSpace.{u1} M] [_inst_3 : AddCommGroup.{u1} M] [_inst_4 : Module.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3)], Submodule.ClosedComplemented.{u2, u1} R _inst_1 M _inst_2 _inst_3 _inst_4 (Top.top.{u1} (Submodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4) (Submodule.instTopSubmodule.{u2, u1} R M (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M _inst_3) _inst_4))
Case conversion may be inaccurate. Consider using '#align submodule.closed_complemented_top Submodule.closedComplemented_topₓ'. -/
@[simp]
theorem closedComplemented_top : ClosedComplemented (⊤ : Submodule R M) :=
  ⟨(id R M).codRestrict ⊤ fun x => trivial, fun x => Subtype.ext_iff_val.2 <| by simp⟩
#align submodule.closed_complemented_top Submodule.closedComplemented_top

end Submodule

/- warning: continuous_linear_map.closed_complemented_ker_of_right_inverse -> ContinuousLinearMap.closedComplemented_ker_of_rightInverse is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] {M : Type.{u2}} [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommGroup.{u2} M] {M₂ : Type.{u3}} [_inst_4 : TopologicalSpace.{u3} M₂] [_inst_5 : AddCommGroup.{u3} M₂] [_inst_6 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3)] [_inst_7 : Module.{u1, u3} R M₂ (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5)] [_inst_8 : TopologicalAddGroup.{u2} M _inst_2 (AddCommGroup.toAddGroup.{u2} M _inst_3)] (f₁ : ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_6 _inst_7) (f₂ : ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_7 _inst_6), (Function.RightInverse.{succ u2, succ u3} M M₂ (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_7 _inst_6) (fun (_x : ContinuousLinearMap.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_7 _inst_6) => M₂ -> M) (ContinuousLinearMap.toFun.{u1, u1, u3, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_7 _inst_6) f₂) (coeFn.{max (succ u2) (succ u3), max (succ u2) (succ u3)} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_6 _inst_7) (fun (_x : ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_6 _inst_7) => M -> M₂) (ContinuousLinearMap.toFun.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_6 _inst_7) f₁)) -> (Submodule.ClosedComplemented.{u1, u2} R _inst_1 M _inst_2 _inst_3 _inst_6 (LinearMap.ker.{u1, u1, u2, u3, max u2 u3} R R M M₂ (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_6 _inst_7 (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_6 _inst_7) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u3, u1, u1, u2, u3} (ContinuousLinearMap.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_6 _inst_7) R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_6 _inst_7 (ContinuousLinearMap.continuousSemilinearMapClass.{u1, u1, u2, u3} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M₂ _inst_5) _inst_6 _inst_7)) f₁))
but is expected to have type
  forall {R : Type.{u3}} [_inst_1 : Ring.{u3} R] {M : Type.{u2}} [_inst_2 : TopologicalSpace.{u2} M] [_inst_3 : AddCommGroup.{u2} M] {M₂ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M₂] [_inst_5 : AddCommGroup.{u1} M₂] [_inst_6 : Module.{u3, u2} R M (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3)] [_inst_7 : Module.{u3, u1} R M₂ (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5)] [_inst_8 : TopologicalAddGroup.{u2} M _inst_2 (AddCommGroup.toAddGroup.{u2} M _inst_3)] (f₁ : ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) _inst_6 _inst_7) (f₂ : ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_7 _inst_6), (Function.RightInverse.{succ u2, succ u1} M M₂ (FunLike.coe.{max (succ u2) (succ u1), succ u1, succ u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_7 _inst_6) M₂ (fun (_x : M₂) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M₂) => M) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u1, u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_7 _inst_6) M₂ M _inst_4 _inst_2 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u1, u2} (ContinuousLinearMap.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_7 _inst_6) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_7 _inst_6 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u1, u2} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) _inst_7 _inst_6))) f₂) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) _inst_6 _inst_7) M (fun (_x : M) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M) => M₂) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) _inst_6 _inst_7) M M₂ _inst_2 _inst_4 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) _inst_6 _inst_7) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) _inst_6 _inst_7 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) _inst_6 _inst_7))) f₁)) -> (Submodule.ClosedComplemented.{u3, u2} R _inst_1 M _inst_2 _inst_3 _inst_6 (LinearMap.ker.{u3, u3, u2, u1, max u2 u1} R R M M₂ (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) _inst_6 _inst_7 (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) _inst_6 _inst_7) (ContinuousSemilinearMapClass.toSemilinearMapClass.{max u2 u1, u3, u3, u2, u1} (ContinuousLinearMap.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) _inst_6 _inst_7) R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) _inst_6 _inst_7 (ContinuousLinearMap.continuousSemilinearMapClass.{u3, u3, u2, u1} R R (Ring.toSemiring.{u3} R _inst_1) (Ring.toSemiring.{u3} R _inst_1) (RingHom.id.{u3} R (Semiring.toNonAssocSemiring.{u3} R (Ring.toSemiring.{u3} R _inst_1))) M _inst_2 (AddCommGroup.toAddCommMonoid.{u2} M _inst_3) M₂ _inst_4 (AddCommGroup.toAddCommMonoid.{u1} M₂ _inst_5) _inst_6 _inst_7)) f₁))
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.closed_complemented_ker_of_right_inverse ContinuousLinearMap.closedComplemented_ker_of_rightInverseₓ'. -/
theorem ContinuousLinearMap.closedComplemented_ker_of_rightInverse {R : Type _} [Ring R]
    {M : Type _} [TopologicalSpace M] [AddCommGroup M] {M₂ : Type _} [TopologicalSpace M₂]
    [AddCommGroup M₂] [Module R M] [Module R M₂] [TopologicalAddGroup M] (f₁ : M →L[R] M₂)
    (f₂ : M₂ →L[R] M) (h : Function.RightInverse f₂ f₁) : (ker f₁).ClosedComplemented :=
  ⟨f₁.projKerOfRightInverse f₂ h, f₁.projKerOfRightInverse_apply_idem f₂ h⟩
#align continuous_linear_map.closed_complemented_ker_of_right_inverse ContinuousLinearMap.closedComplemented_ker_of_rightInverse

section Quotient

namespace Submodule

variable {R M : Type _} [Ring R] [AddCommGroup M] [Module R M] [TopologicalSpace M]
  (S : Submodule R M)

/- warning: submodule.is_open_map_mkq -> Submodule.isOpenMap_mkQ is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Ring.{u1} R] [_inst_2 : AddCommGroup.{u2} M] [_inst_3 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)] [_inst_4 : TopologicalSpace.{u2} M] (S : Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_3) [_inst_5 : TopologicalAddGroup.{u2} M _inst_4 (AddCommGroup.toAddGroup.{u2} M _inst_2)], IsOpenMap.{u2, u2} M (HasQuotient.Quotient.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_3) (Submodule.hasQuotient.{u1, u2} R M _inst_1 _inst_2 _inst_3) S) _inst_4 (Quotient.topologicalSpace.{u2} M (Submodule.quotientRel.{u1, u2} R M _inst_1 _inst_2 _inst_3 S) _inst_4) (coeFn.{succ u2, succ u2} (LinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M (HasQuotient.Quotient.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_3) (Submodule.hasQuotient.{u1, u2} R M _inst_1 _inst_2 _inst_3) S) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u2} (HasQuotient.Quotient.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_3) (Submodule.hasQuotient.{u1, u2} R M _inst_1 _inst_2 _inst_3) S) (Submodule.Quotient.addCommGroup.{u1, u2} R M _inst_1 _inst_2 _inst_3 S)) _inst_3 (Submodule.Quotient.module.{u1, u2} R M _inst_1 _inst_2 _inst_3 S)) (fun (_x : LinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M (HasQuotient.Quotient.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_3) (Submodule.hasQuotient.{u1, u2} R M _inst_1 _inst_2 _inst_3) S) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u2} (HasQuotient.Quotient.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_3) (Submodule.hasQuotient.{u1, u2} R M _inst_1 _inst_2 _inst_3) S) (Submodule.Quotient.addCommGroup.{u1, u2} R M _inst_1 _inst_2 _inst_3 S)) _inst_3 (Submodule.Quotient.module.{u1, u2} R M _inst_1 _inst_2 _inst_3 S)) => M -> (HasQuotient.Quotient.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_3) (Submodule.hasQuotient.{u1, u2} R M _inst_1 _inst_2 _inst_3) S)) (LinearMap.hasCoeToFun.{u1, u1, u2, u2} R R M (HasQuotient.Quotient.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_3) (Submodule.hasQuotient.{u1, u2} R M _inst_1 _inst_2 _inst_3) S) (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u2} (HasQuotient.Quotient.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_3) (Submodule.hasQuotient.{u1, u2} R M _inst_1 _inst_2 _inst_3) S) (Submodule.Quotient.addCommGroup.{u1, u2} R M _inst_1 _inst_2 _inst_3 S)) _inst_3 (Submodule.Quotient.module.{u1, u2} R M _inst_1 _inst_2 _inst_3 S) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (Submodule.mkQ.{u1, u2} R M _inst_1 _inst_2 _inst_3 S))
but is expected to have type
  forall {R : Type.{u1}} {M : Type.{u2}} [_inst_1 : Ring.{u1} R] [_inst_2 : AddCommGroup.{u2} M] [_inst_3 : Module.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2)] [_inst_4 : TopologicalSpace.{u2} M] (S : Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_3) [_inst_5 : TopologicalAddGroup.{u2} M _inst_4 (AddCommGroup.toAddGroup.{u2} M _inst_2)], IsOpenMap.{u2, u2} M (HasQuotient.Quotient.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_3) (Submodule.hasQuotient.{u1, u2} R M _inst_1 _inst_2 _inst_3) S) _inst_4 (QuotientModule.Quotient.topologicalSpace.{u1, u2} R M _inst_1 _inst_2 _inst_3 _inst_4 S) (FunLike.coe.{succ u2, succ u2, succ u2} (LinearMap.{u1, u1, u2, u2} R R (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) M (HasQuotient.Quotient.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_3) (Submodule.hasQuotient.{u1, u2} R M _inst_1 _inst_2 _inst_3) S) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u2} (HasQuotient.Quotient.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_3) (Submodule.hasQuotient.{u1, u2} R M _inst_1 _inst_2 _inst_3) S) (Submodule.Quotient.addCommGroup.{u1, u2} R M _inst_1 _inst_2 _inst_3 S)) _inst_3 (Submodule.Quotient.module.{u1, u2} R M _inst_1 _inst_2 _inst_3 S)) M (fun (_x : M) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6191 : M) => HasQuotient.Quotient.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_3) (Submodule.hasQuotient.{u1, u2} R M _inst_1 _inst_2 _inst_3) S) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, u2} R R M (HasQuotient.Quotient.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_3) (Submodule.hasQuotient.{u1, u2} R M _inst_1 _inst_2 _inst_3) S) (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) (AddCommGroup.toAddCommMonoid.{u2} (HasQuotient.Quotient.{u2, u2} M (Submodule.{u1, u2} R M (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} M _inst_2) _inst_3) (Submodule.hasQuotient.{u1, u2} R M _inst_1 _inst_2 _inst_3) S) (Submodule.Quotient.addCommGroup.{u1, u2} R M _inst_1 _inst_2 _inst_3 S)) _inst_3 (Submodule.Quotient.module.{u1, u2} R M _inst_1 _inst_2 _inst_3 S) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1)))) (Submodule.mkQ.{u1, u2} R M _inst_1 _inst_2 _inst_3 S))
Case conversion may be inaccurate. Consider using '#align submodule.is_open_map_mkq Submodule.isOpenMap_mkQₓ'. -/
theorem isOpenMap_mkQ [TopologicalAddGroup M] : IsOpenMap S.mkQ :=
  QuotientAddGroup.isOpenMap_coe S.toAddSubgroup
#align submodule.is_open_map_mkq Submodule.isOpenMap_mkQ

#print Submodule.topologicalAddGroup_quotient /-
instance topologicalAddGroup_quotient [TopologicalAddGroup M] : TopologicalAddGroup (M ⧸ S) :=
  topologicalAddGroup_quotient S.toAddSubgroup
#align submodule.topological_add_group_quotient Submodule.topologicalAddGroup_quotient
-/

#print Submodule.continuousSMul_quotient /-
instance continuousSMul_quotient [TopologicalSpace R] [TopologicalAddGroup M] [ContinuousSMul R M] :
    ContinuousSMul R (M ⧸ S) := by
  constructor
  have quot : QuotientMap fun au : R × M => (au.1, S.mkq au.2) :=
    IsOpenMap.to_quotientMap (is_open_map.id.prod S.is_open_map_mkq)
      (continuous_id.prod_map continuous_quot_mk)
      (function.surjective_id.prod_map <| surjective_quot_mk _)
  rw [quot.continuous_iff]
  exact continuous_quot_mk.comp continuous_smul
#align submodule.has_continuous_smul_quotient Submodule.continuousSMul_quotient
-/

#print Submodule.t3_quotient_of_isClosed /-
instance t3_quotient_of_isClosed [TopologicalAddGroup M] [IsClosed (S : Set M)] : T3Space (M ⧸ S) :=
  letI : IsClosed (S.to_add_subgroup : Set M) := ‹_›
  S.to_add_subgroup.t3_quotient_of_is_closed
#align submodule.t3_quotient_of_is_closed Submodule.t3_quotient_of_isClosed
-/

end Submodule

end Quotient

