/-
Copyright (c) 2021 Andrew Yang. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Andrew Yang

! This file was ported from Lean 3 source module category_theory.sites.cover_lifting
! leanprover-community/mathlib commit 14b69e9f3c16630440a2cbd46f1ddad0d561dee7
! Please do not edit these lines, except to modify the commit id
! if you have ported upstream changes.
-/
import Mathbin.CategoryTheory.Sites.Sheaf
import Mathbin.CategoryTheory.Limits.KanExtension
import Mathbin.CategoryTheory.Sites.CoverPreserving

/-!
# Cover-lifting functors between sites.

We define cover-lifting functors between sites as functors that pull covering sieves back to
covering sieves. This concept is also known as *cocontinuous functors* or
*cover-reflecting functors*, but we have chosen this name following [MM92] in order to avoid
potential naming collision or confusion with the general definition of cocontinuous functors
between categories as functors preserving small colimits.

The definition given here seems stronger than the definition found elsewhere,
but they are actually equivalent via `category_theory.grothendieck_topology.superset_covering`.
(The precise statement is not formalized, but follows from it quite trivially).

## Main definitions

* `category_theory.sites.cover_lifting`: a functor between sites is cover-lifting if it
  pulls back covering sieves to covering sieves
* `category_theory.sites.copullback`: A cover-lifting functor `G : (C, J) ‚•§ (D, K)` induces a
  morphism of sites in the same direction as the functor.

## Main results
* `category_theory.sites.Ran_is_sheaf_of_cover_lifting`: If `G : C ‚•§ D` is cover_lifting, then
  `Ran G.op` (`‚Çöu`) as a functor `(C·µí·µñ ‚•§ A) ‚•§ (D·µí·µñ ‚•§ A)` of presheaves maps sheaves to sheaves.
* `category_theory.pullback_copullback_adjunction`: If `G : (C, J) ‚•§ (D, K)` is cover-lifting,
  cover-preserving, and compatible-preserving, then `pullback G` and `copullback G` are adjoint.

## References

* [Elephant]: *Sketches of an Elephant*, P. T. Johnstone: C2.3.
* [S. MacLane, I. Moerdijk, *Sheaves in Geometry and Logic*][MM92]
* https://stacks.math.columbia.edu/tag/00XI

-/


universe w v v‚ÇÅ v‚ÇÇ v‚ÇÉ u u‚ÇÅ u‚ÇÇ u‚ÇÉ

noncomputable section

open CategoryTheory

open Opposite

open CategoryTheory.Presieve.FamilyOfElements

open CategoryTheory.Presieve

open CategoryTheory.Limits

namespace CategoryTheory

section CoverLifting

variable {C : Type _} [Category C] {D : Type _} [Category D] {E : Type _} [Category E]

variable (J : GrothendieckTopology C) (K : GrothendieckTopology D)

variable {L : GrothendieckTopology E}

#print CategoryTheory.CoverLifting /-
/-- A functor `G : (C, J) ‚•§ (D, K)` between sites is called to have the cover-lifting property
if for all covering sieves `R` in `D`, `R.pullback G` is a covering sieve in `C`.
-/
@[nolint has_nonempty_instance]
structure CoverLifting (G : C ‚•§ D) : Prop where
  cover_lift : ‚àÄ {U : C} {S : Sieve (G.obj U)} (hS : S ‚àà K (G.obj U)), S.functorPullback G ‚àà J U
#align category_theory.cover_lifting CategoryTheory.CoverLifting
-/

/- warning: category_theory.id_cover_lifting -> CategoryTheory.idCoverLifting is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] (J : CategoryTheory.GrothendieckTopology.{u2, u1} C _inst_1), CategoryTheory.CoverLifting.{u1, u2, u1, u2} C _inst_1 C _inst_1 J J (CategoryTheory.Functor.id.{u2, u1} C _inst_1)
but is expected to have type
  forall {C : Type.{u2}} [_inst_1 : CategoryTheory.Category.{u1, u2} C] (J : CategoryTheory.GrothendieckTopology.{u1, u2} C _inst_1), CategoryTheory.CoverLifting.{u2, u1, u2, u1} C _inst_1 C _inst_1 J J (CategoryTheory.Functor.id.{u1, u2} C _inst_1)
Case conversion may be inaccurate. Consider using '#align category_theory.id_cover_lifting CategoryTheory.idCoverLifting‚Çì'. -/
/-- The identity functor on a site is cover-lifting. -/
theorem idCoverLifting : CoverLifting J J (ùü≠ _) :=
  ‚ü®fun _ _ h => by simpa using h‚ü©
#align category_theory.id_cover_lifting CategoryTheory.idCoverLifting

variable {J K}

/- warning: category_theory.comp_cover_lifting -> CategoryTheory.compCoverLifting is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] {D : Type.{u3}} [_inst_2 : CategoryTheory.Category.{u4, u3} D] {E : Type.{u5}} [_inst_3 : CategoryTheory.Category.{u6, u5} E] {J : CategoryTheory.GrothendieckTopology.{u2, u1} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u4, u3} D _inst_2} {L : CategoryTheory.GrothendieckTopology.{u6, u5} E _inst_3} {F : CategoryTheory.Functor.{u2, u4, u1, u3} C _inst_1 D _inst_2}, (CategoryTheory.CoverLifting.{u1, u2, u3, u4} C _inst_1 D _inst_2 J K F) -> (forall {G : CategoryTheory.Functor.{u4, u6, u3, u5} D _inst_2 E _inst_3}, (CategoryTheory.CoverLifting.{u3, u4, u5, u6} D _inst_2 E _inst_3 K L G) -> (CategoryTheory.CoverLifting.{u1, u2, u5, u6} C _inst_1 E _inst_3 J L (CategoryTheory.Functor.comp.{u2, u4, u6, u1, u3, u5} C _inst_1 D _inst_2 E _inst_3 F G)))
but is expected to have type
  forall {C : Type.{u4}} [_inst_1 : CategoryTheory.Category.{u6, u4} C] {D : Type.{u3}} [_inst_2 : CategoryTheory.Category.{u5, u3} D] {E : Type.{u1}} [_inst_3 : CategoryTheory.Category.{u2, u1} E] {J : CategoryTheory.GrothendieckTopology.{u6, u4} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u5, u3} D _inst_2} {L : CategoryTheory.GrothendieckTopology.{u2, u1} E _inst_3} {F : CategoryTheory.Functor.{u6, u5, u4, u3} C _inst_1 D _inst_2}, (CategoryTheory.CoverLifting.{u4, u6, u3, u5} C _inst_1 D _inst_2 J K F) -> (forall {G : CategoryTheory.Functor.{u5, u2, u3, u1} D _inst_2 E _inst_3}, (CategoryTheory.CoverLifting.{u3, u5, u1, u2} D _inst_2 E _inst_3 K L G) -> (CategoryTheory.CoverLifting.{u4, u6, u1, u2} C _inst_1 E _inst_3 J L (CategoryTheory.Functor.comp.{u6, u5, u2, u4, u3, u1} C _inst_1 D _inst_2 E _inst_3 F G)))
Case conversion may be inaccurate. Consider using '#align category_theory.comp_cover_lifting CategoryTheory.compCoverLifting‚Çì'. -/
/-- The composition of two cover-lifting functors are cover-lifting -/
theorem compCoverLifting {F : C ‚•§ D} (hu : CoverLifting J K F) {G : D ‚•§ E}
    (hv : CoverLifting K L G) : CoverLifting J L (F ‚ãô G) :=
  ‚ü®fun _ S h => hu.cover_lift (hv.cover_lift h)‚ü©
#align category_theory.comp_cover_lifting CategoryTheory.compCoverLifting

end CoverLifting

/-!
We will now prove that `Ran G.op` (`‚Çöu`) maps sheaves to sheaves if `G` is cover-lifting. This can
be found in <https://stacks.math.columbia.edu/tag/00XK>. However, the proof given here uses the
amalgamation definition of sheaves, and thus does not require that `C` or `D` has categorical
pullbacks.

For the following proof sketch, `‚äÜ` denotes the homs on `C` and `D` as in the topological analogy.
By definition, the presheaf `ùí¢ : D·µí·µñ ‚•§ A` is a sheaf if for every sieve `S` of `U : D`, and every
compatible family of morphisms `X ‚ü∂ ùí¢(V)` for each `V ‚äÜ U : S` with a fixed source `X`,
we can glue them into a morphism `X ‚ü∂ ùí¢(U)`.

Since the presheaf `ùí¢ := (Ran G.op).obj ‚Ñ±.val` is defined via `ùí¢(U) = lim_{G(V) ‚äÜ U} ‚Ñ±(V)`, for
gluing the family `x` into a `X ‚ü∂ ùí¢(U)`, it suffices to provide a `X ‚ü∂ ‚Ñ±(Y)` for each
`G(Y) ‚äÜ U`. This can be done since `{ Y' ‚äÜ Y : G(Y') ‚äÜ U ‚àà S}` is a covering sieve for `Y` on
`C` (by the cover-lifting property of `G`). Thus the morphisms `X ‚ü∂ ùí¢(G(Y')) ‚ü∂ ‚Ñ±(Y')` can be
glued into a morphism `X ‚ü∂ ‚Ñ±(Y)`. This is done in `get_sections`.

In `glued_limit_cone`, we verify these obtained sections are indeed compatible, and thus we obtain
A `X ‚ü∂ ùí¢(U)`. The remaining work is to verify that this is indeed the amalgamation and is unique.
-/


variable {C D : Type u} [Category.{v} C] [Category.{v} D]

variable {A : Type w} [Category.{max u v} A] [HasLimits A]

variable {J : GrothendieckTopology C} {K : GrothendieckTopology D}

namespace RanIsSheafOfCoverLifting

variable {G : C ‚•§ D} (hu : CoverLifting J K G) (‚Ñ± : Sheaf J A)

variable {X : A} {U : D} (S : Sieve U) (hS : S ‚àà K U)

instance (X : D·µí·µñ) : HasLimitsOfShape (StructuredArrow X G.op) A :=
  haveI := Limits.hasLimitsOfSizeShrink.{v, max u v, max u v, max u v} A
  has_limits_of_size.has_limits_of_shape _

variable (x : S.arrows.FamilyOfElements ((ran G.op).obj ‚Ñ±.val ‚ãô coyoneda.obj (op X)))

variable (hx : x.Compatible)

/- warning: category_theory.Ran_is_sheaf_of_cover_lifting.pulledback_family -> CategoryTheory.RanIsSheafOfCoverLifting.pulledbackFamily is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} (S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U), (CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.RanIsSheafOfCoverLifting.pulledbackFamily._proof_1.{u3, u2, u1} C D _inst_1 _inst_2 A _inst_3 _inst_4 G)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)) -> (forall (Y : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)), CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} C _inst_1 (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.id.{max u3 u2, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (CategoryTheory.Presieve.functorPullback.{u2, u2, u3, u3} C _inst_1 D _inst_2 G (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (CategoryTheory.Sieve.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) (fun (_x : CategoryTheory.Sieve.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) => CategoryTheory.Presieve.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) (CategoryTheory.Sieve.hasCoeToFun.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) (CategoryTheory.Sieve.pullback.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (Quiver.Hom.unop.{u3, succ u2} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.obj.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Comma.hom.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) S))))
but is expected to have type
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} (S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U), (CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)) -> (forall (Y : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)), CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} C _inst_1 (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, max (succ u3) (succ u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{succ (max u3 u2), succ (max u3 u2), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.id.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) (CategoryTheory.Presieve.functorPullback.{u2, u2, u3, u3} C _inst_1 D _inst_2 G (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (Prefunctor.obj.{succ u2, succ u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (CategoryTheory.Sieve.pullback.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (Prefunctor.obj.{succ u2, succ u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.CategoryStruct.toQuiver.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.Category.toCategoryStruct.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U))) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (Opposite.unop.{succ u3} D (Prefunctor.obj.{succ u2, succ u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (Quiver.Hom.unop.{u3, succ u2} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (Prefunctor.obj.{succ u2, succ u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.CategoryStruct.toQuiver.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.Category.toCategoryStruct.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U))) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (Prefunctor.obj.{succ u2, succ u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Comma.hom.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) S))))
Case conversion may be inaccurate. Consider using '#align category_theory.Ran_is_sheaf_of_cover_lifting.pulledback_family CategoryTheory.RanIsSheafOfCoverLifting.pulledbackFamily‚Çì'. -/
/-- The family of morphisms `X ‚ü∂ ùí¢(G(Y')) ‚ü∂ ‚Ñ±(Y')` defined on `{ Y' ‚äÜ Y : G(Y') ‚äÜ U ‚àà S}`. -/
def pulledbackFamily (Y : StructuredArrow (op U) G.op) :=
  ((x.pullback Y.Hom.unop).functorPullback G).compPresheafMap
    (show _ ‚ü∂ _ from whiskerRight ((Ran.adjunction A G.op).counit.app ‚Ñ±.val) (coyoneda.obj (op X)))
#align category_theory.Ran_is_sheaf_of_cover_lifting.pulledback_family CategoryTheory.RanIsSheafOfCoverLifting.pulledbackFamily

/- warning: category_theory.Ran_is_sheaf_of_cover_lifting.pulledback_family_apply -> CategoryTheory.RanIsSheafOfCoverLifting.pulledbackFamily_apply is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} (S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)) (Y : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) {W : C} {f : Quiver.Hom.{succ u2, u3} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} C (CategoryTheory.Category.toCategoryStruct.{u2, u3} C _inst_1)) W (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))} (Hf : CategoryTheory.Presieve.functorPullback.{u2, u2, u3, u3} C _inst_1 D _inst_2 G (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (CategoryTheory.Sieve.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) (fun (_x : CategoryTheory.Sieve.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) => CategoryTheory.Presieve.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) (CategoryTheory.Sieve.hasCoeToFun.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) (CategoryTheory.Sieve.pullback.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (Quiver.Hom.unop.{u3, succ u2} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.obj.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Comma.hom.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) S)) W f), Eq.{succ (max u3 u2)} (CategoryTheory.Functor.obj.{u2, max u3 u2, u3, succ (max u3 u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.id.{max u3 u2, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (Opposite.op.{succ u3} C W)) (CategoryTheory.RanIsSheafOfCoverLifting.pulledbackFamily.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J G ‚Ñ± X U S x Y W f Hf) (CategoryTheory.CategoryStruct.comp.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3) (Opposite.unop.{succ u1} A (Opposite.op.{succ u1} A X)) (CategoryTheory.Functor.obj.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Opposite.op.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} C _inst_1 D _inst_2 G W))) (CategoryTheory.Functor.obj.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.id.{max u3 u2, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Opposite.op.{succ u3} C W)) (x (CategoryTheory.Functor.obj.{u2, u2, u3, u3} C _inst_1 D _inst_2 G W) (CategoryTheory.CategoryStruct.comp.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2) (CategoryTheory.Functor.obj.{u2, u2, u3, u3} C _inst_1 D _inst_2 G W) (CategoryTheory.Functor.obj.{u2, u2, u3, u3} C _inst_1 D _inst_2 G (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) U (CategoryTheory.Functor.map.{u2, u2, u3, u3} C _inst_1 D _inst_2 G W (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) f) (Quiver.Hom.unop.{u3, succ u2} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.obj.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Comma.hom.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) Hf) (CategoryTheory.NatTrans.app.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.comp.{max u3 u2, max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Ran.adjunction._proof_1.{u3, u3, u1, u2, u2, max u3 u2} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Functor.obj.{max u3 u2, max (max u2 (max u3 u2) u3 u1) u3 u2, max u2 u3, max (max u3 u2) u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Functor.category.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Functor.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.whiskeringLeft.{u3, u2, u3, u2, u1, max u3 u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.id.{max u3 u2, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.NatTrans.app.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.comp.{max u3 u2, max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Ran.adjunction._proof_1.{u3, u3, u1, u2, u2, max u3 u2} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Functor.obj.{max u3 u2, max (max u2 (max u3 u2) u3 u1) u3 u2, max u2 u3, max (max u3 u2) u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Functor.category.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Functor.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.whiskeringLeft.{u3, u2, u3, u2, u1, max u3 u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G))) (CategoryTheory.Functor.id.{max u3 u2, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Adjunction.counit.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.obj.{max u3 u2, max (max u2 (max u3 u2) u3 u1) u3 u2, max u2 u3, max (max u3 u2) u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Functor.category.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Functor.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.whiskeringLeft.{u3, u2, u3, u2, u1, max u3 u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Ran.adjunction._proof_1.{u3, u3, u1, u2, u2, max u3 u2} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Ran.adjunction.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Opposite.op.{succ u3} C W)))
but is expected to have type
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} (S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)) (Y : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) {W : C} {f : Quiver.Hom.{succ u2, u3} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} C (CategoryTheory.Category.toCategoryStruct.{u2, u3} C _inst_1)) W (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))} (Hf : CategoryTheory.Presieve.functorPullback.{u2, u2, u3, u3} C _inst_1 D _inst_2 G (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (Prefunctor.obj.{succ u2, succ u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (CategoryTheory.Sieve.pullback.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (Prefunctor.obj.{succ u2, succ u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.CategoryStruct.toQuiver.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.Category.toCategoryStruct.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U))) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (Opposite.unop.{succ u3} D (Prefunctor.obj.{succ u2, succ u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (Quiver.Hom.unop.{u3, succ u2} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (Prefunctor.obj.{succ u2, succ u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.CategoryStruct.toQuiver.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.Category.toCategoryStruct.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U))) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (Prefunctor.obj.{succ u2, succ u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Comma.hom.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) S)) W f), Eq.{max (succ u3) (succ u2)} (Prefunctor.obj.{succ u2, succ (max u3 u2), u3, succ (max u3 u2)} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) Type.{max u3 u2} (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, succ (max u3 u2)} Type.{max u3 u2} (CategoryTheory.Category.toCategoryStruct.{max u3 u2, succ (max u3 u2)} Type.{max u3 u2} CategoryTheory.types.{max u3 u2})) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, succ (max u3 u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, max (succ u3) (succ u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{succ (max u3 u2), succ (max u3 u2), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.id.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X)))) (Opposite.op.{succ u3} C W)) (CategoryTheory.RanIsSheafOfCoverLifting.pulledbackFamily.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J G ‚Ñ± X U S x Y W f Hf) (CategoryTheory.CategoryStruct.comp.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3) (Opposite.unop.{succ u1} A (Opposite.op.{succ u1} A X)) (Prefunctor.obj.{succ u2, succ (max u3 u2), u3, u1} (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±))) (Opposite.op.{succ u3} D (Prefunctor.obj.{succ u2, succ u2, u3, u3} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} C (CategoryTheory.Category.toCategoryStruct.{u2, u3} C _inst_1)) D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) W))) (Prefunctor.obj.{succ u2, succ (max u3 u2), u3, u1} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 (Prefunctor.obj.{succ (max u3 u2), succ (max u3 u2), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.id.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±))) (Opposite.op.{succ u3} C W)) (x (Prefunctor.obj.{succ u2, succ u2, u3, u3} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} C (CategoryTheory.Category.toCategoryStruct.{u2, u3} C _inst_1)) D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) W) (CategoryTheory.CategoryStruct.comp.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2) (Prefunctor.obj.{succ u2, succ u2, u3, u3} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} C (CategoryTheory.Category.toCategoryStruct.{u2, u3} C _inst_1)) D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) W) (Prefunctor.obj.{succ u2, succ u2, u3, u3} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} C (CategoryTheory.Category.toCategoryStruct.{u2, u3} C _inst_1)) D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) U (Prefunctor.map.{succ u2, succ u2, u3, u3} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} C (CategoryTheory.Category.toCategoryStruct.{u2, u3} C _inst_1)) D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) W (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) f) (Quiver.Hom.unop.{u3, succ u2} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (Prefunctor.obj.{succ u2, succ u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.CategoryStruct.toQuiver.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.Category.toCategoryStruct.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U))) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (Prefunctor.obj.{succ u2, succ u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Comma.hom.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) Hf) (CategoryTheory.NatTrans.app.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 (Prefunctor.obj.{succ (max u3 u2), succ (max u3 u2), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.comp.{max u3 u2, max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (Prefunctor.obj.{max (succ u2) (succ u3), max (max (max (succ u1) (succ (max u3 u2))) (succ u2)) (succ u3), max u2 u3, max (max (max (max (max u1 u3 u2) u2) u3) u2) u3} (CategoryTheory.Functor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.CategoryStruct.toQuiver.{max u2 u3, max u2 u3} (CategoryTheory.Functor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Category.toCategoryStruct.{max u2 u3, max u2 u3} (CategoryTheory.Functor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Functor.category.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, max (max (max u1 u3) u3 u2) u2, max (max (max u1 u3) u3 u2) u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.CategoryStruct.toQuiver.{max (max (max u1 u3 u2) u2) u3, max (max (max (max (max u1 u3 u2) u2) u3) u2) u3} (CategoryTheory.Functor.{max u3 u2, max u3 u2, max (max (max u1 u3) u3 u2) u2, max (max (max u1 u3) u3 u2) u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Category.toCategoryStruct.{max (max (max u1 u3 u2) u2) u3, max (max (max (max (max u1 u3 u2) u2) u3) u2) u3} (CategoryTheory.Functor.{max u3 u2, max u3 u2, max (max (max u1 u3) u3 u2) u2, max (max (max u1 u3) u3 u2) u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, max (max (max u3 u1) u2) u3 u2, max (max (max u3 u1) u2) u3 u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)))) (CategoryTheory.Functor.toPrefunctor.{max u2 u3, max (max (max u1 u3 u2) u2) u3, max u2 u3, max (max (max (max (max u1 u3 u2) u2) u3) u2) u3} (CategoryTheory.Functor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Functor.category.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Functor.{max u3 u2, max u3 u2, max (max (max u1 u3) u3 u2) u2, max (max (max u1 u3) u3 u2) u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, max (max (max u3 u1) u2) u3 u2, max (max (max u3 u1) u2) u3 u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.whiskeringLeft.{u3, u2, u3, u2, u1, max u3 u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), succ (max u3 u2), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.id.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.NatTrans.app.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.comp.{max u3 u2, max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (Prefunctor.obj.{max (succ u2) (succ u3), max (max (max (succ u1) (succ (max u3 u2))) (succ u2)) (succ u3), max u2 u3, max (max (max (max (max u1 u3 u2) u2) u3) u2) u3} (CategoryTheory.Functor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.CategoryStruct.toQuiver.{max u2 u3, max u2 u3} (CategoryTheory.Functor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Category.toCategoryStruct.{max u2 u3, max u2 u3} (CategoryTheory.Functor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Functor.category.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, max (max (max u1 u3) u3 u2) u2, max (max (max u1 u3) u3 u2) u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.CategoryStruct.toQuiver.{max (max (max u1 u3 u2) u2) u3, max (max (max (max (max u1 u3 u2) u2) u3) u2) u3} (CategoryTheory.Functor.{max u3 u2, max u3 u2, max (max (max u1 u3) u3 u2) u2, max (max (max u1 u3) u3 u2) u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Category.toCategoryStruct.{max (max (max u1 u3 u2) u2) u3, max (max (max (max (max u1 u3 u2) u2) u3) u2) u3} (CategoryTheory.Functor.{max u3 u2, max u3 u2, max (max (max u1 u3) u3 u2) u2, max (max (max u1 u3) u3 u2) u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, max (max (max u3 u1) u2) u3 u2, max (max (max u3 u1) u2) u3 u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)))) (CategoryTheory.Functor.toPrefunctor.{max u2 u3, max (max (max u1 u3 u2) u2) u3, max u2 u3, max (max (max (max (max u1 u3 u2) u2) u3) u2) u3} (CategoryTheory.Functor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Functor.category.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Functor.{max u3 u2, max u3 u2, max (max (max u1 u3) u3 u2) u2, max (max (max u1 u3) u3 u2) u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, max (max (max u3 u1) u2) u3 u2, max (max (max u3 u1) u2) u3 u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.whiskeringLeft.{u3, u2, u3, u2, u1, max u3 u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G))) (CategoryTheory.Functor.id.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Adjunction.counit.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (Prefunctor.obj.{max (succ u2) (succ u3), max (max (max (succ u1) (succ (max u3 u2))) (succ u2)) (succ u3), max u2 u3, max (max (max (max (max u1 u3 u2) u2) u3) u2) u3} (CategoryTheory.Functor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.CategoryStruct.toQuiver.{max u2 u3, max u2 u3} (CategoryTheory.Functor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Category.toCategoryStruct.{max u2 u3, max u2 u3} (CategoryTheory.Functor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Functor.category.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, max (max (max u1 u3) u3 u2) u2, max (max (max u1 u3) u3 u2) u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.CategoryStruct.toQuiver.{max (max (max u1 u3 u2) u2) u3, max (max (max (max (max u1 u3 u2) u2) u3) u2) u3} (CategoryTheory.Functor.{max u3 u2, max u3 u2, max (max (max u1 u3) u3 u2) u2, max (max (max u1 u3) u3 u2) u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Category.toCategoryStruct.{max (max (max u1 u3 u2) u2) u3, max (max (max (max (max u1 u3 u2) u2) u3) u2) u3} (CategoryTheory.Functor.{max u3 u2, max u3 u2, max (max (max u1 u3) u3 u2) u2, max (max (max u1 u3) u3 u2) u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, max (max (max u3 u1) u2) u3 u2, max (max (max u3 u1) u2) u3 u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)))) (CategoryTheory.Functor.toPrefunctor.{max u2 u3, max (max (max u1 u3 u2) u2) u3, max u2 u3, max (max (max (max (max u1 u3 u2) u2) u3) u2) u3} (CategoryTheory.Functor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Functor.category.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2)) (CategoryTheory.Functor.{max u3 u2, max u3 u2, max (max (max u1 u3) u3 u2) u2, max (max (max u1 u3) u3 u2) u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, max (max (max u3 u1) u2) u3 u2, max (max (max u3 u1) u2) u3 u2} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.whiskeringLeft.{u3, u2, u3, u2, u1, max u3 u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Ran.adjunction.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Opposite.op.{succ u3} C W)))
Case conversion may be inaccurate. Consider using '#align category_theory.Ran_is_sheaf_of_cover_lifting.pulledback_family_apply CategoryTheory.RanIsSheafOfCoverLifting.pulledbackFamily_apply‚Çì'. -/
@[simp]
theorem pulledbackFamily_apply (Y : StructuredArrow (op U) G.op) {W} {f : W ‚ü∂ _} (Hf) :
    pulledbackFamily ‚Ñ± S x Y f Hf =
      x (G.map f ‚â´ Y.Hom.unop) Hf ‚â´ ((Ran.adjunction A G.op).counit.app ‚Ñ±.val).app (op W) :=
  rfl
#align category_theory.Ran_is_sheaf_of_cover_lifting.pulledback_family_apply CategoryTheory.RanIsSheafOfCoverLifting.pulledbackFamily_apply

variable {x} {S}

include hu hS hx

/- warning: category_theory.Ran_is_sheaf_of_cover_lifting.get_section -> CategoryTheory.RanIsSheafOfCoverLifting.getSection is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2}, (CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) -> (forall (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U}, (Membership.Mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.hasMem.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ (max u3 u2))} (CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) (fun (_x : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) => forall (X : D), Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 X)) (CategoryTheory.GrothendieckTopology.hasCoeToFun.{u2, u3} D _inst_2) K U)) -> (forall {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.RanIsSheafOfCoverLifting.getSection._proof_1.{u3, u2, u1} C D _inst_1 _inst_2 A _inst_3 _inst_4 G)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)}, (CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.RanIsSheafOfCoverLifting.getSection._proof_1.{u3, u2, u1} C D _inst_1 _inst_2 A _inst_3 _inst_4 G)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) -> (forall (Y : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)), Quiver.Hom.{succ (max u3 u2), u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) X (CategoryTheory.Functor.obj.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))))
but is expected to have type
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2}, (CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) -> (forall (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U}, (Membership.mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.instMembershipSet.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (CategoryTheory.GrothendieckTopology.sieves.{u2, u3} D _inst_2 K U)) -> (forall {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)}, (CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) -> (forall (Y : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)), Quiver.Hom.{max (succ u3) (succ u2), u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) X (Prefunctor.obj.{succ u2, max (succ u3) (succ u2), u3, u1} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))))
Case conversion may be inaccurate. Consider using '#align category_theory.Ran_is_sheaf_of_cover_lifting.get_section CategoryTheory.RanIsSheafOfCoverLifting.getSection‚Çì'. -/
/-- Given a `G(Y) ‚äÜ U`, we can find a unique section `X ‚ü∂ ‚Ñ±(Y)` that agrees with `x`. -/
def getSection (Y : StructuredArrow (op U) G.op) : X ‚ü∂ ‚Ñ±.val.obj Y.right :=
  by
  let hom_sh := whisker_right ((Ran.adjunction A G.op).counit.app ‚Ñ±.val) (coyoneda.obj (op X))
  have S' := K.pullback_stable Y.hom.unop hS
  have hs' := ((hx.pullback Y.3.unop).functorPullback G).compPresheafMap hom_sh
  exact (‚Ñ±.2 X _ (hu.cover_lift S')).amalgamate _ hs'
#align category_theory.Ran_is_sheaf_of_cover_lifting.get_section CategoryTheory.RanIsSheafOfCoverLifting.getSection

/- warning: category_theory.Ran_is_sheaf_of_cover_lifting.get_section_is_amalgamation -> CategoryTheory.RanIsSheafOfCoverLifting.getSection_isAmalgamation is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (hu : CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U} (hS : Membership.Mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.hasMem.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ (max u3 u2))} (CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) (fun (_x : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) => forall (X : D), Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 X)) (CategoryTheory.GrothendieckTopology.hasCoeToFun.{u2, u3} D _inst_2) K U)) {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)} (hx : CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) (Y : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)), CategoryTheory.Presieve.FamilyOfElements.IsAmalgamation.{max u3 u2, u2, u3} C _inst_1 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.id.{max u3 u2, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Presieve.functorPullback.{u2, u2, u3, u3} C _inst_1 D _inst_2 G (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (CategoryTheory.Sieve.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) (fun (_x : CategoryTheory.Sieve.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) => CategoryTheory.Presieve.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) (CategoryTheory.Sieve.hasCoeToFun.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) (CategoryTheory.Sieve.pullback.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (Quiver.Hom.unop.{u3, succ u2} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.obj.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Comma.hom.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) S))) (CategoryTheory.RanIsSheafOfCoverLifting.pulledbackFamily.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J G ‚Ñ± X U S x Y) (CategoryTheory.RanIsSheafOfCoverLifting.getSection.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± (Opposite.unop.{succ u1} A (Opposite.op.{succ u1} A X)) U S hS x hx Y)
but is expected to have type
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (hu : CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U} (hS : Membership.mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.instMembershipSet.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (CategoryTheory.GrothendieckTopology.sieves.{u2, u3} D _inst_2 K U)) {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)} (hx : CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) (Y : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)), CategoryTheory.Presieve.FamilyOfElements.IsAmalgamation.{max u3 u2, u2, u3} C _inst_1 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, max (succ u3) (succ u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{succ (max u3 u2), succ (max u3 u2), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.id.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Presieve.functorPullback.{u2, u2, u3, u3} C _inst_1 D _inst_2 G (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (Prefunctor.obj.{succ u2, succ u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (CategoryTheory.Sieve.pullback.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (Prefunctor.obj.{succ u2, succ u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.CategoryStruct.toQuiver.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.Category.toCategoryStruct.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U))) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (Opposite.unop.{succ u3} D (Prefunctor.obj.{succ u2, succ u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (Quiver.Hom.unop.{u3, succ u2} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (Prefunctor.obj.{succ u2, succ u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.CategoryStruct.toQuiver.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.Category.toCategoryStruct.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U))) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (Prefunctor.obj.{succ u2, succ u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Comma.hom.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) S))) (CategoryTheory.RanIsSheafOfCoverLifting.pulledbackFamily.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J G ‚Ñ± X U S x Y) (CategoryTheory.RanIsSheafOfCoverLifting.getSection.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx Y)
Case conversion may be inaccurate. Consider using '#align category_theory.Ran_is_sheaf_of_cover_lifting.get_section_is_amalgamation CategoryTheory.RanIsSheafOfCoverLifting.getSection_isAmalgamation‚Çì'. -/
theorem getSection_isAmalgamation (Y : StructuredArrow (op U) G.op) :
    (pulledbackFamily ‚Ñ± S x Y).IsAmalgamation (getSection hu ‚Ñ± hS hx Y) :=
  IsSheafFor.isAmalgamation _ _
#align category_theory.Ran_is_sheaf_of_cover_lifting.get_section_is_amalgamation CategoryTheory.RanIsSheafOfCoverLifting.getSection_isAmalgamation

/- warning: category_theory.Ran_is_sheaf_of_cover_lifting.get_section_is_unique -> CategoryTheory.RanIsSheafOfCoverLifting.getSection_is_unique is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (hu : CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U} (hS : Membership.Mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.hasMem.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ (max u3 u2))} (CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) (fun (_x : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) => forall (X : D), Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 X)) (CategoryTheory.GrothendieckTopology.hasCoeToFun.{u2, u3} D _inst_2) K U)) {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)} (hx : CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) (Y : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) {y : CategoryTheory.Functor.obj.{u2, max u3 u2, u3, succ (max u3 u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.id.{max u3 u2, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (Opposite.op.{succ u3} C (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))}, (CategoryTheory.Presieve.FamilyOfElements.IsAmalgamation.{max u3 u2, u2, u3} C _inst_1 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.id.{max u3 u2, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Presieve.functorPullback.{u2, u2, u3, u3} C _inst_1 D _inst_2 G (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ u2)} (CategoryTheory.Sieve.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) (fun (_x : CategoryTheory.Sieve.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) => CategoryTheory.Presieve.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) (CategoryTheory.Sieve.hasCoeToFun.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) (CategoryTheory.Sieve.pullback.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (Opposite.unop.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (Quiver.Hom.unop.{u3, succ u2} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.obj.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Functor.obj.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Comma.hom.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) S))) (CategoryTheory.RanIsSheafOfCoverLifting.pulledbackFamily.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J G ‚Ñ± X U S x Y) y) -> (Eq.{succ (max u3 u2)} (CategoryTheory.Functor.obj.{u2, max u3 u2, u3, succ (max u3 u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.id.{max u3 u2, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (Opposite.op.{succ u3} C (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) y (CategoryTheory.RanIsSheafOfCoverLifting.getSection.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± (Opposite.unop.{succ u1} A (Opposite.op.{succ u1} A X)) U S hS x hx Y))
but is expected to have type
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (hu : CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U} (hS : Membership.mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.instMembershipSet.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (CategoryTheory.GrothendieckTopology.sieves.{u2, u3} D _inst_2 K U)) {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)} (hx : CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) (Y : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) {y : Prefunctor.obj.{succ u2, succ (max u3 u2), u3, succ (max u3 u2)} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) Type.{max u3 u2} (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, succ (max u3 u2)} Type.{max u3 u2} (CategoryTheory.Category.toCategoryStruct.{max u3 u2, succ (max u3 u2)} Type.{max u3 u2} CategoryTheory.types.{max u3 u2})) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, succ (max u3 u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, max (succ u3) (succ u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{succ (max u3 u2), succ (max u3 u2), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.id.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X)))) (Opposite.op.{succ u3} C (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))}, (CategoryTheory.Presieve.FamilyOfElements.IsAmalgamation.{max u3 u2, u2, u3} C _inst_1 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, max (succ u3) (succ u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{succ (max u3 u2), succ (max u3 u2), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.id.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Presieve.functorPullback.{u2, u2, u3, u3} C _inst_1 D _inst_2 G (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (Prefunctor.obj.{succ u2, succ u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (CategoryTheory.Sieve.pullback.{u2, u3} D _inst_2 (Opposite.unop.{succ u3} D (Prefunctor.obj.{succ u2, succ u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.CategoryStruct.toQuiver.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.Category.toCategoryStruct.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U))) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (Opposite.unop.{succ u3} D (Prefunctor.obj.{succ u2, succ u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y))) (Quiver.Hom.unop.{u3, succ u2} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (Prefunctor.obj.{succ u2, succ u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.CategoryStruct.toQuiver.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.Category.toCategoryStruct.{u2, u2} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u2, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U))) (CategoryTheory.Comma.left.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (Prefunctor.obj.{succ u2, succ u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Comma.hom.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) S))) (CategoryTheory.RanIsSheafOfCoverLifting.pulledbackFamily.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J G ‚Ñ± X U S x Y) y) -> (Eq.{max (succ u3) (succ u2)} (Prefunctor.obj.{succ u2, succ (max u3 u2), u3, succ (max u3 u2)} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) Type.{max u3 u2} (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, succ (max u3 u2)} Type.{max u3 u2} (CategoryTheory.Category.toCategoryStruct.{max u3 u2, succ (max u3 u2)} Type.{max u3 u2} CategoryTheory.types.{max u3 u2})) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, succ (max u3 u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, max (succ u3) (succ u2)} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{succ (max u3 u2), succ (max u3 u2), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.id.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X)))) (Opposite.op.{succ u3} C (Opposite.unop.{succ u3} C (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)))) y (CategoryTheory.RanIsSheafOfCoverLifting.getSection.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx Y))
Case conversion may be inaccurate. Consider using '#align category_theory.Ran_is_sheaf_of_cover_lifting.get_section_is_unique CategoryTheory.RanIsSheafOfCoverLifting.getSection_is_unique‚Çì'. -/
theorem getSection_is_unique (Y : StructuredArrow (op U) G.op) {y}
    (H : (pulledbackFamily ‚Ñ± S x Y).IsAmalgamation y) : y = getSection hu ‚Ñ± hS hx Y :=
  by
  apply is_sheaf_for.is_separated_for _ (pulledback_family ‚Ñ± S x Y)
  ¬∑ exact H
  ¬∑ apply get_section_is_amalgamation
  ¬∑ exact ‚Ñ±.2 X _ (hu.cover_lift (K.pullback_stable Y.hom.unop hS))
#align category_theory.Ran_is_sheaf_of_cover_lifting.get_section_is_unique CategoryTheory.RanIsSheafOfCoverLifting.getSection_is_unique

/- warning: category_theory.Ran_is_sheaf_of_cover_lifting.get_section_commute -> CategoryTheory.RanIsSheafOfCoverLifting.getSection_commute is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (hu : CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U} (hS : Membership.Mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.hasMem.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ (max u3 u2))} (CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) (fun (_x : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) => forall (X : D), Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 X)) (CategoryTheory.GrothendieckTopology.hasCoeToFun.{u2, u3} D _inst_2) K U)) {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)} (hx : CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) {Y : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)} {Z : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)} (f : Quiver.Hom.{succ u2, max u3 u2} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u3 u2} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Category.toCategoryStruct.{u2, max u3 u2} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)))) Y Z), Eq.{succ (max u3 u2)} (Quiver.Hom.{succ (max u3 u2), u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) X (CategoryTheory.Functor.obj.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Z))) (CategoryTheory.CategoryStruct.comp.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3) X (CategoryTheory.Functor.obj.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (CategoryTheory.Functor.obj.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Z)) (CategoryTheory.RanIsSheafOfCoverLifting.getSection.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx Y) (CategoryTheory.Functor.map.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Z) (CategoryTheory.CommaMorphism.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y Z f))) (CategoryTheory.RanIsSheafOfCoverLifting.getSection.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx Z)
but is expected to have type
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (hu : CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U} (hS : Membership.mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.instMembershipSet.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (CategoryTheory.GrothendieckTopology.sieves.{u2, u3} D _inst_2 K U)) {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)} (hx : CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) {Y : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)} {Z : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)} (f : Quiver.Hom.{succ u2, max u3 u2} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u3 u2} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Category.toCategoryStruct.{u2, max u3 u2} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)))) Y Z), Eq.{max (succ u3) (succ u2)} (Quiver.Hom.{succ (max u3 u2), u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) X (Prefunctor.obj.{succ u2, max (succ u3) (succ u2), u3, u1} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Z))) (CategoryTheory.CategoryStruct.comp.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3) X (Prefunctor.obj.{succ u2, max (succ u3) (succ u2), u3, u1} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y)) (Prefunctor.obj.{succ u2, max (succ u3) (succ u2), u3, u1} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Z)) (CategoryTheory.RanIsSheafOfCoverLifting.getSection.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx Y) (Prefunctor.map.{succ u2, max (succ u3) (succ u2), u3, u1} (Opposite.{succ u3} C) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3 (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y) (CategoryTheory.Comma.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Z) (CategoryTheory.CommaMorphism.right.{u2, u2, u2, u2, u3, u3} (CategoryTheory.Discrete.{u2} PUnit.{succ u2}) (CategoryTheory.discreteCategory.{u2} PUnit.{succ u2}) (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (CategoryTheory.Functor.fromPUnit.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U)) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) Y Z f))) (CategoryTheory.RanIsSheafOfCoverLifting.getSection.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx Z)
Case conversion may be inaccurate. Consider using '#align category_theory.Ran_is_sheaf_of_cover_lifting.get_section_commute CategoryTheory.RanIsSheafOfCoverLifting.getSection_commute‚Çì'. -/
@[simp]
theorem getSection_commute {Y Z : StructuredArrow (op U) G.op} (f : Y ‚ü∂ Z) :
    getSection hu ‚Ñ± hS hx Y ‚â´ ‚Ñ±.val.map f.right = getSection hu ‚Ñ± hS hx Z :=
  by
  apply get_section_is_unique
  intro V' fV' hV'
  have eq : Z.hom = Y.hom ‚â´ (G.map f.right.unop).op :=
    by
    convert f.w
    erw [category.id_comp]
  rw [Eq] at hV'
  convert get_section_is_amalgamation hu ‚Ñ± hS hx Y (fV' ‚â´ f.right.unop) _ using 1
  ¬∑ tidy
  ¬∑
    simp only [Eq, Quiver.Hom.unop_op, pulledback_family_apply, functor.map_comp, unop_comp,
      category.assoc]
  ¬∑ change S (G.map _ ‚â´ Y.hom.unop)
    simpa only [functor.map_comp, category.assoc] using hV'
#align category_theory.Ran_is_sheaf_of_cover_lifting.get_section_commute CategoryTheory.RanIsSheafOfCoverLifting.getSection_commute

/- warning: category_theory.Ran_is_sheaf_of_cover_lifting.glued_limit_cone -> CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2}, (CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) -> (forall (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U}, (Membership.Mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.hasMem.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ (max u3 u2))} (CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) (fun (_x : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) => forall (X : D), Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 X)) (CategoryTheory.GrothendieckTopology.hasCoeToFun.{u2, u3} D _inst_2) K U)) -> (forall {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone._proof_1.{u3, u2, u1} C D _inst_1 _inst_2 A _inst_3 _inst_4 G)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)}, (CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone._proof_1.{u3, u2, u1} C D _inst_1 _inst_2 A _inst_3 _inst_4 G)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) -> (CategoryTheory.Limits.Cone.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)))))
but is expected to have type
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2}, (CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) -> (forall (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U}, (Membership.mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.instMembershipSet.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (CategoryTheory.GrothendieckTopology.sieves.{u2, u3} D _inst_2 K U)) -> (forall {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)}, (CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) -> (CategoryTheory.Limits.Cone.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)))))
Case conversion may be inaccurate. Consider using '#align category_theory.Ran_is_sheaf_of_cover_lifting.glued_limit_cone CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone‚Çì'. -/
/-- The limit cone in order to glue the sections obtained via `get_section`. -/
def gluedLimitCone : Limits.Cone (Ran.diagram G.op ‚Ñ±.val (op U)) :=
  { pt
    œÄ :=
      { app := fun Y => getSection hu ‚Ñ± hS hx Y
        naturality' := fun Y Z f => by tidy } }
#align category_theory.Ran_is_sheaf_of_cover_lifting.glued_limit_cone CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone

/- warning: category_theory.Ran_is_sheaf_of_cover_lifting.glued_limit_cone_œÄ_app -> CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone_œÄ_app is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (hu : CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U} (hS : Membership.Mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.hasMem.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ (max u3 u2))} (CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) (fun (_x : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) => forall (X : D), Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 X)) (CategoryTheory.GrothendieckTopology.hasCoeToFun.{u2, u3} D _inst_2) K U)) {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)} (hx : CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) (W : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)), Eq.{succ (max u3 u2)} (Quiver.Hom.{succ (max u3 u2), u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.obj.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, u1, max u2 (max u3 u2) u1} A _inst_3 (CategoryTheory.Functor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.const.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Limits.Cone.pt.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)) (CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx))) W) (CategoryTheory.Functor.obj.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)) W)) (CategoryTheory.NatTrans.app.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, u1, max u2 (max u3 u2) u1} A _inst_3 (CategoryTheory.Functor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.const.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Limits.Cone.pt.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)) (CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx))) (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)) (CategoryTheory.Limits.Cone.œÄ.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)) (CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx)) W) (CategoryTheory.RanIsSheafOfCoverLifting.getSection.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± (CategoryTheory.Functor.obj.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, u1, max u2 (max u3 u2) u1} A _inst_3 (CategoryTheory.Functor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.const.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Limits.Cone.pt.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)) (CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx))) W) U S hS x hx W)
but is expected to have type
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (hu : CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U} (hS : Membership.mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.instMembershipSet.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (CategoryTheory.GrothendieckTopology.sieves.{u2, u3} D _inst_2 K U)) {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)} (hx : CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) (W : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)), Eq.{max (succ u3) (succ u2)} (Quiver.Hom.{succ (max u3 u2), u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (Prefunctor.obj.{succ u2, succ (max u3 u2), max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u3 u2} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Category.toCategoryStruct.{u2, max u3 u2} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (Prefunctor.obj.{succ (max u3 u2), succ (max u3 u2), u1, max (max u3 u2) u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, u1, max (max u3 u2) u1} A _inst_3 (CategoryTheory.Functor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.const.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3)) (CategoryTheory.Limits.Cone.pt.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)) (CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx)))) W) (Prefunctor.obj.{succ u2, succ (max u3 u2), max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u3 u2} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Category.toCategoryStruct.{u2, max u3 u2} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U))) W)) (CategoryTheory.NatTrans.app.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (Prefunctor.obj.{succ (max u3 u2), succ (max u3 u2), u1, max (max u3 u2) u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, u1, max (max u3 u2) u1} A _inst_3 (CategoryTheory.Functor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.const.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3)) (CategoryTheory.Limits.Cone.pt.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)) (CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx))) (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)) (CategoryTheory.Limits.Cone.œÄ.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)) (CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx)) W) (CategoryTheory.RanIsSheafOfCoverLifting.getSection.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx W)
Case conversion may be inaccurate. Consider using '#align category_theory.Ran_is_sheaf_of_cover_lifting.glued_limit_cone_œÄ_app CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone_œÄ_app‚Çì'. -/
@[simp]
theorem gluedLimitCone_œÄ_app (W) : (gluedLimitCone hu ‚Ñ± hS hx).œÄ.app W = getSection hu ‚Ñ± hS hx W :=
  rfl
#align category_theory.Ran_is_sheaf_of_cover_lifting.glued_limit_cone_œÄ_app CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone_œÄ_app

/- warning: category_theory.Ran_is_sheaf_of_cover_lifting.glued_section -> CategoryTheory.RanIsSheafOfCoverLifting.gluedSection is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2}, (CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) -> (forall (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U}, (Membership.Mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.hasMem.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ (max u3 u2))} (CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) (fun (_x : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) => forall (X : D), Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 X)) (CategoryTheory.GrothendieckTopology.hasCoeToFun.{u2, u3} D _inst_2) K U)) -> (forall {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.RanIsSheafOfCoverLifting.gluedSection._proof_1.{u3, u2, u1} C D _inst_1 _inst_2 A _inst_3 _inst_4 G)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)}, (CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.RanIsSheafOfCoverLifting.gluedSection._proof_1.{u3, u2, u1} C D _inst_1 _inst_2 A _inst_3 _inst_4 G)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) -> (Quiver.Hom.{succ (max u3 u2), u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) X (CategoryTheory.Functor.obj.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.RanIsSheafOfCoverLifting.gluedSection._proof_1.{u3, u2, u1} C D _inst_1 _inst_2 A _inst_3 _inst_4 G)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Opposite.op.{succ u3} D U)))))
but is expected to have type
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2}, (CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) -> (forall (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U}, (Membership.mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.instMembershipSet.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (CategoryTheory.GrothendieckTopology.sieves.{u2, u3} D _inst_2 K U)) -> (forall {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)}, (CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) -> (Quiver.Hom.{max (succ u3) (succ u2), u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) X (Prefunctor.obj.{succ u2, max (succ u3) (succ u2), u3, u1} (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±))) (Opposite.op.{succ u3} D U)))))
Case conversion may be inaccurate. Consider using '#align category_theory.Ran_is_sheaf_of_cover_lifting.glued_section CategoryTheory.RanIsSheafOfCoverLifting.gluedSection‚Çì'. -/
/-- The section obtained by passing `glued_limit_cone` into `category_theory.limits.limit.lift`. -/
def gluedSection : X ‚ü∂ ((ran G.op).obj ‚Ñ±.val).obj (op U) :=
  limit.lift _ (gluedLimitCone hu ‚Ñ± hS hx)
#align category_theory.Ran_is_sheaf_of_cover_lifting.glued_section CategoryTheory.RanIsSheafOfCoverLifting.gluedSection

/- warning: category_theory.Ran_is_sheaf_of_cover_lifting.helper -> CategoryTheory.RanIsSheafOfCoverLifting.helper is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (hu : CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U} (hS : Membership.Mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.hasMem.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ (max u3 u2))} (CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) (fun (_x : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) => forall (X : D), Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 X)) (CategoryTheory.GrothendieckTopology.hasCoeToFun.{u2, u3} D _inst_2) K U)) {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)} (hx : CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) {V : D} (f : Quiver.Hom.{succ u2, u3} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) V U) (y : Quiver.Hom.{succ (max u3 u2), u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) X (CategoryTheory.Functor.obj.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Opposite.op.{succ u3} D V))) (W : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)), (forall {V' : C} {fV : Quiver.Hom.{succ u2, u3} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.obj.{u2, u2, u3, u3} C _inst_1 D _inst_2 G V') V} (hV : CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S (CategoryTheory.Functor.obj.{u2, u2, u3, u3} C _inst_1 D _inst_2 G V') (CategoryTheory.CategoryStruct.comp.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2) (CategoryTheory.Functor.obj.{u2, u2, u3, u3} C _inst_1 D _inst_2 G V') V U fV f)), Eq.{succ (max u3 u2)} (Quiver.Hom.{succ (max u3 u2), u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) X (CategoryTheory.Functor.obj.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Opposite.op.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} C _inst_1 D _inst_2 G V')))) (CategoryTheory.CategoryStruct.comp.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3) X (CategoryTheory.Functor.obj.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Opposite.op.{succ u3} D V)) (CategoryTheory.Functor.obj.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Opposite.op.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} C _inst_1 D _inst_2 G V'))) y (CategoryTheory.Functor.map.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Opposite.op.{succ u3} D V) (Opposite.op.{succ u3} D (CategoryTheory.Functor.obj.{u2, u2, u3, u3} C _inst_1 D _inst_2 G V')) (Quiver.Hom.op.{u3, succ u2} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.obj.{u2, u2, u3, u3} C _inst_1 D _inst_2 G V') V fV))) (x (CategoryTheory.Functor.obj.{u2, u2, u3, u3} C _inst_1 D _inst_2 G V') (CategoryTheory.CategoryStruct.comp.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2) (CategoryTheory.Functor.obj.{u2, u2, u3, u3} C _inst_1 D _inst_2 G V') V U fV f) hV)) -> (Eq.{succ (max u3 u2)} (Quiver.Hom.{succ (max u3 u2), u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) X (CategoryTheory.Functor.obj.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D V)) W)) (CategoryTheory.CategoryStruct.comp.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3) X (CategoryTheory.Functor.obj.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Opposite.op.{succ u3} D V)) (CategoryTheory.Functor.obj.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D V)) W) y (CategoryTheory.Limits.limit.œÄ.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D V)) (CategoryTheory.ran._proof_1.{u3, u3, u1, u2, u2, max u3 u2} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D V)) W)) (CategoryTheory.NatTrans.app.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, u1, max u2 (max u3 u2) u1} A _inst_3 (CategoryTheory.Functor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.const.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Limits.Cone.pt.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)) (CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx))) (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)) (CategoryTheory.Limits.Cone.œÄ.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)) (CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx)) (CategoryTheory.Functor.obj.{u2, u2, max u3 u2, max u3 u2} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.category.{u2, u3, u3, u2} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.map.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (Quiver.Hom.op.{u3, succ u2} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) V U f)) W)))
but is expected to have type
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (hu : CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U} (hS : Membership.mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.instMembershipSet.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (CategoryTheory.GrothendieckTopology.sieves.{u2, u3} D _inst_2 K U)) {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)} (hx : CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) {V : D} (f : Quiver.Hom.{succ u2, u3} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) V U) (y : Quiver.Hom.{max (succ u3) (succ u2), u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) X (Prefunctor.obj.{succ u2, max (succ u3) (succ u2), u3, u1} (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±))) (Opposite.op.{succ u3} D V))) (W : CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)), (forall {V' : C} {fV : Quiver.Hom.{succ u2, u3} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (Prefunctor.obj.{succ u2, succ u2, u3, u3} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} C (CategoryTheory.Category.toCategoryStruct.{u2, u3} C _inst_1)) D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) V') V} (hV : CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S (Prefunctor.obj.{succ u2, succ u2, u3, u3} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} C (CategoryTheory.Category.toCategoryStruct.{u2, u3} C _inst_1)) D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) V') (CategoryTheory.CategoryStruct.comp.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2) (Prefunctor.obj.{succ u2, succ u2, u3, u3} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} C (CategoryTheory.Category.toCategoryStruct.{u2, u3} C _inst_1)) D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) V') V U fV f)), Eq.{max (succ u3) (succ u2)} (Quiver.Hom.{succ (max u3 u2), u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) X (Prefunctor.obj.{succ u2, max (succ u3) (succ u2), u3, u1} (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±))) (Opposite.op.{succ u3} D (Prefunctor.obj.{succ u2, succ u2, u3, u3} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} C (CategoryTheory.Category.toCategoryStruct.{u2, u3} C _inst_1)) D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) V')))) (CategoryTheory.CategoryStruct.comp.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3) X (Prefunctor.obj.{succ u2, max (succ u3) (succ u2), u3, u1} (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±))) (Opposite.op.{succ u3} D V)) (Prefunctor.obj.{succ u2, max (succ u3) (succ u2), u3, u1} (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±))) (Opposite.op.{succ u3} D (Prefunctor.obj.{succ u2, succ u2, u3, u3} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} C (CategoryTheory.Category.toCategoryStruct.{u2, u3} C _inst_1)) D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) V'))) y (Prefunctor.map.{succ u2, max (succ u3) (succ u2), u3, u1} (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±))) (Opposite.op.{succ u3} D V) (Opposite.op.{succ u3} D (Prefunctor.obj.{succ u2, succ u2, u3, u3} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} C (CategoryTheory.Category.toCategoryStruct.{u2, u3} C _inst_1)) D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) V')) (Quiver.Hom.op.{u3, succ u2} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (Prefunctor.obj.{succ u2, succ u2, u3, u3} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} C (CategoryTheory.Category.toCategoryStruct.{u2, u3} C _inst_1)) D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) V') V fV))) (x (Prefunctor.obj.{succ u2, succ u2, u3, u3} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} C (CategoryTheory.Category.toCategoryStruct.{u2, u3} C _inst_1)) D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) V') (CategoryTheory.CategoryStruct.comp.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2) (Prefunctor.obj.{succ u2, succ u2, u3, u3} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} C (CategoryTheory.Category.toCategoryStruct.{u2, u3} C _inst_1)) D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) V') V U fV f) hV)) -> (Eq.{max (succ u3) (succ u2)} (Quiver.Hom.{succ (max u3 u2), u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) X (Prefunctor.obj.{succ u2, succ (max u3 u2), max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u3 u2} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Category.toCategoryStruct.{u2, max u3 u2} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D V))) W)) (CategoryTheory.CategoryStruct.comp.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3) X (Prefunctor.obj.{succ u2, max (succ u3) (succ u2), u3, u1} (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±))) (Opposite.op.{succ u3} D V)) (Prefunctor.obj.{succ u2, succ (max u3 u2), max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u3 u2} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Category.toCategoryStruct.{u2, max u3 u2} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)))) A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D V))) W) y (CategoryTheory.Limits.limit.œÄ.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D V)) (CategoryTheory.Limits.hasLimitOfHasLimitsOfShape.{u2, max u3 u2, max u3 u2, u1} A _inst_3 (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G (Opposite.op.{succ u3} D V)) (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D V))) W)) (CategoryTheory.NatTrans.app.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (Prefunctor.obj.{succ (max u3 u2), succ (max u3 u2), u1, max (max u3 u2) u1} A (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} A (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} A _inst_3)) (CategoryTheory.Functor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, u1, max (max u3 u2) u1} A _inst_3 (CategoryTheory.Functor.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3) (CategoryTheory.Functor.const.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3)) (CategoryTheory.Limits.Cone.pt.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)) (CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx))) (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)) (CategoryTheory.Limits.Cone.œÄ.{u2, max u3 u2, max u3 u2, u1} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) A _inst_3 (CategoryTheory.Ran.diagram.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±) (Opposite.op.{succ u3} D U)) (CategoryTheory.RanIsSheafOfCoverLifting.gluedLimitCone.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx)) (Prefunctor.obj.{succ u2, succ u2, max u2 u3, max u2 u3} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u2 u3} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Category.toCategoryStruct.{u2, max u2 u3} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)))) (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u2 u3} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.Category.toCategoryStruct.{u2, max u2 u3} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, max u2 u3, max u2 u3} (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.instCategoryStructuredArrow.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G)) (CategoryTheory.StructuredArrow.map.{u2, u2, u3, u3} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) (Opposite.op.{succ u3} D U) (Opposite.op.{succ u3} D V) (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (Quiver.Hom.op.{u3, succ u2} D (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} D (CategoryTheory.Category.toCategoryStruct.{u2, u3} D _inst_2)) V U f))) W)))
Case conversion may be inaccurate. Consider using '#align category_theory.Ran_is_sheaf_of_cover_lifting.helper CategoryTheory.RanIsSheafOfCoverLifting.helper‚Çì'. -/
/--
A helper lemma for the following two lemmas. Basically stating that if the section `y : X ‚ü∂ ùí¢(V)`
coincides with `x` on `G(V')` for all `G(V') ‚äÜ V ‚àà S`, then `X ‚ü∂ ùí¢(V) ‚ü∂ ‚Ñ±(W)` is indeed the
section obtained in `get_sections`. That said, this is littered with some more categorical jargon
in order to be applied in the following lemmas easier.
-/
theorem helper {V} (f : V ‚ü∂ U) (y : X ‚ü∂ ((ran G.op).obj ‚Ñ±.val).obj (op V)) (W)
    (H : ‚àÄ {V'} {fV : G.obj V' ‚ü∂ V} (hV), y ‚â´ ((ran G.op).obj ‚Ñ±.val).map fV.op = x (fV ‚â´ f) hV) :
    y ‚â´ limit.œÄ (Ran.diagram G.op ‚Ñ±.val (op V)) W =
      (gluedLimitCone hu ‚Ñ± hS hx).œÄ.app ((StructuredArrow.map f.op).obj W) :=
  by
  dsimp only [glued_limit_cone_œÄ_app]
  apply get_section_is_unique hu ‚Ñ± hS hx ((structured_arrow.map f.op).obj W)
  intro V' fV' hV'
  dsimp only [Ran.adjunction, Ran.equiv, pulledback_family_apply]
  erw [adjunction.adjunction_of_equiv_right_counit_app]
  have :
    y ‚â´ ((Ran G.op).obj ‚Ñ±.val).map (G.map fV' ‚â´ W.hom.unop).op =
      x (G.map fV' ‚â´ W.hom.unop ‚â´ f) (by simpa only using hV') :=
    by
    convert H (show S ((G.map fV' ‚â´ W.hom.unop) ‚â´ f) by simpa only [category.assoc] using hV') using
      2
    simp only [category.assoc]
  simp only [Quiver.Hom.unop_op, Equiv.symm_symm, structured_arrow.map_obj_hom, unop_comp,
    Equiv.coe_fn_mk, functor.comp_map, coyoneda_obj_map, category.assoc, ‚Üê this, op_comp,
    Ran_obj_map, nat_trans.id_app]
  erw [category.id_comp, limit.pre_œÄ]
  congr
  convert limit.w (Ran.diagram G.op ‚Ñ±.val (op V)) (structured_arrow.hom_mk' W fV'.op)
  rw [structured_arrow.map_mk]
  erw [category.comp_id]
  simp only [Quiver.Hom.unop_op, functor.op_map, Quiver.Hom.op_unop]
#align category_theory.Ran_is_sheaf_of_cover_lifting.helper CategoryTheory.RanIsSheafOfCoverLifting.helper

/- warning: category_theory.Ran_is_sheaf_of_cover_lifting.glued_section_is_amalgamation -> CategoryTheory.RanIsSheafOfCoverLifting.gluedSection_isAmalgamation is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (hu : CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U} (hS : Membership.Mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.hasMem.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ (max u3 u2))} (CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) (fun (_x : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) => forall (X : D), Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 X)) (CategoryTheory.GrothendieckTopology.hasCoeToFun.{u2, u3} D _inst_2) K U)) {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)} (hx : CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x), CategoryTheory.Presieve.FamilyOfElements.IsAmalgamation.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x (CategoryTheory.RanIsSheafOfCoverLifting.gluedSection.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± (Opposite.unop.{succ u1} A (Opposite.op.{succ u1} A X)) U S hS x hx)
but is expected to have type
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (hu : CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U} (hS : Membership.mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.instMembershipSet.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (CategoryTheory.GrothendieckTopology.sieves.{u2, u3} D _inst_2 K U)) {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)} (hx : CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x), CategoryTheory.Presieve.FamilyOfElements.IsAmalgamation.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x (CategoryTheory.RanIsSheafOfCoverLifting.gluedSection.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± (Opposite.unop.{succ u1} A (Opposite.op.{succ u1} A X)) U S hS x hx)
Case conversion may be inaccurate. Consider using '#align category_theory.Ran_is_sheaf_of_cover_lifting.glued_section_is_amalgamation CategoryTheory.RanIsSheafOfCoverLifting.gluedSection_isAmalgamation‚Çì'. -/
/-- Verify that the `glued_section` is an amalgamation of `x`. -/
theorem gluedSection_isAmalgamation : x.IsAmalgamation (gluedSection hu ‚Ñ± hS hx) :=
  by
  intro V fV hV
  ext W
  simp only [functor.comp_map, limit.lift_pre, coyoneda_obj_map, Ran_obj_map, glued_section]
  erw [limit.lift_œÄ]
  symm
  convert helper hu ‚Ñ± hS hx _ (x fV hV) _ _ using 1
  intro V' fV' hV'
  convert hx fV' (ùüô _) hV hV' (by rw [category.id_comp])
  simp only [op_id, functor_to_types.map_id_apply]
#align category_theory.Ran_is_sheaf_of_cover_lifting.glued_section_is_amalgamation CategoryTheory.RanIsSheafOfCoverLifting.gluedSection_isAmalgamation

/- warning: category_theory.Ran_is_sheaf_of_cover_lifting.glued_section_is_unique -> CategoryTheory.RanIsSheafOfCoverLifting.gluedSection_is_unique is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (hu : CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U} (hS : Membership.Mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.hasMem.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (coeFn.{max (succ u3) (succ u2), max (succ u3) (succ (max u3 u2))} (CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) (fun (_x : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2) => forall (X : D), Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 X)) (CategoryTheory.GrothendieckTopology.hasCoeToFun.{u2, u3} D _inst_2) K U)) {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)} (hx : CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) (y : CategoryTheory.Functor.obj.{u2, max u3 u2, u3, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (Opposite.op.{succ u3} D U)), (CategoryTheory.Presieve.FamilyOfElements.IsAmalgamation.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x y) -> (Eq.{succ (max u3 u2)} (CategoryTheory.Functor.obj.{u2, max u3 u2, u3, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (CategoryTheory.Functor.obj.{max u3 u2, max u1 u3 u2, u1, max (max u3 u2) u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3) (Opposite.op.{succ u1} A X))) (Opposite.op.{succ u3} D U)) y (CategoryTheory.RanIsSheafOfCoverLifting.gluedSection.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± (Opposite.unop.{succ u1} A (Opposite.op.{succ u1} A X)) U S hS x hx))
but is expected to have type
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2} (hu : CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3) {X : A} {U : D} {S : CategoryTheory.Sieve.{u2, u3} D _inst_2 U} (hS : Membership.mem.{max u3 u2, max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U) (Set.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) (Set.instMembershipSet.{max u3 u2} (CategoryTheory.Sieve.{u2, u3} D _inst_2 U)) S (CategoryTheory.GrothendieckTopology.sieves.{u2, u3} D _inst_2 K U)) {x : CategoryTheory.Presieve.FamilyOfElements.{max u3 u2, u2, u3} D _inst_2 U (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S)} (hx : CategoryTheory.Presieve.FamilyOfElements.Compatible.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x) (y : Prefunctor.obj.{succ u2, succ (max u3 u2), u3, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) Type.{max u3 u2} (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, succ (max u3 u2)} Type.{max u3 u2} (CategoryTheory.Category.toCategoryStruct.{max u3 u2, succ (max u3 u2)} Type.{max u3 u2} CategoryTheory.types.{max u3 u2})) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X)))) (Opposite.op.{succ u3} D U)), (CategoryTheory.Presieve.FamilyOfElements.IsAmalgamation.{max u3 u2, u2, u3} D _inst_2 (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X))) U (CategoryTheory.Sieve.arrows.{u2, u3} D _inst_2 U S) x y) -> (Eq.{max (succ u3) (succ u2)} (Prefunctor.obj.{succ u2, succ (max u3 u2), u3, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.CategoryStruct.toQuiver.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.toCategoryStruct.{u2, u3} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2))) Type.{max u3 u2} (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, succ (max u3 u2)} Type.{max u3 u2} (CategoryTheory.Category.toCategoryStruct.{max u3 u2, succ (max u3 u2)} Type.{max u3 u2} CategoryTheory.types.{max u3 u2})) (CategoryTheory.Functor.toPrefunctor.{u2, max u3 u2, u3, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (CategoryTheory.Functor.comp.{u2, max u3 u2, max u3 u2, u3, u1, succ (max u3 u2)} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2} (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)) (Prefunctor.obj.{succ (max u3 u2), max (succ u1) (succ (max u3 u2)), u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, u1} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3))) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.CategoryStruct.toQuiver.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Category.toCategoryStruct.{max u1 u3 u2, max u1 (succ (max u3 u2))} (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u1 u3 u2, u1, max u1 (succ (max u3 u2))} (Opposite.{succ u1} A) (CategoryTheory.Category.opposite.{max u3 u2, u1} A _inst_3) (CategoryTheory.Functor.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.Functor.category.{max u3 u2, max u3 u2, u1, succ (max u3 u2)} A _inst_3 Type.{max u3 u2} CategoryTheory.types.{max u3 u2}) (CategoryTheory.coyoneda.{max u3 u2, u1} A _inst_3)) (Opposite.op.{succ u1} A X)))) (Opposite.op.{succ u3} D U)) y (CategoryTheory.RanIsSheafOfCoverLifting.gluedSection.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 J K G hu ‚Ñ± X U S hS x hx))
Case conversion may be inaccurate. Consider using '#align category_theory.Ran_is_sheaf_of_cover_lifting.glued_section_is_unique CategoryTheory.RanIsSheafOfCoverLifting.gluedSection_is_unique‚Çì'. -/
/-- Verify that the amalgamation is indeed unique. -/
theorem gluedSection_is_unique (y) (hy : x.IsAmalgamation y) : y = gluedSection hu ‚Ñ± hS hx :=
  by
  unfold glued_section limit.lift
  ext W
  erw [limit.lift_œÄ]
  convert helper hu ‚Ñ± hS hx (ùüô _) y W _
  ¬∑ simp only [op_id, structured_arrow.map_id]
  ¬∑ intro V' fV' hV'
    convert hy fV' (by simpa only [category.comp_id] using hV')
    erw [category.comp_id]
#align category_theory.Ran_is_sheaf_of_cover_lifting.glued_section_is_unique CategoryTheory.RanIsSheafOfCoverLifting.gluedSection_is_unique

end RanIsSheafOfCoverLifting

/- warning: category_theory.Ran_is_sheaf_of_cover_lifting -> CategoryTheory.ran_isSheaf_of_coverLifting is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2}, (CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) -> (forall (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3), CategoryTheory.Presheaf.IsSheaf.{u2, max u3 u2, u3, u1} D _inst_2 A _inst_3 K (CategoryTheory.Functor.obj.{max u3 u2, max u3 u2, max u2 (max u3 u2) u3 u1, max u2 (max u3 u2) u3 u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.ran_isSheaf_of_coverLifting.CategoryTheory.Limits.hasLimitsOfShape.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X)) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)))
but is expected to have type
  forall {C : Type.{u3}} {D : Type.{u3}} [_inst_1 : CategoryTheory.Category.{u2, u3} C] [_inst_2 : CategoryTheory.Category.{u2, u3} D] {A : Type.{u1}} [_inst_3 : CategoryTheory.Category.{max u3 u2, u1} A] [_inst_4 : CategoryTheory.Limits.HasLimits.{max u3 u2, u1} A _inst_3] {J : CategoryTheory.GrothendieckTopology.{u2, u3} C _inst_1} {K : CategoryTheory.GrothendieckTopology.{u2, u3} D _inst_2} {G : CategoryTheory.Functor.{u2, u2, u3, u3} C _inst_1 D _inst_2}, (CategoryTheory.CoverLifting.{u3, u2, u3, u2} C _inst_1 D _inst_2 J K G) -> (forall (‚Ñ± : CategoryTheory.Sheaf.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3), CategoryTheory.Presheaf.IsSheaf.{u2, max u3 u2, u3, u1} D _inst_2 A _inst_3 K (Prefunctor.obj.{max (succ u3) (succ (max u3 u2)), max (succ u3) (succ (max u3 u2)), max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3))) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.CategoryStruct.toQuiver.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Category.toCategoryStruct.{max u3 u2, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3))) (CategoryTheory.Functor.toPrefunctor.{max u3 u2, max u3 u2, max (max u3 u2) u1, max (max u3 u2) u1} (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} C) (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) A _inst_3) (CategoryTheory.Functor.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.Functor.category.{u2, max u3 u2, u3, u1} (Opposite.{succ u3} D) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) A _inst_3) (CategoryTheory.ran.{u2, u2, max u3 u2, u3, u3, u1} (Opposite.{succ u3} C) (Opposite.{succ u3} D) A (CategoryTheory.Category.opposite.{u2, u3} C _inst_1) (CategoryTheory.Category.opposite.{u2, u3} D _inst_2) _inst_3 (CategoryTheory.Functor.op.{u2, u2, u3, u3} C _inst_1 D _inst_2 G) (fun (X : Opposite.{succ u3} D) => CategoryTheory.RanIsSheafOfCoverLifting.instHasLimitsOfShapeStructuredArrowOppositeOppositeOpInstCategoryStructuredArrow.{u1, u2, u3} C D _inst_1 _inst_2 A _inst_3 _inst_4 G X))) (CategoryTheory.Sheaf.val.{u2, max u3 u2, u3, u1} C _inst_1 J A _inst_3 ‚Ñ±)))
Case conversion may be inaccurate. Consider using '#align category_theory.Ran_is_sheaf_of_cover_lifting CategoryTheory.ran_isSheaf_of_coverLifting‚Çì'. -/
/-- If `G` is cover_lifting, then `Ran G.op` pushes sheaves to sheaves.

This result is basically https://stacks.math.columbia.edu/tag/00XK,
but without the condition that `C` or `D` has pullbacks.
-/
theorem ran_isSheaf_of_coverLifting {G : C ‚•§ D} (hG : CoverLifting J K G) (‚Ñ± : Sheaf J A) :
    Presheaf.IsSheaf K ((ran G.op).obj ‚Ñ±.val) :=
  by
  intro X U S hS x hx
  constructor; swap
  ¬∑ apply Ran_is_sheaf_of_cover_lifting.glued_section hG ‚Ñ± hS hx
  constructor
  ¬∑ apply Ran_is_sheaf_of_cover_lifting.glued_section_is_amalgamation
  ¬∑ apply Ran_is_sheaf_of_cover_lifting.glued_section_is_unique
#align category_theory.Ran_is_sheaf_of_cover_lifting CategoryTheory.ran_isSheaf_of_coverLifting

variable (A)

#print CategoryTheory.Sites.copullback /-
/-- A cover-lifting functor induces a morphism of sites in the same direction as the functor. -/
def Sites.copullback {G : C ‚•§ D} (hG : CoverLifting J K G) : Sheaf J A ‚•§ Sheaf K A
    where
  obj ‚Ñ± := ‚ü®(ran G.op).obj ‚Ñ±.val, ran_isSheaf_of_coverLifting hG ‚Ñ±‚ü©
  map _ _ f := ‚ü®(ran G.op).map f.val‚ü©
  map_id' ‚Ñ± := Sheaf.Hom.ext _ _ <| (ran G.op).map_id ‚Ñ±.val
  map_comp' _ _ _ f g := Sheaf.Hom.ext _ _ <| (ran G.op).map_comp f.val g.val
#align category_theory.sites.copullback CategoryTheory.Sites.copullback
-/

#print CategoryTheory.Sites.pullbackCopullbackAdjunction /-
/--
Given a functor between sites that is cover-preserving, cover-lifting, and compatible-preserving,
the pullback and copullback along `G` are adjoint to each other
-/
@[simps unit_app_val counit_app_val]
noncomputable def Sites.pullbackCopullbackAdjunction {G : C ‚•§ D} (Hp : CoverPreserving J K G)
    (Hl : CoverLifting J K G) (Hc : CompatiblePreserving K G) :
    Sites.pullback A Hc Hp ‚ä£ Sites.copullback A Hl
    where
  homEquiv X Y :=
    { toFun := fun f => ‚ü®(Ran.adjunction A G.op).homEquiv X.val Y.val f.val‚ü©
      invFun := fun f => ‚ü®((Ran.adjunction A G.op).homEquiv X.val Y.val).symm f.val‚ü©
      left_inv := fun f => by
        ext1
        dsimp
        rw [Equiv.symm_apply_apply]
      right_inv := fun f => by
        ext1
        dsimp
        rw [Equiv.apply_symm_apply] }
  Unit :=
    { app := fun X => ‚ü®(Ran.adjunction A G.op).Unit.app X.val‚ü©
      naturality' := fun _ _ f =>
        Sheaf.Hom.ext _ _ <| (Ran.adjunction A G.op).Unit.naturality f.val }
  counit :=
    { app := fun X => ‚ü®(Ran.adjunction A G.op).counit.app X.val‚ü©
      naturality' := fun _ _ f =>
        Sheaf.Hom.ext _ _ <| (Ran.adjunction A G.op).counit.naturality f.val }
  homEquiv_unit X Y f := by
    ext1
    apply (Ran.adjunction A G.op).homEquiv_unit
  homEquiv_counit X Y f := by
    ext1
    apply (Ran.adjunction A G.op).homEquiv_counit
#align category_theory.sites.pullback_copullback_adjunction CategoryTheory.Sites.pullbackCopullbackAdjunction
-/

end CategoryTheory

