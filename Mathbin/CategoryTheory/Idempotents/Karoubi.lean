/-
Copyright (c) 2022 Joël Riou. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Joël Riou

! This file was ported from Lean 3 source module category_theory.idempotents.karoubi
! leanprover-community/mathlib commit 19cb3751e5e9b3d97adb51023949c50c13b5fdfd
! Please do not edit these lines, except to modify the commit id
! if you have ported upstream changes.
-/
import Mathbin.CategoryTheory.Idempotents.Basic
import Mathbin.CategoryTheory.Preadditive.AdditiveFunctor
import Mathbin.CategoryTheory.Equivalence

/-!
# The Karoubi envelope of a category

> THIS FILE IS SYNCHRONIZED WITH MATHLIB4.
> Any changes to this file require a corresponding PR to mathlib4.

In this file, we define the Karoubi envelope `karoubi C` of a category `C`.

## Main constructions and definitions

- `karoubi C` is the Karoubi envelope of a category `C`: it is an idempotent
complete category. It is also preadditive when `C` is preadditive.
- `to_karoubi C : C ⥤ karoubi C` is a fully faithful functor, which is an equivalence
(`to_karoubi_is_equivalence`) when `C` is idempotent complete.

-/


noncomputable section

open CategoryTheory.Category

open CategoryTheory.Preadditive

open CategoryTheory.Limits

open BigOperators

namespace CategoryTheory

variable (C : Type _) [Category C]

namespace Idempotents

#print CategoryTheory.Idempotents.Karoubi /-
/-- In a preadditive category `C`, when an object `X` decomposes as `X ≅ P ⨿ Q`, one may
consider `P` as a direct factor of `X` and up to unique isomorphism, it is determined by the
obvious idempotent `X ⟶ P ⟶ X` which is the projection onto `P` with kernel `Q`. More generally,
one may define a formal direct factor of an object `X : C` : it consists of an idempotent
`p : X ⟶ X` which is thought as the "formal image" of `p`. The type `karoubi C` shall be the
type of the objects of the karoubi enveloppe of `C`. It makes sense for any category `C`. -/
@[nolint has_nonempty_instance]
structure Karoubi where
  pt : C
  p : X ⟶ X
  idem : p ≫ p = p
#align category_theory.idempotents.karoubi CategoryTheory.Idempotents.Karoubi
-/

namespace Karoubi

variable {C}

attribute [simp, reassoc] idem

/- warning: category_theory.idempotents.karoubi.ext -> CategoryTheory.Idempotents.Karoubi.ext is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] {P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} (h_X : Eq.{succ u1} C (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)), (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.eqToHom.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q) h_X)) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q) (CategoryTheory.eqToHom.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q) h_X) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 Q))) -> (Eq.{max (succ u1) (succ u2)} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) P Q)
but is expected to have type
  forall {C : Type.{u2}} [_inst_1 : CategoryTheory.Category.{u1, u2} C] {P : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} (h_X : Eq.{succ u2} C (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)), (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.eqToHom.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) h_X)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.eqToHom.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) h_X) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 Q))) -> (Eq.{max (succ u2) (succ u1)} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) P Q)
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.ext CategoryTheory.Idempotents.Karoubi.extₓ'. -/
@[ext]
theorem ext {P Q : Karoubi C} (h_X : P.pt = Q.pt) (h_p : P.p ≫ eqToHom h_X = eqToHom h_X ≫ Q.p) :
    P = Q := by
  cases P
  cases Q
  dsimp at h_X h_p
  subst h_X
  simpa only [true_and_iff, eq_self_iff_true, id_comp, eq_to_hom_refl, heq_iff_eq, comp_id] using
    h_p
#align category_theory.idempotents.karoubi.ext CategoryTheory.Idempotents.Karoubi.ext

#print CategoryTheory.Idempotents.Karoubi.Hom /-
/-- A morphism `P ⟶ Q` in the category `karoubi C` is a morphism in the underlying category
`C` which satisfies a relation, which in the preadditive case, expresses that it induces a
map between the corresponding "formal direct factors" and that it vanishes on the complement
formal direct factor. -/
@[ext]
structure Hom (P Q : Karoubi C) where
  f : P.pt ⟶ Q.pt
  comm : f = P.p ≫ f ≫ Q.p
#align category_theory.idempotents.karoubi.hom CategoryTheory.Idempotents.Karoubi.Hom
-/

instance [Preadditive C] (P Q : Karoubi C) : Inhabited (Hom P Q) :=
  ⟨⟨0, by rw [zero_comp, comp_zero]⟩⟩

/- warning: category_theory.idempotents.karoubi.hom_ext -> CategoryTheory.Idempotents.Karoubi.hom_ext_iff is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] {P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {f : CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q} {g : CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q}, Iff (Eq.{succ u2} (CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q) f g) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q g))
but is expected to have type
  forall {C : Type.{u2}} [_inst_1 : CategoryTheory.Category.{u1, u2} C] {P : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} {f : Quiver.Hom.{succ u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1))) P Q} {g : Quiver.Hom.{succ u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1))) P Q}, Iff (Eq.{succ u1} (Quiver.Hom.{succ u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1))) P Q) f g) (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q g))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.hom_ext CategoryTheory.Idempotents.Karoubi.hom_ext_iffₓ'. -/
@[simp]
theorem hom_ext_iff {P Q : Karoubi C} {f g : Hom P Q} : f = g ↔ f.f = g.f :=
  by
  constructor
  · intro h
    rw [h]
  · ext
#align category_theory.idempotents.karoubi.hom_ext CategoryTheory.Idempotents.Karoubi.hom_ext_iff

/- warning: category_theory.idempotents.karoubi.p_comp -> CategoryTheory.Idempotents.Karoubi.p_comp is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] {P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} (f : CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q), Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f)
but is expected to have type
  forall {C : Type.{u2}} [_inst_1 : CategoryTheory.Category.{u1, u2} C] {P : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} (f : CategoryTheory.Idempotents.Karoubi.Hom.{u2, u1} C _inst_1 P Q), Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f)
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.p_comp CategoryTheory.Idempotents.Karoubi.p_compₓ'. -/
@[simp, reassoc]
theorem p_comp {P Q : Karoubi C} (f : Hom P Q) : P.p ≫ f.f = f.f := by rw [f.comm, ← assoc, P.idem]
#align category_theory.idempotents.karoubi.p_comp CategoryTheory.Idempotents.Karoubi.p_comp

/- warning: category_theory.idempotents.karoubi.comp_p -> CategoryTheory.Idempotents.Karoubi.comp_p is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] {P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} (f : CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q), Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f)
but is expected to have type
  forall {C : Type.{u2}} [_inst_1 : CategoryTheory.Category.{u1, u2} C] {P : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} (f : CategoryTheory.Idempotents.Karoubi.Hom.{u2, u1} C _inst_1 P Q), Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f)
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.comp_p CategoryTheory.Idempotents.Karoubi.comp_pₓ'. -/
@[simp, reassoc]
theorem comp_p {P Q : Karoubi C} (f : Hom P Q) : f.f ≫ Q.p = f.f := by
  rw [f.comm, assoc, assoc, Q.idem]
#align category_theory.idempotents.karoubi.comp_p CategoryTheory.Idempotents.Karoubi.comp_p

/- warning: category_theory.idempotents.karoubi.p_comm -> CategoryTheory.Idempotents.Karoubi.p_comm is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] {P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} (f : CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q), Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f)) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 Q))
but is expected to have type
  forall {C : Type.{u2}} [_inst_1 : CategoryTheory.Category.{u1, u2} C] {P : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} (f : CategoryTheory.Idempotents.Karoubi.Hom.{u2, u1} C _inst_1 P Q), Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 Q))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.p_comm CategoryTheory.Idempotents.Karoubi.p_commₓ'. -/
theorem p_comm {P Q : Karoubi C} (f : Hom P Q) : P.p ≫ f.f = f.f ≫ Q.p := by rw [p_comp, comp_p]
#align category_theory.idempotents.karoubi.p_comm CategoryTheory.Idempotents.Karoubi.p_comm

/- warning: category_theory.idempotents.karoubi.comp_proof -> CategoryTheory.Idempotents.Karoubi.comp_proof is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] {P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {R : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} (g : CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 Q R) (f : CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q), Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 R)) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 R) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 Q R g)) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 R) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 R) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 R) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 R) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 Q R g)) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 R)))
but is expected to have type
  forall {C : Type.{u2}} [_inst_1 : CategoryTheory.Category.{u1, u2} C] {P : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} {R : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} (g : CategoryTheory.Idempotents.Karoubi.Hom.{u2, u1} C _inst_1 Q R) (f : CategoryTheory.Idempotents.Karoubi.Hom.{u2, u1} C _inst_1 P Q), Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 R)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 R) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 Q R g)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 R) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 R) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 R) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 R) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 Q R g)) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 R)))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.comp_proof CategoryTheory.Idempotents.Karoubi.comp_proofₓ'. -/
theorem comp_proof {P Q R : Karoubi C} (g : Hom Q R) (f : Hom P Q) :
    f.f ≫ g.f = P.p ≫ (f.f ≫ g.f) ≫ R.p := by rw [assoc, comp_p, ← assoc, p_comp]
#align category_theory.idempotents.karoubi.comp_proof CategoryTheory.Idempotents.Karoubi.comp_proof

/-- The category structure on the karoubi envelope of a category. -/
instance : Category (Karoubi C) where
  Hom := Karoubi.Hom
  id P := ⟨P.p, by repeat' rw [P.idem]⟩
  comp P Q R f g := ⟨f.f ≫ g.f, Karoubi.comp_proof g f⟩

/- warning: category_theory.idempotents.karoubi.comp_f -> CategoryTheory.Idempotents.Karoubi.comp_f is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] {P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {R : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} (f : Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P Q) (g : Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) Q R), Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 R)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P R (CategoryTheory.CategoryStruct.comp.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1)) P Q R f g)) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 R) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 Q R g))
but is expected to have type
  forall {C : Type.{u2}} [_inst_1 : CategoryTheory.Category.{u1, u2} C] {P : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} {R : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} (f : Quiver.Hom.{succ u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1))) P Q) (g : Quiver.Hom.{succ u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1))) Q R), Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 R)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P R (CategoryTheory.CategoryStruct.comp.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1)) P Q R f g)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 R) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 Q R g))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.comp_f CategoryTheory.Idempotents.Karoubi.comp_fₓ'. -/
@[simp]
theorem comp_f {P Q R : Karoubi C} (f : P ⟶ Q) (g : Q ⟶ R) : (f ≫ g).f = f.f ≫ g.f := by rfl
#align category_theory.idempotents.karoubi.comp_f CategoryTheory.Idempotents.Karoubi.comp_f

/- warning: category_theory.idempotents.karoubi.id_eq -> CategoryTheory.Idempotents.Karoubi.id_eq is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] {P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1}, Eq.{succ u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P P) (CategoryTheory.CategoryStruct.id.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1)) P) (CategoryTheory.Idempotents.Karoubi.Hom.mk.{u1, u2} C _inst_1 P P (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (Eq.mpr.{0} (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P)))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P))) (id_tag Tactic.IdTag.rw (Eq.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P)))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P)))) (Eq.ndrec.{0, succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P)) (fun (_a : Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) => Eq.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P)))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) _a))) (rfl.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P))))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.idem.{u1, u2} C _inst_1 P))) (Eq.mpr.{0} (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P)) (id_tag Tactic.IdTag.rw (Eq.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P))) (Eq.ndrec.{0, succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P)) (fun (_a : Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) => Eq.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) _a)) (rfl.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P)))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.idem.{u1, u2} C _inst_1 P))) (rfl.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P)))))
but is expected to have type
  forall {C : Type.{u2}} [_inst_1 : CategoryTheory.Category.{u1, u2} C] {P : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1}, Eq.{succ u1} (Quiver.Hom.{succ u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1))) P P) (CategoryTheory.CategoryStruct.id.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1)) P) (CategoryTheory.Idempotents.Karoubi.Hom.mk.{u2, u1} C _inst_1 P P (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (Eq.mpr.{0} (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P)))) (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P))) (id.{0} (Eq.{1} Prop (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P)))) (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P)))) (Eq.ndrec.{0, succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P)) (fun (_a : Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) => Eq.{1} Prop (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P)))) (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) _a))) (Eq.refl.{1} Prop (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P))))) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.idem.{u2, u1} C _inst_1 P))) (Eq.mpr.{0} (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P))) (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P)) (id.{0} (Eq.{1} Prop (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P))) (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P))) (Eq.ndrec.{0, succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P)) (fun (_a : Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) => Eq.{1} Prop (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P))) (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) _a)) (Eq.refl.{1} Prop (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P)))) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.idem.{u2, u1} C _inst_1 P))) (Eq.refl.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P)))))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.id_eq CategoryTheory.Idempotents.Karoubi.id_eqₓ'. -/
@[simp]
theorem id_eq {P : Karoubi C} : 𝟙 P = ⟨P.p, by repeat' rw [P.idem]⟩ := by rfl
#align category_theory.idempotents.karoubi.id_eq CategoryTheory.Idempotents.Karoubi.id_eq

/- warning: category_theory.idempotents.karoubi.coe -> CategoryTheory.Idempotents.Karoubi.coe is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C], CoeTCₓ.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1)
but is expected to have type
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C], CoeTC.{succ u1, max (succ u2) (succ u1)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1)
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.coe CategoryTheory.Idempotents.Karoubi.coeₓ'. -/
/-- It is possible to coerce an object of `C` into an object of `karoubi C`.
See also the functor `to_karoubi`. -/
instance coe : CoeTC C (Karoubi C) :=
  ⟨fun X => ⟨X, 𝟙 X, by rw [comp_id]⟩⟩
#align category_theory.idempotents.karoubi.coe CategoryTheory.Idempotents.Karoubi.coe

/- warning: category_theory.idempotents.karoubi.coe_X -> CategoryTheory.Idempotents.Karoubi.coe_X is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] (X : C), Eq.{succ u1} C (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) X)) X
but is expected to have type
  forall {C : Type.{u2}} [_inst_1 : CategoryTheory.Category.{u1, u2} C] (X : C), Eq.{succ u2} C (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.mk.{u2, u1} C _inst_1 X (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) X) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u1, u2} C _inst_1 X))) X
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.coe_X CategoryTheory.Idempotents.Karoubi.coe_Xₓ'. -/
@[simp]
theorem coe_X (X : C) : (X : Karoubi C).pt = X := by rfl
#align category_theory.idempotents.karoubi.coe_X CategoryTheory.Idempotents.Karoubi.coe_X

#print CategoryTheory.Idempotents.Karoubi.coe_p /-
@[simp]
theorem coe_p (X : C) : (X : Karoubi C).p = 𝟙 X := by rfl
#align category_theory.idempotents.karoubi.coe_p CategoryTheory.Idempotents.Karoubi.coe_p
-/

/- warning: category_theory.idempotents.karoubi.eq_to_hom_f -> CategoryTheory.Idempotents.Karoubi.eqToHom_f is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] {P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} (h : Eq.{max (succ u1) (succ u2)} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) P Q), Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q (CategoryTheory.eqToHom.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) P Q h)) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P) (CategoryTheory.eqToHom.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q) (congr_arg.{max (succ u1) (succ u2), succ u1} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) C P Q (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1) h)))
but is expected to have type
  forall {C : Type.{u2}} [_inst_1 : CategoryTheory.Category.{u1, u2} C] {P : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} (h : Eq.{max (succ u2) (succ u1)} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) P Q), Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q (CategoryTheory.eqToHom.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1) P Q h)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P) (CategoryTheory.eqToHom.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (congr_arg.{max (succ u1) (succ u2), succ u2} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) C P Q (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1) h)))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.eq_to_hom_f CategoryTheory.Idempotents.Karoubi.eqToHom_fₓ'. -/
@[simp]
theorem eqToHom_f {P Q : Karoubi C} (h : P = Q) :
    Karoubi.Hom.f (eqToHom h) = P.p ≫ eqToHom (congr_arg Karoubi.x h) :=
  by
  subst h
  simp only [eq_to_hom_refl, karoubi.id_eq, comp_id]
#align category_theory.idempotents.karoubi.eq_to_hom_f CategoryTheory.Idempotents.Karoubi.eqToHom_f

end Karoubi

/- warning: category_theory.idempotents.to_karoubi -> CategoryTheory.Idempotents.toKaroubi is a dubious translation:
lean 3 declaration is
  forall (C : Type.{u1}) [_inst_1 : CategoryTheory.Category.{u2, u1} C], CategoryTheory.Functor.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1)
but is expected to have type
  forall (C : Type.{u1}) [_inst_1 : CategoryTheory.Category.{u2, u1} C], CategoryTheory.Functor.{u2, u2, u1, max u2 u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1)
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.to_karoubi CategoryTheory.Idempotents.toKaroubiₓ'. -/
/-- The obvious fully faithful functor `to_karoubi` sends an object `X : C` to the obvious
formal direct factor of `X` given by `𝟙 X`. -/
@[simps]
def toKaroubi : C ⥤ Karoubi C
    where
  obj X := ⟨X, 𝟙 X, by rw [comp_id]⟩
  map X Y f := ⟨f, by simp only [comp_id, id_comp]⟩
#align category_theory.idempotents.to_karoubi CategoryTheory.Idempotents.toKaroubi

instance : Full (toKaroubi C) where preimage X Y f := f.f

instance : Faithful (toKaroubi C) where

variable {C}

@[simps]
instance [Preadditive C] {P Q : Karoubi C} : AddCommGroup (P ⟶ Q)
    where
  add f g :=
    ⟨f.f + g.f, by
      rw [add_comp, comp_add]
      congr
      exacts[f.comm, g.comm]⟩
  zero := ⟨0, by simp only [comp_zero, zero_comp]⟩
  zero_add f := by
    ext
    simp only [zero_add]
  add_zero f := by
    ext
    simp only [add_zero]
  add_assoc f g h' := by simp only [add_assoc]
  add_comm f g := by
    ext
    apply_rules [add_comm]
  neg f := ⟨-f.f, by simpa only [neg_comp, comp_neg, neg_inj] using f.comm⟩
  add_left_neg f := by
    ext
    apply_rules [add_left_neg]

namespace Karoubi

/- warning: category_theory.idempotents.karoubi.hom_eq_zero_iff -> CategoryTheory.Idempotents.Karoubi.hom_eq_zero_iff is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] [_inst_2 : CategoryTheory.Preadditive.{u2, u1} C _inst_1] {P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {f : CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q}, Iff (Eq.{succ u2} (CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q) f (OfNat.ofNat.{u2} (CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q) 0 (OfNat.mk.{u2} (CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q) 0 (Zero.zero.{u2} (CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q) (AddZeroClass.toHasZero.{u2} (CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q) (AddMonoid.toAddZeroClass.{u2} (CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q) (SubNegMonoid.toAddMonoid.{u2} (CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q) (AddGroup.toSubNegMonoid.{u2} (CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q) (AddCommGroup.toAddGroup.{u2} (CategoryTheory.Idempotents.Karoubi.Hom.{u1, u2} C _inst_1 P Q) (CategoryTheory.Idempotents.Quiver.Hom.addCommGroup.{u1, u2} C _inst_1 _inst_2 P Q)))))))))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (OfNat.ofNat.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) 0 (OfNat.mk.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) 0 (Zero.zero.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (CategoryTheory.Limits.HasZeroMorphisms.hasZero.{u2, u1} C _inst_1 (CategoryTheory.Preadditive.preadditiveHasZeroMorphisms.{u2, u1} C _inst_1 _inst_2) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))))))
but is expected to have type
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] [_inst_2 : CategoryTheory.Preadditive.{u2, u1} C _inst_1] {P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {f : Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q}, Iff (Eq.{succ u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) f (OfNat.ofNat.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) 0 (Zero.toOfNat0.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (NegZeroClass.toZero.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (SubNegZeroMonoid.toNegZeroClass.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (SubtractionMonoid.toSubNegZeroMonoid.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (SubtractionCommMonoid.toSubtractionMonoid.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (AddCommGroup.toDivisionAddCommMonoid.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (CategoryTheory.Idempotents.instAddCommGroupHom.{u1, u2} C _inst_1 _inst_2 P Q))))))))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (OfNat.ofNat.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)) 0 (Zero.toOfNat0.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)) (CategoryTheory.Limits.HasZeroMorphisms.Zero.{u2, u1} C _inst_1 (CategoryTheory.Preadditive.preadditiveHasZeroMorphisms.{u2, u1} C _inst_1 _inst_2) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)))))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.hom_eq_zero_iff CategoryTheory.Idempotents.Karoubi.hom_eq_zero_iffₓ'. -/
theorem hom_eq_zero_iff [Preadditive C] {P Q : Karoubi C} {f : Hom P Q} : f = 0 ↔ f.f = 0 :=
  hom_ext_iff
#align category_theory.idempotents.karoubi.hom_eq_zero_iff CategoryTheory.Idempotents.Karoubi.hom_eq_zero_iff

/- warning: category_theory.idempotents.karoubi.inclusion_hom -> CategoryTheory.Idempotents.Karoubi.inclusionHom is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] [_inst_2 : CategoryTheory.Preadditive.{u2, u1} C _inst_1] (P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1), AddMonoidHom.{u2, u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P Q) (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (AddMonoid.toAddZeroClass.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P Q) (SubNegMonoid.toAddMonoid.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P Q) (AddGroup.toSubNegMonoid.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P Q) (AddCommGroup.toAddGroup.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P Q) (CategoryTheory.Idempotents.Quiver.Hom.addCommGroup.{u1, u2} C _inst_1 _inst_2 P Q))))) (AddMonoid.toAddZeroClass.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (SubNegMonoid.toAddMonoid.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (AddGroup.toSubNegMonoid.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (AddCommGroup.toAddGroup.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (CategoryTheory.Preadditive.homGroup.{u2, u1} C _inst_1 _inst_2 (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))))))
but is expected to have type
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] [_inst_2 : CategoryTheory.Preadditive.{u2, u1} C _inst_1] (P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1), AddMonoidHom.{u2, u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)) (AddMonoid.toAddZeroClass.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (SubNegMonoid.toAddMonoid.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (AddGroup.toSubNegMonoid.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (AddCommGroup.toAddGroup.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (CategoryTheory.Idempotents.instAddCommGroupHom.{u1, u2} C _inst_1 _inst_2 P Q))))) (AddMonoid.toAddZeroClass.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)) (SubNegMonoid.toAddMonoid.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)) (AddGroup.toSubNegMonoid.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)) (AddCommGroup.toAddGroup.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)) (CategoryTheory.Preadditive.homGroup.{u2, u1} C _inst_1 _inst_2 (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q))))))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.inclusion_hom CategoryTheory.Idempotents.Karoubi.inclusionHomₓ'. -/
/-- The map sending `f : P ⟶ Q` to `f.f : P.X ⟶ Q.X` is additive. -/
@[simps]
def inclusionHom [Preadditive C] (P Q : Karoubi C) : AddMonoidHom (P ⟶ Q) (P.pt ⟶ Q.pt)
    where
  toFun f := f.f
  map_zero' := rfl
  map_add' f g := rfl
#align category_theory.idempotents.karoubi.inclusion_hom CategoryTheory.Idempotents.Karoubi.inclusionHom

/- warning: category_theory.idempotents.karoubi.sum_hom -> CategoryTheory.Idempotents.Karoubi.sum_hom is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] [_inst_2 : CategoryTheory.Preadditive.{u2, u1} C _inst_1] {P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {α : Type.{u3}} (s : Finset.{u3} α) (f : α -> (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P Q)), Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q (Finset.sum.{u2, u3} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P Q) α (AddCommGroup.toAddCommMonoid.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P Q) (CategoryTheory.Idempotents.Quiver.Hom.addCommGroup.{u1, u2} C _inst_1 _inst_2 P Q)) s (fun (x : α) => f x))) (Finset.sum.{u2, u3} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) α (AddCommGroup.toAddCommMonoid.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (CategoryTheory.Preadditive.homGroup.{u2, u1} C _inst_1 _inst_2 (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) s (fun (x : α) => CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q (f x)))
but is expected to have type
  forall {C : Type.{u2}} [_inst_1 : CategoryTheory.Category.{u3, u2} C] [_inst_2 : CategoryTheory.Preadditive.{u3, u2} C _inst_1] {P : CategoryTheory.Idempotents.Karoubi.{u2, u3} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u2, u3} C _inst_1} {α : Type.{u1}} (s : Finset.{u1} α) (f : α -> (Quiver.Hom.{succ u3, max u2 u3} (CategoryTheory.Idempotents.Karoubi.{u2, u3} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u3, max u2 u3} (CategoryTheory.Idempotents.Karoubi.{u2, u3} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u3, max u2 u3} (CategoryTheory.Idempotents.Karoubi.{u2, u3} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u3} C _inst_1))) P Q)), Eq.{succ u3} (Quiver.Hom.{succ u3, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u3, u2} C (CategoryTheory.Category.toCategoryStruct.{u3, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u3} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u3} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u3} C _inst_1 P Q (Finset.sum.{u3, u1} (Quiver.Hom.{succ u3, max u2 u3} (CategoryTheory.Idempotents.Karoubi.{u2, u3} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u3, max u2 u3} (CategoryTheory.Idempotents.Karoubi.{u2, u3} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u3, max u2 u3} (CategoryTheory.Idempotents.Karoubi.{u2, u3} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u3} C _inst_1))) P Q) α (AddCommGroup.toAddCommMonoid.{u3} (Quiver.Hom.{succ u3, max u2 u3} (CategoryTheory.Idempotents.Karoubi.{u2, u3} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u3, max u2 u3} (CategoryTheory.Idempotents.Karoubi.{u2, u3} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u3, max u2 u3} (CategoryTheory.Idempotents.Karoubi.{u2, u3} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u3} C _inst_1))) P Q) (CategoryTheory.Idempotents.instAddCommGroupHom.{u2, u3} C _inst_1 _inst_2 P Q)) s (fun (x : α) => f x))) (Finset.sum.{u3, u1} (Quiver.Hom.{succ u3, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u3, u2} C (CategoryTheory.Category.toCategoryStruct.{u3, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u3} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u3} C _inst_1 Q)) α (AddCommGroup.toAddCommMonoid.{u3} (Quiver.Hom.{succ u3, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u3, u2} C (CategoryTheory.Category.toCategoryStruct.{u3, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u3} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u3} C _inst_1 Q)) (CategoryTheory.Preadditive.homGroup.{u3, u2} C _inst_1 _inst_2 (CategoryTheory.Idempotents.Karoubi.X.{u2, u3} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u3} C _inst_1 Q))) s (fun (x : α) => CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u3} C _inst_1 P Q (f x)))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.sum_hom CategoryTheory.Idempotents.Karoubi.sum_homₓ'. -/
@[simp]
theorem sum_hom [Preadditive C] {P Q : Karoubi C} {α : Type _} (s : Finset α) (f : α → (P ⟶ Q)) :
    (∑ x in s, f x).f = ∑ x in s, (f x).f :=
  AddMonoidHom.map_sum (inclusionHom P Q) f s
#align category_theory.idempotents.karoubi.sum_hom CategoryTheory.Idempotents.Karoubi.sum_hom

end Karoubi

/-- The category `karoubi C` is preadditive if `C` is. -/
instance [Preadditive C] : Preadditive (Karoubi C) where homGroup P Q := by infer_instance

instance [Preadditive C] : Functor.Additive (toKaroubi C) where

open Karoubi

variable (C)

instance : IsIdempotentComplete (Karoubi C) :=
  by
  refine' ⟨_⟩
  intro P p hp
  have hp' := hom_ext.mp hp
  simp only [comp_f] at hp'
  use ⟨P.X, p.f, hp'⟩
  use ⟨p.f, by rw [comp_p p, hp']⟩
  use ⟨p.f, by rw [hp', p_comp p]⟩
  constructor <;> simpa only [hom_ext] using hp'

instance [IsIdempotentComplete C] : EssSurj (toKaroubi C) :=
  ⟨fun P => by
    have h : is_idempotent_complete C := inferInstance
    rcases is_idempotent_complete.idempotents_split P.X P.p P.idem with ⟨Y, i, e, ⟨h₁, h₂⟩⟩
    use Y
    exact
      Nonempty.intro
        { Hom := ⟨i, by erw [id_comp, ← h₂, ← assoc, h₁, id_comp]⟩
          inv := ⟨e, by erw [comp_id, ← h₂, assoc, h₁, comp_id]⟩ }⟩

/- warning: category_theory.idempotents.to_karoubi_is_equivalence -> CategoryTheory.Idempotents.toKaroubi_isEquivalence is a dubious translation:
lean 3 declaration is
  forall (C : Type.{u1}) [_inst_1 : CategoryTheory.Category.{u2, u1} C] [_inst_2 : CategoryTheory.IsIdempotentComplete.{u1, u2} C _inst_1], CategoryTheory.IsEquivalence.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1)
but is expected to have type
  forall (C : Type.{u1}) [_inst_1 : CategoryTheory.Category.{u2, u1} C] [_inst_2 : CategoryTheory.IsIdempotentComplete.{u1, u2} C _inst_1], CategoryTheory.IsEquivalence.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1)
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.to_karoubi_is_equivalence CategoryTheory.Idempotents.toKaroubi_isEquivalenceₓ'. -/
/-- If `C` is idempotent complete, the functor `to_karoubi : C ⥤ karoubi C` is an equivalence. -/
def toKaroubi_isEquivalence [IsIdempotentComplete C] : IsEquivalence (toKaroubi C) :=
  Equivalence.ofFullyFaithfullyEssSurj (toKaroubi C)
#align category_theory.idempotents.to_karoubi_is_equivalence CategoryTheory.Idempotents.toKaroubi_isEquivalence

/- warning: category_theory.idempotents.to_karoubi_equivalence -> CategoryTheory.Idempotents.toKaroubi_equivalence is a dubious translation:
lean 3 declaration is
  forall (C : Type.{u1}) [_inst_1 : CategoryTheory.Category.{u2, u1} C] [_inst_2 : CategoryTheory.IsIdempotentComplete.{u1, u2} C _inst_1], CategoryTheory.Equivalence.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1)
but is expected to have type
  forall (C : Type.{u1}) [_inst_1 : CategoryTheory.Category.{u2, u1} C] [_inst_2 : CategoryTheory.IsIdempotentComplete.{u1, u2} C _inst_1], CategoryTheory.Equivalence.{u2, u2, u1, max u2 u1} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) _inst_1 (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1)
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.to_karoubi_equivalence CategoryTheory.Idempotents.toKaroubi_equivalenceₓ'. -/
/-- The equivalence `C ≅ karoubi C` when `C` is idempotent complete. -/
def toKaroubi_equivalence [IsIdempotentComplete C] : C ≌ Karoubi C :=
  haveI := to_karoubi_is_equivalence C
  functor.as_equivalence (to_karoubi C)
#align category_theory.idempotents.to_karoubi_equivalence CategoryTheory.Idempotents.toKaroubi_equivalence

/- warning: category_theory.idempotents.to_karoubi_equivalence_functor_additive -> CategoryTheory.Idempotents.toKaroubi_equivalence_functor_additive is a dubious translation:
lean 3 declaration is
  forall (C : Type.{u1}) [_inst_1 : CategoryTheory.Category.{u2, u1} C] [_inst_2 : CategoryTheory.Preadditive.{u2, u1} C _inst_1] [_inst_3 : CategoryTheory.IsIdempotentComplete.{u1, u2} C _inst_1], CategoryTheory.Functor.Additive.{u1, max u1 u2, u2, u2} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) _inst_1 (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) _inst_2 (CategoryTheory.Idempotents.Karoubi.CategoryTheory.preadditive.{u1, u2} C _inst_1 _inst_2) (CategoryTheory.Equivalence.functor.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi_equivalence.{u1, u2} C _inst_1 _inst_3))
but is expected to have type
  forall (C : Type.{u1}) [_inst_1 : CategoryTheory.Category.{u2, u1} C] [_inst_2 : CategoryTheory.Preadditive.{u2, u1} C _inst_1] [_inst_3 : CategoryTheory.IsIdempotentComplete.{u1, u2} C _inst_1], CategoryTheory.Functor.Additive.{u1, max u1 u2, u2, u2} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) _inst_1 (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) _inst_2 (CategoryTheory.Idempotents.instPreadditiveKaroubiInstCategoryKaroubi.{u1, u2} C _inst_1 _inst_2) (CategoryTheory.Equivalence.functor.{u2, u2, u1, max u1 u2} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) _inst_1 (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi_equivalence.{u1, u2} C _inst_1 _inst_3))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.to_karoubi_equivalence_functor_additive CategoryTheory.Idempotents.toKaroubi_equivalence_functor_additiveₓ'. -/
instance toKaroubi_equivalence_functor_additive [Preadditive C] [IsIdempotentComplete C] :
    (toKaroubi_equivalence C).Functor.Additive :=
  (inferInstance : (toKaroubi C).Additive)
#align category_theory.idempotents.to_karoubi_equivalence_functor_additive CategoryTheory.Idempotents.toKaroubi_equivalence_functor_additive

namespace Karoubi

variable {C}

/- warning: category_theory.idempotents.karoubi.decomp_id_i -> CategoryTheory.Idempotents.Karoubi.decompId_i is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] (P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1), Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))
but is expected to have type
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] (P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1), Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P (CategoryTheory.Idempotents.Karoubi.mk.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.id.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P)))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.decomp_id_i CategoryTheory.Idempotents.Karoubi.decompId_iₓ'. -/
/-- The split mono which appears in the factorisation `decomp_id P`. -/
@[simps]
def decompId_i (P : Karoubi C) : P ⟶ P.pt :=
  ⟨P.p, by erw [coe_p, comp_id, P.idem]⟩
#align category_theory.idempotents.karoubi.decomp_id_i CategoryTheory.Idempotents.Karoubi.decompId_i

/- warning: category_theory.idempotents.karoubi.decomp_id_p -> CategoryTheory.Idempotents.Karoubi.decompId_p is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] (P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1), Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) P
but is expected to have type
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] (P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1), Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.mk.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.CategoryStruct.id.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P))) P
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.decomp_id_p CategoryTheory.Idempotents.Karoubi.decompId_pₓ'. -/
/-- The split epi which appears in the factorisation `decomp_id P`. -/
@[simps]
def decompId_p (P : Karoubi C) : (P.pt : Karoubi C) ⟶ P :=
  ⟨P.p, by erw [coe_p, id_comp, P.idem]⟩
#align category_theory.idempotents.karoubi.decomp_id_p CategoryTheory.Idempotents.Karoubi.decompId_p

/- warning: category_theory.idempotents.karoubi.decomp_id -> CategoryTheory.Idempotents.Karoubi.decompId is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] (P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1), Eq.{succ u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P P) (CategoryTheory.CategoryStruct.id.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1)) P) (CategoryTheory.CategoryStruct.comp.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1)) P ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) P (CategoryTheory.Idempotents.Karoubi.decompId_i.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.decompId_p.{u1, u2} C _inst_1 P))
but is expected to have type
  forall {C : Type.{u2}} [_inst_1 : CategoryTheory.Category.{u1, u2} C] (P : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1), Eq.{succ u1} (Quiver.Hom.{succ u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1))) P P) (CategoryTheory.CategoryStruct.id.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1)) P) (CategoryTheory.CategoryStruct.comp.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1)) P (CategoryTheory.Idempotents.Karoubi.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P))) P (CategoryTheory.Idempotents.Karoubi.decompId_i.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.decompId_p.{u2, u1} C _inst_1 P))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.decomp_id CategoryTheory.Idempotents.Karoubi.decompIdₓ'. -/
/-- The formal direct factor of `P.X` given by the idempotent `P.p` in the category `C`
is actually a direct factor in the category `karoubi C`. -/
theorem decompId (P : Karoubi C) : 𝟙 P = decompId_i P ≫ decompId_p P :=
  by
  ext
  simp only [comp_f, id_eq, P.idem, decomp_id_i, decomp_id_p]
#align category_theory.idempotents.karoubi.decomp_id CategoryTheory.Idempotents.Karoubi.decompId

/- warning: category_theory.idempotents.karoubi.decomp_p -> CategoryTheory.Idempotents.Karoubi.decomp_p is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] (P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1), Eq.{succ u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) (CategoryTheory.Functor.obj.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Functor.obj.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Functor.map.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 P)) (CategoryTheory.CategoryStruct.comp.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1)) (CategoryTheory.Functor.obj.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) P (CategoryTheory.Functor.obj.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.decompId_p.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.decompId_i.{u1, u2} C _inst_1 P))
but is expected to have type
  forall {C : Type.{u2}} [_inst_1 : CategoryTheory.Category.{u1, u2} C] (P : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1), Eq.{succ u1} (Quiver.Hom.{succ u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1))) (Prefunctor.obj.{succ u1, succ u1, u2, max u2 u1} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u1, u1, u2, max u2 u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (Prefunctor.obj.{succ u1, succ u1, u2, max u2 u1} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u1, u1, u2, max u2 u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P))) (Prefunctor.map.{succ u1, succ u1, u2, max u2 u1} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u1, u1, u2, max u2 u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.p.{u2, u1} C _inst_1 P)) (CategoryTheory.CategoryStruct.comp.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P))) P (CategoryTheory.Idempotents.Karoubi.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.decompId_p.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.decompId_i.{u2, u1} C _inst_1 P))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.decomp_p CategoryTheory.Idempotents.Karoubi.decomp_pₓ'. -/
theorem decomp_p (P : Karoubi C) : (toKaroubi C).map P.p = decompId_p P ≫ decompId_i P :=
  by
  ext
  simp only [comp_f, decomp_id_p_f, decomp_id_i_f, P.idem, to_karoubi_map_f]
#align category_theory.idempotents.karoubi.decomp_p CategoryTheory.Idempotents.Karoubi.decomp_p

/- warning: category_theory.idempotents.karoubi.decomp_id_i_to_karoubi -> CategoryTheory.Idempotents.Karoubi.decompId_i_toKaroubi is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] (X : C), Eq.{succ u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) (CategoryTheory.Functor.obj.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1) X) ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 (CategoryTheory.Functor.obj.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1) X)))) (CategoryTheory.Idempotents.Karoubi.decompId_i.{u1, u2} C _inst_1 (CategoryTheory.Functor.obj.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1) X)) (CategoryTheory.CategoryStruct.id.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1)) (CategoryTheory.Functor.obj.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1) X))
but is expected to have type
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] (X : C), Eq.{succ u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (Prefunctor.obj.{succ u2, succ u2, u1, max u1 u2} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1)) X) (CategoryTheory.Idempotents.Karoubi.mk.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 (Prefunctor.obj.{succ u2, succ u2, u1, max u1 u2} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1)) X)) (CategoryTheory.CategoryStruct.id.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 (Prefunctor.obj.{succ u2, succ u2, u1, max u1 u2} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1)) X))) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 (Prefunctor.obj.{succ u2, succ u2, u1, max u1 u2} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1)) X))))) (CategoryTheory.Idempotents.Karoubi.decompId_i.{u1, u2} C _inst_1 (Prefunctor.obj.{succ u2, succ u2, u1, max u1 u2} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1)) X)) (CategoryTheory.CategoryStruct.id.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1)) (Prefunctor.obj.{succ u2, succ u2, u1, max u1 u2} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1)) X))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.decomp_id_i_to_karoubi CategoryTheory.Idempotents.Karoubi.decompId_i_toKaroubiₓ'. -/
theorem decompId_i_toKaroubi (X : C) : decompId_i ((toKaroubi C).obj X) = 𝟙 _ :=
  by
  ext
  rfl
#align category_theory.idempotents.karoubi.decomp_id_i_to_karoubi CategoryTheory.Idempotents.Karoubi.decompId_i_toKaroubi

/- warning: category_theory.idempotents.karoubi.decomp_id_p_to_karoubi -> CategoryTheory.Idempotents.Karoubi.decompId_p_toKaroubi is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] (X : C), Eq.{succ u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 (CategoryTheory.Functor.obj.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1) X))) (CategoryTheory.Functor.obj.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1) X)) (CategoryTheory.Idempotents.Karoubi.decompId_p.{u1, u2} C _inst_1 (CategoryTheory.Functor.obj.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1) X)) (CategoryTheory.CategoryStruct.id.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1)) ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 (CategoryTheory.Functor.obj.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1) X))))
but is expected to have type
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] (X : C), Eq.{succ u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.mk.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 (Prefunctor.obj.{succ u2, succ u2, u1, max u1 u2} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1)) X)) (CategoryTheory.CategoryStruct.id.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 (Prefunctor.obj.{succ u2, succ u2, u1, max u1 u2} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1)) X))) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 (Prefunctor.obj.{succ u2, succ u2, u1, max u1 u2} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1)) X)))) (Prefunctor.obj.{succ u2, succ u2, u1, max u1 u2} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1)) X)) (CategoryTheory.Idempotents.Karoubi.decompId_p.{u1, u2} C _inst_1 (Prefunctor.obj.{succ u2, succ u2, u1, max u1 u2} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1)) X)) (CategoryTheory.CategoryStruct.id.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.mk.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 (Prefunctor.obj.{succ u2, succ u2, u1, max u1 u2} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1)) X)) (CategoryTheory.CategoryStruct.id.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 (Prefunctor.obj.{succ u2, succ u2, u1, max u1 u2} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1)) X))) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 (Prefunctor.obj.{succ u2, succ u2, u1, max u1 u2} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) (CategoryTheory.Functor.toPrefunctor.{u2, u2, u1, max u1 u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.toKaroubi.{u1, u2} C _inst_1)) X)))))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.decomp_id_p_to_karoubi CategoryTheory.Idempotents.Karoubi.decompId_p_toKaroubiₓ'. -/
theorem decompId_p_toKaroubi (X : C) : decompId_p ((toKaroubi C).obj X) = 𝟙 _ :=
  by
  ext
  rfl
#align category_theory.idempotents.karoubi.decomp_id_p_to_karoubi CategoryTheory.Idempotents.Karoubi.decompId_p_toKaroubi

/- warning: category_theory.idempotents.karoubi.decomp_id_i_naturality -> CategoryTheory.Idempotents.Karoubi.decompId_i_naturality is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] {P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} (f : Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P Q), Eq.{succ u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.CategoryStruct.comp.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1)) P Q ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) f (CategoryTheory.Idempotents.Karoubi.decompId_i.{u1, u2} C _inst_1 Q)) (CategoryTheory.CategoryStruct.comp.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1)) P ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.decompId_i.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.Hom.mk.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (Eq.mpr.{0} (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f))) (id_tag Tactic.IdTag.rw (Eq.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f)))) (Eq.ndrec.{0, succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.id.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))))) (fun (_a : Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) => Eq.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) _a))) (rfl.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))))))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Category.comp_id.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f)))) (Eq.mpr.{0} (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f)) (id_tag Tactic.IdTag.rw (Eq.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f))) (Eq.ndrec.{0, succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.CategoryStruct.id.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f)) (fun (_a : Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) => Eq.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) _a)) (rfl.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Category.id_comp.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f)))) (rfl.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f))))))
but is expected to have type
  forall {C : Type.{u2}} [_inst_1 : CategoryTheory.Category.{u1, u2} C] {P : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} (f : Quiver.Hom.{succ u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1))) P Q), Eq.{succ u1} (Quiver.Hom.{succ u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1))) P (CategoryTheory.Idempotents.Karoubi.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)))) (CategoryTheory.CategoryStruct.comp.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1)) P Q (CategoryTheory.Idempotents.Karoubi.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q))) f (CategoryTheory.Idempotents.Karoubi.decompId_i.{u2, u1} C _inst_1 Q)) (CategoryTheory.CategoryStruct.comp.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1)) P (CategoryTheory.Idempotents.Karoubi.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.decompId_i.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.Hom.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (of_eq_true (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q))))) (Eq.trans.{1} Prop (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q))))) (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f)) True (congrArg.{succ u1, 1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) Prop (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f)) (Eq.trans.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)))) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (congrArg.{succ u1, succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P))) (CategoryTheory.Category.comp_id.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f))) (CategoryTheory.Category.id_comp.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f)))) (eq_self.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f))))))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.decomp_id_i_naturality CategoryTheory.Idempotents.Karoubi.decompId_i_naturalityₓ'. -/
theorem decompId_i_naturality {P Q : Karoubi C} (f : P ⟶ Q) :
    f ≫ decompId_i _ = decompId_i _ ≫ ⟨f.f, by erw [comp_id, id_comp]⟩ :=
  by
  ext
  simp only [comp_f, decomp_id_i_f, karoubi.comp_p, karoubi.p_comp]
#align category_theory.idempotents.karoubi.decomp_id_i_naturality CategoryTheory.Idempotents.Karoubi.decompId_i_naturality

/- warning: category_theory.idempotents.karoubi.decomp_id_p_naturality -> CategoryTheory.Idempotents.Karoubi.decompId_p_naturality is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] {P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} (f : Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P Q), Eq.{succ u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) Q) (CategoryTheory.CategoryStruct.comp.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1)) ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) P Q (CategoryTheory.Idempotents.Karoubi.decompId_p.{u1, u2} C _inst_1 P) f) (CategoryTheory.CategoryStruct.comp.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1)) ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) Q (CategoryTheory.Idempotents.Karoubi.Hom.mk.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)) ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (Eq.mpr.{0} (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f))) (id_tag Tactic.IdTag.rw (Eq.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f)))) (Eq.ndrec.{0, succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.id.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))))) (fun (_a : Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) => Eq.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) _a))) (rfl.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))))))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Category.comp_id.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f)))) (Eq.mpr.{0} (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f)) (id_tag Tactic.IdTag.rw (Eq.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f))) (Eq.ndrec.{0, succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.CategoryStruct.id.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f)) (fun (_a : Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) => Eq.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f))) (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) _a)) (rfl.{1} Prop (Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.p.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f) (CategoryTheory.Category.id_comp.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f)))) (rfl.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 ((fun (a : Type.{u1}) (b : Sort.{max (succ u1) (succ u2)}) [self : HasLiftT.{succ u1, max (succ u1) (succ u2)} a b] => self.0) C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (HasLiftT.mk.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CoeTCₓ.coe.{succ u1, max (succ u1) (succ u2)} C (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.coe.{u1, u2} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f))))) (CategoryTheory.Idempotents.Karoubi.decompId_p.{u1, u2} C _inst_1 Q))
but is expected to have type
  forall {C : Type.{u2}} [_inst_1 : CategoryTheory.Category.{u1, u2} C] {P : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1} (f : Quiver.Hom.{succ u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1))) P Q), Eq.{succ u1} (Quiver.Hom.{succ u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1))) (CategoryTheory.Idempotents.Karoubi.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P))) Q) (CategoryTheory.CategoryStruct.comp.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P))) P Q (CategoryTheory.Idempotents.Karoubi.decompId_p.{u2, u1} C _inst_1 P) f) (CategoryTheory.CategoryStruct.comp.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 u1} (CategoryTheory.Idempotents.Karoubi.{u2, u1} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q))) Q (CategoryTheory.Idempotents.Karoubi.Hom.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P))) (CategoryTheory.Idempotents.Karoubi.mk.{u2, u1} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.coe.proof_1.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (of_eq_true (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q))))) (Eq.trans.{1} Prop (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q))))) (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f)) True (congrArg.{succ u1, 1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) Prop (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (Eq.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f)) (Eq.trans.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)))) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (congrArg.{succ u1, succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q))) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f) (CategoryTheory.CategoryStruct.comp.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.CategoryStruct.id.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P))) (CategoryTheory.Category.comp_id.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f))) (CategoryTheory.Category.id_comp.{u1, u2} C _inst_1 (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f)))) (eq_self.{succ u1} (Quiver.Hom.{succ u1, u2} C (CategoryTheory.CategoryStruct.toQuiver.{u1, u2} C (CategoryTheory.Category.toCategoryStruct.{u1, u2} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u2, u1} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u2, u1} C _inst_1 P Q f))))) (CategoryTheory.Idempotents.Karoubi.decompId_p.{u2, u1} C _inst_1 Q))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.decomp_id_p_naturality CategoryTheory.Idempotents.Karoubi.decompId_p_naturalityₓ'. -/
theorem decompId_p_naturality {P Q : Karoubi C} (f : P ⟶ Q) :
    decompId_p P ≫ f =
      (⟨f.f, by erw [comp_id, id_comp]⟩ : (P.pt : Karoubi C) ⟶ Q.pt) ≫ decompId_p Q :=
  by
  ext
  simp only [comp_f, decomp_id_p_f, karoubi.comp_p, karoubi.p_comp]
#align category_theory.idempotents.karoubi.decomp_id_p_naturality CategoryTheory.Idempotents.Karoubi.decompId_p_naturality

/- warning: category_theory.idempotents.karoubi.zsmul_hom -> CategoryTheory.Idempotents.Karoubi.zsmul_hom is a dubious translation:
lean 3 declaration is
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] [_inst_2 : CategoryTheory.Preadditive.{u2, u1} C _inst_1] {P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} (n : Int) (f : Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P Q), Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q (SMul.smul.{0, u2} Int (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P Q) (SubNegMonoid.SMulInt.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P Q) (AddGroup.toSubNegMonoid.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P Q) (AddCommGroup.toAddGroup.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.CategoryTheory.category.{u1, u2} C _inst_1))) P Q) (CategoryTheory.Idempotents.Quiver.Hom.addCommGroup.{u1, u2} C _inst_1 _inst_2 P Q)))) n f)) (SMul.smul.{0, u2} Int (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (SubNegMonoid.SMulInt.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (AddGroup.toSubNegMonoid.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (AddCommGroup.toAddGroup.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q)) (CategoryTheory.Preadditive.homGroup.{u2, u1} C _inst_1 _inst_2 (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.x.{u1, u2} C _inst_1 Q))))) n (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f))
but is expected to have type
  forall {C : Type.{u1}} [_inst_1 : CategoryTheory.Category.{u2, u1} C] [_inst_2 : CategoryTheory.Preadditive.{u2, u1} C _inst_1] {P : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} {Q : CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1} (n : Int) (f : Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q), Eq.{succ u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)) (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q (HSMul.hSMul.{0, u2, u2} Int (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (instHSMul.{0, u2} Int (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (SubNegMonoid.SMulInt.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (AddGroup.toSubNegMonoid.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (AddCommGroup.toAddGroup.{u2} (Quiver.Hom.{succ u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 u2} (CategoryTheory.Idempotents.Karoubi.{u1, u2} C _inst_1) (CategoryTheory.Idempotents.Karoubi.instCategoryKaroubi.{u1, u2} C _inst_1))) P Q) (CategoryTheory.Idempotents.instAddCommGroupHom.{u1, u2} C _inst_1 _inst_2 P Q))))) n f)) (HSMul.hSMul.{0, u2, u2} Int (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)) (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)) (instHSMul.{0, u2} Int (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)) (SubNegMonoid.SMulInt.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)) (AddGroup.toSubNegMonoid.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)) (AddCommGroup.toAddGroup.{u2} (Quiver.Hom.{succ u2, u1} C (CategoryTheory.CategoryStruct.toQuiver.{u2, u1} C (CategoryTheory.Category.toCategoryStruct.{u2, u1} C _inst_1)) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)) (CategoryTheory.Preadditive.homGroup.{u2, u1} C _inst_1 _inst_2 (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 P) (CategoryTheory.Idempotents.Karoubi.X.{u1, u2} C _inst_1 Q)))))) n (CategoryTheory.Idempotents.Karoubi.Hom.f.{u1, u2} C _inst_1 P Q f))
Case conversion may be inaccurate. Consider using '#align category_theory.idempotents.karoubi.zsmul_hom CategoryTheory.Idempotents.Karoubi.zsmul_homₓ'. -/
@[simp]
theorem zsmul_hom [Preadditive C] {P Q : Karoubi C} (n : ℤ) (f : P ⟶ Q) : (n • f).f = n • f.f :=
  map_zsmul (inclusionHom P Q) n f
#align category_theory.idempotents.karoubi.zsmul_hom CategoryTheory.Idempotents.Karoubi.zsmul_hom

end Karoubi

end Idempotents

end CategoryTheory

