/-
Copyright (c) 2021 Eric Wieser. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Eric Wieser

! This file was ported from Lean 3 source module algebra.direct_sum.ring
! leanprover-community/mathlib commit 50251fd6309cca5ca2e747882ffecd2729f38c5d
! Please do not edit these lines, except to modify the commit id
! if you have ported upstream changes.
-/
import Mathbin.Algebra.GradedMonoid
import Mathbin.Algebra.DirectSum.Basic

/-!
# Additively-graded multiplicative structures on `⨁ i, A i`

> THIS FILE IS SYNCHRONIZED WITH MATHLIB4.
> Any changes to this file require a corresponding PR to mathlib4.

This module provides a set of heterogeneous typeclasses for defining a multiplicative structure
over `⨁ i, A i` such that `(*) : A i → A j → A (i + j)`; that is to say, `A` forms an
additively-graded ring. The typeclasses are:

* `direct_sum.gnon_unital_non_assoc_semiring A`
* `direct_sum.gsemiring A`
* `direct_sum.gring A`
* `direct_sum.gcomm_semiring A`
* `direct_sum.gcomm_ring A`

Respectively, these imbue the external direct sum `⨁ i, A i` with:

* `direct_sum.non_unital_non_assoc_semiring`, `direct_sum.non_unital_non_assoc_ring`
* `direct_sum.semiring`
* `direct_sum.ring`
* `direct_sum.comm_semiring`
* `direct_sum.comm_ring`

the base ring `A 0` with:

* `direct_sum.grade_zero.non_unital_non_assoc_semiring`,
  `direct_sum.grade_zero.non_unital_non_assoc_ring`
* `direct_sum.grade_zero.semiring`
* `direct_sum.grade_zero.ring`
* `direct_sum.grade_zero.comm_semiring`
* `direct_sum.grade_zero.comm_ring`

and the `i`th grade `A i` with `A 0`-actions (`•`) defined as left-multiplication:

* `direct_sum.grade_zero.has_smul (A 0)`, `direct_sum.grade_zero.smul_with_zero (A 0)`
* `direct_sum.grade_zero.module (A 0)`
* (nothing)
* (nothing)
* (nothing)

Note that in the presence of these instances, `⨁ i, A i` itself inherits an `A 0`-action.

`direct_sum.of_zero_ring_hom : A 0 →+* ⨁ i, A i` provides `direct_sum.of A 0` as a ring
homomorphism.

`direct_sum.to_semiring` extends `direct_sum.to_add_monoid` to produce a `ring_hom`.

## Direct sums of subobjects

Additionally, this module provides helper functions to construct `gsemiring` and `gcomm_semiring`
instances for:

* `A : ι → submonoid S`:
  `direct_sum.gsemiring.of_add_submonoids`, `direct_sum.gcomm_semiring.of_add_submonoids`.
* `A : ι → subgroup S`:
  `direct_sum.gsemiring.of_add_subgroups`, `direct_sum.gcomm_semiring.of_add_subgroups`.
* `A : ι → submodule S`:
  `direct_sum.gsemiring.of_submodules`, `direct_sum.gcomm_semiring.of_submodules`.

If `complete_lattice.independent (set.range A)`, these provide a gradation of `⨆ i, A i`, and the
mapping `⨁ i, A i →+ ⨆ i, A i` can be obtained as
`direct_sum.to_monoid (λ i, add_submonoid.inclusion $ le_supr A i)`.

## tags

graded ring, filtered ring, direct sum, add_submonoid
-/


variable {ι : Type _} [DecidableEq ι]

namespace DirectSum

open DirectSum

/-! ### Typeclasses -/


section Defs

variable (A : ι → Type _)

/- warning: direct_sum.gnon_unital_non_assoc_semiring -> DirectSum.GNonUnitalNonAssocSemiring is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] (A : ι -> Type.{u2}) [_inst_2 : Add.{u1} ι] [_inst_3 : forall (i : ι), AddCommMonoid.{u2} (A i)], Sort.{max (succ u1) (succ u2)}
but is expected to have type
  forall {ι : Type.{u1}} (_inst_1 : ι -> Type.{u2}) [A : Add.{u1} ι] [_inst_2 : forall (i : ι), AddCommMonoid.{u2} (_inst_1 i)], Sort.{max (succ u1) (succ u2)}
Case conversion may be inaccurate. Consider using '#align direct_sum.gnon_unital_non_assoc_semiring DirectSum.GNonUnitalNonAssocSemiringₓ'. -/
/-- A graded version of `non_unital_non_assoc_semiring`. -/
class GNonUnitalNonAssocSemiring [Add ι] [∀ i, AddCommMonoid (A i)] extends
  GradedMonoid.GMul A where
  mul_zero : ∀ {i j} (a : A i), mul a (0 : A j) = 0
  zero_mul : ∀ {i j} (b : A j), mul (0 : A i) b = 0
  mul_add : ∀ {i j} (a : A i) (b c : A j), mul a (b + c) = mul a b + mul a c
  add_mul : ∀ {i j} (a b : A i) (c : A j), mul (a + b) c = mul a c + mul b c
#align direct_sum.gnon_unital_non_assoc_semiring DirectSum.GNonUnitalNonAssocSemiring

end Defs

section Defs

variable (A : ι → Type _)

/- warning: direct_sum.gsemiring -> DirectSum.GSemiring is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] (A : ι -> Type.{u2}) [_inst_2 : AddMonoid.{u1} ι] [_inst_3 : forall (i : ι), AddCommMonoid.{u2} (A i)], Sort.{max (succ u1) (succ u2)}
but is expected to have type
  forall {ι : Type.{u1}} (_inst_1 : ι -> Type.{u2}) [A : AddMonoid.{u1} ι] [_inst_2 : forall (i : ι), AddCommMonoid.{u2} (_inst_1 i)], Sort.{max (succ u1) (succ u2)}
Case conversion may be inaccurate. Consider using '#align direct_sum.gsemiring DirectSum.GSemiringₓ'. -/
/-- A graded version of `semiring`. -/
class GSemiring [AddMonoid ι] [∀ i, AddCommMonoid (A i)] extends GNonUnitalNonAssocSemiring A,
  GradedMonoid.GMonoid A where
  natCast : ℕ → A 0
  natCast_zero : nat_cast 0 = 0
  natCast_succ : ∀ n : ℕ, nat_cast (n + 1) = nat_cast n + GradedMonoid.GOne.one
#align direct_sum.gsemiring DirectSum.GSemiring

/- warning: direct_sum.gcomm_semiring -> DirectSum.GCommSemiring is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] (A : ι -> Type.{u2}) [_inst_2 : AddCommMonoid.{u1} ι] [_inst_3 : forall (i : ι), AddCommMonoid.{u2} (A i)], Sort.{max (succ u1) (succ u2)}
but is expected to have type
  forall {ι : Type.{u1}} (_inst_1 : ι -> Type.{u2}) [A : AddCommMonoid.{u1} ι] [_inst_2 : forall (i : ι), AddCommMonoid.{u2} (_inst_1 i)], Sort.{max (succ u1) (succ u2)}
Case conversion may be inaccurate. Consider using '#align direct_sum.gcomm_semiring DirectSum.GCommSemiringₓ'. -/
/-- A graded version of `comm_semiring`. -/
class GCommSemiring [AddCommMonoid ι] [∀ i, AddCommMonoid (A i)] extends GSemiring A,
  GradedMonoid.GCommMonoid A
#align direct_sum.gcomm_semiring DirectSum.GCommSemiring

/- warning: direct_sum.gring -> DirectSum.GRing is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] (A : ι -> Type.{u2}) [_inst_2 : AddMonoid.{u1} ι] [_inst_3 : forall (i : ι), AddCommGroup.{u2} (A i)], Sort.{max (succ u1) (succ u2)}
but is expected to have type
  forall {ι : Type.{u1}} (_inst_1 : ι -> Type.{u2}) [A : AddMonoid.{u1} ι] [_inst_2 : forall (i : ι), AddCommGroup.{u2} (_inst_1 i)], Sort.{max (succ u1) (succ u2)}
Case conversion may be inaccurate. Consider using '#align direct_sum.gring DirectSum.GRingₓ'. -/
/-- A graded version of `ring`. -/
class GRing [AddMonoid ι] [∀ i, AddCommGroup (A i)] extends GSemiring A where
  intCast : ℤ → A 0
  intCast_ofNat : ∀ n : ℕ, int_cast n = nat_cast n
  intCast_negSucc : ∀ n : ℕ, int_cast (-(n + 1 : ℕ)) = -nat_cast (n + 1 : ℕ)
#align direct_sum.gring DirectSum.GRing

/- warning: direct_sum.gcomm_ring -> DirectSum.GCommRing is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] (A : ι -> Type.{u2}) [_inst_2 : AddCommMonoid.{u1} ι] [_inst_3 : forall (i : ι), AddCommGroup.{u2} (A i)], Sort.{max (succ u1) (succ u2)}
but is expected to have type
  forall {ι : Type.{u1}} (_inst_1 : ι -> Type.{u2}) [A : AddCommMonoid.{u1} ι] [_inst_2 : forall (i : ι), AddCommGroup.{u2} (_inst_1 i)], Sort.{max (succ u1) (succ u2)}
Case conversion may be inaccurate. Consider using '#align direct_sum.gcomm_ring DirectSum.GCommRingₓ'. -/
/-- A graded version of `comm_ring`. -/
class GCommRing [AddCommMonoid ι] [∀ i, AddCommGroup (A i)] extends GRing A, GCommSemiring A
#align direct_sum.gcomm_ring DirectSum.GCommRing

end Defs

/- warning: direct_sum.of_eq_of_graded_monoid_eq -> DirectSum.of_eq_of_gradedMonoid_eq is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] {A : ι -> Type.{u2}} [_inst_2 : forall (i : ι), AddCommMonoid.{u2} (A i)] {i : ι} {j : ι} {a : A i} {b : A j}, (Eq.{max (succ u1) (succ u2)} (GradedMonoid.{u1, u2} ι (fun {i : ι} => A i)) (GradedMonoid.mk.{u1, u2} ι (fun {i : ι} => A i) i a) (GradedMonoid.mk.{u1, u2} ι (fun {i : ι} => A i) j b)) -> (Eq.{succ (max u1 u2)} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) ((fun (i : ι) => _inst_2 i) i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) ((fun (i : ι) => _inst_2 i) i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) => (A i) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) ((fun (i : ι) => _inst_2 i) i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) i) a) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A j) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) ((fun (i : ι) => _inst_2 i) j))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A j) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) ((fun (i : ι) => _inst_2 i) j))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) => (A j) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A j) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) ((fun (i : ι) => _inst_2 i) j))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) j) b))
but is expected to have type
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] {A : ι -> Type.{u2}} [_inst_2 : forall (i : ι), AddCommMonoid.{u2} (A i)] {i : ι} {j : ι} {a : A i} {b : A j}, (Eq.{max (succ u1) (succ u2)} (GradedMonoid.{u1, u2} ι A) (GradedMonoid.mk.{u1, u2} ι A i a) (GradedMonoid.mk.{u1, u2} ι A j b)) -> (Eq.{max (succ u1) (succ u2)} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) a) (FunLike.coe.{max (succ u1) (succ u2), succ u2, max (succ u1) (succ u2)} (AddMonoidHom.{u2, max u2 u1} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (fun (_x : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) _x) (AddHomClass.toFunLike.{max u1 u2, u2, max u1 u2} (AddMonoidHom.{u2, max u2 u1} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddZeroClass.toAdd.{u2} (A i) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i)))) (AddZeroClass.toAdd.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (AddMonoidHomClass.toAddHomClass.{max u1 u2, u2, max u1 u2} (AddMonoidHom.{u2, max u2 u1} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoidHom.addMonoidHomClass.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) i) a) (FunLike.coe.{max (succ u1) (succ u2), succ u2, max (succ u1) (succ u2)} (AddMonoidHom.{u2, max u2 u1} (A j) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A j) (fun (_x : A j) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A j) => DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) _x) (AddHomClass.toFunLike.{max u1 u2, u2, max u1 u2} (AddMonoidHom.{u2, max u2 u1} (A j) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A j) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddZeroClass.toAdd.{u2} (A j) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_2 j)))) (AddZeroClass.toAdd.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (AddMonoidHomClass.toAddHomClass.{max u1 u2, u2, max u1 u2} (AddMonoidHom.{u2, max u2 u1} (A j) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A j) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoidHom.addMonoidHomClass.{u2, max u1 u2} (A j) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) j) b))
Case conversion may be inaccurate. Consider using '#align direct_sum.of_eq_of_graded_monoid_eq DirectSum.of_eq_of_gradedMonoid_eqₓ'. -/
theorem of_eq_of_gradedMonoid_eq {A : ι → Type _} [∀ i : ι, AddCommMonoid (A i)] {i j : ι} {a : A i}
    {b : A j} (h : GradedMonoid.mk i a = GradedMonoid.mk j b) :
    DirectSum.of A i a = DirectSum.of A j b :=
  Dfinsupp.single_eq_of_sigma_eq h
#align direct_sum.of_eq_of_graded_monoid_eq DirectSum.of_eq_of_gradedMonoid_eq

variable (A : ι → Type _)

/-! ### Instances for `⨁ i, A i` -/


section One

variable [Zero ι] [GradedMonoid.GOne A] [∀ i, AddCommMonoid (A i)]

instance : One (⨁ i, A i) where one := DirectSum.of (fun i => A i) 0 GradedMonoid.GOne.one

end One

section Mul

variable [Add ι] [∀ i, AddCommMonoid (A i)] [GNonUnitalNonAssocSemiring A]

open AddMonoidHom (flip_apply coe_comp compHom_apply_apply)

/- warning: direct_sum.gmul_hom -> DirectSum.gMulHom is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] (A : ι -> Type.{u2}) [_inst_2 : Add.{u1} ι] [_inst_3 : forall (i : ι), AddCommMonoid.{u2} (A i)] [_inst_4 : DirectSum.GNonUnitalNonAssocSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_2 (fun (i : ι) => _inst_3 i)] {i : ι} {j : ι}, AddMonoidHom.{u2, u2} (A i) (AddMonoidHom.{u2, u2} (A j) (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j))))) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{u2} (AddMonoidHom.{u2, u2} (A j) (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j))))) (AddCommMonoid.toAddMonoid.{u2} (AddMonoidHom.{u2, u2} (A j) (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j))))) (AddMonoidHom.addCommMonoid.{u2, u2} (A j) (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_3 j))) (_inst_3 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)))))
but is expected to have type
  forall {ι : Type.{u1}} (_inst_1 : ι -> Type.{u2}) [A : Add.{u1} ι] [_inst_2 : forall (i : ι), AddCommMonoid.{u2} (_inst_1 i)] [_inst_3 : DirectSum.GNonUnitalNonAssocSemiring.{u1, u2} ι _inst_1 A (fun (i : ι) => _inst_2 i)] {_inst_4 : ι} {i : ι}, AddMonoidHom.{u2, u2} (_inst_1 _inst_4) (AddMonoidHom.{u2, u2} (_inst_1 i) (_inst_1 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι A) _inst_4 i)) (AddMonoid.toAddZeroClass.{u2} (_inst_1 i) (AddCommMonoid.toAddMonoid.{u2} (_inst_1 i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} (_inst_1 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι A) _inst_4 i)) (AddCommMonoid.toAddMonoid.{u2} (_inst_1 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι A) _inst_4 i)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι A) _inst_4 i))))) (AddMonoid.toAddZeroClass.{u2} (_inst_1 _inst_4) (AddCommMonoid.toAddMonoid.{u2} (_inst_1 _inst_4) (_inst_2 _inst_4))) (AddMonoid.toAddZeroClass.{u2} (AddMonoidHom.{u2, u2} (_inst_1 i) (_inst_1 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι A) _inst_4 i)) (AddMonoid.toAddZeroClass.{u2} (_inst_1 i) (AddCommMonoid.toAddMonoid.{u2} (_inst_1 i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} (_inst_1 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι A) _inst_4 i)) (AddCommMonoid.toAddMonoid.{u2} (_inst_1 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι A) _inst_4 i)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι A) _inst_4 i))))) (AddCommMonoid.toAddMonoid.{u2} (AddMonoidHom.{u2, u2} (_inst_1 i) (_inst_1 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι A) _inst_4 i)) (AddMonoid.toAddZeroClass.{u2} (_inst_1 i) (AddCommMonoid.toAddMonoid.{u2} (_inst_1 i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} (_inst_1 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι A) _inst_4 i)) (AddCommMonoid.toAddMonoid.{u2} (_inst_1 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι A) _inst_4 i)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι A) _inst_4 i))))) (AddMonoidHom.addCommMonoid.{u2, u2} (_inst_1 i) (_inst_1 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι A) _inst_4 i)) (AddMonoid.toAddZeroClass.{u2} (_inst_1 i) (AddCommMonoid.toAddMonoid.{u2} (_inst_1 i) (_inst_2 i))) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι A) _inst_4 i)))))
Case conversion may be inaccurate. Consider using '#align direct_sum.gmul_hom DirectSum.gMulHomₓ'. -/
/-- The piecewise multiplication from the `has_mul` instance, as a bundled homomorphism. -/
@[simps]
def gMulHom {i j} : A i →+ A j →+ A (i + j)
    where
  toFun a :=
    { toFun := fun b => GradedMonoid.GMul.mul a b
      map_zero' := GNonUnitalNonAssocSemiring.mul_zero _
      map_add' := GNonUnitalNonAssocSemiring.mul_add _ }
  map_zero' := AddMonoidHom.ext fun a => GNonUnitalNonAssocSemiring.zero_mul a
  map_add' a₁ a₂ := AddMonoidHom.ext fun b => GNonUnitalNonAssocSemiring.add_mul _ _ _
#align direct_sum.gmul_hom DirectSum.gMulHom

#print DirectSum.mulHom /-
/-- The multiplication from the `has_mul` instance, as a bundled homomorphism. -/
def mulHom : (⨁ i, A i) →+ (⨁ i, A i) →+ ⨁ i, A i :=
  DirectSum.toAddMonoid fun i =>
    AddMonoidHom.flip <|
      DirectSum.toAddMonoid fun j =>
        AddMonoidHom.flip <| (DirectSum.of A _).compHom.comp <| gMulHom A
#align direct_sum.mul_hom DirectSum.mulHom
-/

instance : NonUnitalNonAssocSemiring (⨁ i, A i) :=
  { DirectSum.addCommMonoid _ _ with
    mul := fun a b => mulHom A a b
    zero := 0
    add := (· + ·)
    zero_mul := fun a => by simp only [AddMonoidHom.map_zero, AddMonoidHom.zero_apply]
    mul_zero := fun a => by simp only [AddMonoidHom.map_zero]
    left_distrib := fun a b c => by simp only [AddMonoidHom.map_add]
    right_distrib := fun a b c => by simp only [AddMonoidHom.map_add, AddMonoidHom.add_apply] }

variable {A}

/- warning: direct_sum.mul_hom_of_of -> DirectSum.mulHom_of_of is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] {A : ι -> Type.{u2}} [_inst_2 : Add.{u1} ι] [_inst_3 : forall (i : ι), AddCommMonoid.{u2} (A i)] [_inst_4 : DirectSum.GNonUnitalNonAssocSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_2 (fun (i : ι) => _inst_3 i)] {i : ι} {j : ι} (a : A i) (b : A j), Eq.{succ (max u1 u2)} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (coeFn.{succ (max u1 u2), succ (max u1 u2)} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (fun (_x : AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) => (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))) (AddMonoidHom.hasCoeToFun.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (coeFn.{succ (max u1 u2), succ (max u1 u2)} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (AddCommMonoid.toAddMonoid.{max u1 u2} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (AddMonoidHom.addCommMonoid.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))))) (fun (_x : AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (AddCommMonoid.toAddMonoid.{max u1 u2} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (AddMonoidHom.addCommMonoid.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))))) => (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) -> (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))))) (AddMonoidHom.hasCoeToFun.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (AddCommMonoid.toAddMonoid.{max u1 u2} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (AddMonoidHom.addCommMonoid.{max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)))))) (DirectSum.mulHom.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_2 (fun (i : ι) => _inst_3 i) _inst_4) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) ((fun (i : ι) => _inst_3 i) i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) ((fun (i : ι) => _inst_3 i) i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) => (A i) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) ((fun (i : ι) => _inst_3 i) i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun {i : ι} => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i) i) a)) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A j) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) ((fun (i : ι) => _inst_3 i) j))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A j) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) ((fun (i : ι) => _inst_3 i) j))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) => (A j) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A j) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) ((fun (i : ι) => _inst_3 i) j))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun {j : ι} => A j) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i) j) b)) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) ((fun (i : ι) => _inst_3 i) (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) ((fun (i : ι) => _inst_3 i) (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) => (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) ((fun (i : ι) => _inst_3 i) (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun {i : ι} => A i) (fun (i : ι) => (fun (i : ι) => _inst_3 i) i) (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (GradedMonoid.GMul.mul.{u1, u2} ι (fun {i : ι} => A i) _inst_2 (DirectSum.GNonUnitalNonAssocSemiring.toGhasMul.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun {i : ι} => A i) _inst_2 (fun (i : ι) => _inst_3 i) _inst_4) i j a b))
but is expected to have type
  forall {ι : Type.{u2}} [_inst_1 : DecidableEq.{succ u2} ι] {A : ι -> Type.{u1}} [_inst_2 : Add.{u2} ι] [_inst_3 : forall (i : ι), AddCommMonoid.{u1} (A i)] [_inst_4 : DirectSum.GNonUnitalNonAssocSemiring.{u2, u1} ι A _inst_2 (fun (i : ι) => _inst_3 i)] {i : ι} {j : ι} (a : A i) (b : A j), Eq.{max (succ u2) (succ u1)} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A j) (fun (a : A j) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A j) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{u1} (A j) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j)))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) j) b)) (FunLike.coe.{max (succ u2) (succ u1), max (succ u2) (succ u1), max (succ u2) (succ u1)} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) => AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (fun (a : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{u1} (A i) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i)))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) i) a)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (fun (_x : DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) _x) (AddHomClass.toFunLike.{max u2 u1, max u2 u1, max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) => AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (fun (a : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{u1} (A i) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i)))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) i) a)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, max u2 u1, max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) => AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (fun (a : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{u1} (A i) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i)))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) i) a)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{max u2 u1, max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (FunLike.coe.{max (succ u2) (succ u1), max (succ u2) (succ u1), max (succ u2) (succ u1)} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddCommMonoid.toAddMonoid.{max u2 u1} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHom.addCommMonoid.{max u2 u1, max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (fun (_x : DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) => AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) _x) (AddHomClass.toFunLike.{max u2 u1, max u2 u1, max u2 u1} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddCommMonoid.toAddMonoid.{max u2 u1} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHom.addCommMonoid.{max u2 u1, max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddZeroClass.toAdd.{max u2 u1} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoid.toAddZeroClass.{max u2 u1} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddCommMonoid.toAddMonoid.{max u2 u1} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHom.addCommMonoid.{max u2 u1, max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, max u2 u1, max u2 u1} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddCommMonoid.toAddMonoid.{max u2 u1} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHom.addCommMonoid.{max u2 u1, max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddCommMonoid.toAddMonoid.{max u2 u1} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHom.addCommMonoid.{max u2 u1, max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHom.addMonoidHomClass.{max u2 u1, max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddCommMonoid.toAddMonoid.{max u2 u1} (AddMonoidHom.{max u1 u2, max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHom.addCommMonoid.{max u2 u1, max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))))))) (DirectSum.mulHom.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_2 (fun (i : ι) => _inst_3 i) _inst_4) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (fun (_x : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) _x) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{u1} (A i) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i)))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) i) a)) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A j) (fun (_x : A j) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A j) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) _x) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{u1} (A j) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j)))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) j) b)) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (fun (_x : A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) _x) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (AddMonoid.toAddZeroClass.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j))))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (GradedMonoid.GMul.mul.{u2, u1} ι A _inst_2 (DirectSum.GNonUnitalNonAssocSemiring.toGMul.{u2, u1} ι A _inst_2 (fun (i : ι) => _inst_3 i) _inst_4) i j a b))
Case conversion may be inaccurate. Consider using '#align direct_sum.mul_hom_of_of DirectSum.mulHom_of_ofₓ'. -/
theorem mulHom_of_of {i j} (a : A i) (b : A j) :
    mulHom A (of _ i a) (of _ j b) = of _ (i + j) (GradedMonoid.GMul.mul a b) :=
  by
  unfold MulHom
  rw [to_add_monoid_of, flip_apply, to_add_monoid_of, flip_apply, coe_comp, Function.comp_apply,
    comp_hom_apply_apply, coe_comp, Function.comp_apply, gmul_hom_apply_apply]
#align direct_sum.mul_hom_of_of DirectSum.mulHom_of_of

/- warning: direct_sum.of_mul_of -> DirectSum.of_mul_of is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] {A : ι -> Type.{u2}} [_inst_2 : Add.{u1} ι] [_inst_3 : forall (i : ι), AddCommMonoid.{u2} (A i)] [_inst_4 : DirectSum.GNonUnitalNonAssocSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_2 (fun (i : ι) => _inst_3 i)] {i : ι} {j : ι} (a : A i) (b : A j), Eq.{succ (max u1 u2)} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (HMul.hMul.{max u1 u2, max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instHMul.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (Distrib.toHasMul.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (NonUnitalNonAssocSemiring.toDistrib.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.nonUnitalNonAssocSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) _inst_2 (fun (i : ι) => _inst_3 i) _inst_4)))) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) => (A i) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun {i : ι} => A i) (fun (i : ι) => _inst_3 i) i) a) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A j) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A j) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) => (A j) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A j) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun {j : ι} => A j) (fun (i : ι) => _inst_3 i) j) b)) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) => (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun {i : ι} => A i) (fun (i : ι) => _inst_3 i) (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι _inst_2) i j)) (GradedMonoid.GMul.mul.{u1, u2} ι (fun {i : ι} => A i) _inst_2 (DirectSum.GNonUnitalNonAssocSemiring.toGhasMul.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun {i : ι} => A i) _inst_2 (fun (i : ι) => _inst_3 i) _inst_4) i j a b))
but is expected to have type
  forall {ι : Type.{u2}} [_inst_1 : DecidableEq.{succ u2} ι] {A : ι -> Type.{u1}} [_inst_2 : Add.{u2} ι] [_inst_3 : forall (i : ι), AddCommMonoid.{u1} (A i)] [_inst_4 : DirectSum.GNonUnitalNonAssocSemiring.{u2, u1} ι A _inst_2 (fun (i : ι) => _inst_3 i)] {i : ι} {j : ι} (a : A i) (b : A j), Eq.{max (succ u2) (succ u1)} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) (HMul.hMul.{max u2 u1, max u2 u1, max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A j) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) b) ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) (instHMul.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) (NonUnitalNonAssocSemiring.toMul.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) (DirectSum.instNonUnitalNonAssocSemiringDirectSum.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) _inst_2 (fun (i : ι) => _inst_3 i) _inst_4))) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (fun (_x : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) _x) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{u1} (A i) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i)))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) i) a) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A j) (fun (_x : A j) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A j) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) _x) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{u1} (A j) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j)))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A j) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A j) (AddCommMonoid.toAddMonoid.{u1} (A j) (_inst_3 j))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) j) b)) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (fun (_x : A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) _x) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (AddMonoid.toAddZeroClass.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j))))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (AddCommMonoid.toAddMonoid.{u1} (A (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (_inst_3 (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) (HAdd.hAdd.{u2, u2, u2} ι ι ι (instHAdd.{u2} ι _inst_2) i j)) (GradedMonoid.GMul.mul.{u2, u1} ι A _inst_2 (DirectSum.GNonUnitalNonAssocSemiring.toGMul.{u2, u1} ι A _inst_2 (fun (i : ι) => _inst_3 i) _inst_4) i j a b))
Case conversion may be inaccurate. Consider using '#align direct_sum.of_mul_of DirectSum.of_mul_ofₓ'. -/
theorem of_mul_of {i j} (a : A i) (b : A j) :
    of _ i a * of _ j b = of _ (i + j) (GradedMonoid.GMul.mul a b) :=
  mulHom_of_of a b
#align direct_sum.of_mul_of DirectSum.of_mul_of

end Mul

section Semiring

variable [∀ i, AddCommMonoid (A i)] [AddMonoid ι] [GSemiring A]

open AddMonoidHom (flipHom coe_comp compHom_apply_apply flip_apply flipHom_apply)

/- warning: direct_sum.one_mul clashes with [anonymous] -> [anonymous]
Case conversion may be inaccurate. Consider using '#align direct_sum.one_mul [anonymous]ₓ'. -/
#print [anonymous] /-
private theorem [anonymous] (x : ⨁ i, A i) : 1 * x = x :=
  by
  suffices mulHom A 1 = AddMonoidHom.id (⨁ i, A i) from AddMonoidHom.congr_fun this x
  apply add_hom_ext; intro i xi
  unfold One.one
  rw [mul_hom_of_of]
  exact of_eq_of_graded_monoid_eq (one_mul <| GradedMonoid.mk i xi)
#align direct_sum.one_mul [anonymous]
-/

/- warning: direct_sum.mul_one clashes with [anonymous] -> [anonymous]
Case conversion may be inaccurate. Consider using '#align direct_sum.mul_one [anonymous]ₓ'. -/
#print [anonymous] /-
private theorem [anonymous] (x : ⨁ i, A i) : x * 1 = x :=
  by
  suffices (mulHom A).flip 1 = AddMonoidHom.id (⨁ i, A i) from AddMonoidHom.congr_fun this x
  apply add_hom_ext; intro i xi
  unfold One.one
  rw [flip_apply, mul_hom_of_of]
  exact of_eq_of_graded_monoid_eq (mul_one <| GradedMonoid.mk i xi)
#align direct_sum.mul_one [anonymous]
-/

/- warning: direct_sum.mul_assoc clashes with [anonymous] -> [anonymous]
Case conversion may be inaccurate. Consider using '#align direct_sum.mul_assoc [anonymous]ₓ'. -/
#print [anonymous] /-
private theorem [anonymous] (a b c : ⨁ i, A i) : a * b * c = a * (b * c) :=
  by
  suffices
    (-- `λ a b c, a * b * c` as a bundled hom
              mulHom
              A).compHom.comp
        (mulHom A) =
      (AddMonoidHom.compHom flipHom <|
          (-- `λ a b c, a * (b * c)` as a bundled hom
                    mulHom
                    A).flip.compHom.comp
            (mulHom A)).flip
    from AddMonoidHom.congr_fun (AddMonoidHom.congr_fun (AddMonoidHom.congr_fun this a) b) c
  ext (ai ax bi bx ci cx) : 6
  dsimp only [coe_comp, Function.comp_apply, comp_hom_apply_apply, flip_apply, flip_hom_apply]
  rw [mul_hom_of_of, mul_hom_of_of, mul_hom_of_of, mul_hom_of_of]
  exact of_eq_of_graded_monoid_eq (mul_assoc (GradedMonoid.mk ai ax) ⟨bi, bx⟩ ⟨ci, cx⟩)
#align direct_sum.mul_assoc [anonymous]
-/

#print DirectSum.semiring /-
/-- The `semiring` structure derived from `gsemiring A`. -/
instance semiring : Semiring (⨁ i, A i) :=
  { DirectSum.nonUnitalNonAssocSemiring _ with
    one := 1
    mul := (· * ·)
    zero := 0
    add := (· + ·)
    one_mul := one_mul A
    mul_one := mul_one A
    mul_assoc := mul_assoc A
    natCast := fun n => of _ _ (GSemiring.natCast n)
    natCast_zero := by rw [gsemiring.nat_cast_zero, map_zero]
    natCast_succ := fun n => by
      rw [gsemiring.nat_cast_succ, map_add]
      rfl }
#align direct_sum.semiring DirectSum.semiring
-/

/- warning: direct_sum.of_pow -> DirectSum.ofPow is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] (A : ι -> Type.{u2}) [_inst_2 : forall (i : ι), AddCommMonoid.{u2} (A i)] [_inst_3 : AddMonoid.{u1} ι] [_inst_4 : DirectSum.GSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_3 (fun (i : ι) => _inst_2 i)] {i : ι} (a : A i) (n : Nat), Eq.{succ (max u1 u2)} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (HPow.hPow.{max u1 u2, 0, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) Nat (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instHPow.{max u1 u2, 0} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) Nat (Monoid.Pow.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (MonoidWithZero.toMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Semiring.toMonoidWithZero.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4))))) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) => (A i) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun {i : ι} => A i) (fun (i : ι) => _inst_2 i) i) a) n) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A (SMul.smul.{0, u1} Nat ι (AddMonoid.SMul.{u1} ι _inst_3) n i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A (SMul.smul.{0, u1} Nat ι (AddMonoid.SMul.{u1} ι _inst_3) n i)) (AddCommMonoid.toAddMonoid.{u2} (A (SMul.smul.{0, u1} Nat ι (AddMonoid.SMul.{u1} ι _inst_3) n i)) (_inst_2 (SMul.smul.{0, u1} Nat ι (AddMonoid.SMul.{u1} ι _inst_3) n i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A (SMul.smul.{0, u1} Nat ι (AddMonoid.SMul.{u1} ι _inst_3) n i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A (SMul.smul.{0, u1} Nat ι (AddMonoid.SMul.{u1} ι _inst_3) n i)) (AddCommMonoid.toAddMonoid.{u2} (A (SMul.smul.{0, u1} Nat ι (AddMonoid.SMul.{u1} ι _inst_3) n i)) (_inst_2 (SMul.smul.{0, u1} Nat ι (AddMonoid.SMul.{u1} ι _inst_3) n i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) => (A (SMul.smul.{0, u1} Nat ι (AddMonoid.SMul.{u1} ι _inst_3) n i)) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A (SMul.smul.{0, u1} Nat ι (AddMonoid.SMul.{u1} ι _inst_3) n i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A (SMul.smul.{0, u1} Nat ι (AddMonoid.SMul.{u1} ι _inst_3) n i)) (AddCommMonoid.toAddMonoid.{u2} (A (SMul.smul.{0, u1} Nat ι (AddMonoid.SMul.{u1} ι _inst_3) n i)) (_inst_2 (SMul.smul.{0, u1} Nat ι (AddMonoid.SMul.{u1} ι _inst_3) n i)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun {i : ι} => A i) (fun (i : ι) => _inst_2 i) (SMul.smul.{0, u1} Nat ι (AddMonoid.SMul.{u1} ι _inst_3) n i)) (GradedMonoid.GMonoid.gnpow.{u1, u2} ι (fun {i : ι} => A i) _inst_3 (DirectSum.GSemiring.toGmonoid.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun {i : ι} => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4) n i a))
but is expected to have type
  forall {ι : Type.{u2}} [_inst_1 : DecidableEq.{succ u2} ι] (A : ι -> Type.{u1}) [_inst_2 : forall (i : ι), AddCommMonoid.{u1} (A i)] [_inst_3 : AddMonoid.{u2} ι] [_inst_4 : DirectSum.GSemiring.{u2, u1} ι A _inst_3 (fun (i : ι) => _inst_2 i)] {i : ι} (a : A i) (n : Nat), Eq.{max (succ u2) (succ u1)} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) a) (HPow.hPow.{max u2 u1, 0, max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) a) Nat ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) a) (instHPow.{max u2 u1, 0} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) a) Nat (Monoid.Pow.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) a) (MonoidWithZero.toMonoid.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) a) (Semiring.toMonoidWithZero.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) a) (DirectSum.semiring.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4))))) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (fun (_x : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) _x) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddZeroClass.toAdd.{u1} (A i) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_2 i)))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) i) a) n) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (AddCommMonoid.toAddMonoid.{u1} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (_inst_2 (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (fun (_x : A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) _x) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (AddCommMonoid.toAddMonoid.{u1} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (_inst_2 (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddZeroClass.toAdd.{u1} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (AddMonoid.toAddZeroClass.{u1} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (AddCommMonoid.toAddMonoid.{u1} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (_inst_2 (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i))))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (AddCommMonoid.toAddMonoid.{u1} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (_inst_2 (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (AddCommMonoid.toAddMonoid.{u1} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (_inst_2 (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (AddCommMonoid.toAddMonoid.{u1} (A (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (_inst_2 (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) (HSMul.hSMul.{0, u2, u2} Nat ι ι (instHSMul.{0, u2} Nat ι (AddMonoid.SMul.{u2} ι _inst_3)) n i)) (GradedMonoid.GMonoid.gnpow.{u2, u1} ι A _inst_3 (DirectSum.GSemiring.toGMonoid.{u2, u1} ι A _inst_3 (fun (i : ι) => _inst_2 i) _inst_4) n i a))
Case conversion may be inaccurate. Consider using '#align direct_sum.of_pow DirectSum.ofPowₓ'. -/
theorem ofPow {i} (a : A i) (n : ℕ) :
    of _ i a ^ n = of _ (n • i) (GradedMonoid.GMonoid.gnpow _ a) :=
  by
  induction' n with n
  · exact of_eq_of_graded_monoid_eq (pow_zero <| GradedMonoid.mk _ a).symm
  · rw [pow_succ, n_ih, of_mul_of]
    exact of_eq_of_graded_monoid_eq (pow_succ (GradedMonoid.mk _ a) n).symm
#align direct_sum.of_pow DirectSum.ofPow

/- warning: direct_sum.of_list_dprod -> DirectSum.ofList_dProd is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] (A : ι -> Type.{u2}) [_inst_2 : forall (i : ι), AddCommMonoid.{u2} (A i)] [_inst_3 : AddMonoid.{u1} ι] [_inst_4 : DirectSum.GSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_3 (fun (i : ι) => _inst_2 i)] {α : Type.{u3}} (l : List.{u3} α) (fι : α -> ι) (fA : forall (a : α), A (fι a)), Eq.{succ (max u1 u2)} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A (List.dProdIndex.{u1, u3} ι α _inst_3 l fι)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (List.dProdIndex.{u1, u3} ι α _inst_3 l fι)) (AddCommMonoid.toAddMonoid.{u2} (A (List.dProdIndex.{u1, u3} ι α _inst_3 l fι)) ((fun (i : ι) => _inst_2 i) (List.dProdIndex.{u1, u3} ι α _inst_3 l fι)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A (List.dProdIndex.{u1, u3} ι α _inst_3 l fι)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (List.dProdIndex.{u1, u3} ι α _inst_3 l fι)) (AddCommMonoid.toAddMonoid.{u2} (A (List.dProdIndex.{u1, u3} ι α _inst_3 l fι)) ((fun (i : ι) => _inst_2 i) (List.dProdIndex.{u1, u3} ι α _inst_3 l fι)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) => (A (List.dProdIndex.{u1, u3} ι α _inst_3 l fι)) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A (List.dProdIndex.{u1, u3} ι α _inst_3 l fι)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (List.dProdIndex.{u1, u3} ι α _inst_3 l fι)) (AddCommMonoid.toAddMonoid.{u2} (A (List.dProdIndex.{u1, u3} ι α _inst_3 l fι)) ((fun (i : ι) => _inst_2 i) (List.dProdIndex.{u1, u3} ι α _inst_3 l fι)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) (List.dProdIndex.{u1, u3} ι α _inst_3 l fι)) (List.dProd.{u1, u3, u2} ι α A _inst_3 (DirectSum.GSemiring.toGmonoid.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_3 (fun (i : ι) => _inst_2 i) _inst_4) l fι fA)) (List.prod.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (Distrib.toHasMul.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (NonUnitalNonAssocSemiring.toDistrib.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.nonUnitalNonAssocSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i) (DirectSum.GSemiring.toGnonUnitalNonAssocSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) _inst_3 (fun (i : ι) => (fun (i : ι) => _inst_2 i) i) _inst_4)))) (DirectSum.hasOne.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (GradedMonoid.GMonoid.toGhasOne.{u1, u2} ι (fun (i : ι) => A i) _inst_3 (DirectSum.GSemiring.toGmonoid.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4)) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (List.map.{u3, max u1 u2} α (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (fun (a : α) => coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A (fι a)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (fι a)) (AddCommMonoid.toAddMonoid.{u2} (A (fι a)) ((fun (i : ι) => _inst_2 i) (fι a)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A (fι a)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (fι a)) (AddCommMonoid.toAddMonoid.{u2} (A (fι a)) ((fun (i : ι) => _inst_2 i) (fι a)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) => (A (fι a)) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A (fι a)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (fι a)) (AddCommMonoid.toAddMonoid.{u2} (A (fι a)) ((fun (i : ι) => _inst_2 i) (fι a)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) (fι a)) (fA a)) l))
but is expected to have type
  forall {ι : Type.{u2}} [_inst_1 : DecidableEq.{succ u2} ι] (A : ι -> Type.{u1}) [_inst_2 : forall (i : ι), AddCommMonoid.{u1} (A i)] [_inst_3 : AddMonoid.{u2} ι] [_inst_4 : DirectSum.GSemiring.{u2, u1} ι A _inst_3 (fun (i : ι) => _inst_2 i)] {α : Type.{u3}} (l : List.{u3} α) (fι : α -> ι) (fA : forall (a : α), A (fι a)), Eq.{max (succ u2) (succ u1)} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (List.dProd.{u2, u3, u1} ι α A _inst_3 (DirectSum.GSemiring.toGMonoid.{u2, u1} ι A _inst_3 (fun (i : ι) => _inst_2 i) _inst_4) l fι fA)) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (AddCommMonoid.toAddMonoid.{u1} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (_inst_2 (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (fun (_x : A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) _x) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (AddCommMonoid.toAddMonoid.{u1} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (_inst_2 (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddZeroClass.toAdd.{u1} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (AddMonoid.toAddZeroClass.{u1} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (AddCommMonoid.toAddMonoid.{u1} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (_inst_2 (List.dProdIndex.{u2, u3} ι α _inst_3 l fι))))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (AddCommMonoid.toAddMonoid.{u1} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (_inst_2 (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (AddCommMonoid.toAddMonoid.{u1} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (_inst_2 (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (AddCommMonoid.toAddMonoid.{u1} (A (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (_inst_2 (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) (List.dProdIndex.{u2, u3} ι α _inst_3 l fι)) (List.dProd.{u2, u3, u1} ι α A _inst_3 (DirectSum.GSemiring.toGMonoid.{u2, u1} ι A _inst_3 (fun (i : ι) => _inst_2 i) _inst_4) l fι fA)) (List.prod.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (NonUnitalNonAssocSemiring.toMul.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.instNonUnitalNonAssocSemiringDirectSum.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (AddZeroClass.toAdd.{u2} ι (AddMonoid.toAddZeroClass.{u2} ι _inst_3)) (fun (i : ι) => _inst_2 i) (DirectSum.GSemiring.toGNonUnitalNonAssocSemiring.{u2, u1} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4))) (DirectSum.instOneDirectSum.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (AddMonoid.toZero.{u2} ι _inst_3) (DirectSum.GSemiring.toGOne.{u2, u1} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4) (fun (i : ι) => _inst_2 i)) (List.map.{u3, max u2 u1} α (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (fun (a : α) => FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A (fι a)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (fι a)) (AddCommMonoid.toAddMonoid.{u1} (A (fι a)) (_inst_2 (fι a)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (fι a)) (fun (_x : A (fι a)) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (fι a)) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) _x) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (fι a)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (fι a)) (AddCommMonoid.toAddMonoid.{u1} (A (fι a)) (_inst_2 (fι a)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (fι a)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddZeroClass.toAdd.{u1} (A (fι a)) (AddMonoid.toAddZeroClass.{u1} (A (fι a)) (AddCommMonoid.toAddMonoid.{u1} (A (fι a)) (_inst_2 (fι a))))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (fι a)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (fι a)) (AddCommMonoid.toAddMonoid.{u1} (A (fι a)) (_inst_2 (fι a)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (fι a)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (fι a)) (AddCommMonoid.toAddMonoid.{u1} (A (fι a)) (_inst_2 (fι a)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A (fι a)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (fι a)) (AddCommMonoid.toAddMonoid.{u1} (A (fι a)) (_inst_2 (fι a)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) (fι a)) (fA a)) l))
Case conversion may be inaccurate. Consider using '#align direct_sum.of_list_dprod DirectSum.ofList_dProdₓ'. -/
theorem ofList_dProd {α} (l : List α) (fι : α → ι) (fA : ∀ a, A (fι a)) :
    of A _ (l.dProd fι fA) = (l.map fun a => of A (fι a) (fA a)).Prod :=
  by
  induction l
  · simp only [List.map_nil, List.prod_nil, List.dProd_nil]
    rfl
  · simp only [List.map_cons, List.prod_cons, List.dProd_cons, ← l_ih, DirectSum.of_mul_of]
    rfl
#align direct_sum.of_list_dprod DirectSum.ofList_dProd

/- warning: direct_sum.list_prod_of_fn_of_eq_dprod -> DirectSum.list_prod_ofFn_of_eq_dProd is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] (A : ι -> Type.{u2}) [_inst_2 : forall (i : ι), AddCommMonoid.{u2} (A i)] [_inst_3 : AddMonoid.{u1} ι] [_inst_4 : DirectSum.GSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_3 (fun (i : ι) => _inst_2 i)] (n : Nat) (fι : (Fin n) -> ι) (fA : forall (a : Fin n), A (fι a)), Eq.{succ (max u1 u2)} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (List.prod.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (Distrib.toHasMul.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (NonUnitalNonAssocSemiring.toDistrib.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.nonUnitalNonAssocSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i) (DirectSum.GSemiring.toGnonUnitalNonAssocSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) _inst_3 (fun (i : ι) => (fun (i : ι) => _inst_2 i) i) _inst_4)))) (DirectSum.hasOne.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (GradedMonoid.GMonoid.toGhasOne.{u1, u2} ι (fun (i : ι) => A i) _inst_3 (DirectSum.GSemiring.toGmonoid.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4)) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (List.ofFn.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) n (fun (a : Fin n) => coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A (fι a)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (fι a)) (AddCommMonoid.toAddMonoid.{u2} (A (fι a)) ((fun (i : ι) => _inst_2 i) (fι a)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A (fι a)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (fι a)) (AddCommMonoid.toAddMonoid.{u2} (A (fι a)) ((fun (i : ι) => _inst_2 i) (fι a)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) => (A (fι a)) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A (fι a)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (fι a)) (AddCommMonoid.toAddMonoid.{u2} (A (fι a)) ((fun (i : ι) => _inst_2 i) (fι a)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) (fι a)) (fA a)))) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A (List.dProdIndex.{u1, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (List.dProdIndex.{u1, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (AddCommMonoid.toAddMonoid.{u2} (A (List.dProdIndex.{u1, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) ((fun (i : ι) => _inst_2 i) (List.dProdIndex.{u1, 0} ι (Fin n) _inst_3 (List.finRange n) fι)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A (List.dProdIndex.{u1, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (List.dProdIndex.{u1, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (AddCommMonoid.toAddMonoid.{u2} (A (List.dProdIndex.{u1, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) ((fun (i : ι) => _inst_2 i) (List.dProdIndex.{u1, 0} ι (Fin n) _inst_3 (List.finRange n) fι)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) => (A (List.dProdIndex.{u1, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A (List.dProdIndex.{u1, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (List.dProdIndex.{u1, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (AddCommMonoid.toAddMonoid.{u2} (A (List.dProdIndex.{u1, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) ((fun (i : ι) => _inst_2 i) (List.dProdIndex.{u1, 0} ι (Fin n) _inst_3 (List.finRange n) fι)))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) (List.dProdIndex.{u1, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (List.dProd.{u1, 0, u2} ι (Fin n) A _inst_3 (DirectSum.GSemiring.toGmonoid.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_3 (fun (i : ι) => _inst_2 i) _inst_4) (List.finRange n) fι fA))
but is expected to have type
  forall {ι : Type.{u2}} [_inst_1 : DecidableEq.{succ u2} ι] (A : ι -> Type.{u1}) [_inst_2 : forall (i : ι), AddCommMonoid.{u1} (A i)] [_inst_3 : AddMonoid.{u2} ι] [_inst_4 : DirectSum.GSemiring.{u2, u1} ι A _inst_3 (fun (i : ι) => _inst_2 i)] (n : Nat) (fι : (Fin n) -> ι) (fA : forall (a : Fin n), A (fι a)), Eq.{max (succ u2) (succ u1)} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (List.prod.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (NonUnitalNonAssocSemiring.toMul.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.instNonUnitalNonAssocSemiringDirectSum.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (AddZeroClass.toAdd.{u2} ι (AddMonoid.toAddZeroClass.{u2} ι _inst_3)) (fun (i : ι) => _inst_2 i) (DirectSum.GSemiring.toGNonUnitalNonAssocSemiring.{u2, u1} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4))) (DirectSum.instOneDirectSum.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (AddMonoid.toZero.{u2} ι _inst_3) (DirectSum.GSemiring.toGOne.{u2, u1} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4) (fun (i : ι) => _inst_2 i)) (List.ofFn.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) n (fun (a : Fin n) => FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A (fι a)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (fι a)) (AddCommMonoid.toAddMonoid.{u1} (A (fι a)) (_inst_2 (fι a)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (fι a)) (fun (_x : A (fι a)) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (fι a)) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) _x) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (fι a)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (fι a)) (AddCommMonoid.toAddMonoid.{u1} (A (fι a)) (_inst_2 (fι a)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (fι a)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddZeroClass.toAdd.{u1} (A (fι a)) (AddMonoid.toAddZeroClass.{u1} (A (fι a)) (AddCommMonoid.toAddMonoid.{u1} (A (fι a)) (_inst_2 (fι a))))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (fι a)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (fι a)) (AddCommMonoid.toAddMonoid.{u1} (A (fι a)) (_inst_2 (fι a)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (fι a)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (fι a)) (AddCommMonoid.toAddMonoid.{u1} (A (fι a)) (_inst_2 (fι a)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A (fι a)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (fι a)) (AddCommMonoid.toAddMonoid.{u1} (A (fι a)) (_inst_2 (fι a)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) (fι a)) (fA a)))) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (AddCommMonoid.toAddMonoid.{u1} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (_inst_2 (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (fun (_x : A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) _x) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (AddCommMonoid.toAddMonoid.{u1} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (_inst_2 (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddZeroClass.toAdd.{u1} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (AddMonoid.toAddZeroClass.{u1} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (AddCommMonoid.toAddMonoid.{u1} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (_inst_2 (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι))))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (AddCommMonoid.toAddMonoid.{u1} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (_inst_2 (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (AddCommMonoid.toAddMonoid.{u1} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (_inst_2 (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (AddCommMonoid.toAddMonoid.{u1} (A (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (_inst_2 (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) (List.dProdIndex.{u2, 0} ι (Fin n) _inst_3 (List.finRange n) fι)) (List.dProd.{u2, 0, u1} ι (Fin n) A _inst_3 (DirectSum.GSemiring.toGMonoid.{u2, u1} ι A _inst_3 (fun (i : ι) => _inst_2 i) _inst_4) (List.finRange n) fι fA))
Case conversion may be inaccurate. Consider using '#align direct_sum.list_prod_of_fn_of_eq_dprod DirectSum.list_prod_ofFn_of_eq_dProdₓ'. -/
theorem list_prod_ofFn_of_eq_dProd (n : ℕ) (fι : Fin n → ι) (fA : ∀ a, A (fι a)) :
    (List.ofFn fun a => of A (fι a) (fA a)).Prod = of A _ ((List.finRange n).dProd fι fA) := by
  rw [List.ofFn_eq_map, of_list_dprod]
#align direct_sum.list_prod_of_fn_of_eq_dprod DirectSum.list_prod_ofFn_of_eq_dProd

open BigOperators

#print DirectSum.mul_eq_dfinsupp_sum /-
theorem mul_eq_dfinsupp_sum [∀ (i : ι) (x : A i), Decidable (x ≠ 0)] (a a' : ⨁ i, A i) :
    a * a' = a.Sum fun i ai => a'.Sum fun j aj => DirectSum.of _ _ <| GradedMonoid.GMul.mul ai aj :=
  by
  change MulHom _ a a' = _
  simpa only [MulHom, to_add_monoid, Dfinsupp.liftAddHom_apply, Dfinsupp.sumAddHom_apply,
    AddMonoidHom.dfinsupp_sum_apply, flip_apply, AddMonoidHom.dfinsupp_sumAddHom_apply]
#align direct_sum.mul_eq_dfinsupp_sum DirectSum.mul_eq_dfinsupp_sum
-/

/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/
#print DirectSum.mul_eq_sum_support_ghas_mul /-
/-- A heavily unfolded version of the definition of multiplication -/
theorem mul_eq_sum_support_ghas_mul [∀ (i : ι) (x : A i), Decidable (x ≠ 0)] (a a' : ⨁ i, A i) :
    a * a' =
      ∑ ij in Dfinsupp.support a ×ˢ Dfinsupp.support a',
        DirectSum.of _ _ (GradedMonoid.GMul.mul (a ij.fst) (a' ij.snd)) :=
  by simp only [mul_eq_dfinsupp_sum, Dfinsupp.sum, Finset.sum_product]
#align direct_sum.mul_eq_sum_support_ghas_mul DirectSum.mul_eq_sum_support_ghas_mul
-/

end Semiring

section CommSemiring

variable [∀ i, AddCommMonoid (A i)] [AddCommMonoid ι] [GCommSemiring A]

/- warning: direct_sum.mul_comm clashes with [anonymous] -> [anonymous]
Case conversion may be inaccurate. Consider using '#align direct_sum.mul_comm [anonymous]ₓ'. -/
#print [anonymous] /-
private theorem [anonymous] (a b : ⨁ i, A i) : a * b = b * a :=
  by
  suffices mulHom A = (mulHom A).flip from AddMonoidHom.congr_fun (AddMonoidHom.congr_fun this a) b
  apply add_hom_ext; intro ai ax; apply add_hom_ext; intro bi bx
  rw [AddMonoidHom.flip_apply, mul_hom_of_of, mul_hom_of_of]
  exact of_eq_of_graded_monoid_eq (gcomm_semiring.mul_comm ⟨ai, ax⟩ ⟨bi, bx⟩)
#align direct_sum.mul_comm [anonymous]
-/

#print DirectSum.commSemiring /-
/-- The `comm_semiring` structure derived from `gcomm_semiring A`. -/
instance commSemiring : CommSemiring (⨁ i, A i) :=
  { DirectSum.semiring _ with
    one := 1
    mul := (· * ·)
    zero := 0
    add := (· + ·)
    mul_comm := mul_comm A }
#align direct_sum.comm_semiring DirectSum.commSemiring
-/

end CommSemiring

section NonUnitalNonAssocRing

variable [∀ i, AddCommGroup (A i)] [Add ι] [GNonUnitalNonAssocSemiring A]

#print DirectSum.nonAssocRing /-
/-- The `ring` derived from `gsemiring A`. -/
instance nonAssocRing : NonUnitalNonAssocRing (⨁ i, A i) :=
  { DirectSum.nonUnitalNonAssocSemiring _,
    DirectSum.addCommGroup _ with
    mul := (· * ·)
    zero := 0
    add := (· + ·)
    neg := Neg.neg }
#align direct_sum.non_assoc_ring DirectSum.nonAssocRing
-/

end NonUnitalNonAssocRing

section Ring

variable [∀ i, AddCommGroup (A i)] [AddMonoid ι] [GRing A]

#print DirectSum.ring /-
/-- The `ring` derived from `gsemiring A`. -/
instance ring : Ring (⨁ i, A i) :=
  { DirectSum.semiring _,
    DirectSum.addCommGroup _ with
    one := 1
    mul := (· * ·)
    zero := 0
    add := (· + ·)
    neg := Neg.neg
    intCast := fun z => of _ _ (GRing.intCast z)
    intCast_ofNat := fun z => congr_arg _ <| GRing.intCast_of_nat _
    intCast_negSucc := fun z =>
      (congr_arg _ <| GRing.intCast_neg_succ_of_nat _).trans (map_neg _ _) }
#align direct_sum.ring DirectSum.ring
-/

end Ring

section CommRing

variable [∀ i, AddCommGroup (A i)] [AddCommMonoid ι] [GCommRing A]

#print DirectSum.commRing /-
/-- The `comm_ring` derived from `gcomm_semiring A`. -/
instance commRing : CommRing (⨁ i, A i) :=
  { DirectSum.ring _,
    DirectSum.commSemiring _ with
    one := 1
    mul := (· * ·)
    zero := 0
    add := (· + ·)
    neg := Neg.neg }
#align direct_sum.comm_ring DirectSum.commRing
-/

end CommRing

/-! ### Instances for `A 0`

The various `g*` instances are enough to promote the `add_comm_monoid (A 0)` structure to various
types of multiplicative structure.
-/


section GradeZero

section One

variable [Zero ι] [GradedMonoid.GOne A] [∀ i, AddCommMonoid (A i)]

/- warning: direct_sum.of_zero_one -> DirectSum.of_zero_one is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] (A : ι -> Type.{u2}) [_inst_2 : Zero.{u1} ι] [_inst_3 : GradedMonoid.GOne.{u1, u2} ι A _inst_2] [_inst_4 : forall (i : ι), AddCommMonoid.{u2} (A i)], Eq.{succ (max u1 u2)} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι _inst_2)))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι _inst_2)))) (_inst_4 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι _inst_2)))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι _inst_2)))) (_inst_4 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i))))) => (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι _inst_2)))) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι _inst_2)))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι _inst_2)))) (_inst_4 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_4 i) (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι _inst_2)))) (OfNat.ofNat.{u2} (A (Zero.zero.{u1} ι _inst_2)) 1 (OfNat.mk.{u2} (A (Zero.zero.{u1} ι _inst_2)) 1 (One.one.{u2} (A (Zero.zero.{u1} ι _inst_2)) (GradedMonoid.GradeZero.one.{u1, u2} ι A _inst_2 _inst_3))))) (OfNat.ofNat.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) 1 (OfNat.mk.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) 1 (One.one.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (DirectSum.hasOne.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) _inst_2 _inst_3 (fun (i : ι) => _inst_4 i)))))
but is expected to have type
  forall {ι : Type.{u2}} [_inst_1 : DecidableEq.{succ u2} ι] (A : ι -> Type.{u1}) [_inst_2 : Zero.{u2} ι] [_inst_3 : GradedMonoid.GOne.{u2, u1} ι A _inst_2] [_inst_4 : forall (i : ι), AddCommMonoid.{u1} (A i)], Eq.{max (succ u2) (succ u1)} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (OfNat.ofNat.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) 1 (One.toOfNat1.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (GradedMonoid.GradeZero.one.{u2, u1} ι A _inst_2 _inst_3)))) (FunLike.coe.{max (succ u1) (succ u2), succ u1, max (succ u1) (succ u2)} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (_inst_4 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (fun (_x : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) _x) (AddHomClass.toFunLike.{max u1 u2, u1, max u1 u2} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (_inst_4 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddZeroClass.toAdd.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (_inst_4 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2)))))) (AddZeroClass.toAdd.{max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i))))) (AddMonoidHomClass.toAddHomClass.{max u1 u2, u1, max u1 u2} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (_inst_4 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (_inst_4 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (_inst_4 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_4 i) (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (OfNat.ofNat.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) 1 (One.toOfNat1.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (GradedMonoid.GradeZero.one.{u2, u1} ι A _inst_2 _inst_3)))) (OfNat.ofNat.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (OfNat.ofNat.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) 1 (One.toOfNat1.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (GradedMonoid.GradeZero.one.{u2, u1} ι A _inst_2 _inst_3)))) 1 (One.toOfNat1.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_4 i)) (OfNat.ofNat.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) 1 (One.toOfNat1.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι _inst_2))) (GradedMonoid.GradeZero.one.{u2, u1} ι A _inst_2 _inst_3)))) (DirectSum.instOneDirectSum.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) _inst_2 _inst_3 (fun (i : ι) => _inst_4 i))))
Case conversion may be inaccurate. Consider using '#align direct_sum.of_zero_one DirectSum.of_zero_oneₓ'. -/
@[simp]
theorem of_zero_one : of _ 0 (1 : A 0) = 1 :=
  rfl
#align direct_sum.of_zero_one DirectSum.of_zero_one

end One

section Mul

variable [AddZeroClass ι] [∀ i, AddCommMonoid (A i)] [GNonUnitalNonAssocSemiring A]

/- warning: direct_sum.of_zero_smul -> DirectSum.of_zero_smul is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] (A : ι -> Type.{u2}) [_inst_2 : AddZeroClass.{u1} ι] [_inst_3 : forall (i : ι), AddCommMonoid.{u2} (A i)] [_inst_4 : DirectSum.GNonUnitalNonAssocSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (AddZeroClass.toHasAdd.{u1} ι _inst_2) (fun (i : ι) => _inst_3 i)] {i : ι} (a : A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (b : A i), Eq.{succ (max u1 u2)} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) => (A i) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) i) (SMul.smul.{u2, u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (A i) (GradedMonoid.GradeZero.smul.{u1, u2} ι A _inst_2 (DirectSum.GNonUnitalNonAssocSemiring.toGhasMul.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (AddZeroClass.toHasAdd.{u1} ι _inst_2) (fun (i : ι) => _inst_3 i) _inst_4) i) a b)) (HMul.hMul.{max u1 u2, max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instHMul.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (Distrib.toHasMul.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (NonUnitalNonAssocSemiring.toDistrib.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.nonUnitalNonAssocSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (AddZeroClass.toHasAdd.{u1} ι _inst_2) (fun (i : ι) => _inst_3 i) _inst_4)))) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (_inst_3 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (_inst_3 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) => (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (_inst_3 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) a) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) => (A i) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) i) b))
but is expected to have type
  forall {ι : Type.{u2}} [_inst_1 : DecidableEq.{succ u2} ι] (A : ι -> Type.{u1}) [_inst_2 : AddZeroClass.{u2} ι] [_inst_3 : forall (i : ι), AddCommMonoid.{u1} (A i)] [_inst_4 : DirectSum.GNonUnitalNonAssocSemiring.{u2, u1} ι A (AddZeroClass.toAdd.{u2} ι _inst_2) (fun (i : ι) => _inst_3 i)] {i : ι} (a : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (b : A i), Eq.{max (succ u2) (succ u1)} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (HSMul.hSMul.{u1, u1, u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (A i) (A i) (instHSMul.{u1, u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (A i) (GradedMonoid.GradeZero.smul.{u2, u1} ι A _inst_2 (DirectSum.GNonUnitalNonAssocSemiring.toGMul.{u2, u1} ι A (AddZeroClass.toAdd.{u2} ι _inst_2) (fun (i : ι) => _inst_3 i) _inst_4) i)) a b)) (FunLike.coe.{max (succ u1) (succ u2), succ u1, max (succ u1) (succ u2)} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (fun (_x : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) _x) (AddHomClass.toFunLike.{max u1 u2, u1, max u1 u2} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{u1} (A i) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i)))) (AddZeroClass.toAdd.{max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u1 u2, u1, max u1 u2} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) i) (HSMul.hSMul.{u1, u1, u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (A i) (A i) (instHSMul.{u1, u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (A i) (GradedMonoid.GradeZero.smul.{u2, u1} ι A _inst_2 (DirectSum.GNonUnitalNonAssocSemiring.toGMul.{u2, u1} ι A (AddZeroClass.toAdd.{u2} ι _inst_2) (fun (i : ι) => _inst_3 i) _inst_4) i)) a b)) (HMul.hMul.{max u2 u1, max u2 u1, max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) b) ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) (instHMul.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) (NonUnitalNonAssocSemiring.toMul.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) (DirectSum.instNonUnitalNonAssocSemiringDirectSum.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (AddZeroClass.toAdd.{u2} ι _inst_2) (fun (i : ι) => _inst_3 i) _inst_4))) (FunLike.coe.{max (succ u1) (succ u2), succ u1, max (succ u1) (succ u2)} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (fun (_x : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) _x) (AddHomClass.toFunLike.{max u1 u2, u1, max u1 u2} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2))))))) (AddZeroClass.toAdd.{max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u1 u2, u1, max u1 u2} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) a) (FunLike.coe.{max (succ u1) (succ u2), succ u1, max (succ u1) (succ u2)} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (fun (_x : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) _x) (AddHomClass.toFunLike.{max u1 u2, u1, max u1 u2} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{u1} (A i) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i)))) (AddZeroClass.toAdd.{max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u1 u2, u1, max u1 u2} (AddMonoidHom.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u1 u2} (A i) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A i) (AddCommMonoid.toAddMonoid.{u1} (A i) (_inst_3 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) i) b))
Case conversion may be inaccurate. Consider using '#align direct_sum.of_zero_smul DirectSum.of_zero_smulₓ'. -/
@[simp]
theorem of_zero_smul {i} (a : A 0) (b : A i) : of _ _ (a • b) = of _ _ a * of _ _ b :=
  (of_eq_of_gradedMonoid_eq (GradedMonoid.mk_zero_smul a b)).trans (of_mul_of _ _).symm
#align direct_sum.of_zero_smul DirectSum.of_zero_smul

/- warning: direct_sum.of_zero_mul -> DirectSum.of_zero_mul is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] (A : ι -> Type.{u2}) [_inst_2 : AddZeroClass.{u1} ι] [_inst_3 : forall (i : ι), AddCommMonoid.{u2} (A i)] [_inst_4 : DirectSum.GNonUnitalNonAssocSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (AddZeroClass.toHasAdd.{u1} ι _inst_2) (fun (i : ι) => _inst_3 i)] (a : A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (b : A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))), Eq.{succ (max u1 u2)} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (_inst_3 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (_inst_3 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) => (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (_inst_3 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (HMul.hMul.{u2, u2, u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (instHMul.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (GradedMonoid.GradeZero.mul.{u1, u2} ι A _inst_2 (DirectSum.GNonUnitalNonAssocSemiring.toGhasMul.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (AddZeroClass.toHasAdd.{u1} ι _inst_2) (fun (i : ι) => _inst_3 i) _inst_4))) a b)) (HMul.hMul.{max u1 u2, max u1 u2, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instHMul.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (Distrib.toHasMul.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (NonUnitalNonAssocSemiring.toDistrib.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.nonUnitalNonAssocSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (AddZeroClass.toHasAdd.{u1} ι _inst_2) (fun (i : ι) => _inst_3 i) _inst_4)))) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (_inst_3 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (_inst_3 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) => (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (_inst_3 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) a) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (_inst_3 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (_inst_3 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) => (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) (_inst_3 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι _inst_2))))) b))
but is expected to have type
  forall {ι : Type.{u2}} [_inst_1 : DecidableEq.{succ u2} ι] (A : ι -> Type.{u1}) [_inst_2 : AddZeroClass.{u2} ι] [_inst_3 : forall (i : ι), AddCommMonoid.{u1} (A i)] [_inst_4 : DirectSum.GNonUnitalNonAssocSemiring.{u2, u1} ι A (AddZeroClass.toAdd.{u2} ι _inst_2) (fun (i : ι) => _inst_3 i)] (a : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (b : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))), Eq.{max (succ u2) (succ u1)} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (HMul.hMul.{u1, u1, u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (instHMul.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (GradedMonoid.GradeZero.mul.{u2, u1} ι A _inst_2 (DirectSum.GNonUnitalNonAssocSemiring.toGMul.{u2, u1} ι A (AddZeroClass.toAdd.{u2} ι _inst_2) (fun (i : ι) => _inst_3 i) _inst_4))) a b)) (FunLike.coe.{max (succ u1) (succ u2), succ u1, max (succ u1) (succ u2)} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (fun (_x : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) _x) (AddHomClass.toFunLike.{max u1 u2, u1, max u1 u2} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2))))))) (AddZeroClass.toAdd.{max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u1 u2, u1, max u1 u2} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (HMul.hMul.{u1, u1, u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (instHMul.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (GradedMonoid.GradeZero.mul.{u2, u1} ι A _inst_2 (DirectSum.GNonUnitalNonAssocSemiring.toGMul.{u2, u1} ι A (AddZeroClass.toAdd.{u2} ι _inst_2) (fun (i : ι) => _inst_3 i) _inst_4))) a b)) (HMul.hMul.{max u2 u1, max u2 u1, max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) b) ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) (instHMul.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) (NonUnitalNonAssocSemiring.toMul.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) a) (DirectSum.instNonUnitalNonAssocSemiringDirectSum.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (AddZeroClass.toAdd.{u2} ι _inst_2) (fun (i : ι) => _inst_3 i) _inst_4))) (FunLike.coe.{max (succ u1) (succ u2), succ u1, max (succ u1) (succ u2)} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (fun (_x : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) _x) (AddHomClass.toFunLike.{max u1 u2, u1, max u1 u2} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2))))))) (AddZeroClass.toAdd.{max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u1 u2, u1, max u1 u2} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) a) (FunLike.coe.{max (succ u1) (succ u2), succ u1, max (succ u1) (succ u2)} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (fun (_x : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) _x) (AddHomClass.toFunLike.{max u1 u2, u1, max u1 u2} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddZeroClass.toAdd.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2))))))) (AddZeroClass.toAdd.{max u1 u2} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (AddMonoidHomClass.toAddHomClass.{max u1 u2, u1, max u1 u2} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) (_inst_3 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_3 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_3 i) (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddZeroClass.toZero.{u2} ι _inst_2)))) b))
Case conversion may be inaccurate. Consider using '#align direct_sum.of_zero_mul DirectSum.of_zero_mulₓ'. -/
@[simp]
theorem of_zero_mul (a b : A 0) : of _ 0 (a * b) = of _ 0 a * of _ 0 b :=
  of_zero_smul A a b
#align direct_sum.of_zero_mul DirectSum.of_zero_mul

#print DirectSum.GradeZero.nonUnitalNonAssocSemiring /-
instance GradeZero.nonUnitalNonAssocSemiring : NonUnitalNonAssocSemiring (A 0) :=
  Function.Injective.nonUnitalNonAssocSemiring (of A 0) Dfinsupp.single_injective (of A 0).map_zero
    (of A 0).map_add (of_zero_mul A) fun x n => Dfinsupp.single_smul n x
#align direct_sum.grade_zero.non_unital_non_assoc_semiring DirectSum.GradeZero.nonUnitalNonAssocSemiring
-/

#print DirectSum.GradeZero.smulWithZero /-
instance GradeZero.smulWithZero (i : ι) : SMulWithZero (A 0) (A i) :=
  by
  letI := SMulWithZero.compHom (⨁ i, A i) (of A 0).toZeroHom
  refine' dfinsupp.single_injective.smul_with_zero (of A i).toZeroHom (of_zero_smul A)
#align direct_sum.grade_zero.smul_with_zero DirectSum.GradeZero.smulWithZero
-/

end Mul

section Semiring

variable [∀ i, AddCommMonoid (A i)] [AddMonoid ι] [GSemiring A]

/- warning: direct_sum.of_zero_pow -> DirectSum.of_zero_pow is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] (A : ι -> Type.{u2}) [_inst_2 : forall (i : ι), AddCommMonoid.{u2} (A i)] [_inst_3 : AddMonoid.{u1} ι] [_inst_4 : DirectSum.GSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_3 (fun (i : ι) => _inst_2 i)] (a : A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (n : Nat), Eq.{succ (max u1 u2)} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) => (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (HPow.hPow.{u2, 0, u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) Nat (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (instHPow.{u2, 0} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) Nat (GradedMonoid.Nat.hasPow.{u1, u2} ι A _inst_3 (DirectSum.GSemiring.toGmonoid.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_3 (fun (i : ι) => _inst_2 i) _inst_4))) a n)) (HPow.hPow.{max u1 u2, 0, max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) Nat (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instHPow.{max u1 u2, 0} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) Nat (Monoid.Pow.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (MonoidWithZero.toMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Semiring.toMonoidWithZero.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4))))) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) => (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) a) n)
but is expected to have type
  forall {ι : Type.{u2}} [_inst_1 : DecidableEq.{succ u2} ι] (A : ι -> Type.{u1}) [_inst_2 : forall (i : ι), AddCommMonoid.{u1} (A i)] [_inst_3 : AddMonoid.{u2} ι] [_inst_4 : DirectSum.GSemiring.{u2, u1} ι A _inst_3 (fun (i : ι) => _inst_2 i)] (a : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (n : Nat), Eq.{max (succ u2) (succ u1)} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (HPow.hPow.{u1, 0, u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) Nat (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (instHPow.{u1, 0} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) Nat (GradedMonoid.instPowOfNatToOfNat0ToZeroNat.{u2, u1} ι A _inst_3 (DirectSum.GSemiring.toGMonoid.{u2, u1} ι A _inst_3 (fun (i : ι) => _inst_2 i) _inst_4))) a n)) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (fun (_x : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) _x) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddZeroClass.toAdd.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3))))))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (HPow.hPow.{u1, 0, u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) Nat (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (instHPow.{u1, 0} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) Nat (GradedMonoid.instPowOfNatToOfNat0ToZeroNat.{u2, u1} ι A _inst_3 (DirectSum.GSemiring.toGMonoid.{u2, u1} ι A _inst_3 (fun (i : ι) => _inst_2 i) _inst_4))) a n)) (HPow.hPow.{max u2 u1, 0, max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) a) Nat ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) a) (instHPow.{max u2 u1, 0} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) a) Nat (Monoid.Pow.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) a) (MonoidWithZero.toMonoid.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) a) (Semiring.toMonoidWithZero.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) a) (DirectSum.semiring.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4))))) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (fun (_x : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) _x) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddZeroClass.toAdd.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3))))))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) a) n)
Case conversion may be inaccurate. Consider using '#align direct_sum.of_zero_pow DirectSum.of_zero_powₓ'. -/
@[simp]
theorem of_zero_pow (a : A 0) : ∀ n : ℕ, of _ 0 (a ^ n) = of _ 0 a ^ n
  | 0 => by rw [pow_zero, pow_zero, DirectSum.of_zero_one]
  | n + 1 => by rw [pow_succ, pow_succ, of_zero_mul, of_zero_pow]
#align direct_sum.of_zero_pow DirectSum.of_zero_pow

instance : NatCast (A 0) :=
  ⟨GSemiring.natCast⟩

/- warning: direct_sum.of_nat_cast -> DirectSum.ofNatCast is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] (A : ι -> Type.{u2}) [_inst_2 : forall (i : ι), AddCommMonoid.{u2} (A i)] [_inst_3 : AddMonoid.{u1} ι] [_inst_4 : DirectSum.GSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_3 (fun (i : ι) => _inst_2 i)] (n : Nat), Eq.{succ (max u1 u2)} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) ((fun (i : ι) => _inst_2 i) (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) ((fun (i : ι) => _inst_2 i) (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) => (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) ((fun (i : ι) => _inst_2 i) (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) ((fun (a : Type) (b : Type.{u2}) [self : HasLiftT.{1, succ u2} a b] => self.0) Nat (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (HasLiftT.mk.{1, succ u2} Nat (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (CoeTCₓ.coe.{1, succ u2} Nat (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (Nat.castCoe.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (DirectSum.hasNatCast.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)))) n)) ((fun (a : Type) (b : Type.{max u1 u2}) [self : HasLiftT.{1, succ (max u1 u2)} a b] => self.0) Nat (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (HasLiftT.mk.{1, succ (max u1 u2)} Nat (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (CoeTCₓ.coe.{1, succ (max u1 u2)} Nat (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (Nat.castCoe.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoidWithOne.toNatCast.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoidWithOne.toAddMonoidWithOne.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (NonAssocSemiring.toAddCommMonoidWithOne.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i) _inst_3 _inst_4)))))))) n)
but is expected to have type
  forall {ι : Type.{u2}} [_inst_1 : DecidableEq.{succ u2} ι] (A : ι -> Type.{u1}) [_inst_2 : forall (i : ι), AddCommMonoid.{u1} (A i)] [_inst_3 : AddMonoid.{u2} ι] [_inst_4 : DirectSum.GSemiring.{u2, u1} ι A _inst_3 (fun (i : ι) => _inst_2 i)] (n : Nat), Eq.{max (succ u2) (succ u1)} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Nat.cast.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.instNatCastOfNatToOfNat0ToZero.{u2, u1} ι A (fun (i : ι) => _inst_2 i) _inst_3 _inst_4) n)) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (fun (_x : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) _x) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddZeroClass.toAdd.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3))))))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (Nat.cast.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.instNatCastOfNatToOfNat0ToZero.{u2, u1} ι A (fun (i : ι) => _inst_2 i) _inst_3 _inst_4) n)) (Nat.cast.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Nat.cast.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.instNatCastOfNatToOfNat0ToZero.{u2, u1} ι A (fun (i : ι) => _inst_2 i) _inst_3 _inst_4) n)) (Semiring.toNatCast.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Nat.cast.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.instNatCastOfNatToOfNat0ToZero.{u2, u1} ι A (fun (i : ι) => _inst_2 i) _inst_3 _inst_4) n)) (DirectSum.semiring.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) n)
Case conversion may be inaccurate. Consider using '#align direct_sum.of_nat_cast DirectSum.ofNatCastₓ'. -/
@[simp]
theorem ofNatCast (n : ℕ) : of A 0 n = n :=
  rfl
#align direct_sum.of_nat_cast DirectSum.ofNatCast

#print DirectSum.GradeZero.semiring /-
/-- The `semiring` structure derived from `gsemiring A`. -/
instance GradeZero.semiring : Semiring (A 0) :=
  Function.Injective.semiring (of A 0) Dfinsupp.single_injective (of A 0).map_zero (of_zero_one A)
    (of A 0).map_add (of_zero_mul A) (of A 0).map_nsmul (fun x n => of_zero_pow _ _ _) (ofNatCast A)
#align direct_sum.grade_zero.semiring DirectSum.GradeZero.semiring
-/

#print DirectSum.ofZeroRingHom /-
/-- `of A 0` is a `ring_hom`, using the `direct_sum.grade_zero.semiring` structure. -/
def ofZeroRingHom : A 0 →+* ⨁ i, A i :=
  { of _ 0 with
    map_one' := of_zero_one A
    map_mul' := of_zero_mul A }
#align direct_sum.of_zero_ring_hom DirectSum.ofZeroRingHom
-/

#print DirectSum.GradeZero.module /-
/-- Each grade `A i` derives a `A 0`-module structure from `gsemiring A`. Note that this results
in an overall `module (A 0) (⨁ i, A i)` structure via `direct_sum.module`.
-/
instance GradeZero.module {i} : Module (A 0) (A i) :=
  letI := Module.compHom (⨁ i, A i) (of_zero_ring_hom A)
  dfinsupp.single_injective.module (A 0) (of A i) fun a => of_zero_smul A a
#align direct_sum.grade_zero.module DirectSum.GradeZero.module
-/

end Semiring

section CommSemiring

variable [∀ i, AddCommMonoid (A i)] [AddCommMonoid ι] [GCommSemiring A]

#print DirectSum.GradeZero.commSemiring /-
/-- The `comm_semiring` structure derived from `gcomm_semiring A`. -/
instance GradeZero.commSemiring : CommSemiring (A 0) :=
  Function.Injective.commSemiring (of A 0) Dfinsupp.single_injective (of A 0).map_zero
    (of_zero_one A) (of A 0).map_add (of_zero_mul A) (fun x n => Dfinsupp.single_smul n x)
    (fun x n => of_zero_pow _ _ _) (ofNatCast A)
#align direct_sum.grade_zero.comm_semiring DirectSum.GradeZero.commSemiring
-/

end CommSemiring

section Ring

variable [∀ i, AddCommGroup (A i)] [AddZeroClass ι] [GNonUnitalNonAssocSemiring A]

#print DirectSum.GradeZero.nonUnitalNonAssocRing /-
/-- The `non_unital_non_assoc_ring` derived from `gnon_unital_non_assoc_semiring A`. -/
instance GradeZero.nonUnitalNonAssocRing : NonUnitalNonAssocRing (A 0) :=
  Function.Injective.nonUnitalNonAssocRing (of A 0) Dfinsupp.single_injective (of A 0).map_zero
    (of A 0).map_add (of_zero_mul A) (of A 0).map_neg (of A 0).map_sub
    (fun x n =>
      letI : ∀ i, DistribMulAction ℕ (A i) := fun i => inferInstance
      Dfinsupp.single_smul n x)
    fun x n =>
    letI : ∀ i, DistribMulAction ℤ (A i) := fun i => inferInstance
    Dfinsupp.single_smul n x
#align direct_sum.grade_zero.non_unital_non_assoc_ring DirectSum.GradeZero.nonUnitalNonAssocRing
-/

end Ring

section Ring

variable [∀ i, AddCommGroup (A i)] [AddMonoid ι] [GRing A]

instance : IntCast (A 0) :=
  ⟨GRing.intCast⟩

/- warning: direct_sum.of_int_cast -> DirectSum.ofIntCast is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] (A : ι -> Type.{u2}) [_inst_2 : forall (i : ι), AddCommGroup.{u2} (A i)] [_inst_3 : AddMonoid.{u1} ι] [_inst_4 : DirectSum.GRing.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_3 (fun (i : ι) => _inst_2 i)] (n : Int), Eq.{succ (max u1 u2)} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) ((fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) ((fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i))))) => (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) ((fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) ((fun (a : Type) (b : Type.{u2}) [self : HasLiftT.{1, succ u2} a b] => self.0) Int (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (HasLiftT.mk.{1, succ u2} Int (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (CoeTCₓ.coe.{1, succ u2} Int (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (Int.castCoe.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (DirectSum.hasIntCast.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)))) n)) ((fun (a : Type) (b : Type.{max u1 u2}) [self : HasLiftT.{1, succ (max u1 u2)} a b] => self.0) Int (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (HasLiftT.mk.{1, succ (max u1 u2)} Int (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (CoeTCₓ.coe.{1, succ (max u1 u2)} Int (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (Int.castCoe.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (AddGroupWithOne.toHasIntCast.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (AddCommGroupWithOne.toAddGroupWithOne.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (Ring.toAddCommGroupWithOne.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u2} (A i) (_inst_2 i)) i)) (DirectSum.ring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4))))))) n)
but is expected to have type
  forall {ι : Type.{u2}} [_inst_1 : DecidableEq.{succ u2} ι] (A : ι -> Type.{u1}) [_inst_2 : forall (i : ι), AddCommGroup.{u1} (A i)] [_inst_3 : AddMonoid.{u2} ι] [_inst_4 : DirectSum.GRing.{u2, u1} ι A _inst_3 (fun (i : ι) => _inst_2 i)] (n : Int), Eq.{max (succ u2) (succ u1)} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (Int.cast.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.instIntCastOfNatToOfNat0ToZero.{u2, u1} ι A (fun (i : ι) => _inst_2 i) _inst_3 _inst_4) n)) (FunLike.coe.{max (succ u2) (succ u1), succ u1, max (succ u2) (succ u1)} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommGroup.toAddCommMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3))))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i)))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (fun (_x : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) _x) (AddHomClass.toFunLike.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommGroup.toAddCommMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3))))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i)))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (AddZeroClass.toAdd.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommGroup.toAddCommMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))))))) (AddZeroClass.toAdd.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i)))))) (AddMonoidHomClass.toAddHomClass.{max u2 u1, u1, max u2 u1} (AddMonoidHom.{u1, max u1 u2} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommGroup.toAddCommMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3))))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i)))))) (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommGroup.toAddCommMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3))))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))))) (AddMonoidHom.addMonoidHomClass.{u1, max u2 u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (AddCommGroup.toAddCommMonoid.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3))))))) (AddMonoid.toAddZeroClass.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (AddCommMonoid.toAddMonoid.{max u2 u1} (DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (instAddCommMonoidDirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i)))))))) (DirectSum.of.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i)) (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (Int.cast.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.instIntCastOfNatToOfNat0ToZero.{u2, u1} ι A (fun (i : ι) => _inst_2 i) _inst_3 _inst_4) n)) (Int.cast.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (Int.cast.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.instIntCastOfNatToOfNat0ToZero.{u2, u1} ι A (fun (i : ι) => _inst_2 i) _inst_3 _inst_4) n)) (Ring.toIntCast.{max u2 u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) => DirectSum.{u2, u1} ι (fun (i : ι) => A i) (fun (i : ι) => AddCommGroup.toAddCommMonoid.{u1} (A i) (_inst_2 i))) (Int.cast.{u1} (A (OfNat.ofNat.{u2} ι 0 (Zero.toOfNat0.{u2} ι (AddMonoid.toZero.{u2} ι _inst_3)))) (DirectSum.instIntCastOfNatToOfNat0ToZero.{u2, u1} ι A (fun (i : ι) => _inst_2 i) _inst_3 _inst_4) n)) (DirectSum.ring.{u2, u1} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) n)
Case conversion may be inaccurate. Consider using '#align direct_sum.of_int_cast DirectSum.ofIntCastₓ'. -/
@[simp]
theorem ofIntCast (n : ℤ) : of A 0 n = n :=
  rfl
#align direct_sum.of_int_cast DirectSum.ofIntCast

#print DirectSum.GradeZero.ring /-
/-- The `ring` derived from `gsemiring A`. -/
instance GradeZero.ring : Ring (A 0) :=
  Function.Injective.ring (of A 0) Dfinsupp.single_injective (of A 0).map_zero (of_zero_one A)
    (of A 0).map_add (of_zero_mul A) (of A 0).map_neg (of A 0).map_sub
    (fun x n =>
      letI : ∀ i, DistribMulAction ℕ (A i) := fun i => inferInstance
      Dfinsupp.single_smul n x)
    (fun x n =>
      letI : ∀ i, DistribMulAction ℤ (A i) := fun i => inferInstance
      Dfinsupp.single_smul n x)
    (fun x n => of_zero_pow _ _ _) (ofNatCast A) (ofIntCast A)
#align direct_sum.grade_zero.ring DirectSum.GradeZero.ring
-/

end Ring

section CommRing

variable [∀ i, AddCommGroup (A i)] [AddCommMonoid ι] [GCommRing A]

#print DirectSum.GradeZero.commRing /-
/-- The `comm_ring` derived from `gcomm_semiring A`. -/
instance GradeZero.commRing : CommRing (A 0) :=
  Function.Injective.commRing (of A 0) Dfinsupp.single_injective (of A 0).map_zero (of_zero_one A)
    (of A 0).map_add (of_zero_mul A) (of A 0).map_neg (of A 0).map_sub
    (fun x n =>
      letI : ∀ i, DistribMulAction ℕ (A i) := fun i => inferInstance
      Dfinsupp.single_smul n x)
    (fun x n =>
      letI : ∀ i, DistribMulAction ℤ (A i) := fun i => inferInstance
      Dfinsupp.single_smul n x)
    (fun x n => of_zero_pow _ _ _) (ofNatCast A) (ofIntCast A)
#align direct_sum.grade_zero.comm_ring DirectSum.GradeZero.commRing
-/

end CommRing

end GradeZero

section ToSemiring

variable {R : Type _} [∀ i, AddCommMonoid (A i)] [AddMonoid ι] [GSemiring A] [Semiring R]

variable {A}

/- warning: direct_sum.ring_hom_ext' -> DirectSum.ringHom_ext' is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] {A : ι -> Type.{u2}} {R : Type.{u3}} [_inst_2 : forall (i : ι), AddCommMonoid.{u2} (A i)] [_inst_3 : AddMonoid.{u1} ι] [_inst_4 : DirectSum.GSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_3 (fun (i : ι) => _inst_2 i)] [_inst_5 : Semiring.{u3} R] {{F : RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)}} {{G : RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)}}, (forall (i : ι), Eq.{max (succ u3) (succ u2)} (AddMonoidHom.{u2, u3} (A i) R (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (AddMonoidHom.comp.{u2, max u1 u2, u3} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5))))) ((fun (a : Sort.{max (succ (max u1 u2)) (succ u3)}) (b : Sort.{max (succ u3) (succ (max u1 u2))}) [self : HasLiftT.{max (succ (max u1 u2)) (succ u3), max (succ u3) (succ (max u1 u2))} a b] => self.0) (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (AddMonoidHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (HasLiftT.mk.{max (succ (max u1 u2)) (succ u3), max (succ u3) (succ (max u1 u2))} (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (AddMonoidHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (CoeTCₓ.coe.{max (succ (max u1 u2)) (succ u3), max (succ u3) (succ (max u1 u2))} (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (AddMonoidHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (AddMonoidHom.hasCoeT.{max u1 u2, u3, max (max u1 u2) u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5))))) (RingHomClass.toAddMonoidHomClass.{max (max u1 u2) u3, max u1 u2, u3} (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5) (RingHom.ringHomClass.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) F) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) i)) (AddMonoidHom.comp.{u2, max u1 u2, u3} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5))))) ((fun (a : Sort.{max (succ (max u1 u2)) (succ u3)}) (b : Sort.{max (succ u3) (succ (max u1 u2))}) [self : HasLiftT.{max (succ (max u1 u2)) (succ u3), max (succ u3) (succ (max u1 u2))} a b] => self.0) (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (AddMonoidHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (HasLiftT.mk.{max (succ (max u1 u2)) (succ u3), max (succ u3) (succ (max u1 u2))} (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (AddMonoidHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (CoeTCₓ.coe.{max (succ (max u1 u2)) (succ u3), max (succ u3) (succ (max u1 u2))} (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (AddMonoidHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (AddMonoidHom.hasCoeT.{max u1 u2, u3, max (max u1 u2) u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5))))) (RingHomClass.toAddMonoidHomClass.{max (max u1 u2) u3, max u1 u2, u3} (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5) (RingHom.ringHomClass.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) G) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) i))) -> (Eq.{max (succ (max u1 u2)) (succ u3)} (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) F G)
but is expected to have type
  forall {ι : Type.{u2}} [_inst_1 : DecidableEq.{succ u2} ι] {A : ι -> Type.{u3}} {R : Type.{u1}} [_inst_2 : forall (i : ι), AddCommMonoid.{u3} (A i)] [_inst_3 : AddMonoid.{u2} ι] [_inst_4 : DirectSum.GSemiring.{u2, u3} ι A _inst_3 (fun (i : ι) => _inst_2 i)] [_inst_5 : Semiring.{u1} R] {{F : RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)}} {{G : RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)}}, (forall (i : ι), Eq.{max (succ u3) (succ u1)} (AddMonoidHom.{u3, u1} (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u1} R (AddMonoidWithOne.toAddMonoid.{u1} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u1} R (NonAssocSemiring.toAddCommMonoidWithOne.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_5)))))) (AddMonoidHom.comp.{u3, max u2 u3, u1} (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoid.toAddZeroClass.{u1} R (AddMonoidWithOne.toAddMonoid.{u1} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u1} R (NonAssocSemiring.toAddCommMonoidWithOne.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_5))))) (AddMonoidHomClass.toAddMonoidHom.{max u2 u3, u1, max (max u2 u3) u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoid.toAddZeroClass.{u1} R (AddMonoidWithOne.toAddMonoid.{u1} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u1} R (NonAssocSemiring.toAddCommMonoidWithOne.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_5))))) (RingHomClass.toAddMonoidHomClass.{max (max u2 u3) u1, max u2 u3, u1} (RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5) (RingHom.instRingHomClassRingHom.{max u2 u3, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5))) F) (DirectSum.of.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) i)) (AddMonoidHom.comp.{u3, max u2 u3, u1} (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoid.toAddZeroClass.{u1} R (AddMonoidWithOne.toAddMonoid.{u1} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u1} R (NonAssocSemiring.toAddCommMonoidWithOne.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_5))))) (AddMonoidHomClass.toAddMonoidHom.{max u2 u3, u1, max (max u2 u3) u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoid.toAddZeroClass.{u1} R (AddMonoidWithOne.toAddMonoid.{u1} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u1} R (NonAssocSemiring.toAddCommMonoidWithOne.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_5))))) (RingHomClass.toAddMonoidHomClass.{max (max u2 u3) u1, max u2 u3, u1} (RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5) (RingHom.instRingHomClassRingHom.{max u2 u3, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5))) G) (DirectSum.of.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) i))) -> (Eq.{max (max (succ u2) (succ u3)) (succ u1)} (RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)) F G)
Case conversion may be inaccurate. Consider using '#align direct_sum.ring_hom_ext' DirectSum.ringHom_ext'ₓ'. -/
/-- If two ring homomorphisms from `⨁ i, A i` are equal on each `of A i y`,
then they are equal.

See note [partially-applied ext lemmas]. -/
@[ext]
theorem ringHom_ext' ⦃F G : (⨁ i, A i) →+* R⦄
    (h : ∀ i, (↑F : _ →+ R).comp (of A i) = (↑G : _ →+ R).comp (of A i)) : F = G :=
  RingHom.coe_addMonoidHom_injective <| DirectSum.addHom_ext' h
#align direct_sum.ring_hom_ext' DirectSum.ringHom_ext'

/- warning: direct_sum.ring_hom_ext -> DirectSum.ringHom_ext is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] {A : ι -> Type.{u2}} {R : Type.{u3}} [_inst_2 : forall (i : ι), AddCommMonoid.{u2} (A i)] [_inst_3 : AddMonoid.{u1} ι] [_inst_4 : DirectSum.GSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_3 (fun (i : ι) => _inst_2 i)] [_inst_5 : Semiring.{u3} R] {{f : RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)}} {{g : RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)}}, (forall (i : ι) (x : A i), Eq.{succ u3} R (coeFn.{max (succ (max u1 u2)) (succ u3), max (succ (max u1 u2)) (succ u3)} (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (fun (_x : RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) => (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) -> R) (RingHom.hasCoeToFun.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) f (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) ((fun (i : ι) => _inst_2 i) i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) ((fun (i : ι) => _inst_2 i) i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) => (A i) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) ((fun (i : ι) => _inst_2 i) i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) i) x)) (coeFn.{max (succ (max u1 u2)) (succ u3), max (succ (max u1 u2)) (succ u3)} (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (fun (_x : RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) => (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) -> R) (RingHom.hasCoeToFun.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) g (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) ((fun (i : ι) => _inst_2 i) i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) ((fun (i : ι) => _inst_2 i) i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) => (A i) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) ((fun (i : ι) => _inst_2 i) i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) i) x))) -> (Eq.{max (succ (max u1 u2)) (succ u3)} (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) f g)
but is expected to have type
  forall {ι : Type.{u2}} [_inst_1 : DecidableEq.{succ u2} ι] {A : ι -> Type.{u3}} {R : Type.{u1}} [_inst_2 : forall (i : ι), AddCommMonoid.{u3} (A i)] [_inst_3 : AddMonoid.{u2} ι] [_inst_4 : DirectSum.GSemiring.{u2, u3} ι A _inst_3 (fun (i : ι) => _inst_2 i)] [_inst_5 : Semiring.{u1} R] {{f : RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)}} {{g : RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)}}, (forall (i : ι) (x : A i), Eq.{succ u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) => R) (FunLike.coe.{max (succ u2) (succ u3), succ u3, max (succ u2) (succ u3)} (AddMonoidHom.{u3, max u3 u2} (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (fun (a : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) a) (AddHomClass.toFunLike.{max u2 u3, u3, max u2 u3} (AddMonoidHom.{u3, max u3 u2} (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddZeroClass.toAdd.{u3} (A i) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i)))) (AddZeroClass.toAdd.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u3, u3, max u2 u3} (AddMonoidHom.{u3, max u3 u2} (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoidHom.addMonoidHomClass.{u3, max u2 u3} (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))))) (DirectSum.of.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) i) x)) (FunLike.coe.{max (max (succ u2) (succ u3)) (succ u1), max (succ u2) (succ u3), succ u1} (RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (fun (_x : DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) => R) _x) (MulHomClass.toFunLike.{max (max u2 u3) u1, max u2 u3, u1} (RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (NonUnitalNonAssocSemiring.toMul.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (NonAssocSemiring.toNonUnitalNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)))) (NonUnitalNonAssocSemiring.toMul.{u1} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_5))) (NonUnitalRingHomClass.toMulHomClass.{max (max u2 u3) u1, max u2 u3, u1} (RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4))) (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_5)) (RingHomClass.toNonUnitalRingHomClass.{max (max u2 u3) u1, max u2 u3, u1} (RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5) (RingHom.instRingHomClassRingHom.{max u2 u3, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5))))) f (FunLike.coe.{max (succ u2) (succ u3), succ u3, max (succ u2) (succ u3)} (AddMonoidHom.{u3, max u3 u2} (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (fun (_x : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) _x) (AddHomClass.toFunLike.{max u2 u3, u3, max u2 u3} (AddMonoidHom.{u3, max u3 u2} (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddZeroClass.toAdd.{u3} (A i) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i)))) (AddZeroClass.toAdd.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u3, u3, max u2 u3} (AddMonoidHom.{u3, max u3 u2} (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoidHom.addMonoidHomClass.{u3, max u2 u3} (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))))) (DirectSum.of.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) i) x)) (FunLike.coe.{max (max (succ u2) (succ u3)) (succ u1), max (succ u2) (succ u3), succ u1} (RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (fun (_x : DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) => R) _x) (MulHomClass.toFunLike.{max (max u2 u3) u1, max u2 u3, u1} (RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (NonUnitalNonAssocSemiring.toMul.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (NonAssocSemiring.toNonUnitalNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)))) (NonUnitalNonAssocSemiring.toMul.{u1} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_5))) (NonUnitalRingHomClass.toMulHomClass.{max (max u2 u3) u1, max u2 u3, u1} (RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4))) (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u1} R (Semiring.toNonAssocSemiring.{u1} R _inst_5)) (RingHomClass.toNonUnitalRingHomClass.{max (max u2 u3) u1, max u2 u3, u1} (RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5) (RingHom.instRingHomClassRingHom.{max u2 u3, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5))))) g (FunLike.coe.{max (succ u2) (succ u3), succ u3, max (succ u2) (succ u3)} (AddMonoidHom.{u3, max u3 u2} (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (fun (_x : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) _x) (AddHomClass.toFunLike.{max u2 u3, u3, max u2 u3} (AddMonoidHom.{u3, max u3 u2} (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddZeroClass.toAdd.{u3} (A i) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i)))) (AddZeroClass.toAdd.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (AddMonoidHomClass.toAddHomClass.{max u2 u3, u3, max u2 u3} (AddMonoidHom.{u3, max u3 u2} (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoidHom.addMonoidHomClass.{u3, max u2 u3} (A i) (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))))) (DirectSum.of.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) i) x))) -> (Eq.{max (max (succ u2) (succ u3)) (succ u1)} (RingHom.{max u3 u2, u1} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u2 u3} (DirectSum.{u2, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u1} R _inst_5)) f g)
Case conversion may be inaccurate. Consider using '#align direct_sum.ring_hom_ext DirectSum.ringHom_extₓ'. -/
/-- Two `ring_hom`s out of a direct sum are equal if they agree on the generators. -/
theorem ringHom_ext ⦃f g : (⨁ i, A i) →+* R⦄ (h : ∀ i x, f (of A i x) = g (of A i x)) : f = g :=
  ringHom_ext' fun i => AddMonoidHom.ext <| h i
#align direct_sum.ring_hom_ext DirectSum.ringHom_ext

#print DirectSum.toSemiring /-
/-- A family of `add_monoid_hom`s preserving `direct_sum.ghas_one.one` and `direct_sum.ghas_mul.mul`
describes a `ring_hom`s on `⨁ i, A i`. This is a stronger version of `direct_sum.to_monoid`.

Of particular interest is the case when `A i` are bundled subojects, `f` is the family of
coercions such as `add_submonoid.subtype (A i)`, and the `[gsemiring A]` structure originates from
`direct_sum.gsemiring.of_add_submonoids`, in which case the proofs about `ghas_one` and `ghas_mul`
can be discharged by `rfl`. -/
@[simps]
def toSemiring (f : ∀ i, A i →+ R) (hone : f _ GradedMonoid.GOne.one = 1)
    (hmul : ∀ {i j} (ai : A i) (aj : A j), f _ (GradedMonoid.GMul.mul ai aj) = f _ ai * f _ aj) :
    (⨁ i, A i) →+* R :=
  { toAddMonoid f with
    toFun := toAddMonoid f
    map_one' := by
      change (to_add_monoid f) (of _ 0 _) = 1
      rw [to_add_monoid_of]
      exact hone
    map_mul' := by
      rw [(to_add_monoid f).map_mul_iff]
      ext (xi xv yi yv) : 4
      show
        to_add_monoid f (of A xi xv * of A yi yv) =
          to_add_monoid f (of A xi xv) * to_add_monoid f (of A yi yv)
      rw [of_mul_of, to_add_monoid_of, to_add_monoid_of, to_add_monoid_of]
      exact hmul _ _ }
#align direct_sum.to_semiring DirectSum.toSemiring
-/

/- warning: direct_sum.to_semiring_of -> DirectSum.toSemiring_of is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] {A : ι -> Type.{u2}} {R : Type.{u3}} [_inst_2 : forall (i : ι), AddCommMonoid.{u2} (A i)] [_inst_3 : AddMonoid.{u1} ι] [_inst_4 : DirectSum.GSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_3 (fun (i : ι) => _inst_2 i)] [_inst_5 : Semiring.{u3} R] (f : forall (i : ι), AddMonoidHom.{u2, u3} (A i) R (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (hone : Eq.{succ u3} R (coeFn.{max (succ u3) (succ u2), max (succ u2) (succ u3)} (AddMonoidHom.{u2, u3} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) R (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (fun (_x : AddMonoidHom.{u2, u3} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) R (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) => (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) -> R) (AddMonoidHom.hasCoeToFun.{u2, u3} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) R (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (f (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (GradedMonoid.GOne.one.{u1, u2} ι (fun (i : ι) => A i) (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (GradedMonoid.GMonoid.toGhasOne.{u1, u2} ι (fun (i : ι) => A i) _inst_3 (DirectSum.GSemiring.toGmonoid.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4)))) (OfNat.ofNat.{u3} R 1 (OfNat.mk.{u3} R 1 (One.one.{u3} R (AddMonoidWithOne.toOne.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))))) (hmul : forall {i : ι} {j : ι} (ai : A i) (aj : A j), Eq.{succ u3} R (coeFn.{max (succ u3) (succ u2), max (succ u2) (succ u3)} (AddMonoidHom.{u2, u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddMonoid.toAddZeroClass.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (fun (_x : AddMonoidHom.{u2, u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddMonoid.toAddZeroClass.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) => (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) -> R) (AddMonoidHom.hasCoeToFun.{u2, u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddMonoid.toAddZeroClass.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (f (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (GradedMonoid.GMul.mul.{u1, u2} ι (fun (i : ι) => A i) (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (DirectSum.GNonUnitalNonAssocSemiring.toGhasMul.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (fun (i : ι) => _inst_2 i) (DirectSum.GSemiring.toGnonUnitalNonAssocSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4)) i j ai aj)) (HMul.hMul.{u3, u3, u3} R R R (instHMul.{u3} R (Distrib.toHasMul.{u3} R (NonUnitalNonAssocSemiring.toDistrib.{u3} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5))))) (coeFn.{max (succ u3) (succ u2), max (succ u2) (succ u3)} (AddMonoidHom.{u2, u3} (A i) R (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (fun (_x : AddMonoidHom.{u2, u3} (A i) R (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) => (A i) -> R) (AddMonoidHom.hasCoeToFun.{u2, u3} (A i) R (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (f i) ai) (coeFn.{max (succ u3) (succ u2), max (succ u2) (succ u3)} (AddMonoidHom.{u2, u3} (A j) R (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (fun (_x : AddMonoidHom.{u2, u3} (A j) R (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) => (A j) -> R) (AddMonoidHom.hasCoeToFun.{u2, u3} (A j) R (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (f j) aj))) (i : ι) (x : A i), Eq.{succ u3} R (coeFn.{max (succ (max u1 u2)) (succ u3), max (succ (max u1 u2)) (succ u3)} (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => (fun (i : ι) => A i) i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => (fun (i : ι) => A i) i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => (fun (i : ι) => A i) i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (fun (_x : RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => (fun (i : ι) => A i) i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => (fun (i : ι) => A i) i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => (fun (i : ι) => A i) i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) => (DirectSum.{u1, u2} ι (fun (i : ι) => (fun (i : ι) => A i) i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) -> R) (RingHom.hasCoeToFun.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => (fun (i : ι) => A i) i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => (fun (i : ι) => A i) i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => (fun (i : ι) => A i) i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (DirectSum.toSemiring.{u1, u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) R (fun (i : ι) => _inst_2 i) _inst_3 _inst_4 _inst_5 f hone hmul) (coeFn.{max (succ (max u1 u2)) (succ u2), max (succ u2) (succ (max u1 u2))} (AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) ((fun (i : ι) => _inst_2 i) i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (fun (_x : AddMonoidHom.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) ((fun (i : ι) => _inst_2 i) i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) => (A i) -> (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))) (AddMonoidHom.hasCoeToFun.{u2, max u1 u2} (A i) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) ((fun (i : ι) => _inst_2 i) i))) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (AddCommMonoid.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i)) (DirectSum.addCommMonoid.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i))))) (DirectSum.of.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => (fun (i : ι) => _inst_2 i) i) i) x)) (coeFn.{max (succ u3) (succ u2), max (succ u2) (succ u3)} (AddMonoidHom.{u2, u3} (A i) R (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (fun (_x : AddMonoidHom.{u2, u3} (A i) R (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) => (A i) -> R) (AddMonoidHom.hasCoeToFun.{u2, u3} (A i) R (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (f i) x)
but is expected to have type
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] {A : ι -> Type.{u3}} {R : Type.{u2}} [_inst_2 : forall (i : ι), AddCommMonoid.{u3} (A i)] [_inst_3 : AddMonoid.{u1} ι] [_inst_4 : DirectSum.GSemiring.{u1, u3} ι A _inst_3 (fun (i : ι) => _inst_2 i)] [_inst_5 : Semiring.{u2} R] (f : forall (i : ι), AddMonoidHom.{u3, u2} (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (hone : Eq.{succ u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) => R) (GradedMonoid.GOne.one.{u1, u3} ι (fun (i : ι) => A i) (AddMonoid.toZero.{u1} ι _inst_3) (DirectSum.GSemiring.toGOne.{u1, u3} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4))) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (AddMonoidHom.{u3, u2} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) R (AddMonoid.toAddZeroClass.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (fun (_x : A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) => R) _x) (AddHomClass.toFunLike.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) R (AddMonoid.toAddZeroClass.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) R (AddZeroClass.toAdd.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (AddMonoid.toAddZeroClass.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3))))))) (AddZeroClass.toAdd.{u2} R (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (AddMonoidHomClass.toAddHomClass.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) R (AddMonoid.toAddZeroClass.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) R (AddMonoid.toAddZeroClass.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5))))) (AddMonoidHom.addMonoidHomClass.{u3, u2} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) R (AddMonoid.toAddZeroClass.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))))) (f (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (GradedMonoid.GOne.one.{u1, u3} ι (fun (i : ι) => A i) (AddMonoid.toZero.{u1} ι _inst_3) (DirectSum.GSemiring.toGOne.{u1, u3} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4))) (OfNat.ofNat.{u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) => R) (GradedMonoid.GOne.one.{u1, u3} ι (fun (i : ι) => A i) (AddMonoid.toZero.{u1} ι _inst_3) (DirectSum.GSemiring.toGOne.{u1, u3} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4))) 1 (One.toOfNat1.{u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) => R) (GradedMonoid.GOne.one.{u1, u3} ι (fun (i : ι) => A i) (AddMonoid.toZero.{u1} ι _inst_3) (DirectSum.GSemiring.toGOne.{u1, u3} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4))) (Semiring.toOne.{u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) => R) (GradedMonoid.GOne.one.{u1, u3} ι (fun (i : ι) => A i) (AddMonoid.toZero.{u1} ι _inst_3) (DirectSum.GSemiring.toGOne.{u1, u3} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4))) _inst_5)))) (hmul : forall {i : ι} {j : ι} (ai : A i) (aj : A j), Eq.{succ u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) => R) (GradedMonoid.GMul.mul.{u1, u3} ι (fun (i : ι) => A i) (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (DirectSum.GNonUnitalNonAssocSemiring.toGMul.{u1, u3} ι (fun (i : ι) => A i) (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (fun (i : ι) => _inst_2 i) (DirectSum.GSemiring.toGNonUnitalNonAssocSemiring.{u1, u3} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4)) i j ai aj)) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (AddMonoidHom.{u3, u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddMonoid.toAddZeroClass.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (fun (_x : A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) => R) _x) (AddHomClass.toFunLike.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddMonoid.toAddZeroClass.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddZeroClass.toAdd.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddMonoid.toAddZeroClass.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j))))) (AddZeroClass.toAdd.{u2} R (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (AddMonoidHomClass.toAddHomClass.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddMonoid.toAddZeroClass.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddMonoid.toAddZeroClass.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5))))) (AddMonoidHom.addMonoidHomClass.{u3, u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddMonoid.toAddZeroClass.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))))) (f (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (GradedMonoid.GMul.mul.{u1, u3} ι (fun (i : ι) => A i) (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (DirectSum.GNonUnitalNonAssocSemiring.toGMul.{u1, u3} ι (fun (i : ι) => A i) (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (fun (i : ι) => _inst_2 i) (DirectSum.GSemiring.toGNonUnitalNonAssocSemiring.{u1, u3} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4)) i j ai aj)) (HMul.hMul.{u2, u2, u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => R) ai) ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A j) => R) aj) ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => R) ai) (instHMul.{u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => R) ai) (NonUnitalNonAssocSemiring.toMul.{u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => R) ai) (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => R) ai) (Semiring.toNonAssocSemiring.{u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => R) ai) _inst_5)))) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (AddMonoidHom.{u3, u2} (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A i) (fun (_x : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => R) _x) (AddHomClass.toFunLike.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A i) R (AddZeroClass.toAdd.{u3} (A i) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i)))) (AddZeroClass.toAdd.{u2} R (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (AddMonoidHomClass.toAddHomClass.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5))))) (AddMonoidHom.addMonoidHomClass.{u3, u2} (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))))) (f i) ai) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (AddMonoidHom.{u3, u2} (A j) R (AddMonoid.toAddZeroClass.{u3} (A j) (AddCommMonoid.toAddMonoid.{u3} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A j) (fun (_x : A j) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A j) => R) _x) (AddHomClass.toFunLike.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A j) R (AddMonoid.toAddZeroClass.{u3} (A j) (AddCommMonoid.toAddMonoid.{u3} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A j) R (AddZeroClass.toAdd.{u3} (A j) (AddMonoid.toAddZeroClass.{u3} (A j) (AddCommMonoid.toAddMonoid.{u3} (A j) (_inst_2 j)))) (AddZeroClass.toAdd.{u2} R (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (AddMonoidHomClass.toAddHomClass.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A j) R (AddMonoid.toAddZeroClass.{u3} (A j) (AddCommMonoid.toAddMonoid.{u3} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A j) R (AddMonoid.toAddZeroClass.{u3} (A j) (AddCommMonoid.toAddMonoid.{u3} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5))))) (AddMonoidHom.addMonoidHomClass.{u3, u2} (A j) R (AddMonoid.toAddZeroClass.{u3} (A j) (AddCommMonoid.toAddMonoid.{u3} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))))) (f j) aj))) (i : ι) (x : A i), Eq.{succ u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) => R) (FunLike.coe.{max (succ u1) (succ u3), succ u3, max (succ u1) (succ u3)} (AddMonoidHom.{u3, max u3 u1} (A i) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (fun (a : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) a) (AddHomClass.toFunLike.{max u1 u3, u3, max u1 u3} (AddMonoidHom.{u3, max u3 u1} (A i) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddZeroClass.toAdd.{u3} (A i) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i)))) (AddZeroClass.toAdd.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (AddMonoidHomClass.toAddHomClass.{max u1 u3, u3, max u1 u3} (AddMonoidHom.{u3, max u3 u1} (A i) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoidHom.addMonoidHomClass.{u3, max u1 u3} (A i) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))))) (DirectSum.of.{u1, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) i) x)) (FunLike.coe.{max (max (succ u1) (succ u3)) (succ u2), max (succ u1) (succ u3), succ u2} (RingHom.{max u3 u1, u2} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u2} R _inst_5)) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (fun (_x : DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) => R) _x) (MulHomClass.toFunLike.{max (max u1 u3) u2, max u1 u3, u2} (RingHom.{max u3 u1, u2} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u2} R _inst_5)) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (NonUnitalNonAssocSemiring.toMul.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (NonAssocSemiring.toNonUnitalNonAssocSemiring.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Semiring.toNonAssocSemiring.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)))) (NonUnitalNonAssocSemiring.toMul.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5))) (NonUnitalRingHomClass.toMulHomClass.{max (max u1 u3) u2, max u1 u3, u2} (RingHom.{max u3 u1, u2} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u2} R _inst_5)) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Semiring.toNonAssocSemiring.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4))) (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)) (RingHomClass.toNonUnitalRingHomClass.{max (max u1 u3) u2, max u1 u3, u2} (RingHom.{max u3 u1, u2} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u2} R _inst_5)) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u2} R _inst_5) (RingHom.instRingHomClassRingHom.{max u1 u3, u2} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u2} R _inst_5))))) (DirectSum.toSemiring.{u1, u3, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) R (fun (i : ι) => _inst_2 i) _inst_3 _inst_4 _inst_5 f hone hmul) (FunLike.coe.{max (succ u1) (succ u3), succ u3, max (succ u1) (succ u3)} (AddMonoidHom.{u3, max u3 u1} (A i) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (fun (_x : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) _x) (AddHomClass.toFunLike.{max u1 u3, u3, max u1 u3} (AddMonoidHom.{u3, max u3 u1} (A i) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddZeroClass.toAdd.{u3} (A i) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i)))) (AddZeroClass.toAdd.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (AddMonoidHomClass.toAddHomClass.{max u1 u3, u3, max u1 u3} (AddMonoidHom.{u3, max u3 u1} (A i) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))) (A i) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)))) (AddMonoidHom.addMonoidHomClass.{u3, max u1 u3} (A i) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoid.toAddMonoid.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (instAddCommMonoidDirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i))))))) (DirectSum.of.{u1, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) A (fun (i : ι) => _inst_2 i) i) x)) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (AddMonoidHom.{u3, u2} (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A i) (fun (_x : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => R) _x) (AddHomClass.toFunLike.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A i) R (AddZeroClass.toAdd.{u3} (A i) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i)))) (AddZeroClass.toAdd.{u2} R (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (AddMonoidHomClass.toAddHomClass.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5))))) (AddMonoidHom.addMonoidHomClass.{u3, u2} (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))))) (f i) x)
Case conversion may be inaccurate. Consider using '#align direct_sum.to_semiring_of DirectSum.toSemiring_ofₓ'. -/
@[simp]
theorem toSemiring_of (f : ∀ i, A i →+ R) (hone hmul) (i : ι) (x : A i) :
    toSemiring f hone hmul (of _ i x) = f _ x :=
  toAddMonoid_of f i x
#align direct_sum.to_semiring_of DirectSum.toSemiring_of

/- warning: direct_sum.to_semiring_coe_add_monoid_hom -> DirectSum.toSemiring_coe_addMonoidHom is a dubious translation:
lean 3 declaration is
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] {A : ι -> Type.{u2}} {R : Type.{u3}} [_inst_2 : forall (i : ι), AddCommMonoid.{u2} (A i)] [_inst_3 : AddMonoid.{u1} ι] [_inst_4 : DirectSum.GSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) A _inst_3 (fun (i : ι) => _inst_2 i)] [_inst_5 : Semiring.{u3} R] (f : forall (i : ι), AddMonoidHom.{u2, u3} (A i) R (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (hone : Eq.{succ u3} R (coeFn.{max (succ u3) (succ u2), max (succ u2) (succ u3)} (AddMonoidHom.{u2, u3} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) R (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (fun (_x : AddMonoidHom.{u2, u3} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) R (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) => (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) -> R) (AddMonoidHom.hasCoeToFun.{u2, u3} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) R (AddMonoid.toAddZeroClass.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (AddCommMonoid.toAddMonoid.{u2} (A (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (f (OfNat.ofNat.{u1} ι 0 (OfNat.mk.{u1} ι 0 (Zero.zero.{u1} ι (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)))))) (GradedMonoid.GOne.one.{u1, u2} ι (fun (i : ι) => A i) (AddZeroClass.toHasZero.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (GradedMonoid.GMonoid.toGhasOne.{u1, u2} ι (fun (i : ι) => A i) _inst_3 (DirectSum.GSemiring.toGmonoid.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4)))) (OfNat.ofNat.{u3} R 1 (OfNat.mk.{u3} R 1 (One.one.{u3} R (AddMonoidWithOne.toOne.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))))) (hmul : forall {i : ι} {j : ι} (ai : A i) (aj : A j), Eq.{succ u3} R (coeFn.{max (succ u3) (succ u2), max (succ u2) (succ u3)} (AddMonoidHom.{u2, u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddMonoid.toAddZeroClass.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (fun (_x : AddMonoidHom.{u2, u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddMonoid.toAddZeroClass.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) => (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) -> R) (AddMonoidHom.hasCoeToFun.{u2, u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddMonoid.toAddZeroClass.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (f (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (GradedMonoid.GMul.mul.{u1, u2} ι (fun (i : ι) => A i) (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (DirectSum.GNonUnitalNonAssocSemiring.toGhasMul.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (fun (i : ι) => _inst_2 i) (DirectSum.GSemiring.toGnonUnitalNonAssocSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4)) i j ai aj)) (HMul.hMul.{u3, u3, u3} R R R (instHMul.{u3} R (Distrib.toHasMul.{u3} R (NonUnitalNonAssocSemiring.toDistrib.{u3} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5))))) (coeFn.{max (succ u3) (succ u2), max (succ u2) (succ u3)} (AddMonoidHom.{u2, u3} (A i) R (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (fun (_x : AddMonoidHom.{u2, u3} (A i) R (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) => (A i) -> R) (AddMonoidHom.hasCoeToFun.{u2, u3} (A i) R (AddMonoid.toAddZeroClass.{u2} (A i) (AddCommMonoid.toAddMonoid.{u2} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (f i) ai) (coeFn.{max (succ u3) (succ u2), max (succ u2) (succ u3)} (AddMonoidHom.{u2, u3} (A j) R (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (fun (_x : AddMonoidHom.{u2, u3} (A j) R (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) => (A j) -> R) (AddMonoidHom.hasCoeToFun.{u2, u3} (A j) R (AddMonoid.toAddZeroClass.{u2} (A j) (AddCommMonoid.toAddMonoid.{u2} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (f j) aj))), Eq.{max (succ u3) (succ (max u1 u2))} (AddMonoidHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoidWithOne.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoidWithOne.toAddMonoidWithOne.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (NonAssocSemiring.toAddCommMonoidWithOne.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)))))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) ((fun (a : Sort.{max (succ (max u1 u2)) (succ u3)}) (b : Sort.{max (succ u3) (succ (max u1 u2))}) [self : HasLiftT.{max (succ (max u1 u2)) (succ u3), max (succ u3) (succ (max u1 u2))} a b] => self.0) (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (AddMonoidHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoidWithOne.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoidWithOne.toAddMonoidWithOne.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (NonAssocSemiring.toAddCommMonoidWithOne.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)))))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (HasLiftT.mk.{max (succ (max u1 u2)) (succ u3), max (succ u3) (succ (max u1 u2))} (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (AddMonoidHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoidWithOne.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoidWithOne.toAddMonoidWithOne.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (NonAssocSemiring.toAddCommMonoidWithOne.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)))))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (CoeTCₓ.coe.{max (succ (max u1 u2)) (succ u3), max (succ u3) (succ (max u1 u2))} (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (AddMonoidHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoidWithOne.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoidWithOne.toAddMonoidWithOne.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (NonAssocSemiring.toAddCommMonoidWithOne.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)))))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (AddMonoidHom.hasCoeT.{max u1 u2, u3, max (max u1 u2) u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (AddMonoid.toAddZeroClass.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoidWithOne.toAddMonoid.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoidWithOne.toAddMonoidWithOne.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (NonAssocSemiring.toAddCommMonoidWithOne.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)))))) (AddMonoid.toAddZeroClass.{u3} R (AddMonoidWithOne.toAddMonoid.{u3} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u3} R (NonAssocSemiring.toAddCommMonoidWithOne.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5))))) (RingHomClass.toAddMonoidHomClass.{max (max u1 u2) u3, max u1 u2, u3} (RingHom.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)) (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5) (RingHom.ringHomClass.{max u1 u2, u3} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u2} (DirectSum.{u1, u2} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u3} R _inst_5)))))) (DirectSum.toSemiring.{u1, u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) R (fun (i : ι) => _inst_2 i) _inst_3 _inst_4 _inst_5 f hone hmul)) (DirectSum.toAddMonoid.{u1, u2, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u3} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u3} R (Semiring.toNonAssocSemiring.{u3} R _inst_5))) f)
but is expected to have type
  forall {ι : Type.{u1}} [_inst_1 : DecidableEq.{succ u1} ι] {A : ι -> Type.{u3}} {R : Type.{u2}} [_inst_2 : forall (i : ι), AddCommMonoid.{u3} (A i)] [_inst_3 : AddMonoid.{u1} ι] [_inst_4 : DirectSum.GSemiring.{u1, u3} ι A _inst_3 (fun (i : ι) => _inst_2 i)] [_inst_5 : Semiring.{u2} R] (f : forall (i : ι), AddMonoidHom.{u3, u2} (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (hone : Eq.{succ u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) => R) (GradedMonoid.GOne.one.{u1, u3} ι (fun (i : ι) => A i) (AddMonoid.toZero.{u1} ι _inst_3) (DirectSum.GSemiring.toGOne.{u1, u3} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4))) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (AddMonoidHom.{u3, u2} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) R (AddMonoid.toAddZeroClass.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (fun (_x : A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) => R) _x) (AddHomClass.toFunLike.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) R (AddMonoid.toAddZeroClass.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) R (AddZeroClass.toAdd.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (AddMonoid.toAddZeroClass.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3))))))) (AddZeroClass.toAdd.{u2} R (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (AddMonoidHomClass.toAddHomClass.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) R (AddMonoid.toAddZeroClass.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) R (AddMonoid.toAddZeroClass.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5))))) (AddMonoidHom.addMonoidHomClass.{u3, u2} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) R (AddMonoid.toAddZeroClass.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (AddCommMonoid.toAddMonoid.{u3} (A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (_inst_2 (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))))) (f (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) (GradedMonoid.GOne.one.{u1, u3} ι (fun (i : ι) => A i) (AddMonoid.toZero.{u1} ι _inst_3) (DirectSum.GSemiring.toGOne.{u1, u3} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4))) (OfNat.ofNat.{u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) => R) (GradedMonoid.GOne.one.{u1, u3} ι (fun (i : ι) => A i) (AddMonoid.toZero.{u1} ι _inst_3) (DirectSum.GSemiring.toGOne.{u1, u3} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4))) 1 (One.toOfNat1.{u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) => R) (GradedMonoid.GOne.one.{u1, u3} ι (fun (i : ι) => A i) (AddMonoid.toZero.{u1} ι _inst_3) (DirectSum.GSemiring.toGOne.{u1, u3} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4))) (Semiring.toOne.{u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (OfNat.ofNat.{u1} ι 0 (Zero.toOfNat0.{u1} ι (AddMonoid.toZero.{u1} ι _inst_3)))) => R) (GradedMonoid.GOne.one.{u1, u3} ι (fun (i : ι) => A i) (AddMonoid.toZero.{u1} ι _inst_3) (DirectSum.GSemiring.toGOne.{u1, u3} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4))) _inst_5)))) (hmul : forall {i : ι} {j : ι} (ai : A i) (aj : A j), Eq.{succ u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) => R) (GradedMonoid.GMul.mul.{u1, u3} ι (fun (i : ι) => A i) (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (DirectSum.GNonUnitalNonAssocSemiring.toGMul.{u1, u3} ι (fun (i : ι) => A i) (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (fun (i : ι) => _inst_2 i) (DirectSum.GSemiring.toGNonUnitalNonAssocSemiring.{u1, u3} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4)) i j ai aj)) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (AddMonoidHom.{u3, u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddMonoid.toAddZeroClass.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (fun (_x : A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) => R) _x) (AddHomClass.toFunLike.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddMonoid.toAddZeroClass.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddZeroClass.toAdd.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddMonoid.toAddZeroClass.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j))))) (AddZeroClass.toAdd.{u2} R (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (AddMonoidHomClass.toAddHomClass.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddMonoid.toAddZeroClass.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddMonoid.toAddZeroClass.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5))))) (AddMonoidHom.addMonoidHomClass.{u3, u2} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) R (AddMonoid.toAddZeroClass.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (AddCommMonoid.toAddMonoid.{u3} (A (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (_inst_2 (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))))) (f (HAdd.hAdd.{u1, u1, u1} ι ι ι (instHAdd.{u1} ι (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3))) i j)) (GradedMonoid.GMul.mul.{u1, u3} ι (fun (i : ι) => A i) (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (DirectSum.GNonUnitalNonAssocSemiring.toGMul.{u1, u3} ι (fun (i : ι) => A i) (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_3)) (fun (i : ι) => _inst_2 i) (DirectSum.GSemiring.toGNonUnitalNonAssocSemiring.{u1, u3} ι (fun (i : ι) => A i) _inst_3 (fun (i : ι) => _inst_2 i) _inst_4)) i j ai aj)) (HMul.hMul.{u2, u2, u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => R) ai) ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A j) => R) aj) ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => R) ai) (instHMul.{u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => R) ai) (NonUnitalNonAssocSemiring.toMul.{u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => R) ai) (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => R) ai) (Semiring.toNonAssocSemiring.{u2} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => R) ai) _inst_5)))) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (AddMonoidHom.{u3, u2} (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A i) (fun (_x : A i) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A i) => R) _x) (AddHomClass.toFunLike.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A i) R (AddZeroClass.toAdd.{u3} (A i) (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i)))) (AddZeroClass.toAdd.{u2} R (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (AddMonoidHomClass.toAddHomClass.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5))))) (AddMonoidHom.addMonoidHomClass.{u3, u2} (A i) R (AddMonoid.toAddZeroClass.{u3} (A i) (AddCommMonoid.toAddMonoid.{u3} (A i) (_inst_2 i))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))))) (f i) ai) (FunLike.coe.{max (succ u3) (succ u2), succ u3, succ u2} (AddMonoidHom.{u3, u2} (A j) R (AddMonoid.toAddZeroClass.{u3} (A j) (AddCommMonoid.toAddMonoid.{u3} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A j) (fun (_x : A j) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.403 : A j) => R) _x) (AddHomClass.toFunLike.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A j) R (AddMonoid.toAddZeroClass.{u3} (A j) (AddCommMonoid.toAddMonoid.{u3} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A j) R (AddZeroClass.toAdd.{u3} (A j) (AddMonoid.toAddZeroClass.{u3} (A j) (AddCommMonoid.toAddMonoid.{u3} (A j) (_inst_2 j)))) (AddZeroClass.toAdd.{u2} R (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (AddMonoidHomClass.toAddHomClass.{max u3 u2, u3, u2} (AddMonoidHom.{u3, u2} (A j) R (AddMonoid.toAddZeroClass.{u3} (A j) (AddCommMonoid.toAddMonoid.{u3} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (A j) R (AddMonoid.toAddZeroClass.{u3} (A j) (AddCommMonoid.toAddMonoid.{u3} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5))))) (AddMonoidHom.addMonoidHomClass.{u3, u2} (A j) R (AddMonoid.toAddZeroClass.{u3} (A j) (AddCommMonoid.toAddMonoid.{u3} (A j) (_inst_2 j))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))))) (f j) aj))), Eq.{max (max (succ u1) (succ u3)) (succ u2)} (AddMonoidHom.{max u1 u3, u2} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (AddMonoid.toAddZeroClass.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoidWithOne.toAddMonoid.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoidWithOne.toAddMonoidWithOne.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (NonAssocSemiring.toAddCommMonoidWithOne.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Semiring.toNonAssocSemiring.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)))))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5)))))) (AddMonoidHomClass.toAddMonoidHom.{max u1 u3, u2, max (max u1 u3) u2} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (RingHom.{max u3 u1, u2} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u2} R _inst_5)) (AddMonoid.toAddZeroClass.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddMonoidWithOne.toAddMonoid.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (AddCommMonoidWithOne.toAddMonoidWithOne.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (NonAssocSemiring.toAddCommMonoidWithOne.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (Semiring.toNonAssocSemiring.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)))))) (AddMonoid.toAddZeroClass.{u2} R (AddMonoidWithOne.toAddMonoid.{u2} R (AddCommMonoidWithOne.toAddMonoidWithOne.{u2} R (NonAssocSemiring.toAddCommMonoidWithOne.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5))))) (RingHomClass.toAddMonoidHomClass.{max (max u1 u3) u2, max u1 u3, u2} (RingHom.{max u3 u1, u2} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u2} R _inst_5)) (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u2} R _inst_5) (RingHom.instRingHomClassRingHom.{max u1 u3, u2} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) R (Semiring.toNonAssocSemiring.{max u1 u3} (DirectSum.{u1, u3} ι (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i)) (DirectSum.semiring.{u1, u3} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) _inst_3 _inst_4)) (Semiring.toNonAssocSemiring.{u2} R _inst_5))) (DirectSum.toSemiring.{u1, u3, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) R (fun (i : ι) => _inst_2 i) _inst_3 _inst_4 _inst_5 f hone hmul)) (DirectSum.toAddMonoid.{u1, u3, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => A i) (fun (i : ι) => _inst_2 i) R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_5))) f)
Case conversion may be inaccurate. Consider using '#align direct_sum.to_semiring_coe_add_monoid_hom DirectSum.toSemiring_coe_addMonoidHomₓ'. -/
@[simp]
theorem toSemiring_coe_addMonoidHom (f : ∀ i, A i →+ R) (hone hmul) :
    (toSemiring f hone hmul : (⨁ i, A i) →+ R) = toAddMonoid f :=
  rfl
#align direct_sum.to_semiring_coe_add_monoid_hom DirectSum.toSemiring_coe_addMonoidHom

#print DirectSum.liftRingHom /-
/-- Families of `add_monoid_hom`s preserving `direct_sum.ghas_one.one` and `direct_sum.ghas_mul.mul`
are isomorphic to `ring_hom`s on `⨁ i, A i`. This is a stronger version of `dfinsupp.lift_add_hom`.
-/
@[simps]
def liftRingHom :
    { f : ∀ {i}, A i →+ R //
        f GradedMonoid.GOne.one = 1 ∧
          ∀ {i j} (ai : A i) (aj : A j), f (GradedMonoid.GMul.mul ai aj) = f ai * f aj } ≃
      ((⨁ i, A i) →+* R)
    where
  toFun f := toSemiring (fun _ => f.1) f.2.1 fun _ _ => f.2.2
  invFun F :=
    ⟨fun i => (F : (⨁ i, A i) →+ R).comp (of _ i),
      by
      simp only [AddMonoidHom.comp_apply, [anonymous]]
      rw [← F.map_one]
      rfl, fun i j ai aj =>
      by
      simp only [AddMonoidHom.comp_apply, [anonymous]]
      rw [← F.map_mul, of_mul_of]⟩
  left_inv f := by
    ext (xi xv)
    exact to_add_monoid_of (fun _ => f.1) xi xv
  right_inv F := by
    apply RingHom.coe_addMonoidHom_injective
    ext (xi xv)
    simp only [RingHom.coe_addMonoidHom_mk, DirectSum.toAddMonoid_of, AddMonoidHom.mk_coe,
      AddMonoidHom.comp_apply, to_semiring_coe_add_monoid_hom]
#align direct_sum.lift_ring_hom DirectSum.liftRingHom
-/

end ToSemiring

end DirectSum

/-! ### Concrete instances -/


section Uniform

variable (ι)

/- warning: non_unital_non_assoc_semiring.direct_sum_gnon_unital_non_assoc_semiring -> NonUnitalNonAssocSemiring.directSumGNonUnitalNonAssocSemiring is a dubious translation:
lean 3 declaration is
  forall (ι : Type.{u1}) [_inst_1 : DecidableEq.{succ u1} ι] {R : Type.{u2}} [_inst_2 : AddMonoid.{u1} ι] [_inst_3 : NonUnitalNonAssocSemiring.{u2} R], DirectSum.GNonUnitalNonAssocSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => R) (AddZeroClass.toHasAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι _inst_2)) (fun (i : ι) => NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R _inst_3)
but is expected to have type
  forall (ι : Type.{u1}) {_inst_1 : Type.{u2}} [R : AddMonoid.{u1} ι] [_inst_2 : NonUnitalNonAssocSemiring.{u2} _inst_1], DirectSum.GNonUnitalNonAssocSemiring.{u1, u2} ι (fun (x._@.Mathlib.Algebra.DirectSum.Ring._hyg.6396 : ι) => _inst_1) (AddZeroClass.toAdd.{u1} ι (AddMonoid.toAddZeroClass.{u1} ι R)) (fun (i : ι) => NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} ((fun (x._@.Mathlib.Algebra.DirectSum.Ring._hyg.6396 : ι) => _inst_1) i) _inst_2)
Case conversion may be inaccurate. Consider using '#align non_unital_non_assoc_semiring.direct_sum_gnon_unital_non_assoc_semiring NonUnitalNonAssocSemiring.directSumGNonUnitalNonAssocSemiringₓ'. -/
/-- A direct sum of copies of a `semiring` inherits the multiplication structure. -/
instance NonUnitalNonAssocSemiring.directSumGNonUnitalNonAssocSemiring {R : Type _} [AddMonoid ι]
    [NonUnitalNonAssocSemiring R] : DirectSum.GNonUnitalNonAssocSemiring fun i : ι => R :=
  { Mul.gMul ι with
    mul_zero := fun i j => MulZeroClass.mul_zero
    zero_mul := fun i j => MulZeroClass.zero_mul
    mul_add := fun i j => mul_add
    add_mul := fun i j => add_mul }
#align non_unital_non_assoc_semiring.direct_sum_gnon_unital_non_assoc_semiring NonUnitalNonAssocSemiring.directSumGNonUnitalNonAssocSemiring

/- warning: semiring.direct_sum_gsemiring -> Semiring.directSumGSemiring is a dubious translation:
lean 3 declaration is
  forall (ι : Type.{u1}) [_inst_1 : DecidableEq.{succ u1} ι] {R : Type.{u2}} [_inst_2 : AddMonoid.{u1} ι] [_inst_3 : Semiring.{u2} R], DirectSum.GSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => R) _inst_2 (fun (i : ι) => NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R _inst_3)))
but is expected to have type
  forall (ι : Type.{u1}) {_inst_1 : Type.{u2}} [R : AddMonoid.{u1} ι] [_inst_2 : Semiring.{u2} _inst_1], DirectSum.GSemiring.{u1, u2} ι (fun (x._@.Mathlib.Algebra.DirectSum.Ring._hyg.6437 : ι) => _inst_1) R (fun (i : ι) => NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} ((fun (x._@.Mathlib.Algebra.DirectSum.Ring._hyg.6437 : ι) => _inst_1) i) (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} ((fun (x._@.Mathlib.Algebra.DirectSum.Ring._hyg.6437 : ι) => _inst_1) i) (Semiring.toNonAssocSemiring.{u2} ((fun (x._@.Mathlib.Algebra.DirectSum.Ring._hyg.6437 : ι) => _inst_1) i) _inst_2)))
Case conversion may be inaccurate. Consider using '#align semiring.direct_sum_gsemiring Semiring.directSumGSemiringₓ'. -/
/-- A direct sum of copies of a `semiring` inherits the multiplication structure. -/
instance Semiring.directSumGSemiring {R : Type _} [AddMonoid ι] [Semiring R] :
    DirectSum.GSemiring fun i : ι => R :=
  { NonUnitalNonAssocSemiring.directSumGNonUnitalNonAssocSemiring ι,
    Monoid.gMonoid ι with
    natCast := fun n => n
    natCast_zero := Nat.cast_zero
    natCast_succ := Nat.cast_succ }
#align semiring.direct_sum_gsemiring Semiring.directSumGSemiring

open DirectSum

-- To check `has_mul.ghas_mul_mul` matches
example {R : Type _} [AddMonoid ι] [Semiring R] (i j : ι) (a b : R) :
    (DirectSum.of _ i a * DirectSum.of _ j b : ⨁ i, R) = DirectSum.of _ (i + j) (a * b) := by
  rw [DirectSum.of_mul_of, Mul.gMul_mul]

/- warning: comm_semiring.direct_sum_gcomm_semiring -> CommSemiring.directSumGCommSemiring is a dubious translation:
lean 3 declaration is
  forall (ι : Type.{u1}) [_inst_1 : DecidableEq.{succ u1} ι] {R : Type.{u2}} [_inst_2 : AddCommMonoid.{u1} ι] [_inst_3 : CommSemiring.{u2} R], DirectSum.GCommSemiring.{u1, u2} ι (fun (a : ι) (b : ι) => _inst_1 a b) (fun (i : ι) => R) _inst_2 (fun (i : ι) => NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} R (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} R (Semiring.toNonAssocSemiring.{u2} R (CommSemiring.toSemiring.{u2} R _inst_3))))
but is expected to have type
  forall (ι : Type.{u1}) {_inst_1 : Type.{u2}} [R : AddCommMonoid.{u1} ι] [_inst_2 : CommSemiring.{u2} _inst_1], DirectSum.GCommSemiring.{u1, u2} ι (fun (x._@.Mathlib.Algebra.DirectSum.Ring._hyg.6607 : ι) => _inst_1) R (fun (i : ι) => NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} ((fun (x._@.Mathlib.Algebra.DirectSum.Ring._hyg.6607 : ι) => _inst_1) i) (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u2} ((fun (x._@.Mathlib.Algebra.DirectSum.Ring._hyg.6607 : ι) => _inst_1) i) (Semiring.toNonAssocSemiring.{u2} ((fun (x._@.Mathlib.Algebra.DirectSum.Ring._hyg.6607 : ι) => _inst_1) i) (CommSemiring.toSemiring.{u2} ((fun (x._@.Mathlib.Algebra.DirectSum.Ring._hyg.6607 : ι) => _inst_1) i) _inst_2))))
Case conversion may be inaccurate. Consider using '#align comm_semiring.direct_sum_gcomm_semiring CommSemiring.directSumGCommSemiringₓ'. -/
/-- A direct sum of copies of a `comm_semiring` inherits the commutative multiplication structure.
-/
instance CommSemiring.directSumGCommSemiring {R : Type _} [AddCommMonoid ι] [CommSemiring R] :
    DirectSum.GCommSemiring fun i : ι => R :=
  { CommMonoid.gCommMonoid ι, Semiring.directSumGSemiring ι with }
#align comm_semiring.direct_sum_gcomm_semiring CommSemiring.directSumGCommSemiring

end Uniform

