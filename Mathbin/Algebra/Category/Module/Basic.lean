/-
Copyright (c) 2019 Robert A. Spencer. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Robert A. Spencer, Markus Himmel

! This file was ported from Lean 3 source module algebra.category.Module.basic
! leanprover-community/mathlib commit 814d76e2247d5ba8bc024843552da1278bfe9e5c
! Please do not edit these lines, except to modify the commit id
! if you have ported upstream changes.
-/
import Mathbin.Algebra.Category.Group.Preadditive
import Mathbin.CategoryTheory.Linear.Basic
import Mathbin.CategoryTheory.Elementwise
import Mathbin.LinearAlgebra.Basic
import Mathbin.CategoryTheory.Conj
import Mathbin.CategoryTheory.Preadditive.AdditiveFunctor

/-!
# The category of `R`-modules

> THIS FILE IS SYNCHRONIZED WITH MATHLIB4.
> Any changes to this file require a corresponding PR to mathlib4.

`Module.{v} R` is the category of bundled `R`-modules with carrier in the universe `v`. We show
that it is preadditive and show that being an isomorphism, monomorphism and epimorphism is
equivalent to being a linear equivalence, an injective linear map and a surjective linear map,
respectively.

## Implementation details

To construct an object in the category of `R`-modules from a type `M` with an instance of the
`module` typeclass, write `of R M`. There is a coercion in the other direction.

Similarly, there is a coercion from morphisms in `Module R` to linear maps.

Unfortunately, Lean is not smart enough to see that, given an object `M : Module R`, the expression
`of R M`, where we coerce `M` to the carrier type, is definitionally equal to `M` itself.
This means that to go the other direction, i.e., from linear maps/equivalences to (iso)morphisms
in the category of `R`-modules, we have to take care not to inadvertently end up with an
`of R M` where `M` is already an object. Hence, given `f : M →ₗ[R] N`,
* if `M N : Module R`, simply use `f`;
* if `M : Module R` and `N` is an unbundled `R`-module, use `↿f` or `as_hom_left f`;
* if `M` is an unbundled `R`-module and `N : Module R`, use `↾f` or `as_hom_right f`;
* if `M` and `N` are unbundled `R`-modules, use `↟f` or `as_hom f`.

Similarly, given `f : M ≃ₗ[R] N`, use `to_Module_iso`, `to_Module_iso'_left`, `to_Module_iso'_right`
or `to_Module_iso'`, respectively.

The arrow notations are localized, so you may have to `open_locale Module` to use them. Note that
the notation for `as_hom_left` clashes with the notation used to promote functions between types to
morphisms in the category `Type`, so to avoid confusion, it is probably a good idea to avoid having
the locales `Module` and `category_theory.Type` open at the same time.

If you get an error when trying to apply a theorem and the `convert` tactic produces goals of the
form `M = of R M`, then you probably used an incorrect variant of `as_hom` or `to_Module_iso`.

-/


open CategoryTheory

open CategoryTheory.Limits

open CategoryTheory.Limits.WalkingParallelPair

universe v u

variable (R : Type u) [Ring R]

#print ModuleCat /-
/-- The category of R-modules and their morphisms.

 Note that in the case of `R = ℤ`, we can not
impose here that the `ℤ`-multiplication field from the module structure is defeq to the one coming
from the `is_add_comm_group` structure (contrary to what we do for all module structures in
mathlib), which creates some difficulties down the road. -/
structure ModuleCat where
  carrier : Type v
  [isAddCommGroup : AddCommGroup carrier]
  [isModule : Module R carrier]
#align Module ModuleCat
-/

attribute [instance] ModuleCat.isAddCommGroup ModuleCat.isModule

namespace ModuleCat

instance : CoeSort (ModuleCat.{v} R) (Type v) :=
  ⟨ModuleCat.Carrier⟩

#print ModuleCat.moduleCategory /-
instance moduleCategory : Category (ModuleCat.{v} R)
    where
  Hom M N := M →ₗ[R] N
  id M := 1
  comp A B C f g := g.comp f
  id_comp' X Y f := LinearMap.id_comp _
  comp_id' X Y f := LinearMap.comp_id _
  assoc' W X Y Z f g h := LinearMap.comp_assoc _ _ _
#align Module.Module_category ModuleCat.moduleCategory
-/

#print ModuleCat.moduleConcreteCategory /-
instance moduleConcreteCategory : ConcreteCategory.{v} (ModuleCat.{v} R)
    where
  forget :=
    { obj := fun R => R
      map := fun R S f => (f : R → S) }
  forget_faithful := { }
#align Module.Module_concrete_category ModuleCat.moduleConcreteCategory
-/

#print ModuleCat.hasForgetToAddCommGroup /-
instance hasForgetToAddCommGroup : HasForget₂ (ModuleCat R) AddCommGroupCat
    where forget₂ :=
    { obj := fun M => AddCommGroupCat.of M
      map := fun M₁ M₂ f => LinearMap.toAddMonoidHom f }
#align Module.has_forget_to_AddCommGroup ModuleCat.hasForgetToAddCommGroup
-/

instance (M N : ModuleCat R) : LinearMapClass (M ⟶ N) R M N :=
  { LinearMap.semilinearMapClass with coe := fun f => f }

#print ModuleCat.of /-
/-- The object in the category of R-modules associated to an R-module -/
def of (X : Type v) [AddCommGroup X] [Module R X] : ModuleCat R :=
  ⟨X⟩
#align Module.of ModuleCat.of
-/

/- warning: Module.forget₂_obj -> ModuleCat.forget₂_obj is a dubious translation:
lean 3 declaration is
  forall (R : Type.{u1}) [_inst_1 : Ring.{u1} R] (X : ModuleCat.{u2, u1} R _inst_1), Eq.{succ (succ u2)} AddCommGroupCat.{u2} (CategoryTheory.Functor.obj.{u2, u2, max u1 (succ u2), succ u2} (ModuleCat.{u2, u1} R _inst_1) (ModuleCat.moduleCategory.{u2, u1} R _inst_1) AddCommGroupCat.{u2} AddCommGroupCat.largeCategory.{u2} (CategoryTheory.forget₂.{max u1 (succ u2), succ u2, u2, u2, u2} (ModuleCat.{u2, u1} R _inst_1) AddCommGroupCat.{u2} (ModuleCat.moduleCategory.{u2, u1} R _inst_1) (ModuleCat.moduleConcreteCategory.{u2, u1} R _inst_1) AddCommGroupCat.largeCategory.{u2} AddCommGroupCat.concreteCategory.{u2} (ModuleCat.hasForgetToAddCommGroup.{u1, u2} R _inst_1)) X) (AddCommGroupCat.of.{u2} (coeSort.{max (succ u1) (succ (succ u2)), succ (succ u2)} (ModuleCat.{u2, u1} R _inst_1) Type.{u2} (ModuleCat.hasCoeToSort.{u2, u1} R _inst_1) X) (ModuleCat.isAddCommGroup.{u2, u1} R _inst_1 X))
but is expected to have type
  forall (R : Type.{u2}) [_inst_1 : Ring.{u2} R] (X : ModuleCat.{u1, u2} R _inst_1), Eq.{succ (succ u1)} AddCommGroupCat.{u1} (Prefunctor.obj.{succ u1, succ u1, max u2 (succ u1), succ u1} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) AddCommGroupCat.{u1} (CategoryTheory.CategoryStruct.toQuiver.{u1, succ u1} AddCommGroupCat.{u1} (CategoryTheory.Category.toCategoryStruct.{u1, succ u1} AddCommGroupCat.{u1} instAddCommGroupCatLargeCategory.{u1})) (CategoryTheory.Functor.toPrefunctor.{u1, u1, max u2 (succ u1), succ u1} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1) AddCommGroupCat.{u1} instAddCommGroupCatLargeCategory.{u1} (CategoryTheory.forget₂.{max u2 (succ u1), succ u1, u1, u1, u1} (ModuleCat.{u1, u2} R _inst_1) AddCommGroupCat.{u1} (ModuleCat.moduleCategory.{u1, u2} R _inst_1) (ModuleCat.moduleConcreteCategory.{u1, u2} R _inst_1) instAddCommGroupCatLargeCategory.{u1} AddCommGroupCat.concreteCategory.{u1} (ModuleCat.hasForgetToAddCommGroup.{u2, u1} R _inst_1))) X) (AddCommGroupCat.of.{u1} (ModuleCat.carrier.{u1, u2} R _inst_1 X) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 X))
Case conversion may be inaccurate. Consider using '#align Module.forget₂_obj ModuleCat.forget₂_objₓ'. -/
@[simp]
theorem forget₂_obj (X : ModuleCat R) :
    (forget₂ (ModuleCat R) AddCommGroupCat).obj X = AddCommGroupCat.of X :=
  rfl
#align Module.forget₂_obj ModuleCat.forget₂_obj

/- warning: Module.forget₂_obj_Module_of -> ModuleCat.forget₂_obj_moduleCat_of is a dubious translation:
lean 3 declaration is
  forall (R : Type.{u2}) [_inst_1 : Ring.{u2} R] (X : Type.{u1}) [_inst_2 : AddCommGroup.{u1} X] [_inst_3 : Module.{u2, u1} R X (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} X _inst_2)], Eq.{succ (succ u1)} AddCommGroupCat.{u1} (CategoryTheory.Functor.obj.{u1, u1, max u2 (succ u1), succ u1} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1) AddCommGroupCat.{u1} AddCommGroupCat.largeCategory.{u1} (CategoryTheory.forget₂.{max u2 (succ u1), succ u1, u1, u1, u1} (ModuleCat.{u1, u2} R _inst_1) AddCommGroupCat.{u1} (ModuleCat.moduleCategory.{u1, u2} R _inst_1) (ModuleCat.moduleConcreteCategory.{u1, u2} R _inst_1) AddCommGroupCat.largeCategory.{u1} AddCommGroupCat.concreteCategory.{u1} (ModuleCat.hasForgetToAddCommGroup.{u2, u1} R _inst_1)) (ModuleCat.of.{u1, u2} R _inst_1 X _inst_2 _inst_3)) (AddCommGroupCat.of.{u1} X _inst_2)
but is expected to have type
  forall (R : Type.{u2}) [_inst_1 : Ring.{u2} R] (X : Type.{u1}) [_inst_2 : AddCommGroup.{u1} X] [_inst_3 : Module.{u2, u1} R X (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} X _inst_2)], Eq.{succ (succ u1)} AddCommGroupCat.{u1} (Prefunctor.obj.{succ u1, succ u1, max u2 (succ u1), succ u1} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) AddCommGroupCat.{u1} (CategoryTheory.CategoryStruct.toQuiver.{u1, succ u1} AddCommGroupCat.{u1} (CategoryTheory.Category.toCategoryStruct.{u1, succ u1} AddCommGroupCat.{u1} instAddCommGroupCatLargeCategory.{u1})) (CategoryTheory.Functor.toPrefunctor.{u1, u1, max u2 (succ u1), succ u1} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1) AddCommGroupCat.{u1} instAddCommGroupCatLargeCategory.{u1} (CategoryTheory.forget₂.{max u2 (succ u1), succ u1, u1, u1, u1} (ModuleCat.{u1, u2} R _inst_1) AddCommGroupCat.{u1} (ModuleCat.moduleCategory.{u1, u2} R _inst_1) (ModuleCat.moduleConcreteCategory.{u1, u2} R _inst_1) instAddCommGroupCatLargeCategory.{u1} AddCommGroupCat.concreteCategory.{u1} (ModuleCat.hasForgetToAddCommGroup.{u2, u1} R _inst_1))) (ModuleCat.of.{u1, u2} R _inst_1 X _inst_2 _inst_3)) (AddCommGroupCat.of.{u1} X _inst_2)
Case conversion may be inaccurate. Consider using '#align Module.forget₂_obj_Module_of ModuleCat.forget₂_obj_moduleCat_ofₓ'. -/
@[simp]
theorem forget₂_obj_moduleCat_of (X : Type v) [AddCommGroup X] [Module R X] :
    (forget₂ (ModuleCat R) AddCommGroupCat).obj (of R X) = AddCommGroupCat.of X :=
  rfl
#align Module.forget₂_obj_Module_of ModuleCat.forget₂_obj_moduleCat_of

/- warning: Module.forget₂_map -> ModuleCat.forget₂_map is a dubious translation:
lean 3 declaration is
  forall (R : Type.{u1}) [_inst_1 : Ring.{u1} R] (X : ModuleCat.{u2, u1} R _inst_1) (Y : ModuleCat.{u2, u1} R _inst_1) (f : Quiver.Hom.{succ u2, max u1 (succ u2)} (ModuleCat.{u2, u1} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u2, max u1 (succ u2)} (ModuleCat.{u2, u1} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u2, max u1 (succ u2)} (ModuleCat.{u2, u1} R _inst_1) (ModuleCat.moduleCategory.{u2, u1} R _inst_1))) X Y), Eq.{succ u2} (Quiver.Hom.{succ u2, succ u2} AddCommGroupCat.{u2} (CategoryTheory.CategoryStruct.toQuiver.{u2, succ u2} AddCommGroupCat.{u2} (CategoryTheory.Category.toCategoryStruct.{u2, succ u2} AddCommGroupCat.{u2} AddCommGroupCat.largeCategory.{u2})) (CategoryTheory.Functor.obj.{u2, u2, max u1 (succ u2), succ u2} (ModuleCat.{u2, u1} R _inst_1) (ModuleCat.moduleCategory.{u2, u1} R _inst_1) AddCommGroupCat.{u2} AddCommGroupCat.largeCategory.{u2} (CategoryTheory.forget₂.{max u1 (succ u2), succ u2, u2, u2, u2} (ModuleCat.{u2, u1} R _inst_1) AddCommGroupCat.{u2} (ModuleCat.moduleCategory.{u2, u1} R _inst_1) (ModuleCat.moduleConcreteCategory.{u2, u1} R _inst_1) AddCommGroupCat.largeCategory.{u2} AddCommGroupCat.concreteCategory.{u2} (ModuleCat.hasForgetToAddCommGroup.{u1, u2} R _inst_1)) X) (CategoryTheory.Functor.obj.{u2, u2, max u1 (succ u2), succ u2} (ModuleCat.{u2, u1} R _inst_1) (ModuleCat.moduleCategory.{u2, u1} R _inst_1) AddCommGroupCat.{u2} AddCommGroupCat.largeCategory.{u2} (CategoryTheory.forget₂.{max u1 (succ u2), succ u2, u2, u2, u2} (ModuleCat.{u2, u1} R _inst_1) AddCommGroupCat.{u2} (ModuleCat.moduleCategory.{u2, u1} R _inst_1) (ModuleCat.moduleConcreteCategory.{u2, u1} R _inst_1) AddCommGroupCat.largeCategory.{u2} AddCommGroupCat.concreteCategory.{u2} (ModuleCat.hasForgetToAddCommGroup.{u1, u2} R _inst_1)) Y)) (CategoryTheory.Functor.map.{u2, u2, max u1 (succ u2), succ u2} (ModuleCat.{u2, u1} R _inst_1) (ModuleCat.moduleCategory.{u2, u1} R _inst_1) AddCommGroupCat.{u2} AddCommGroupCat.largeCategory.{u2} (CategoryTheory.forget₂.{max u1 (succ u2), succ u2, u2, u2, u2} (ModuleCat.{u2, u1} R _inst_1) AddCommGroupCat.{u2} (ModuleCat.moduleCategory.{u2, u1} R _inst_1) (ModuleCat.moduleConcreteCategory.{u2, u1} R _inst_1) AddCommGroupCat.largeCategory.{u2} AddCommGroupCat.concreteCategory.{u2} (ModuleCat.hasForgetToAddCommGroup.{u1, u2} R _inst_1)) X Y f) (LinearMap.toAddMonoidHom.{u1, u1, u2, u2} R R (coeSort.{succ (succ u2), succ (succ u2)} (CategoryTheory.Bundled.{u2, u2} AddCommGroup.{u2}) Type.{u2} (CategoryTheory.Bundled.hasCoeToSort.{u2, u2} AddCommGroup.{u2}) (CategoryTheory.Functor.obj.{u2, u2, max u1 (succ u2), succ u2} (ModuleCat.{u2, u1} R _inst_1) (ModuleCat.moduleCategory.{u2, u1} R _inst_1) AddCommGroupCat.{u2} AddCommGroupCat.largeCategory.{u2} (CategoryTheory.forget₂.{max u1 (succ u2), succ u2, u2, u2, u2} (ModuleCat.{u2, u1} R _inst_1) AddCommGroupCat.{u2} (ModuleCat.moduleCategory.{u2, u1} R _inst_1) (ModuleCat.moduleConcreteCategory.{u2, u1} R _inst_1) AddCommGroupCat.largeCategory.{u2} AddCommGroupCat.concreteCategory.{u2} (ModuleCat.hasForgetToAddCommGroup.{u1, u2} R _inst_1)) X)) (coeSort.{succ (succ u2), succ (succ u2)} (CategoryTheory.Bundled.{u2, u2} AddCommGroup.{u2}) Type.{u2} (CategoryTheory.Bundled.hasCoeToSort.{u2, u2} AddCommGroup.{u2}) (CategoryTheory.Functor.obj.{u2, u2, max u1 (succ u2), succ u2} (ModuleCat.{u2, u1} R _inst_1) (ModuleCat.moduleCategory.{u2, u1} R _inst_1) AddCommGroupCat.{u2} AddCommGroupCat.largeCategory.{u2} (CategoryTheory.forget₂.{max u1 (succ u2), succ u2, u2, u2, u2} (ModuleCat.{u2, u1} R _inst_1) AddCommGroupCat.{u2} (ModuleCat.moduleCategory.{u2, u1} R _inst_1) (ModuleCat.moduleConcreteCategory.{u2, u1} R _inst_1) AddCommGroupCat.largeCategory.{u2} AddCommGroupCat.concreteCategory.{u2} (ModuleCat.hasForgetToAddCommGroup.{u1, u2} R _inst_1)) Y)) (Ring.toSemiring.{u1} R _inst_1) (Ring.toSemiring.{u1} R _inst_1) (AddCommGroup.toAddCommMonoid.{u2} (coeSort.{succ (succ u2), succ (succ u2)} (CategoryTheory.Bundled.{u2, u2} AddCommGroup.{u2}) Type.{u2} (CategoryTheory.Bundled.hasCoeToSort.{u2, u2} AddCommGroup.{u2}) (CategoryTheory.Functor.obj.{u2, u2, max u1 (succ u2), succ u2} (ModuleCat.{u2, u1} R _inst_1) (ModuleCat.moduleCategory.{u2, u1} R _inst_1) AddCommGroupCat.{u2} AddCommGroupCat.largeCategory.{u2} (CategoryTheory.forget₂.{max u1 (succ u2), succ u2, u2, u2, u2} (ModuleCat.{u2, u1} R _inst_1) AddCommGroupCat.{u2} (ModuleCat.moduleCategory.{u2, u1} R _inst_1) (ModuleCat.moduleConcreteCategory.{u2, u1} R _inst_1) AddCommGroupCat.largeCategory.{u2} AddCommGroupCat.concreteCategory.{u2} (ModuleCat.hasForgetToAddCommGroup.{u1, u2} R _inst_1)) X)) (AddCommGroupCat.addCommGroupInstance.{u2} (CategoryTheory.Functor.obj.{u2, u2, max u1 (succ u2), succ u2} (ModuleCat.{u2, u1} R _inst_1) (ModuleCat.moduleCategory.{u2, u1} R _inst_1) AddCommGroupCat.{u2} AddCommGroupCat.largeCategory.{u2} (CategoryTheory.forget₂.{max u1 (succ u2), succ u2, u2, u2, u2} (ModuleCat.{u2, u1} R _inst_1) AddCommGroupCat.{u2} (ModuleCat.moduleCategory.{u2, u1} R _inst_1) (ModuleCat.moduleConcreteCategory.{u2, u1} R _inst_1) AddCommGroupCat.largeCategory.{u2} AddCommGroupCat.concreteCategory.{u2} (ModuleCat.hasForgetToAddCommGroup.{u1, u2} R _inst_1)) X))) (AddCommGroup.toAddCommMonoid.{u2} (coeSort.{succ (succ u2), succ (succ u2)} (CategoryTheory.Bundled.{u2, u2} AddCommGroup.{u2}) Type.{u2} (CategoryTheory.Bundled.hasCoeToSort.{u2, u2} AddCommGroup.{u2}) (CategoryTheory.Functor.obj.{u2, u2, max u1 (succ u2), succ u2} (ModuleCat.{u2, u1} R _inst_1) (ModuleCat.moduleCategory.{u2, u1} R _inst_1) AddCommGroupCat.{u2} AddCommGroupCat.largeCategory.{u2} (CategoryTheory.forget₂.{max u1 (succ u2), succ u2, u2, u2, u2} (ModuleCat.{u2, u1} R _inst_1) AddCommGroupCat.{u2} (ModuleCat.moduleCategory.{u2, u1} R _inst_1) (ModuleCat.moduleConcreteCategory.{u2, u1} R _inst_1) AddCommGroupCat.largeCategory.{u2} AddCommGroupCat.concreteCategory.{u2} (ModuleCat.hasForgetToAddCommGroup.{u1, u2} R _inst_1)) Y)) (AddCommGroupCat.addCommGroupInstance.{u2} (CategoryTheory.Functor.obj.{u2, u2, max u1 (succ u2), succ u2} (ModuleCat.{u2, u1} R _inst_1) (ModuleCat.moduleCategory.{u2, u1} R _inst_1) AddCommGroupCat.{u2} AddCommGroupCat.largeCategory.{u2} (CategoryTheory.forget₂.{max u1 (succ u2), succ u2, u2, u2, u2} (ModuleCat.{u2, u1} R _inst_1) AddCommGroupCat.{u2} (ModuleCat.moduleCategory.{u2, u1} R _inst_1) (ModuleCat.moduleConcreteCategory.{u2, u1} R _inst_1) AddCommGroupCat.largeCategory.{u2} AddCommGroupCat.concreteCategory.{u2} (ModuleCat.hasForgetToAddCommGroup.{u1, u2} R _inst_1)) Y))) (ModuleCat.isModule.{u2, u1} R _inst_1 X) (ModuleCat.isModule.{u2, u1} R _inst_1 Y) (RingHom.id.{u1} R (Semiring.toNonAssocSemiring.{u1} R (Ring.toSemiring.{u1} R _inst_1))) f)
but is expected to have type
  forall (R : Type.{u2}) [_inst_1 : Ring.{u2} R] (X : ModuleCat.{u1, u2} R _inst_1) (Y : ModuleCat.{u1, u2} R _inst_1) (f : Quiver.Hom.{succ u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) X Y), Eq.{succ u1} (Quiver.Hom.{succ u1, succ u1} AddCommGroupCat.{u1} (CategoryTheory.CategoryStruct.toQuiver.{u1, succ u1} AddCommGroupCat.{u1} (CategoryTheory.Category.toCategoryStruct.{u1, succ u1} AddCommGroupCat.{u1} instAddCommGroupCatLargeCategory.{u1})) (Prefunctor.obj.{succ u1, succ u1, max u2 (succ u1), succ u1} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) AddCommGroupCat.{u1} (CategoryTheory.CategoryStruct.toQuiver.{u1, succ u1} AddCommGroupCat.{u1} (CategoryTheory.Category.toCategoryStruct.{u1, succ u1} AddCommGroupCat.{u1} instAddCommGroupCatLargeCategory.{u1})) (CategoryTheory.Functor.toPrefunctor.{u1, u1, max u2 (succ u1), succ u1} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1) AddCommGroupCat.{u1} instAddCommGroupCatLargeCategory.{u1} (CategoryTheory.forget₂.{max u2 (succ u1), succ u1, u1, u1, u1} (ModuleCat.{u1, u2} R _inst_1) AddCommGroupCat.{u1} (ModuleCat.moduleCategory.{u1, u2} R _inst_1) (ModuleCat.moduleConcreteCategory.{u1, u2} R _inst_1) instAddCommGroupCatLargeCategory.{u1} AddCommGroupCat.concreteCategory.{u1} (ModuleCat.hasForgetToAddCommGroup.{u2, u1} R _inst_1))) X) (Prefunctor.obj.{succ u1, succ u1, max u2 (succ u1), succ u1} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) AddCommGroupCat.{u1} (CategoryTheory.CategoryStruct.toQuiver.{u1, succ u1} AddCommGroupCat.{u1} (CategoryTheory.Category.toCategoryStruct.{u1, succ u1} AddCommGroupCat.{u1} instAddCommGroupCatLargeCategory.{u1})) (CategoryTheory.Functor.toPrefunctor.{u1, u1, max u2 (succ u1), succ u1} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1) AddCommGroupCat.{u1} instAddCommGroupCatLargeCategory.{u1} (CategoryTheory.forget₂.{max u2 (succ u1), succ u1, u1, u1, u1} (ModuleCat.{u1, u2} R _inst_1) AddCommGroupCat.{u1} (ModuleCat.moduleCategory.{u1, u2} R _inst_1) (ModuleCat.moduleConcreteCategory.{u1, u2} R _inst_1) instAddCommGroupCatLargeCategory.{u1} AddCommGroupCat.concreteCategory.{u1} (ModuleCat.hasForgetToAddCommGroup.{u2, u1} R _inst_1))) Y)) (Prefunctor.map.{succ u1, succ u1, max u2 (succ u1), succ u1} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) AddCommGroupCat.{u1} (CategoryTheory.CategoryStruct.toQuiver.{u1, succ u1} AddCommGroupCat.{u1} (CategoryTheory.Category.toCategoryStruct.{u1, succ u1} AddCommGroupCat.{u1} instAddCommGroupCatLargeCategory.{u1})) (CategoryTheory.Functor.toPrefunctor.{u1, u1, max u2 (succ u1), succ u1} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1) AddCommGroupCat.{u1} instAddCommGroupCatLargeCategory.{u1} (CategoryTheory.forget₂.{max u2 (succ u1), succ u1, u1, u1, u1} (ModuleCat.{u1, u2} R _inst_1) AddCommGroupCat.{u1} (ModuleCat.moduleCategory.{u1, u2} R _inst_1) (ModuleCat.moduleConcreteCategory.{u1, u2} R _inst_1) instAddCommGroupCatLargeCategory.{u1} AddCommGroupCat.concreteCategory.{u1} (ModuleCat.hasForgetToAddCommGroup.{u2, u1} R _inst_1))) X Y f) (LinearMap.toAddMonoidHom.{u2, u2, u1, u1} R R (ModuleCat.carrier.{u1, u2} R _inst_1 X) (ModuleCat.carrier.{u1, u2} R _inst_1 Y) (Ring.toSemiring.{u2} R _inst_1) (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} R _inst_1 X) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} R _inst_1 Y) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 Y)) (ModuleCat.isModule.{u1, u2} R _inst_1 X) (ModuleCat.isModule.{u1, u2} R _inst_1 Y) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_1))) f)
Case conversion may be inaccurate. Consider using '#align Module.forget₂_map ModuleCat.forget₂_mapₓ'. -/
@[simp]
theorem forget₂_map (X Y : ModuleCat R) (f : X ⟶ Y) :
    (forget₂ (ModuleCat R) AddCommGroupCat).map f = LinearMap.toAddMonoidHom f :=
  rfl
#align Module.forget₂_map ModuleCat.forget₂_map

#print ModuleCat.ofHom /-
/-- Typecheck a `linear_map` as a morphism in `Module R`. -/
def ofHom {R : Type u} [Ring R] {X Y : Type v} [AddCommGroup X] [Module R X] [AddCommGroup Y]
    [Module R Y] (f : X →ₗ[R] Y) : of R X ⟶ of R Y :=
  f
#align Module.of_hom ModuleCat.ofHom
-/

/- warning: Module.of_hom_apply -> ModuleCat.ofHom_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u2}} [_inst_2 : Ring.{u2} R] {X : Type.{u1}} {Y : Type.{u1}} [_inst_3 : AddCommGroup.{u1} X] [_inst_4 : Module.{u2, u1} R X (Ring.toSemiring.{u2} R _inst_2) (AddCommGroup.toAddCommMonoid.{u1} X _inst_3)] [_inst_5 : AddCommGroup.{u1} Y] [_inst_6 : Module.{u2, u1} R Y (Ring.toSemiring.{u2} R _inst_2) (AddCommGroup.toAddCommMonoid.{u1} Y _inst_5)] (f : LinearMap.{u2, u2, u1, u1} R R (Ring.toSemiring.{u2} R _inst_2) (Ring.toSemiring.{u2} R _inst_2) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_2))) X Y (AddCommGroup.toAddCommMonoid.{u1} X _inst_3) (AddCommGroup.toAddCommMonoid.{u1} Y _inst_5) _inst_4 _inst_6) (x : X), Eq.{succ u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_2) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_2) (ModuleCat.of.{u1, u2} R _inst_2 Y _inst_5 _inst_6)) (coeFn.{succ u1, succ u1} (Quiver.Hom.{succ u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_2) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_2) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_2) (ModuleCat.moduleCategory.{u1, u2} R _inst_2))) (ModuleCat.of.{u1, u2} R _inst_2 X _inst_3 _inst_4) (ModuleCat.of.{u1, u2} R _inst_2 Y _inst_5 _inst_6)) (fun (_x : LinearMap.{u2, u2, u1, u1} R R (Ring.toSemiring.{u2} R _inst_2) (Ring.toSemiring.{u2} R _inst_2) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_2))) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_2) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_2) (ModuleCat.of.{u1, u2} R _inst_2 X _inst_3 _inst_4)) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_2) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_2) (ModuleCat.of.{u1, u2} R _inst_2 Y _inst_5 _inst_6)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_2) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_2) (ModuleCat.of.{u1, u2} R _inst_2 X _inst_3 _inst_4)) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_2 (ModuleCat.of.{u1, u2} R _inst_2 X _inst_3 _inst_4))) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_2) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_2) (ModuleCat.of.{u1, u2} R _inst_2 Y _inst_5 _inst_6)) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_2 (ModuleCat.of.{u1, u2} R _inst_2 Y _inst_5 _inst_6))) (ModuleCat.isModule.{u1, u2} R _inst_2 (ModuleCat.of.{u1, u2} R _inst_2 X _inst_3 _inst_4)) (ModuleCat.isModule.{u1, u2} R _inst_2 (ModuleCat.of.{u1, u2} R _inst_2 Y _inst_5 _inst_6))) => (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_2) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_2) (ModuleCat.of.{u1, u2} R _inst_2 X _inst_3 _inst_4)) -> (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_2) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_2) (ModuleCat.of.{u1, u2} R _inst_2 Y _inst_5 _inst_6))) (LinearMap.hasCoeToFun.{u2, u2, u1, u1} R R (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_2) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_2) (ModuleCat.of.{u1, u2} R _inst_2 X _inst_3 _inst_4)) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_2) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_2) (ModuleCat.of.{u1, u2} R _inst_2 Y _inst_5 _inst_6)) (Ring.toSemiring.{u2} R _inst_2) (Ring.toSemiring.{u2} R _inst_2) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_2) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_2) (ModuleCat.of.{u1, u2} R _inst_2 X _inst_3 _inst_4)) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_2 (ModuleCat.of.{u1, u2} R _inst_2 X _inst_3 _inst_4))) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_2) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_2) (ModuleCat.of.{u1, u2} R _inst_2 Y _inst_5 _inst_6)) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_2 (ModuleCat.of.{u1, u2} R _inst_2 Y _inst_5 _inst_6))) (ModuleCat.isModule.{u1, u2} R _inst_2 (ModuleCat.of.{u1, u2} R _inst_2 X _inst_3 _inst_4)) (ModuleCat.isModule.{u1, u2} R _inst_2 (ModuleCat.of.{u1, u2} R _inst_2 Y _inst_5 _inst_6)) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_2)))) (ModuleCat.ofHom.{u1, u2} R _inst_2 X Y _inst_3 _inst_4 _inst_5 _inst_6 f) x) (coeFn.{succ u1, succ u1} (LinearMap.{u2, u2, u1, u1} R R (Ring.toSemiring.{u2} R _inst_2) (Ring.toSemiring.{u2} R _inst_2) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_2))) X Y (AddCommGroup.toAddCommMonoid.{u1} X _inst_3) (AddCommGroup.toAddCommMonoid.{u1} Y _inst_5) _inst_4 _inst_6) (fun (_x : LinearMap.{u2, u2, u1, u1} R R (Ring.toSemiring.{u2} R _inst_2) (Ring.toSemiring.{u2} R _inst_2) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_2))) X Y (AddCommGroup.toAddCommMonoid.{u1} X _inst_3) (AddCommGroup.toAddCommMonoid.{u1} Y _inst_5) _inst_4 _inst_6) => X -> Y) (LinearMap.hasCoeToFun.{u2, u2, u1, u1} R R X Y (Ring.toSemiring.{u2} R _inst_2) (Ring.toSemiring.{u2} R _inst_2) (AddCommGroup.toAddCommMonoid.{u1} X _inst_3) (AddCommGroup.toAddCommMonoid.{u1} Y _inst_5) _inst_4 _inst_6 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_2)))) f x)
but is expected to have type
  forall {R : Type.{u2}} [_inst_2 : Ring.{u2} R] {X : Type.{u1}} {Y : Type.{u1}} [_inst_3 : AddCommGroup.{u1} X] [_inst_4 : Module.{u2, u1} R X (Ring.toSemiring.{u2} R _inst_2) (AddCommGroup.toAddCommMonoid.{u1} X _inst_3)] [_inst_5 : AddCommGroup.{u1} Y] [_inst_6 : Module.{u2, u1} R Y (Ring.toSemiring.{u2} R _inst_2) (AddCommGroup.toAddCommMonoid.{u1} Y _inst_5)] (f : LinearMap.{u2, u2, u1, u1} R R (Ring.toSemiring.{u2} R _inst_2) (Ring.toSemiring.{u2} R _inst_2) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_2))) X Y (AddCommGroup.toAddCommMonoid.{u1} X _inst_3) (AddCommGroup.toAddCommMonoid.{u1} Y _inst_5) _inst_4 _inst_6) (x : X), Eq.{succ u1} ((fun (x._@.Mathlib.Algebra.Category.ModuleCat.Basic._hyg.285 : ModuleCat.carrier.{u1, u2} R _inst_2 (ModuleCat.of.{u1, u2} R _inst_2 X _inst_3 _inst_4)) => ModuleCat.carrier.{u1, u2} R _inst_2 (ModuleCat.of.{u1, u2} R _inst_2 Y _inst_5 _inst_6)) x) (FunLike.coe.{succ u1, succ u1, succ u1} (Quiver.Hom.{succ u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_2) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_2) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_2) (ModuleCat.moduleCategory.{u1, u2} R _inst_2))) (ModuleCat.of.{u1, u2} R _inst_2 X _inst_3 _inst_4) (ModuleCat.of.{u1, u2} R _inst_2 Y _inst_5 _inst_6)) (ModuleCat.carrier.{u1, u2} R _inst_2 (ModuleCat.of.{u1, u2} R _inst_2 X _inst_3 _inst_4)) (fun (_x : ModuleCat.carrier.{u1, u2} R _inst_2 (ModuleCat.of.{u1, u2} R _inst_2 X _inst_3 _inst_4)) => (fun (x._@.Mathlib.Algebra.Category.ModuleCat.Basic._hyg.285 : ModuleCat.carrier.{u1, u2} R _inst_2 (ModuleCat.of.{u1, u2} R _inst_2 X _inst_3 _inst_4)) => ModuleCat.carrier.{u1, u2} R _inst_2 (ModuleCat.of.{u1, u2} R _inst_2 Y _inst_5 _inst_6)) _x) (ModuleCat.instFunLikeHomModuleCatToQuiverToCategoryStructModuleCategoryCarrier.{u1, u2} R _inst_2 (ModuleCat.of.{u1, u2} R _inst_2 X _inst_3 _inst_4) (ModuleCat.of.{u1, u2} R _inst_2 Y _inst_5 _inst_6)) (ModuleCat.ofHom.{u1, u2} R _inst_2 X Y _inst_3 _inst_4 _inst_5 _inst_6 f) x) (FunLike.coe.{succ u1, succ u1, succ u1} (LinearMap.{u2, u2, u1, u1} R R (Ring.toSemiring.{u2} R _inst_2) (Ring.toSemiring.{u2} R _inst_2) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_2))) X Y (AddCommGroup.toAddCommMonoid.{u1} X _inst_3) (AddCommGroup.toAddCommMonoid.{u1} Y _inst_5) _inst_4 _inst_6) X (fun (_x : X) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : X) => Y) _x) (LinearMap.instFunLikeLinearMap.{u2, u2, u1, u1} R R X Y (Ring.toSemiring.{u2} R _inst_2) (Ring.toSemiring.{u2} R _inst_2) (AddCommGroup.toAddCommMonoid.{u1} X _inst_3) (AddCommGroup.toAddCommMonoid.{u1} Y _inst_5) _inst_4 _inst_6 (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_2)))) f x)
Case conversion may be inaccurate. Consider using '#align Module.of_hom_apply ModuleCat.ofHom_applyₓ'. -/
@[simp]
theorem ofHom_apply {R : Type u} [Ring R] {X Y : Type v} [AddCommGroup X] [Module R X]
    [AddCommGroup Y] [Module R Y] (f : X →ₗ[R] Y) (x : X) : ofHom f x = f x :=
  rfl
#align Module.of_hom_apply ModuleCat.ofHom_apply

instance : Inhabited (ModuleCat R) :=
  ⟨of R PUnit⟩

#print ModuleCat.ofUnique /-
instance ofUnique {X : Type v} [AddCommGroup X] [Module R X] [i : Unique X] : Unique (of R X) :=
  i
#align Module.of_unique ModuleCat.ofUnique
-/

#print ModuleCat.coe_of /-
@[simp]
theorem coe_of (X : Type v) [AddCommGroup X] [Module R X] : (of R X : Type v) = X :=
  rfl
#align Module.coe_of ModuleCat.coe_of
-/

variable {R}

#print ModuleCat.ofSelfIso /-
/-- Forgetting to the underlying type and then building the bundled object returns the original
module. -/
@[simps]
def ofSelfIso (M : ModuleCat R) : ModuleCat.of R M ≅ M
    where
  Hom := 𝟙 M
  inv := 𝟙 M
#align Module.of_self_iso ModuleCat.ofSelfIso
-/

/- warning: Module.is_zero_of_subsingleton -> ModuleCat.isZero_of_subsingleton is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u1}} [_inst_1 : Ring.{u1} R] (M : ModuleCat.{u2, u1} R _inst_1) [_inst_2 : Subsingleton.{succ u2} (coeSort.{max (succ u1) (succ (succ u2)), succ (succ u2)} (ModuleCat.{u2, u1} R _inst_1) Type.{u2} (ModuleCat.hasCoeToSort.{u2, u1} R _inst_1) M)], CategoryTheory.Limits.IsZero.{u2, max u1 (succ u2)} (ModuleCat.{u2, u1} R _inst_1) (ModuleCat.moduleCategory.{u2, u1} R _inst_1) M
but is expected to have type
  forall {R : Type.{u2}} [_inst_1 : Ring.{u2} R] (M : ModuleCat.{u1, u2} R _inst_1) [_inst_2 : Subsingleton.{succ u1} (ModuleCat.carrier.{u1, u2} R _inst_1 M)], CategoryTheory.Limits.IsZero.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1) M
Case conversion may be inaccurate. Consider using '#align Module.is_zero_of_subsingleton ModuleCat.isZero_of_subsingletonₓ'. -/
theorem isZero_of_subsingleton (M : ModuleCat R) [Subsingleton M] : IsZero M :=
  by
  refine' ⟨fun X => ⟨⟨⟨0⟩, fun f => _⟩⟩, fun X => ⟨⟨⟨0⟩, fun f => _⟩⟩⟩
  · ext
    have : x = 0 := Subsingleton.elim _ _
    rw [this, map_zero, map_zero]
  · ext
    apply Subsingleton.elim
#align Module.is_zero_of_subsingleton ModuleCat.isZero_of_subsingleton

instance : HasZeroObject (ModuleCat.{v} R) :=
  ⟨⟨of R PUnit, isZero_of_subsingleton _⟩⟩

variable {R} {M N U : ModuleCat.{v} R}

/- warning: Module.id_apply -> ModuleCat.id_apply is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u2}} [_inst_1 : Ring.{u2} R] {M : ModuleCat.{u1, u2} R _inst_1} (m : coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M), Eq.{succ u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (coeFn.{succ u1, succ u1} (Quiver.Hom.{succ u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) M M) (fun (_x : LinearMap.{u2, u2, u1, u1} R R (Ring.toSemiring.{u2} R _inst_1) (Ring.toSemiring.{u2} R _inst_1) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_1))) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 M)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 M)) (ModuleCat.isModule.{u1, u2} R _inst_1 M) (ModuleCat.isModule.{u1, u2} R _inst_1 M)) => (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) -> (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M)) (LinearMap.hasCoeToFun.{u2, u2, u1, u1} R R (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (Ring.toSemiring.{u2} R _inst_1) (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 M)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 M)) (ModuleCat.isModule.{u1, u2} R _inst_1 M) (ModuleCat.isModule.{u1, u2} R _inst_1 M) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_1)))) (CategoryTheory.CategoryStruct.id.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1)) M) m) m
but is expected to have type
  forall {R : Type.{u2}} [_inst_1 : Ring.{u2} R] {M : ModuleCat.{u1, u2} R _inst_1} (m : ModuleCat.carrier.{u1, u2} R _inst_1 M), Eq.{succ u1} ((fun (x._@.Mathlib.Algebra.Category.ModuleCat.Basic._hyg.285 : ModuleCat.carrier.{u1, u2} R _inst_1 M) => ModuleCat.carrier.{u1, u2} R _inst_1 M) m) (FunLike.coe.{succ u1, succ u1, succ u1} (Quiver.Hom.{succ u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) M M) (ModuleCat.carrier.{u1, u2} R _inst_1 M) (fun (_x : ModuleCat.carrier.{u1, u2} R _inst_1 M) => (fun (x._@.Mathlib.Algebra.Category.ModuleCat.Basic._hyg.285 : ModuleCat.carrier.{u1, u2} R _inst_1 M) => ModuleCat.carrier.{u1, u2} R _inst_1 M) _x) (ModuleCat.instFunLikeHomModuleCatToQuiverToCategoryStructModuleCategoryCarrier.{u1, u2} R _inst_1 M M) (CategoryTheory.CategoryStruct.id.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1)) M) m) m
Case conversion may be inaccurate. Consider using '#align Module.id_apply ModuleCat.id_applyₓ'. -/
@[simp]
theorem id_apply (m : M) : (𝟙 M : M → M) m = m :=
  rfl
#align Module.id_apply ModuleCat.id_apply

/- warning: Module.coe_comp -> ModuleCat.coe_comp is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u2}} [_inst_1 : Ring.{u2} R] {M : ModuleCat.{u1, u2} R _inst_1} {N : ModuleCat.{u1, u2} R _inst_1} {U : ModuleCat.{u1, u2} R _inst_1} (f : Quiver.Hom.{succ u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) M N) (g : Quiver.Hom.{succ u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) N U), Eq.{succ u1} ((fun (_x : LinearMap.{u2, u2, u1, u1} R R (Ring.toSemiring.{u2} R _inst_1) (Ring.toSemiring.{u2} R _inst_1) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_1))) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) U) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 M)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) U) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 U)) (ModuleCat.isModule.{u1, u2} R _inst_1 M) (ModuleCat.isModule.{u1, u2} R _inst_1 U)) => (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) -> (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) U)) (CategoryTheory.CategoryStruct.comp.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1)) M N U f g)) (coeFn.{succ u1, succ u1} (Quiver.Hom.{succ u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) M U) (fun (_x : LinearMap.{u2, u2, u1, u1} R R (Ring.toSemiring.{u2} R _inst_1) (Ring.toSemiring.{u2} R _inst_1) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_1))) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) U) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 M)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) U) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 U)) (ModuleCat.isModule.{u1, u2} R _inst_1 M) (ModuleCat.isModule.{u1, u2} R _inst_1 U)) => (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) -> (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) U)) (LinearMap.hasCoeToFun.{u2, u2, u1, u1} R R (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) U) (Ring.toSemiring.{u2} R _inst_1) (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 M)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) U) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 U)) (ModuleCat.isModule.{u1, u2} R _inst_1 M) (ModuleCat.isModule.{u1, u2} R _inst_1 U) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_1)))) (CategoryTheory.CategoryStruct.comp.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1)) M N U f g)) (Function.comp.{succ u1, succ u1, succ u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) N) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) U) (coeFn.{succ u1, succ u1} (Quiver.Hom.{succ u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) N U) (fun (_x : LinearMap.{u2, u2, u1, u1} R R (Ring.toSemiring.{u2} R _inst_1) (Ring.toSemiring.{u2} R _inst_1) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_1))) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) N) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) U) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) N) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 N)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) U) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 U)) (ModuleCat.isModule.{u1, u2} R _inst_1 N) (ModuleCat.isModule.{u1, u2} R _inst_1 U)) => (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) N) -> (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) U)) (LinearMap.hasCoeToFun.{u2, u2, u1, u1} R R (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) N) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) U) (Ring.toSemiring.{u2} R _inst_1) (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) N) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 N)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) U) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 U)) (ModuleCat.isModule.{u1, u2} R _inst_1 N) (ModuleCat.isModule.{u1, u2} R _inst_1 U) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_1)))) g) (coeFn.{succ u1, succ u1} (Quiver.Hom.{succ u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) M N) (fun (_x : LinearMap.{u2, u2, u1, u1} R R (Ring.toSemiring.{u2} R _inst_1) (Ring.toSemiring.{u2} R _inst_1) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_1))) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) N) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 M)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) N) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 N)) (ModuleCat.isModule.{u1, u2} R _inst_1 M) (ModuleCat.isModule.{u1, u2} R _inst_1 N)) => (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) -> (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) N)) (LinearMap.hasCoeToFun.{u2, u2, u1, u1} R R (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) N) (Ring.toSemiring.{u2} R _inst_1) (Ring.toSemiring.{u2} R _inst_1) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) M) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 M)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} R _inst_1) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} R _inst_1) N) (ModuleCat.isAddCommGroup.{u1, u2} R _inst_1 N)) (ModuleCat.isModule.{u1, u2} R _inst_1 M) (ModuleCat.isModule.{u1, u2} R _inst_1 N) (RingHom.id.{u2} R (Semiring.toNonAssocSemiring.{u2} R (Ring.toSemiring.{u2} R _inst_1)))) f))
but is expected to have type
  forall {R : Type.{u2}} [_inst_1 : Ring.{u2} R] {M : ModuleCat.{u1, u2} R _inst_1} {N : ModuleCat.{u1, u2} R _inst_1} {U : ModuleCat.{u1, u2} R _inst_1} (f : Quiver.Hom.{succ u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) M N) (g : Quiver.Hom.{succ u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) N U), Eq.{succ u1} (forall (a : ModuleCat.carrier.{u1, u2} R _inst_1 M), (fun (x._@.Mathlib.Algebra.Category.ModuleCat.Basic._hyg.285 : ModuleCat.carrier.{u1, u2} R _inst_1 M) => ModuleCat.carrier.{u1, u2} R _inst_1 U) a) (FunLike.coe.{succ u1, succ u1, succ u1} (Quiver.Hom.{succ u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) M U) (ModuleCat.carrier.{u1, u2} R _inst_1 M) (fun (_x : ModuleCat.carrier.{u1, u2} R _inst_1 M) => (fun (x._@.Mathlib.Algebra.Category.ModuleCat.Basic._hyg.285 : ModuleCat.carrier.{u1, u2} R _inst_1 M) => ModuleCat.carrier.{u1, u2} R _inst_1 U) _x) (ModuleCat.instFunLikeHomModuleCatToQuiverToCategoryStructModuleCategoryCarrier.{u1, u2} R _inst_1 M U) (CategoryTheory.CategoryStruct.comp.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1)) M N U f g)) (Function.comp.{succ u1, succ u1, succ u1} (ModuleCat.carrier.{u1, u2} R _inst_1 M) (ModuleCat.carrier.{u1, u2} R _inst_1 N) (ModuleCat.carrier.{u1, u2} R _inst_1 U) (FunLike.coe.{succ u1, succ u1, succ u1} (Quiver.Hom.{succ u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) N U) (ModuleCat.carrier.{u1, u2} R _inst_1 N) (fun (_x : ModuleCat.carrier.{u1, u2} R _inst_1 N) => (fun (x._@.Mathlib.Algebra.Category.ModuleCat.Basic._hyg.285 : ModuleCat.carrier.{u1, u2} R _inst_1 N) => ModuleCat.carrier.{u1, u2} R _inst_1 U) _x) (ModuleCat.instFunLikeHomModuleCatToQuiverToCategoryStructModuleCategoryCarrier.{u1, u2} R _inst_1 N U) g) (FunLike.coe.{succ u1, succ u1, succ u1} (Quiver.Hom.{succ u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.CategoryStruct.toQuiver.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} R _inst_1) (ModuleCat.moduleCategory.{u1, u2} R _inst_1))) M N) (ModuleCat.carrier.{u1, u2} R _inst_1 M) (fun (_x : ModuleCat.carrier.{u1, u2} R _inst_1 M) => (fun (x._@.Mathlib.Algebra.Category.ModuleCat.Basic._hyg.285 : ModuleCat.carrier.{u1, u2} R _inst_1 M) => ModuleCat.carrier.{u1, u2} R _inst_1 N) _x) (ModuleCat.instFunLikeHomModuleCatToQuiverToCategoryStructModuleCategoryCarrier.{u1, u2} R _inst_1 M N) f))
Case conversion may be inaccurate. Consider using '#align Module.coe_comp ModuleCat.coe_compₓ'. -/
@[simp]
theorem coe_comp (f : M ⟶ N) (g : N ⟶ U) : (f ≫ g : M → U) = g ∘ f :=
  rfl
#align Module.coe_comp ModuleCat.coe_comp

#print ModuleCat.comp_def /-
theorem comp_def (f : M ⟶ N) (g : N ⟶ U) : f ≫ g = g.comp f :=
  rfl
#align Module.comp_def ModuleCat.comp_def
-/

end ModuleCat

variable {R}

variable {X₁ X₂ : Type v}

#print ModuleCat.asHom /-
/-- Reinterpreting a linear map in the category of `R`-modules. -/
def ModuleCat.asHom [AddCommGroup X₁] [Module R X₁] [AddCommGroup X₂] [Module R X₂] :
    (X₁ →ₗ[R] X₂) → (ModuleCat.of R X₁ ⟶ ModuleCat.of R X₂) :=
  id
#align Module.as_hom ModuleCat.asHom
-/

-- mathport name: Module.as_hom
scoped[ModuleCat] notation "↟" f:1024 => ModuleCat.asHom f

#print ModuleCat.asHomRight /-
/-- Reinterpreting a linear map in the category of `R`-modules. -/
def ModuleCat.asHomRight [AddCommGroup X₁] [Module R X₁] {X₂ : ModuleCat.{v} R} :
    (X₁ →ₗ[R] X₂) → (ModuleCat.of R X₁ ⟶ X₂) :=
  id
#align Module.as_hom_right ModuleCat.asHomRight
-/

-- mathport name: Module.as_hom_right
scoped[ModuleCat] notation "↾" f:1024 => ModuleCat.asHomRight f

#print ModuleCat.asHomLeft /-
/-- Reinterpreting a linear map in the category of `R`-modules. -/
def ModuleCat.asHomLeft {X₁ : ModuleCat.{v} R} [AddCommGroup X₂] [Module R X₂] :
    (X₁ →ₗ[R] X₂) → (X₁ ⟶ ModuleCat.of R X₂) :=
  id
#align Module.as_hom_left ModuleCat.asHomLeft
-/

-- mathport name: Module.as_hom_left
scoped[ModuleCat] notation "↿" f:1024 => ModuleCat.asHomLeft f

#print LinearEquiv.toModuleIso /-
/-- Build an isomorphism in the category `Module R` from a `linear_equiv` between `module`s. -/
@[simps]
def LinearEquiv.toModuleIso {g₁ : AddCommGroup X₁} {g₂ : AddCommGroup X₂} {m₁ : Module R X₁}
    {m₂ : Module R X₂} (e : X₁ ≃ₗ[R] X₂) : ModuleCat.of R X₁ ≅ ModuleCat.of R X₂
    where
  Hom := (e : X₁ →ₗ[R] X₂)
  inv := (e.symm : X₂ →ₗ[R] X₁)
  hom_inv_id' := by ext; exact e.left_inv x
  inv_hom_id' := by ext; exact e.right_inv x
#align linear_equiv.to_Module_iso LinearEquiv.toModuleIso
-/

#print LinearEquiv.toModuleIso' /-
/-- Build an isomorphism in the category `Module R` from a `linear_equiv` between `module`s.

This version is better than `linear_equiv_to_Module_iso` when applicable, because Lean can't see
`Module.of R M` is defeq to `M` when `M : Module R`. -/
@[simps]
def LinearEquiv.toModuleIso' {M N : ModuleCat.{v} R} (i : M ≃ₗ[R] N) : M ≅ N
    where
  Hom := i
  inv := i.symm
  hom_inv_id' := LinearMap.ext fun x => by simp
  inv_hom_id' := LinearMap.ext fun x => by simp
#align linear_equiv.to_Module_iso' LinearEquiv.toModuleIso'
-/

#print LinearEquiv.toModuleIso'Left /-
/-- Build an isomorphism in the category `Module R` from a `linear_equiv` between `module`s.

This version is better than `linear_equiv_to_Module_iso` when applicable, because Lean can't see
`Module.of R M` is defeq to `M` when `M : Module R`. -/
@[simps]
def LinearEquiv.toModuleIso'Left {X₁ : ModuleCat.{v} R} {g₂ : AddCommGroup X₂} {m₂ : Module R X₂}
    (e : X₁ ≃ₗ[R] X₂) : X₁ ≅ ModuleCat.of R X₂
    where
  Hom := (e : X₁ →ₗ[R] X₂)
  inv := (e.symm : X₂ →ₗ[R] X₁)
  hom_inv_id' := LinearMap.ext fun x => by simp
  inv_hom_id' := LinearMap.ext fun x => by simp
#align linear_equiv.to_Module_iso'_left LinearEquiv.toModuleIso'Left
-/

#print LinearEquiv.toModuleIso'Right /-
/-- Build an isomorphism in the category `Module R` from a `linear_equiv` between `module`s.

This version is better than `linear_equiv_to_Module_iso` when applicable, because Lean can't see
`Module.of R M` is defeq to `M` when `M : Module R`. -/
@[simps]
def LinearEquiv.toModuleIso'Right {g₁ : AddCommGroup X₁} {m₁ : Module R X₁} {X₂ : ModuleCat.{v} R}
    (e : X₁ ≃ₗ[R] X₂) : ModuleCat.of R X₁ ≅ X₂
    where
  Hom := (e : X₁ →ₗ[R] X₂)
  inv := (e.symm : X₂ →ₗ[R] X₁)
  hom_inv_id' := LinearMap.ext fun x => by simp
  inv_hom_id' := LinearMap.ext fun x => by simp
#align linear_equiv.to_Module_iso'_right LinearEquiv.toModuleIso'Right
-/

namespace CategoryTheory.Iso

#print CategoryTheory.Iso.toLinearEquiv /-
/-- Build a `linear_equiv` from an isomorphism in the category `Module R`. -/
@[simps]
def toLinearEquiv {X Y : ModuleCat R} (i : X ≅ Y) : X ≃ₗ[R] Y
    where
  toFun := i.Hom
  invFun := i.inv
  left_inv := by tidy
  right_inv := by tidy
  map_add' := by tidy
  map_smul' := by tidy
#align category_theory.iso.to_linear_equiv CategoryTheory.Iso.toLinearEquiv
-/

end CategoryTheory.Iso

#print linearEquivIsoModuleIso /-
/-- linear equivalences between `module`s are the same as (isomorphic to) isomorphisms
in `Module` -/
@[simps]
def linearEquivIsoModuleIso {X Y : Type u} [AddCommGroup X] [AddCommGroup Y] [Module R X]
    [Module R Y] : (X ≃ₗ[R] Y) ≅ ModuleCat.of R X ≅ ModuleCat.of R Y
    where
  Hom e := e.toModuleIso
  inv i := i.toLinearEquiv
#align linear_equiv_iso_Module_iso linearEquivIsoModuleIso
-/

namespace ModuleCat

instance : Preadditive (ModuleCat.{v} R)
    where
  add_comp P Q R f f' g :=
    show (f + f') ≫ g = f ≫ g + f' ≫ g by
      ext
      simp
  comp_add P Q R f g g' :=
    show f ≫ (g + g') = f ≫ g + f ≫ g' by
      ext
      simp

/- warning: Module.forget₂_AddCommGroup_additive -> ModuleCat.forget₂_addCommGroupCat_additive is a dubious translation:
lean 3 declaration is
  forall {R : Type.{u2}} [_inst_1 : Ring.{u2} R], CategoryTheory.Functor.Additive.{max u2 (succ u1), succ u1, u1, u1} (ModuleCat.{u1, u2} R _inst_1) AddCommGroupCat.{u1} (ModuleCat.moduleCategory.{u1, u2} R _inst_1) AddCommGroupCat.largeCategory.{u1} (ModuleCat.CategoryTheory.preadditive.{u1, u2} R _inst_1) AddCommGroupCat.CategoryTheory.preadditive.{u1} (CategoryTheory.forget₂.{max u2 (succ u1), succ u1, u1, u1, u1} (ModuleCat.{u1, u2} R _inst_1) AddCommGroupCat.{u1} (ModuleCat.moduleCategory.{u1, u2} R _inst_1) (ModuleCat.moduleConcreteCategory.{u1, u2} R _inst_1) AddCommGroupCat.largeCategory.{u1} AddCommGroupCat.concreteCategory.{u1} (ModuleCat.hasForgetToAddCommGroup.{u2, u1} R _inst_1))
but is expected to have type
  forall {R : Type.{u2}} [_inst_1 : Ring.{u2} R], CategoryTheory.Functor.Additive.{max u2 (succ u1), succ u1, u1, u1} (ModuleCat.{u1, u2} R _inst_1) AddCommGroupCat.{u1} (ModuleCat.moduleCategory.{u1, u2} R _inst_1) instAddCommGroupCatLargeCategory.{u1} (ModuleCat.instPreadditiveModuleCatModuleCategory.{u1, u2} R _inst_1) AddCommGroupCat.instPreadditiveAddCommGroupCatInstAddCommGroupCatLargeCategory.{u1} (CategoryTheory.forget₂.{max (succ u1) u2, succ u1, u1, u1, u1} (ModuleCat.{u1, u2} R _inst_1) AddCommGroupCat.{u1} (ModuleCat.moduleCategory.{u1, u2} R _inst_1) (ModuleCat.moduleConcreteCategory.{u1, u2} R _inst_1) instAddCommGroupCatLargeCategory.{u1} AddCommGroupCat.concreteCategory.{u1} (ModuleCat.hasForgetToAddCommGroup.{u2, u1} R _inst_1))
Case conversion may be inaccurate. Consider using '#align Module.forget₂_AddCommGroup_additive ModuleCat.forget₂_addCommGroupCat_additiveₓ'. -/
instance forget₂_addCommGroupCat_additive : (forget₂ (ModuleCat.{v} R) AddCommGroupCat).Additive
    where
#align Module.forget₂_AddCommGroup_additive ModuleCat.forget₂_addCommGroupCat_additive

section

variable {S : Type u} [CommRing S]

instance : Linear S (ModuleCat.{v} S)
    where
  homModule X Y := LinearMap.module
  smul_comp' := by
    intros
    ext
    simp
  comp_smul' := by
    intros
    ext
    simp

variable {X Y X' Y' : ModuleCat.{v} S}

#print ModuleCat.Iso.homCongr_eq_arrowCongr /-
theorem Iso.homCongr_eq_arrowCongr (i : X ≅ X') (j : Y ≅ Y') (f : X ⟶ Y) :
    Iso.homCongr i j f = LinearEquiv.arrowCongr i.toLinearEquiv j.toLinearEquiv f :=
  rfl
#align Module.iso.hom_congr_eq_arrow_congr ModuleCat.Iso.homCongr_eq_arrowCongr
-/

/- warning: Module.iso.conj_eq_conj -> ModuleCat.Iso.conj_eq_conj is a dubious translation:
lean 3 declaration is
  forall {S : Type.{u2}} [_inst_2 : CommRing.{u2} S] {X : ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)} {X' : ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)} (i : CategoryTheory.Iso.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X X') (f : CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X), Eq.{succ u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (coeFn.{succ u1, succ u1} (MulEquiv.{u1, u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X')) (fun (_x : MulEquiv.{u1, u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X')) => (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) -> (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X')) (MulEquiv.hasCoeToFun.{u1, u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X')) (CategoryTheory.Iso.conj.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X X' i) f) (coeFn.{succ u1, succ u1} (LinearEquiv.{u2, u2, u1, u1} S S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (LinearEquiv.conj._proof_3.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (LinearEquiv.conj._proof_4.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (Module.End.{u2, u1} S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (Module.End.{u2, u1} S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.module.{u2, u2, u2, u1, u1} S S S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (LinearEquiv.conj._proof_5.{u2, u1} S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (CommRing.toCommSemiring.{u2} S _inst_2) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X))) (LinearMap.module.{u2, u2, u2, u1, u1} S S S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (LinearEquiv.conj._proof_6.{u2, u1} S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (CommRing.toCommSemiring.{u2} S _inst_2) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))) (fun (_x : LinearEquiv.{u2, u2, u1, u1} S S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (LinearEquiv.conj._proof_3.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (LinearEquiv.conj._proof_4.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (Module.End.{u2, u1} S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (Module.End.{u2, u1} S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.module.{u2, u2, u2, u1, u1} S S S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (LinearEquiv.conj._proof_5.{u2, u1} S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (CommRing.toCommSemiring.{u2} S _inst_2) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X))) (LinearMap.module.{u2, u2, u2, u1, u1} S S S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (LinearEquiv.conj._proof_6.{u2, u1} S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (CommRing.toCommSemiring.{u2} S _inst_2) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))) => (Module.End.{u2, u1} S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) -> (Module.End.{u2, u1} S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X'))) (LinearEquiv.hasCoeToFun.{u2, u2, u1, u1} S S (Module.End.{u2, u1} S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (Module.End.{u2, u1} S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.module.{u2, u2, u2, u1, u1} S S S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (LinearEquiv.conj._proof_5.{u2, u1} S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (CommRing.toCommSemiring.{u2} S _inst_2) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X))) (LinearMap.module.{u2, u2, u2, u1, u1} S S S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (LinearEquiv.conj._proof_6.{u2, u1} S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (CommRing.toCommSemiring.{u2} S _inst_2) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X'))) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (LinearEquiv.conj._proof_3.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (LinearEquiv.conj._proof_4.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (LinearEquiv.conj.{u2, u1, u1} S (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (CommRing.toCommSemiring.{u2} S _inst_2) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (coeSort.{max (succ u2) (succ (succ u1)), succ (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) Type.{u1} (ModuleCat.hasCoeToSort.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CategoryTheory.Iso.toLinearEquiv.{u2, u1} S (CommRing.toRing.{u2} S _inst_2) X X' i)) f)
but is expected to have type
  forall {S : Type.{u2}} [_inst_2 : CommRing.{u2} S] {X : ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)} {X' : ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)} (i : CategoryTheory.Iso.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X X') (f : CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X), Eq.{succ u1} ((fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) => CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') f) (FunLike.coe.{succ u1, succ u1, succ u1} (MulEquiv.{u1, u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X')) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (fun (_x : CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) => (fun (x._@.Mathlib.Algebra.Hom.Group._hyg.2391 : CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) => CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') _x) (MulHomClass.toFunLike.{u1, u1, u1} (MulEquiv.{u1, u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X')) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (MulOneClass.toMul.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (MulZeroOneClass.toMulOneClass.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (NonAssocSemiring.toMulZeroOneClass.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (Semiring.toNonAssocSemiring.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.Preadditive.instSemiringEndToCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.instPreadditiveModuleCatModuleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X))))) (MulOneClass.toMul.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (MulZeroOneClass.toMulOneClass.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (NonAssocSemiring.toMulZeroOneClass.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (Semiring.toNonAssocSemiring.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (CategoryTheory.Preadditive.instSemiringEndToCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.instPreadditiveModuleCatModuleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X'))))) (MonoidHomClass.toMulHomClass.{u1, u1, u1} (MulEquiv.{u1, u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X')) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (MulZeroOneClass.toMulOneClass.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (NonAssocSemiring.toMulZeroOneClass.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (Semiring.toNonAssocSemiring.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.Preadditive.instSemiringEndToCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.instPreadditiveModuleCatModuleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X)))) (MulZeroOneClass.toMulOneClass.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (NonAssocSemiring.toMulZeroOneClass.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (Semiring.toNonAssocSemiring.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (CategoryTheory.Preadditive.instSemiringEndToCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.instPreadditiveModuleCatModuleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X')))) (MonoidWithZeroHomClass.toMonoidHomClass.{u1, u1, u1} (MulEquiv.{u1, u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X')) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (NonAssocSemiring.toMulZeroOneClass.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (Semiring.toNonAssocSemiring.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.Preadditive.instSemiringEndToCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.instPreadditiveModuleCatModuleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X))) (NonAssocSemiring.toMulZeroOneClass.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (Semiring.toNonAssocSemiring.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (CategoryTheory.Preadditive.instSemiringEndToCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.instPreadditiveModuleCatModuleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X'))) (MulEquivClass.toMonoidWithZeroHomClass.{u1, u1, u1} (MulEquiv.{u1, u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X')) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (NonAssocSemiring.toMulZeroOneClass.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (Semiring.toNonAssocSemiring.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.Preadditive.instSemiringEndToCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.instPreadditiveModuleCatModuleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X))) (NonAssocSemiring.toMulZeroOneClass.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (Semiring.toNonAssocSemiring.{u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (CategoryTheory.Preadditive.instSemiringEndToCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.instPreadditiveModuleCatModuleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X'))) (MulEquiv.instMulEquivClassMulEquiv.{u1, u1} (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X') (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X) (CategoryTheory.End.mul.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (CategoryTheory.Category.toCategoryStruct.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2))) X')))))) (CategoryTheory.Iso.conj.{u1, max u2 (succ u1)} (ModuleCat.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) (ModuleCat.moduleCategory.{u1, u2} S (CommRing.toRing.{u2} S _inst_2)) X X' i) f) (FunLike.coe.{succ u1, succ u1, succ u1} (LinearEquiv.{u2, u2, u1, u1} S S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHomInvPair.ids.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (RingHomInvPair.ids.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))))) (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (fun (_x : Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) => (fun (x._@.Mathlib.Algebra.Hom.GroupAction._hyg.2186 : Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) => Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) _x) (SMulHomClass.toFunLike.{u1, u2, u1, u1} (LinearEquiv.{u2, u2, u1, u1} S S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHomInvPair.ids.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (RingHomInvPair.ids.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))))) S (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (SMulZeroClass.toSMul.{u2, u1} S (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddMonoid.toZero.{u1} (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommMonoid.toAddMonoid.{u1} (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))))) (DistribSMul.toSMulZeroClass.{u2, u1} S (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddMonoid.toAddZeroClass.{u1} (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommMonoid.toAddMonoid.{u1} (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))))) (DistribMulAction.toDistribSMul.{u2, u1} S (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (MonoidWithZero.toMonoid.{u2} S (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))))) (Module.toDistribMulAction.{u2, u1} S (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X))))))))) (SMulZeroClass.toSMul.{u2, u1} S (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddMonoid.toZero.{u1} (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommMonoid.toAddMonoid.{u1} (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))))) (DistribSMul.toSMulZeroClass.{u2, u1} S (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddMonoid.toAddZeroClass.{u1} (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommMonoid.toAddMonoid.{u1} (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))))) (DistribMulAction.toDistribSMul.{u2, u1} S (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (MonoidWithZero.toMonoid.{u2} S (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))))) (Module.toDistribMulAction.{u2, u1} S (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X'))))))))) (DistribMulActionHomClass.toSMulHomClass.{u1, u2, u1, u1} (LinearEquiv.{u2, u2, u1, u1} S S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHomInvPair.ids.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (RingHomInvPair.ids.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))))) S (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (MonoidWithZero.toMonoid.{u2} S (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (AddCommMonoid.toAddMonoid.{u1} (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))))) (AddCommMonoid.toAddMonoid.{u1} (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))))) (Module.toDistribMulAction.{u2, u1} S (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)))))) (Module.toDistribMulAction.{u2, u1} S (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))))) (SemilinearMapClass.distribMulActionHomClass.{u2, u1, u1, u1} S (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (LinearEquiv.{u2, u2, u1, u1} S S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHomInvPair.ids.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (RingHomInvPair.ids.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X'))))) (SemilinearEquivClass.instSemilinearMapClass.{u2, u2, u1, u1, u1} S S (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (LinearEquiv.{u2, u2, u1, u1} S S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHomInvPair.ids.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (RingHomInvPair.ids.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X'))))) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHomInvPair.ids.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (RingHomInvPair.ids.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (LinearEquiv.instSemilinearEquivClassLinearEquiv.{u2, u2, u1, u1} S S (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (Module.End.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.addCommMonoid.{u2, u2, u1, u1} S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X))))) (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u1, u1} S S S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (smulCommClass_self.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toCommMonoid.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (MulActionWithZero.toMulAction.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (Semiring.toMonoidWithZero.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (AddMonoid.toZero.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommMonoid.toAddMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')))) (Module.toMulActionWithZero.{u2, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X'))))) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHom.id.{u2} S (Semiring.toNonAssocSemiring.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))) (RingHomInvPair.ids.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2))) (RingHomInvPair.ids.{u2} S (CommSemiring.toSemiring.{u2} S (CommRing.toCommSemiring.{u2} S _inst_2)))))))) (LinearEquiv.conj.{u2, u1, u1} S (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CommRing.toCommSemiring.{u2} S _inst_2) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X)) (AddCommGroup.toAddCommMonoid.{u1} (ModuleCat.carrier.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (ModuleCat.isAddCommGroup.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X')) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X) (ModuleCat.isModule.{u1, u2} S (CommRing.toRing.{u2} S _inst_2) X') (CategoryTheory.Iso.toLinearEquiv.{u2, u1} S (CommRing.toRing.{u2} S _inst_2) X X' i)) f)
Case conversion may be inaccurate. Consider using '#align Module.iso.conj_eq_conj ModuleCat.Iso.conj_eq_conjₓ'. -/
theorem Iso.conj_eq_conj (i : X ≅ X') (f : End X) :
    Iso.conj i f = LinearEquiv.conj i.toLinearEquiv f :=
  rfl
#align Module.iso.conj_eq_conj ModuleCat.Iso.conj_eq_conj

end

end ModuleCat

instance (M : Type u) [AddCommGroup M] [Module R M] : Coe (Submodule R M) (ModuleCat R) :=
  ⟨fun N => ModuleCat.of R N⟩

