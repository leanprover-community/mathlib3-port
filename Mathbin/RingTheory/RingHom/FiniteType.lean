/-
Copyright (c) 2021 Andrew Yang. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Andrew Yang
-/
import RingTheory.LocalProperties
import RingTheory.Localization.InvSubmonoid

#align_import ring_theory.ring_hom.finite_type from "leanprover-community/mathlib"@"2a0ce625dbb0ffbc7d1316597de0b25c1ec75303"

/-!

# The meta properties of finite-type ring homomorphisms.

> THIS FILE IS SYNCHRONIZED WITH MATHLIB4.
> Any changes to this file require a corresponding PR to mathlib4.

The main result is `ring_hom.finite_is_local`.

-/


namespace RingHom

open scoped Pointwise

#print RingHom.finiteType_stableUnderComposition /-
theorem finiteType_stableUnderComposition : StableUnderComposition @FiniteType := by introv R hf hg;
  exact hg.comp hf
#align ring_hom.finite_type_stable_under_composition RingHom.finiteType_stableUnderComposition
-/

#print RingHom.finiteType_holdsForLocalizationAway /-
theorem finiteType_holdsForLocalizationAway : HoldsForLocalizationAway @FiniteType :=
  by
  introv R _
  skip
  suffices Algebra.FiniteType R S by change Algebra.FiniteType _ _; convert this; ext;
    rw [Algebra.smul_def]; rfl
  exact IsLocalization.finiteType_of_monoid_fg (Submonoid.powers r) S
#align ring_hom.finite_type_holds_for_localization_away RingHom.finiteType_holdsForLocalizationAway
-/

#print RingHom.finiteType_ofLocalizationSpanTarget /-
theorem finiteType_ofLocalizationSpanTarget : OfLocalizationSpanTarget @FiniteType :=
  by
  -- Setup algebra intances.
  rw [of_localization_span_target_iff_finite]
  introv R hs H
  skip
  classical
#align ring_hom.finite_type_of_localization_span_target RingHom.finiteType_ofLocalizationSpanTarget
-/

#print RingHom.finiteType_is_local /-
-- Suppose `s : finset S` spans `S`, and each `Sᵣ` is finitely generated as an `R`-algebra.
-- Say `t r : finset Sᵣ` generates `Sᵣ`. By assumption, we may find `lᵢ` such that
-- `∑ lᵢ * sᵢ = 1`. I claim that all `s` and `l` and the numerators of `t` and generates `S`.
-- We need to show that every `x` falls in the subalgebra generated by those elements.
-- Since all `s` and `l` are in the subalgebra, it suffices to check that `sᵢ ^ nᵢ • x` falls in
-- the algebra for each `sᵢ` and some `nᵢ`.
-- Since all `sᵢ` and numerators of `t r` are in the algebra, it suffices to show that the
-- image of `x` in `Sᵣ` falls in the `R`-adjoin of `t r`, which is of course true.
theorem finiteType_is_local : PropertyIsLocal @FiniteType :=
  ⟨localization_finiteType, finiteType_ofLocalizationSpanTarget, finiteType_stableUnderComposition,
    finiteType_holdsForLocalizationAway⟩
#align ring_hom.finite_type_is_local RingHom.finiteType_is_local
-/

#print RingHom.finiteType_respectsIso /-
theorem finiteType_respectsIso : RingHom.RespectsIso @RingHom.FiniteType :=
  RingHom.finiteType_is_local.RespectsIso
#align ring_hom.finite_type_respects_iso RingHom.finiteType_respectsIso
-/

end RingHom

