/-
Copyright (c) 2022 Moritz Doll. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Moritz Doll, Kalle Kytölä

! This file was ported from Lean 3 source module analysis.locally_convex.polar
! leanprover-community/mathlib commit 25a9423c6b2c8626e91c688bfd6c1d0a986a3e6e
! Please do not edit these lines, except to modify the commit id
! if you have ported upstream changes.
-/
import Mathbin.Analysis.Normed.Field.Basic
import Mathbin.LinearAlgebra.SesquilinearForm
import Mathbin.Topology.Algebra.Module.WeakDual

/-!
# Polar set

> THIS FILE IS SYNCHRONIZED WITH MATHLIB4.
> Any changes to this file require a corresponding PR to mathlib4.

In this file we define the polar set. There are different notions of the polar, we will define the
*absolute polar*. The advantage over the real polar is that we can define the absolute polar for
any bilinear form `B : E →ₗ[𝕜] F →ₗ[𝕜] 𝕜`, where `𝕜` is a normed commutative ring and
`E` and `F` are modules over `𝕜`.

## Main definitions

* `linear_map.polar`: The polar of a bilinear form `B : E →ₗ[𝕜] F →ₗ[𝕜] 𝕜`.

## Main statements

* `linear_map.polar_eq_Inter`: The polar as an intersection.
* `linear_map.subset_bipolar`: The polar is a subset of the bipolar.
* `linear_map.polar_weak_closed`: The polar is closed in the weak topology induced by `B.flip`.

## References

* [H. H. Schaefer, *Topological Vector Spaces*][schaefer1966]

## Tags

polar
-/


variable {𝕜 E F : Type _}

open Topology

namespace LinearMap

section NormedRing

variable [NormedCommRing 𝕜] [AddCommMonoid E] [AddCommMonoid F]

variable [Module 𝕜 E] [Module 𝕜 F]

variable (B : E →ₗ[𝕜] F →ₗ[𝕜] 𝕜)

#print LinearMap.polar /-
/-- The (absolute) polar of `s : set E` is given by the set of all `y : F` such that `‖B x y‖ ≤ 1`
for all `x ∈ s`.-/
def polar (s : Set E) : Set F :=
  { y : F | ∀ x ∈ s, ‖B x y‖ ≤ 1 }
#align linear_map.polar LinearMap.polar
-/

/- warning: linear_map.polar_mem_iff -> LinearMap.polar_mem_iff is a dubious translation:
<too large>
Case conversion may be inaccurate. Consider using '#align linear_map.polar_mem_iff LinearMap.polar_mem_iffₓ'. -/
theorem polar_mem_iff (s : Set E) (y : F) : y ∈ B.polar s ↔ ∀ x ∈ s, ‖B x y‖ ≤ 1 :=
  Iff.rfl
#align linear_map.polar_mem_iff LinearMap.polar_mem_iff

/- warning: linear_map.polar_mem -> LinearMap.polar_mem is a dubious translation:
<too large>
Case conversion may be inaccurate. Consider using '#align linear_map.polar_mem LinearMap.polar_memₓ'. -/
theorem polar_mem (s : Set E) (y : F) (hy : y ∈ B.polar s) : ∀ x ∈ s, ‖B x y‖ ≤ 1 :=
  hy
#align linear_map.polar_mem LinearMap.polar_mem

/- warning: linear_map.zero_mem_polar -> LinearMap.zero_mem_polar is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} {E : Type.{u2}} {F : Type.{u3}} [_inst_1 : NormedCommRing.{u1} 𝕜] [_inst_2 : AddCommMonoid.{u2} E] [_inst_3 : AddCommMonoid.{u3} F] [_inst_4 : Module.{u1, u2} 𝕜 E (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_2] [_inst_5 : Module.{u1, u3} 𝕜 F (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_3] (B : LinearMap.{u1, u1, u2, max u3 u1} 𝕜 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) E (LinearMap.{u1, u1, u3, u1} 𝕜 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) F 𝕜 _inst_3 (AddCommGroup.toAddCommMonoid.{u1} 𝕜 (NormedAddCommGroup.toAddCommGroup.{u1} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u1} 𝕜 (NormedRing.toNonUnitalNormedRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_2 (LinearMap.addCommMonoid.{u1, u1, u3, u1} 𝕜 𝕜 F 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_3 (AddCommGroup.toAddCommMonoid.{u1} 𝕜 (NormedAddCommGroup.toAddCommGroup.{u1} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u1} 𝕜 (NormedRing.toNonUnitalNormedRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))))) _inst_4 (LinearMap.module.{u1, u1, u1, u3, u1} 𝕜 𝕜 𝕜 F 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_3 (AddCommGroup.toAddCommMonoid.{u1} 𝕜 (NormedAddCommGroup.toAddCommGroup.{u1} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u1} 𝕜 (NormedRing.toNonUnitalNormedRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))) (smulCommClass_self.{u1, u1} 𝕜 𝕜 (CommRing.toCommMonoid.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))) (Monoid.toMulAction.{u1} 𝕜 (CommMonoid.toMonoid.{u1} 𝕜 (CommRing.toCommMonoid.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))))) (s : Set.{u2} E), Membership.Mem.{u3, u3} F (Set.{u3} F) (Set.hasMem.{u3} F) (OfNat.ofNat.{u3} F 0 (OfNat.mk.{u3} F 0 (Zero.zero.{u3} F (AddZeroClass.toHasZero.{u3} F (AddMonoid.toAddZeroClass.{u3} F (AddCommMonoid.toAddMonoid.{u3} F _inst_3)))))) (LinearMap.polar.{u1, u2, u3} 𝕜 E F _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 B s)
but is expected to have type
  forall {𝕜 : Type.{u1}} {E : Type.{u3}} {F : Type.{u2}} [_inst_1 : NormedCommRing.{u1} 𝕜] [_inst_2 : AddCommMonoid.{u3} E] [_inst_3 : AddCommMonoid.{u2} F] [_inst_4 : Module.{u1, u3} 𝕜 E (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) _inst_2] [_inst_5 : Module.{u1, u2} 𝕜 F (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) _inst_3] (B : LinearMap.{u1, u1, u3, max u1 u2} 𝕜 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))) E (LinearMap.{u1, u1, u2, u1} 𝕜 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))) F 𝕜 _inst_3 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2 (LinearMap.addCommMonoid.{u1, u1, u2, u1} 𝕜 𝕜 F 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) _inst_3 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))))) _inst_4 (LinearMap.instModuleLinearMapAddCommMonoid.{u1, u1, u1, u2, u1} 𝕜 𝕜 𝕜 F 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) _inst_3 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))) (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (Semiring.toModule.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))) (smulCommClass_self.{u1, u1} 𝕜 𝕜 (CommRing.toCommMonoid.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))) (MulActionWithZero.toMulAction.{u1, u1} 𝕜 𝕜 (Semiring.toMonoidWithZero.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))) (CommMonoidWithZero.toZero.{u1} 𝕜 (CommSemiring.toCommMonoidWithZero.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))) (MonoidWithZero.toMulActionWithZero.{u1} 𝕜 (Semiring.toMonoidWithZero.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))))))) (s : Set.{u3} E), Membership.mem.{u2, u2} F (Set.{u2} F) (Set.instMembershipSet.{u2} F) (OfNat.ofNat.{u2} F 0 (Zero.toOfNat0.{u2} F (AddMonoid.toZero.{u2} F (AddCommMonoid.toAddMonoid.{u2} F _inst_3)))) (LinearMap.polar.{u1, u3, u2} 𝕜 E F _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 B s)
Case conversion may be inaccurate. Consider using '#align linear_map.zero_mem_polar LinearMap.zero_mem_polarₓ'. -/
@[simp]
theorem zero_mem_polar (s : Set E) : (0 : F) ∈ B.polar s := fun _ _ => by
  simp only [map_zero, norm_zero, zero_le_one]
#align linear_map.zero_mem_polar LinearMap.zero_mem_polar

/- warning: linear_map.polar_eq_Inter -> LinearMap.polar_eq_iInter is a dubious translation:
<too large>
Case conversion may be inaccurate. Consider using '#align linear_map.polar_eq_Inter LinearMap.polar_eq_iInterₓ'. -/
theorem polar_eq_iInter {s : Set E} : B.polar s = ⋂ x ∈ s, { y : F | ‖B x y‖ ≤ 1 } := by ext;
  simp only [polar_mem_iff, Set.mem_iInter, Set.mem_setOf_eq]
#align linear_map.polar_eq_Inter LinearMap.polar_eq_iInter

/- warning: linear_map.polar_gc -> LinearMap.polar_gc is a dubious translation:
<too large>
Case conversion may be inaccurate. Consider using '#align linear_map.polar_gc LinearMap.polar_gcₓ'. -/
/-- The map `B.polar : set E → set F` forms an order-reversing Galois connection with
`B.flip.polar : set F → set E`. We use `order_dual.to_dual` and `order_dual.of_dual` to express
that `polar` is order-reversing. -/
theorem polar_gc :
    GaloisConnection (OrderDual.toDual ∘ B.polar) (B.flip.polar ∘ OrderDual.ofDual) := fun s t =>
  ⟨fun h _ hx _ hy => h hy _ hx, fun h _ hx _ hy => h hy _ hx⟩
#align linear_map.polar_gc LinearMap.polar_gc

/- warning: linear_map.polar_Union -> LinearMap.polar_iUnion is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} {E : Type.{u2}} {F : Type.{u3}} [_inst_1 : NormedCommRing.{u1} 𝕜] [_inst_2 : AddCommMonoid.{u2} E] [_inst_3 : AddCommMonoid.{u3} F] [_inst_4 : Module.{u1, u2} 𝕜 E (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_2] [_inst_5 : Module.{u1, u3} 𝕜 F (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_3] (B : LinearMap.{u1, u1, u2, max u3 u1} 𝕜 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) E (LinearMap.{u1, u1, u3, u1} 𝕜 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) F 𝕜 _inst_3 (AddCommGroup.toAddCommMonoid.{u1} 𝕜 (NormedAddCommGroup.toAddCommGroup.{u1} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u1} 𝕜 (NormedRing.toNonUnitalNormedRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_2 (LinearMap.addCommMonoid.{u1, u1, u3, u1} 𝕜 𝕜 F 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_3 (AddCommGroup.toAddCommMonoid.{u1} 𝕜 (NormedAddCommGroup.toAddCommGroup.{u1} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u1} 𝕜 (NormedRing.toNonUnitalNormedRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))))) _inst_4 (LinearMap.module.{u1, u1, u1, u3, u1} 𝕜 𝕜 𝕜 F 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_3 (AddCommGroup.toAddCommMonoid.{u1} 𝕜 (NormedAddCommGroup.toAddCommGroup.{u1} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u1} 𝕜 (NormedRing.toNonUnitalNormedRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))) (smulCommClass_self.{u1, u1} 𝕜 𝕜 (CommRing.toCommMonoid.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))) (Monoid.toMulAction.{u1} 𝕜 (CommMonoid.toMonoid.{u1} 𝕜 (CommRing.toCommMonoid.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))))) {ι : Sort.{u4}} {s : ι -> (Set.{u2} E)}, Eq.{succ u3} (Set.{u3} F) (LinearMap.polar.{u1, u2, u3} 𝕜 E F _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 B (Set.iUnion.{u2, u4} E ι (fun (i : ι) => s i))) (Set.iInter.{u3, u4} F ι (fun (i : ι) => LinearMap.polar.{u1, u2, u3} 𝕜 E F _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 B (s i)))
but is expected to have type
  forall {𝕜 : Type.{u1}} {E : Type.{u3}} {F : Type.{u2}} [_inst_1 : NormedCommRing.{u1} 𝕜] [_inst_2 : AddCommMonoid.{u3} E] [_inst_3 : AddCommMonoid.{u2} F] [_inst_4 : Module.{u1, u3} 𝕜 E (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) _inst_2] [_inst_5 : Module.{u1, u2} 𝕜 F (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) _inst_3] (B : LinearMap.{u1, u1, u3, max u1 u2} 𝕜 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))) E (LinearMap.{u1, u1, u2, u1} 𝕜 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))) F 𝕜 _inst_3 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2 (LinearMap.addCommMonoid.{u1, u1, u2, u1} 𝕜 𝕜 F 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) _inst_3 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))))) _inst_4 (LinearMap.instModuleLinearMapAddCommMonoid.{u1, u1, u1, u2, u1} 𝕜 𝕜 𝕜 F 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) _inst_3 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))) (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (Semiring.toModule.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))) (smulCommClass_self.{u1, u1} 𝕜 𝕜 (CommRing.toCommMonoid.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))) (MulActionWithZero.toMulAction.{u1, u1} 𝕜 𝕜 (Semiring.toMonoidWithZero.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))) (CommMonoidWithZero.toZero.{u1} 𝕜 (CommSemiring.toCommMonoidWithZero.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))) (MonoidWithZero.toMulActionWithZero.{u1} 𝕜 (Semiring.toMonoidWithZero.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))))))) {ι : Sort.{u4}} {s : ι -> (Set.{u3} E)}, Eq.{succ u2} (Set.{u2} F) (LinearMap.polar.{u1, u3, u2} 𝕜 E F _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 B (Set.iUnion.{u3, u4} E ι (fun (i : ι) => s i))) (Set.iInter.{u2, u4} F ι (fun (i : ι) => LinearMap.polar.{u1, u3, u2} 𝕜 E F _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 B (s i)))
Case conversion may be inaccurate. Consider using '#align linear_map.polar_Union LinearMap.polar_iUnionₓ'. -/
@[simp]
theorem polar_iUnion {ι} {s : ι → Set E} : B.polar (⋃ i, s i) = ⋂ i, B.polar (s i) :=
  B.polar_gc.l_iSup
#align linear_map.polar_Union LinearMap.polar_iUnion

/- warning: linear_map.polar_union -> LinearMap.polar_union is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} {E : Type.{u2}} {F : Type.{u3}} [_inst_1 : NormedCommRing.{u1} 𝕜] [_inst_2 : AddCommMonoid.{u2} E] [_inst_3 : AddCommMonoid.{u3} F] [_inst_4 : Module.{u1, u2} 𝕜 E (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_2] [_inst_5 : Module.{u1, u3} 𝕜 F (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_3] (B : LinearMap.{u1, u1, u2, max u3 u1} 𝕜 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) E (LinearMap.{u1, u1, u3, u1} 𝕜 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) F 𝕜 _inst_3 (AddCommGroup.toAddCommMonoid.{u1} 𝕜 (NormedAddCommGroup.toAddCommGroup.{u1} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u1} 𝕜 (NormedRing.toNonUnitalNormedRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_2 (LinearMap.addCommMonoid.{u1, u1, u3, u1} 𝕜 𝕜 F 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_3 (AddCommGroup.toAddCommMonoid.{u1} 𝕜 (NormedAddCommGroup.toAddCommGroup.{u1} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u1} 𝕜 (NormedRing.toNonUnitalNormedRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))))) _inst_4 (LinearMap.module.{u1, u1, u1, u3, u1} 𝕜 𝕜 𝕜 F 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_3 (AddCommGroup.toAddCommMonoid.{u1} 𝕜 (NormedAddCommGroup.toAddCommGroup.{u1} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u1} 𝕜 (NormedRing.toNonUnitalNormedRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))) (smulCommClass_self.{u1, u1} 𝕜 𝕜 (CommRing.toCommMonoid.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))) (Monoid.toMulAction.{u1} 𝕜 (CommMonoid.toMonoid.{u1} 𝕜 (CommRing.toCommMonoid.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))))) {s : Set.{u2} E} {t : Set.{u2} E}, Eq.{succ u3} (Set.{u3} F) (LinearMap.polar.{u1, u2, u3} 𝕜 E F _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 B (Union.union.{u2} (Set.{u2} E) (Set.hasUnion.{u2} E) s t)) (Inter.inter.{u3} (Set.{u3} F) (Set.hasInter.{u3} F) (LinearMap.polar.{u1, u2, u3} 𝕜 E F _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 B s) (LinearMap.polar.{u1, u2, u3} 𝕜 E F _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 B t))
but is expected to have type
  forall {𝕜 : Type.{u1}} {E : Type.{u3}} {F : Type.{u2}} [_inst_1 : NormedCommRing.{u1} 𝕜] [_inst_2 : AddCommMonoid.{u3} E] [_inst_3 : AddCommMonoid.{u2} F] [_inst_4 : Module.{u1, u3} 𝕜 E (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) _inst_2] [_inst_5 : Module.{u1, u2} 𝕜 F (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) _inst_3] (B : LinearMap.{u1, u1, u3, max u1 u2} 𝕜 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))) E (LinearMap.{u1, u1, u2, u1} 𝕜 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))) F 𝕜 _inst_3 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))) _inst_2 (LinearMap.addCommMonoid.{u1, u1, u2, u1} 𝕜 𝕜 F 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) _inst_3 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))))) _inst_4 (LinearMap.instModuleLinearMapAddCommMonoid.{u1, u1, u1, u2, u1} 𝕜 𝕜 𝕜 F 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) _inst_3 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u1} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u1} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))) (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))) (Semiring.toModule.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))) (smulCommClass_self.{u1, u1} 𝕜 𝕜 (CommRing.toCommMonoid.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))) (MulActionWithZero.toMulAction.{u1, u1} 𝕜 𝕜 (Semiring.toMonoidWithZero.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))) (CommMonoidWithZero.toZero.{u1} 𝕜 (CommSemiring.toCommMonoidWithZero.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))))) (MonoidWithZero.toMulActionWithZero.{u1} 𝕜 (Semiring.toMonoidWithZero.{u1} 𝕜 (CommSemiring.toSemiring.{u1} 𝕜 (CommRing.toCommSemiring.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))))))) {s : Set.{u3} E} {t : Set.{u3} E}, Eq.{succ u2} (Set.{u2} F) (LinearMap.polar.{u1, u3, u2} 𝕜 E F _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 B (Union.union.{u3} (Set.{u3} E) (Set.instUnionSet.{u3} E) s t)) (Inter.inter.{u2} (Set.{u2} F) (Set.instInterSet.{u2} F) (LinearMap.polar.{u1, u3, u2} 𝕜 E F _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 B s) (LinearMap.polar.{u1, u3, u2} 𝕜 E F _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 B t))
Case conversion may be inaccurate. Consider using '#align linear_map.polar_union LinearMap.polar_unionₓ'. -/
@[simp]
theorem polar_union {s t : Set E} : B.polar (s ∪ t) = B.polar s ∩ B.polar t :=
  B.polar_gc.l_sup
#align linear_map.polar_union LinearMap.polar_union

/- warning: linear_map.polar_antitone -> LinearMap.polar_antitone is a dubious translation:
<too large>
Case conversion may be inaccurate. Consider using '#align linear_map.polar_antitone LinearMap.polar_antitoneₓ'. -/
theorem polar_antitone : Antitone (B.polar : Set E → Set F) :=
  B.polar_gc.monotone_l
#align linear_map.polar_antitone LinearMap.polar_antitone

/- warning: linear_map.polar_empty -> LinearMap.polar_empty is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} {E : Type.{u2}} {F : Type.{u3}} [_inst_1 : NormedCommRing.{u1} 𝕜] [_inst_2 : AddCommMonoid.{u2} E] [_inst_3 : AddCommMonoid.{u3} F] [_inst_4 : Module.{u1, u2} 𝕜 E (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_2] [_inst_5 : Module.{u1, u3} 𝕜 F (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_3] (B : LinearMap.{u1, u1, u2, max u3 u1} 𝕜 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) E (LinearMap.{u1, u1, u3, u1} 𝕜 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) F 𝕜 _inst_3 (AddCommGroup.toAddCommMonoid.{u1} 𝕜 (NormedAddCommGroup.toAddCommGroup.{u1} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u1} 𝕜 (NormedRing.toNonUnitalNormedRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_2 (LinearMap.addCommMonoid.{u1, u1, u3, u1} 𝕜 𝕜 F 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_3 (AddCommGroup.toAddCommMonoid.{u1} 𝕜 (NormedAddCommGroup.toAddCommGroup.{u1} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u1} 𝕜 (NormedRing.toNonUnitalNormedRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))))) _inst_4 (LinearMap.module.{u1, u1, u1, u3, u1} 𝕜 𝕜 𝕜 F 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_3 (AddCommGroup.toAddCommMonoid.{u1} 𝕜 (NormedAddCommGroup.toAddCommGroup.{u1} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u1} 𝕜 (NormedRing.toNonUnitalNormedRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))) (smulCommClass_self.{u1, u1} 𝕜 𝕜 (CommRing.toCommMonoid.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))) (Monoid.toMulAction.{u1} 𝕜 (CommMonoid.toMonoid.{u1} 𝕜 (CommRing.toCommMonoid.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))))), Eq.{succ u3} (Set.{u3} F) (LinearMap.polar.{u1, u2, u3} 𝕜 E F _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 B (EmptyCollection.emptyCollection.{u2} (Set.{u2} E) (Set.hasEmptyc.{u2} E))) (Set.univ.{u3} F)
but is expected to have type
  forall {𝕜 : Type.{u2}} {E : Type.{u1}} {F : Type.{u3}} [_inst_1 : NormedCommRing.{u2} 𝕜] [_inst_2 : AddCommMonoid.{u1} E] [_inst_3 : AddCommMonoid.{u3} F] [_inst_4 : Module.{u2, u1} 𝕜 E (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) _inst_2] [_inst_5 : Module.{u2, u3} 𝕜 F (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) _inst_3] (B : LinearMap.{u2, u2, u1, max u2 u3} 𝕜 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) (RingHom.id.{u2} 𝕜 (Semiring.toNonAssocSemiring.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))))) E (LinearMap.{u2, u2, u3, u2} 𝕜 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) (RingHom.id.{u2} 𝕜 (Semiring.toNonAssocSemiring.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))))) F 𝕜 _inst_3 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 _inst_1)))))) _inst_5 (Semiring.toModule.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))))) _inst_2 (LinearMap.addCommMonoid.{u2, u2, u3, u2} 𝕜 𝕜 F 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) _inst_3 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 _inst_1)))))) _inst_5 (Semiring.toModule.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1))))) (RingHom.id.{u2} 𝕜 (Semiring.toNonAssocSemiring.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1))))))) _inst_4 (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u3, u2} 𝕜 𝕜 𝕜 F 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) _inst_3 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 _inst_1)))))) _inst_5 (Semiring.toModule.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1))))) (RingHom.id.{u2} 𝕜 (Semiring.toNonAssocSemiring.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))))) (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) (Semiring.toModule.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1))))) (smulCommClass_self.{u2, u2} 𝕜 𝕜 (CommRing.toCommMonoid.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1))) (MulActionWithZero.toMulAction.{u2, u2} 𝕜 𝕜 (Semiring.toMonoidWithZero.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1))))) (CommMonoidWithZero.toZero.{u2} 𝕜 (CommSemiring.toCommMonoidWithZero.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1))))) (MonoidWithZero.toMulActionWithZero.{u2} 𝕜 (Semiring.toMonoidWithZero.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))))))))), Eq.{succ u3} (Set.{u3} F) (LinearMap.polar.{u2, u1, u3} 𝕜 E F _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 B (EmptyCollection.emptyCollection.{u1} (Set.{u1} E) (Set.instEmptyCollectionSet.{u1} E))) (Set.univ.{u3} F)
Case conversion may be inaccurate. Consider using '#align linear_map.polar_empty LinearMap.polar_emptyₓ'. -/
@[simp]
theorem polar_empty : B.polar ∅ = Set.univ :=
  B.polar_gc.l_bot
#align linear_map.polar_empty LinearMap.polar_empty

/- warning: linear_map.polar_zero -> LinearMap.polar_zero is a dubious translation:
lean 3 declaration is
  forall {𝕜 : Type.{u1}} {E : Type.{u2}} {F : Type.{u3}} [_inst_1 : NormedCommRing.{u1} 𝕜] [_inst_2 : AddCommMonoid.{u2} E] [_inst_3 : AddCommMonoid.{u3} F] [_inst_4 : Module.{u1, u2} 𝕜 E (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_2] [_inst_5 : Module.{u1, u3} 𝕜 F (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_3] (B : LinearMap.{u1, u1, u2, max u3 u1} 𝕜 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) E (LinearMap.{u1, u1, u3, u1} 𝕜 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) F 𝕜 _inst_3 (AddCommGroup.toAddCommMonoid.{u1} 𝕜 (NormedAddCommGroup.toAddCommGroup.{u1} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u1} 𝕜 (NormedRing.toNonUnitalNormedRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_2 (LinearMap.addCommMonoid.{u1, u1, u3, u1} 𝕜 𝕜 F 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_3 (AddCommGroup.toAddCommMonoid.{u1} 𝕜 (NormedAddCommGroup.toAddCommGroup.{u1} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u1} 𝕜 (NormedRing.toNonUnitalNormedRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))))) _inst_4 (LinearMap.module.{u1, u1, u1, u3, u1} 𝕜 𝕜 𝕜 F 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) _inst_3 (AddCommGroup.toAddCommMonoid.{u1} 𝕜 (NormedAddCommGroup.toAddCommGroup.{u1} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u1} 𝕜 (NormedRing.toNonUnitalNormedRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) _inst_5 (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))) (RingHom.id.{u1} 𝕜 (Semiring.toNonAssocSemiring.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))))) (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1))) (Semiring.toModule.{u1} 𝕜 (Ring.toSemiring.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 _inst_1)))) (smulCommClass_self.{u1, u1} 𝕜 𝕜 (CommRing.toCommMonoid.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1))) (Monoid.toMulAction.{u1} 𝕜 (CommMonoid.toMonoid.{u1} 𝕜 (CommRing.toCommMonoid.{u1} 𝕜 (SeminormedCommRing.toCommRing.{u1} 𝕜 (NormedCommRing.toSeminormedCommRing.{u1} 𝕜 _inst_1)))))))), Eq.{succ u3} (Set.{u3} F) (LinearMap.polar.{u1, u2, u3} 𝕜 E F _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 B (Singleton.singleton.{u2, u2} E (Set.{u2} E) (Set.hasSingleton.{u2} E) (OfNat.ofNat.{u2} E 0 (OfNat.mk.{u2} E 0 (Zero.zero.{u2} E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E _inst_2)))))))) (Set.univ.{u3} F)
but is expected to have type
  forall {𝕜 : Type.{u2}} {E : Type.{u1}} {F : Type.{u3}} [_inst_1 : NormedCommRing.{u2} 𝕜] [_inst_2 : AddCommMonoid.{u1} E] [_inst_3 : AddCommMonoid.{u3} F] [_inst_4 : Module.{u2, u1} 𝕜 E (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) _inst_2] [_inst_5 : Module.{u2, u3} 𝕜 F (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) _inst_3] (B : LinearMap.{u2, u2, u1, max u2 u3} 𝕜 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) (RingHom.id.{u2} 𝕜 (Semiring.toNonAssocSemiring.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))))) E (LinearMap.{u2, u2, u3, u2} 𝕜 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) (RingHom.id.{u2} 𝕜 (Semiring.toNonAssocSemiring.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))))) F 𝕜 _inst_3 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 _inst_1)))))) _inst_5 (Semiring.toModule.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))))) _inst_2 (LinearMap.addCommMonoid.{u2, u2, u3, u2} 𝕜 𝕜 F 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) _inst_3 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 _inst_1)))))) _inst_5 (Semiring.toModule.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1))))) (RingHom.id.{u2} 𝕜 (Semiring.toNonAssocSemiring.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1))))))) _inst_4 (LinearMap.instModuleLinearMapAddCommMonoid.{u2, u2, u2, u3, u2} 𝕜 𝕜 𝕜 F 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) _inst_3 (NonUnitalNonAssocSemiring.toAddCommMonoid.{u2} 𝕜 (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 _inst_1)))))) _inst_5 (Semiring.toModule.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1))))) (RingHom.id.{u2} 𝕜 (Semiring.toNonAssocSemiring.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))))) (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))) (Semiring.toModule.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1))))) (smulCommClass_self.{u2, u2} 𝕜 𝕜 (CommRing.toCommMonoid.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1))) (MulActionWithZero.toMulAction.{u2, u2} 𝕜 𝕜 (Semiring.toMonoidWithZero.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1))))) (CommMonoidWithZero.toZero.{u2} 𝕜 (CommSemiring.toCommMonoidWithZero.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1))))) (MonoidWithZero.toMulActionWithZero.{u2} 𝕜 (Semiring.toMonoidWithZero.{u2} 𝕜 (CommSemiring.toSemiring.{u2} 𝕜 (CommRing.toCommSemiring.{u2} 𝕜 (SeminormedCommRing.toCommRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 _inst_1)))))))))), Eq.{succ u3} (Set.{u3} F) (LinearMap.polar.{u2, u1, u3} 𝕜 E F _inst_1 _inst_2 _inst_3 _inst_4 _inst_5 B (Singleton.singleton.{u1, u1} E (Set.{u1} E) (Set.instSingletonSet.{u1} E) (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (AddMonoid.toZero.{u1} E (AddCommMonoid.toAddMonoid.{u1} E _inst_2)))))) (Set.univ.{u3} F)
Case conversion may be inaccurate. Consider using '#align linear_map.polar_zero LinearMap.polar_zeroₓ'. -/
@[simp]
theorem polar_zero : B.polar ({0} : Set E) = Set.univ :=
  by
  refine' set.eq_univ_iff_forall.mpr fun y x hx => _
  rw [set.mem_singleton_iff.mp hx, map_zero, LinearMap.zero_apply, norm_zero]
  exact zero_le_one
#align linear_map.polar_zero LinearMap.polar_zero

/- warning: linear_map.subset_bipolar -> LinearMap.subset_bipolar is a dubious translation:
<too large>
Case conversion may be inaccurate. Consider using '#align linear_map.subset_bipolar LinearMap.subset_bipolarₓ'. -/
theorem subset_bipolar (s : Set E) : s ⊆ B.flip.polar (B.polar s) := fun x hx y hy => by
  rw [B.flip_apply]; exact hy x hx
#align linear_map.subset_bipolar LinearMap.subset_bipolar

/- warning: linear_map.tripolar_eq_polar -> LinearMap.tripolar_eq_polar is a dubious translation:
<too large>
Case conversion may be inaccurate. Consider using '#align linear_map.tripolar_eq_polar LinearMap.tripolar_eq_polarₓ'. -/
@[simp]
theorem tripolar_eq_polar (s : Set E) : B.polar (B.flip.polar (B.polar s)) = B.polar s :=
  by
  refine' (B.polar_antitone (B.subset_bipolar s)).antisymm _
  convert subset_bipolar B.flip (B.polar s)
  exact B.flip_flip.symm
#align linear_map.tripolar_eq_polar LinearMap.tripolar_eq_polar

/- warning: linear_map.polar_weak_closed -> LinearMap.polar_weak_closed is a dubious translation:
<too large>
Case conversion may be inaccurate. Consider using '#align linear_map.polar_weak_closed LinearMap.polar_weak_closedₓ'. -/
/-- The polar set is closed in the weak topology induced by `B.flip`. -/
theorem polar_weak_closed (s : Set E) : is_closed[WeakBilin.topologicalSpace B.flip] (B.polar s) :=
  by
  rw [polar_eq_Inter]
  refine' isClosed_iInter fun x => isClosed_iInter fun _ => _
  exact isClosed_le (WeakBilin.eval_continuous B.flip x).norm continuous_const
#align linear_map.polar_weak_closed LinearMap.polar_weak_closed

end NormedRing

section NontriviallyNormedField

variable [NontriviallyNormedField 𝕜] [AddCommMonoid E] [AddCommMonoid F]

variable [Module 𝕜 E] [Module 𝕜 F]

variable (B : E →ₗ[𝕜] F →ₗ[𝕜] 𝕜)

/- warning: linear_map.polar_univ -> LinearMap.polar_univ is a dubious translation:
<too large>
Case conversion may be inaccurate. Consider using '#align linear_map.polar_univ LinearMap.polar_univₓ'. -/
theorem polar_univ (h : SeparatingRight B) : B.polar Set.univ = {(0 : F)} :=
  by
  rw [Set.eq_singleton_iff_unique_mem]
  refine' ⟨by simp only [zero_mem_polar], fun y hy => h _ fun x => _⟩
  refine' norm_le_zero_iff.mp (le_of_forall_le_of_dense fun ε hε => _)
  rcases NormedField.exists_norm_lt 𝕜 hε with ⟨c, hc, hcε⟩
  calc
    ‖B x y‖ = ‖c‖ * ‖B (c⁻¹ • x) y‖ := by
      rw [B.map_smul, LinearMap.smul_apply, Algebra.id.smul_eq_mul, norm_mul, norm_inv,
        mul_inv_cancel_left₀ hc.ne']
    _ ≤ ε * 1 := (mul_le_mul hcε.le (hy _ trivial) (norm_nonneg _) hε.le)
    _ = ε := mul_one _
    
#align linear_map.polar_univ LinearMap.polar_univ

end NontriviallyNormedField

end LinearMap

