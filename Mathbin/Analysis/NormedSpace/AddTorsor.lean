/-
Copyright (c) 2020 Joseph Myers. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Joseph Myers, Yury Kudryashov

! This file was ported from Lean 3 source module analysis.normed_space.add_torsor
! leanprover-community/mathlib commit 78261225eb5cedc61c5c74ecb44e5b385d13b733
! Please do not edit these lines, except to modify the commit id
! if you have ported upstream changes.
-/
import Mathbin.Analysis.NormedSpace.Basic
import Mathbin.Analysis.Normed.Group.AddTorsor
import Mathbin.LinearAlgebra.AffineSpace.MidpointZero
import Mathbin.LinearAlgebra.AffineSpace.AffineSubspace
import Mathbin.Topology.Instances.RealVectorSpace

/-!
# Torsors of normed space actions.

This file contains lemmas about normed additive torsors over normed spaces.
-/


noncomputable section

open NNReal Topology

open Filter

variable {α V P W Q : Type _} [SeminormedAddCommGroup V] [PseudoMetricSpace P] [NormedAddTorsor V P]
  [NormedAddCommGroup W] [MetricSpace Q] [NormedAddTorsor W Q]

section NormedSpace

variable {𝕜 : Type _} [NormedField 𝕜] [NormedSpace 𝕜 V] [NormedSpace 𝕜 W]

open AffineMap

/- warning: affine_subspace.is_closed_direction_iff -> AffineSubspace.isClosed_direction_iff is a dubious translation:
lean 3 declaration is
  forall {W : Type.{u1}} {Q : Type.{u2}} [_inst_4 : NormedAddCommGroup.{u1} W] [_inst_5 : MetricSpace.{u2} Q] [_inst_6 : NormedAddTorsor.{u1, u2} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u2} Q _inst_5)] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_9 : NormedSpace.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4)] (s : AffineSubspace.{u3, u1, u2} 𝕜 W Q (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6)), Iff (IsClosed.{u1} W (UniformSpace.toTopologicalSpace.{u1} W (PseudoMetricSpace.toUniformSpace.{u1} W (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} W (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4)))) ((fun (a : Type.{u1}) (b : Type.{u1}) [self : HasLiftT.{succ u1, succ u1} a b] => self.0) (Submodule.{u3, u1} 𝕜 W (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (AddCommGroup.toAddCommMonoid.{u1} W (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4)) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9)) (Set.{u1} W) (HasLiftT.mk.{succ u1, succ u1} (Submodule.{u3, u1} 𝕜 W (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (AddCommGroup.toAddCommMonoid.{u1} W (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4)) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9)) (Set.{u1} W) (CoeTCₓ.coe.{succ u1, succ u1} (Submodule.{u3, u1} 𝕜 W (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (AddCommGroup.toAddCommMonoid.{u1} W (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4)) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9)) (Set.{u1} W) (SetLike.Set.hasCoeT.{u1, u1} (Submodule.{u3, u1} 𝕜 W (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (AddCommGroup.toAddCommMonoid.{u1} W (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4)) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9)) W (Submodule.setLike.{u3, u1} 𝕜 W (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (AddCommGroup.toAddCommMonoid.{u1} W (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4)) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9))))) (AffineSubspace.direction.{u3, u1, u2} 𝕜 W Q (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6) s))) (IsClosed.{u2} Q (UniformSpace.toTopologicalSpace.{u2} Q (PseudoMetricSpace.toUniformSpace.{u2} Q (MetricSpace.toPseudoMetricSpace.{u2} Q _inst_5))) ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (AffineSubspace.{u3, u1, u2} 𝕜 W Q (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6)) (Set.{u2} Q) (HasLiftT.mk.{succ u2, succ u2} (AffineSubspace.{u3, u1, u2} 𝕜 W Q (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6)) (Set.{u2} Q) (CoeTCₓ.coe.{succ u2, succ u2} (AffineSubspace.{u3, u1, u2} 𝕜 W Q (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6)) (Set.{u2} Q) (SetLike.Set.hasCoeT.{u2, u2} (AffineSubspace.{u3, u1, u2} 𝕜 W Q (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6)) Q (AffineSubspace.setLike.{u3, u1, u2} 𝕜 W Q (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6))))) s))
but is expected to have type
  forall {W : Type.{u2}} {Q : Type.{u1}} [_inst_4 : NormedAddCommGroup.{u2} W] [_inst_5 : MetricSpace.{u1} Q] [_inst_6 : NormedAddTorsor.{u2, u1} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u1} Q _inst_5)] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_9 : NormedSpace.{u3, u2} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} W _inst_4)] (s : AffineSubspace.{u3, u2, u1} 𝕜 W Q (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u2} W _inst_4) (NormedSpace.toModule.{u3, u2} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor.{u2, u1} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u1} Q _inst_5) _inst_6)), Iff (IsClosed.{u2} W (UniformSpace.toTopologicalSpace.{u2} W (PseudoMetricSpace.toUniformSpace.{u2} W (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} W (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} W _inst_4)))) (SetLike.coe.{u2, u2} (Submodule.{u3, u2} 𝕜 W (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (AddCommGroup.toAddCommMonoid.{u2} W (NormedAddCommGroup.toAddCommGroup.{u2} W _inst_4)) (NormedSpace.toModule.{u3, u2} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} W _inst_4) _inst_9)) W (Submodule.setLike.{u3, u2} 𝕜 W (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (AddCommGroup.toAddCommMonoid.{u2} W (NormedAddCommGroup.toAddCommGroup.{u2} W _inst_4)) (NormedSpace.toModule.{u3, u2} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} W _inst_4) _inst_9)) (AffineSubspace.direction.{u3, u2, u1} 𝕜 W Q (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u2} W _inst_4) (NormedSpace.toModule.{u3, u2} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor.{u2, u1} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u1} Q _inst_5) _inst_6) s))) (IsClosed.{u1} Q (UniformSpace.toTopologicalSpace.{u1} Q (PseudoMetricSpace.toUniformSpace.{u1} Q (MetricSpace.toPseudoMetricSpace.{u1} Q _inst_5))) (SetLike.coe.{u1, u1} (AffineSubspace.{u3, u2, u1} 𝕜 W Q (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u2} W _inst_4) (NormedSpace.toModule.{u3, u2} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor.{u2, u1} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u1} Q _inst_5) _inst_6)) Q (AffineSubspace.instSetLikeAffineSubspace.{u3, u2, u1} 𝕜 W Q (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u2} W _inst_4) (NormedSpace.toModule.{u3, u2} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor.{u2, u1} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u2} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u1} Q _inst_5) _inst_6)) s))
Case conversion may be inaccurate. Consider using '#align affine_subspace.is_closed_direction_iff AffineSubspace.isClosed_direction_iffₓ'. -/
theorem AffineSubspace.isClosed_direction_iff (s : AffineSubspace 𝕜 Q) :
    IsClosed (s.direction : Set W) ↔ IsClosed (s : Set Q) :=
  by
  rcases s.eq_bot_or_nonempty with (rfl | ⟨x, hx⟩); · simp [isClosed_singleton]
  rw [← (IsometryEquiv.vaddConst x).toHomeomorph.symm.isClosed_image,
    AffineSubspace.coe_direction_eq_vsub_set_right hx]
  rfl
#align affine_subspace.is_closed_direction_iff AffineSubspace.isClosed_direction_iff

include V

/- warning: dist_center_homothety -> dist_center_homothety is a dubious translation:
lean 3 declaration is
  forall {V : Type.{u1}} {P : Type.{u2}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u2} P] [_inst_3 : NormedAddTorsor.{u1, u2} V P _inst_1 _inst_2] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_8 : NormedSpace.{u3, u1} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c : 𝕜), Eq.{1} Real (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ (coeFn.{max (succ u1) (succ u2), succ u2} (AffineMap.{u3, u1, u2, u1, u2} 𝕜 V P V P (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (fun (_x : AffineMap.{u3, u1, u2, u1, u2} 𝕜 V P V P (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) => P -> P) (AffineMap.hasCoeToFun.{u3, u1, u2, u1, u2} 𝕜 V P V P (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (AffineMap.homothety.{u3, u1, u2} 𝕜 V P (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) p₁ c) p₂)) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.hasMul) (Norm.norm.{u3} 𝕜 (NormedField.toHasNorm.{u3} 𝕜 _inst_7) c) (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ p₂))
but is expected to have type
  forall {V : Type.{u2}} {P : Type.{u3}} [_inst_1 : SeminormedAddCommGroup.{u2} V] [_inst_2 : PseudoMetricSpace.{u3} P] [_inst_3 : NormedAddTorsor.{u2, u3} V P _inst_1 _inst_2] {𝕜 : Type.{u1}} [_inst_7 : NormedField.{u1} 𝕜] [_inst_8 : NormedSpace.{u1, u2} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c : 𝕜), Eq.{1} Real (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ (FunLike.coe.{max (succ u2) (succ u3), succ u3, succ u3} (AffineMap.{u1, u2, u3, u2, u3} 𝕜 V P V P (CommRing.toRing.{u1} 𝕜 (EuclideanDomain.toCommRing.{u1} 𝕜 (Field.toEuclideanDomain.{u1} 𝕜 (NormedField.toField.{u1} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3)) P (fun (_x : P) => (fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : P) => P) _x) (AffineMap.funLike.{u1, u2, u3, u2, u3} 𝕜 V P V P (CommRing.toRing.{u1} 𝕜 (EuclideanDomain.toCommRing.{u1} 𝕜 (Field.toEuclideanDomain.{u1} 𝕜 (NormedField.toField.{u1} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3)) (AffineMap.homothety.{u1, u2, u3} 𝕜 V P (EuclideanDomain.toCommRing.{u1} 𝕜 (Field.toEuclideanDomain.{u1} 𝕜 (NormedField.toField.{u1} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) p₁ c) p₂)) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.instMulReal) (Norm.norm.{u1} 𝕜 (NormedField.toNorm.{u1} 𝕜 _inst_7) c) (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ p₂))
Case conversion may be inaccurate. Consider using '#align dist_center_homothety dist_center_homothetyₓ'. -/
@[simp]
theorem dist_center_homothety (p₁ p₂ : P) (c : 𝕜) :
    dist p₁ (homothety p₁ c p₂) = ‖c‖ * dist p₁ p₂ := by
  simp [homothety_def, norm_smul, ← dist_eq_norm_vsub, dist_comm]
#align dist_center_homothety dist_center_homothety

/- warning: dist_homothety_center -> dist_homothety_center is a dubious translation:
lean 3 declaration is
  forall {V : Type.{u1}} {P : Type.{u2}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u2} P] [_inst_3 : NormedAddTorsor.{u1, u2} V P _inst_1 _inst_2] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_8 : NormedSpace.{u3, u1} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c : 𝕜), Eq.{1} Real (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) (coeFn.{max (succ u1) (succ u2), succ u2} (AffineMap.{u3, u1, u2, u1, u2} 𝕜 V P V P (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (fun (_x : AffineMap.{u3, u1, u2, u1, u2} 𝕜 V P V P (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) => P -> P) (AffineMap.hasCoeToFun.{u3, u1, u2, u1, u2} 𝕜 V P V P (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (AffineMap.homothety.{u3, u1, u2} 𝕜 V P (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) p₁ c) p₂) p₁) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.hasMul) (Norm.norm.{u3} 𝕜 (NormedField.toHasNorm.{u3} 𝕜 _inst_7) c) (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ p₂))
but is expected to have type
  forall {V : Type.{u2}} {P : Type.{u3}} [_inst_1 : SeminormedAddCommGroup.{u2} V] [_inst_2 : PseudoMetricSpace.{u3} P] [_inst_3 : NormedAddTorsor.{u2, u3} V P _inst_1 _inst_2] {𝕜 : Type.{u1}} [_inst_7 : NormedField.{u1} 𝕜] [_inst_8 : NormedSpace.{u1, u2} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c : 𝕜), Eq.{1} Real (Dist.dist.{u3} ((fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : P) => P) p₂) (PseudoMetricSpace.toDist.{u3} ((fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : P) => P) p₂) _inst_2) (FunLike.coe.{max (succ u2) (succ u3), succ u3, succ u3} (AffineMap.{u1, u2, u3, u2, u3} 𝕜 V P V P (CommRing.toRing.{u1} 𝕜 (EuclideanDomain.toCommRing.{u1} 𝕜 (Field.toEuclideanDomain.{u1} 𝕜 (NormedField.toField.{u1} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3)) P (fun (_x : P) => (fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : P) => P) _x) (AffineMap.funLike.{u1, u2, u3, u2, u3} 𝕜 V P V P (CommRing.toRing.{u1} 𝕜 (EuclideanDomain.toCommRing.{u1} 𝕜 (Field.toEuclideanDomain.{u1} 𝕜 (NormedField.toField.{u1} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3)) (AffineMap.homothety.{u1, u2, u3} 𝕜 V P (EuclideanDomain.toCommRing.{u1} 𝕜 (Field.toEuclideanDomain.{u1} 𝕜 (NormedField.toField.{u1} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) p₁ c) p₂) p₁) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.instMulReal) (Norm.norm.{u1} 𝕜 (NormedField.toNorm.{u1} 𝕜 _inst_7) c) (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ p₂))
Case conversion may be inaccurate. Consider using '#align dist_homothety_center dist_homothety_centerₓ'. -/
@[simp]
theorem dist_homothety_center (p₁ p₂ : P) (c : 𝕜) :
    dist (homothety p₁ c p₂) p₁ = ‖c‖ * dist p₁ p₂ := by rw [dist_comm, dist_center_homothety]
#align dist_homothety_center dist_homothety_center

/- warning: dist_line_map_line_map -> dist_lineMap_lineMap is a dubious translation:
lean 3 declaration is
  forall {V : Type.{u1}} {P : Type.{u2}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u2} P] [_inst_3 : NormedAddTorsor.{u1, u2} V P _inst_1 _inst_2] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_8 : NormedSpace.{u3, u1} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c₁ : 𝕜) (c₂ : 𝕜), Eq.{1} Real (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) (coeFn.{max (succ u3) (succ u1) (succ u2), max (succ u3) (succ u2)} (AffineMap.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (fun (_x : AffineMap.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) => 𝕜 -> P) (AffineMap.hasCoeToFun.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (AffineMap.lineMap.{u3, u1, u2} 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) p₁ p₂) c₁) (coeFn.{max (succ u3) (succ u1) (succ u2), max (succ u3) (succ u2)} (AffineMap.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (fun (_x : AffineMap.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) => 𝕜 -> P) (AffineMap.hasCoeToFun.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (AffineMap.lineMap.{u3, u1, u2} 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) p₁ p₂) c₂)) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.hasMul) (Dist.dist.{u3} 𝕜 (PseudoMetricSpace.toHasDist.{u3} 𝕜 (SeminormedRing.toPseudoMetricSpace.{u3} 𝕜 (SeminormedCommRing.toSemiNormedRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) c₁ c₂) (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ p₂))
but is expected to have type
  forall {V : Type.{u1}} {P : Type.{u3}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u3} P] [_inst_3 : NormedAddTorsor.{u1, u3} V P _inst_1 _inst_2] {𝕜 : Type.{u2}} [_inst_7 : NormedField.{u2} 𝕜] [_inst_8 : NormedSpace.{u2, u1} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c₁ : 𝕜) (c₂ : 𝕜), Eq.{1} Real (Dist.dist.{u3} ((fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : 𝕜) => P) c₁) (PseudoMetricSpace.toDist.{u3} ((fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : 𝕜) => P) c₁) _inst_2) (FunLike.coe.{max (max (succ u2) (succ u1)) (succ u3), succ u2, succ u3} (AffineMap.{u2, u2, u2, u1, u3} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (Ring.toAddCommGroup.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (AffineMap.instModuleToSemiringToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonUnitalRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (addGroupIsAddTorsor.{u2} 𝕜 (AddGroupWithOne.toAddGroup.{u2} 𝕜 (Ring.toAddGroupWithOne.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3)) 𝕜 (fun (_x : 𝕜) => (fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : 𝕜) => P) _x) (AffineMap.funLike.{u2, u2, u2, u1, u3} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (Ring.toAddCommGroup.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (AffineMap.instModuleToSemiringToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonUnitalRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (addGroupIsAddTorsor.{u2} 𝕜 (AddGroupWithOne.toAddGroup.{u2} 𝕜 (Ring.toAddGroupWithOne.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3)) (AffineMap.lineMap.{u2, u1, u3} 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3) p₁ p₂) c₁) (FunLike.coe.{max (max (succ u2) (succ u1)) (succ u3), succ u2, succ u3} (AffineMap.{u2, u2, u2, u1, u3} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (Ring.toAddCommGroup.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (AffineMap.instModuleToSemiringToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonUnitalRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (addGroupIsAddTorsor.{u2} 𝕜 (AddGroupWithOne.toAddGroup.{u2} 𝕜 (Ring.toAddGroupWithOne.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3)) 𝕜 (fun (_x : 𝕜) => (fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : 𝕜) => P) _x) (AffineMap.funLike.{u2, u2, u2, u1, u3} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (Ring.toAddCommGroup.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (AffineMap.instModuleToSemiringToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonUnitalRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (addGroupIsAddTorsor.{u2} 𝕜 (AddGroupWithOne.toAddGroup.{u2} 𝕜 (Ring.toAddGroupWithOne.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3)) (AffineMap.lineMap.{u2, u1, u3} 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3) p₁ p₂) c₂)) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.instMulReal) (Dist.dist.{u2} 𝕜 (PseudoMetricSpace.toDist.{u2} 𝕜 (SeminormedRing.toPseudoMetricSpace.{u2} 𝕜 (SeminormedCommRing.toSeminormedRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) c₁ c₂) (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ p₂))
Case conversion may be inaccurate. Consider using '#align dist_line_map_line_map dist_lineMap_lineMapₓ'. -/
@[simp]
theorem dist_lineMap_lineMap (p₁ p₂ : P) (c₁ c₂ : 𝕜) :
    dist (lineMap p₁ p₂ c₁) (lineMap p₁ p₂ c₂) = dist c₁ c₂ * dist p₁ p₂ :=
  by
  rw [dist_comm p₁ p₂]
  simp only [line_map_apply, dist_eq_norm_vsub, vadd_vsub_vadd_cancel_right, ← sub_smul, norm_smul,
    vsub_eq_sub]
#align dist_line_map_line_map dist_lineMap_lineMap

#print lipschitzWith_lineMap /-
theorem lipschitzWith_lineMap (p₁ p₂ : P) : LipschitzWith (nndist p₁ p₂) (lineMap p₁ p₂ : 𝕜 → P) :=
  LipschitzWith.of_dist_le_mul fun c₁ c₂ =>
    ((dist_lineMap_lineMap p₁ p₂ c₁ c₂).trans (mul_comm _ _)).le
#align lipschitz_with_line_map lipschitzWith_lineMap
-/

/- warning: dist_line_map_left -> dist_lineMap_left is a dubious translation:
lean 3 declaration is
  forall {V : Type.{u1}} {P : Type.{u2}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u2} P] [_inst_3 : NormedAddTorsor.{u1, u2} V P _inst_1 _inst_2] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_8 : NormedSpace.{u3, u1} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c : 𝕜), Eq.{1} Real (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) (coeFn.{max (succ u3) (succ u1) (succ u2), max (succ u3) (succ u2)} (AffineMap.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (fun (_x : AffineMap.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) => 𝕜 -> P) (AffineMap.hasCoeToFun.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (AffineMap.lineMap.{u3, u1, u2} 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) p₁ p₂) c) p₁) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.hasMul) (Norm.norm.{u3} 𝕜 (NormedField.toHasNorm.{u3} 𝕜 _inst_7) c) (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ p₂))
but is expected to have type
  forall {V : Type.{u1}} {P : Type.{u3}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u3} P] [_inst_3 : NormedAddTorsor.{u1, u3} V P _inst_1 _inst_2] {𝕜 : Type.{u2}} [_inst_7 : NormedField.{u2} 𝕜] [_inst_8 : NormedSpace.{u2, u1} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c : 𝕜), Eq.{1} Real (Dist.dist.{u3} ((fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : 𝕜) => P) c) (PseudoMetricSpace.toDist.{u3} ((fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : 𝕜) => P) c) _inst_2) (FunLike.coe.{max (max (succ u2) (succ u1)) (succ u3), succ u2, succ u3} (AffineMap.{u2, u2, u2, u1, u3} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (Ring.toAddCommGroup.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (AffineMap.instModuleToSemiringToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonUnitalRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (addGroupIsAddTorsor.{u2} 𝕜 (AddGroupWithOne.toAddGroup.{u2} 𝕜 (Ring.toAddGroupWithOne.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3)) 𝕜 (fun (_x : 𝕜) => (fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : 𝕜) => P) _x) (AffineMap.funLike.{u2, u2, u2, u1, u3} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (Ring.toAddCommGroup.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (AffineMap.instModuleToSemiringToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonUnitalRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (addGroupIsAddTorsor.{u2} 𝕜 (AddGroupWithOne.toAddGroup.{u2} 𝕜 (Ring.toAddGroupWithOne.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3)) (AffineMap.lineMap.{u2, u1, u3} 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3) p₁ p₂) c) p₁) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.instMulReal) (Norm.norm.{u2} 𝕜 (NormedField.toNorm.{u2} 𝕜 _inst_7) c) (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ p₂))
Case conversion may be inaccurate. Consider using '#align dist_line_map_left dist_lineMap_leftₓ'. -/
@[simp]
theorem dist_lineMap_left (p₁ p₂ : P) (c : 𝕜) : dist (lineMap p₁ p₂ c) p₁ = ‖c‖ * dist p₁ p₂ := by
  simpa only [line_map_apply_zero, dist_zero_right] using dist_lineMap_lineMap p₁ p₂ c 0
#align dist_line_map_left dist_lineMap_left

/- warning: dist_left_line_map -> dist_left_lineMap is a dubious translation:
lean 3 declaration is
  forall {V : Type.{u1}} {P : Type.{u2}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u2} P] [_inst_3 : NormedAddTorsor.{u1, u2} V P _inst_1 _inst_2] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_8 : NormedSpace.{u3, u1} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c : 𝕜), Eq.{1} Real (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ (coeFn.{max (succ u3) (succ u1) (succ u2), max (succ u3) (succ u2)} (AffineMap.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (fun (_x : AffineMap.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) => 𝕜 -> P) (AffineMap.hasCoeToFun.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (AffineMap.lineMap.{u3, u1, u2} 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) p₁ p₂) c)) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.hasMul) (Norm.norm.{u3} 𝕜 (NormedField.toHasNorm.{u3} 𝕜 _inst_7) c) (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ p₂))
but is expected to have type
  forall {V : Type.{u1}} {P : Type.{u3}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u3} P] [_inst_3 : NormedAddTorsor.{u1, u3} V P _inst_1 _inst_2] {𝕜 : Type.{u2}} [_inst_7 : NormedField.{u2} 𝕜] [_inst_8 : NormedSpace.{u2, u1} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c : 𝕜), Eq.{1} Real (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ (FunLike.coe.{max (max (succ u2) (succ u1)) (succ u3), succ u2, succ u3} (AffineMap.{u2, u2, u2, u1, u3} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (Ring.toAddCommGroup.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (AffineMap.instModuleToSemiringToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonUnitalRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (addGroupIsAddTorsor.{u2} 𝕜 (AddGroupWithOne.toAddGroup.{u2} 𝕜 (Ring.toAddGroupWithOne.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3)) 𝕜 (fun (_x : 𝕜) => (fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : 𝕜) => P) _x) (AffineMap.funLike.{u2, u2, u2, u1, u3} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (Ring.toAddCommGroup.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (AffineMap.instModuleToSemiringToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonUnitalRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (addGroupIsAddTorsor.{u2} 𝕜 (AddGroupWithOne.toAddGroup.{u2} 𝕜 (Ring.toAddGroupWithOne.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3)) (AffineMap.lineMap.{u2, u1, u3} 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3) p₁ p₂) c)) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.instMulReal) (Norm.norm.{u2} 𝕜 (NormedField.toNorm.{u2} 𝕜 _inst_7) c) (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ p₂))
Case conversion may be inaccurate. Consider using '#align dist_left_line_map dist_left_lineMapₓ'. -/
@[simp]
theorem dist_left_lineMap (p₁ p₂ : P) (c : 𝕜) : dist p₁ (lineMap p₁ p₂ c) = ‖c‖ * dist p₁ p₂ :=
  (dist_comm _ _).trans (dist_lineMap_left _ _ _)
#align dist_left_line_map dist_left_lineMap

/- warning: dist_line_map_right -> dist_lineMap_right is a dubious translation:
lean 3 declaration is
  forall {V : Type.{u1}} {P : Type.{u2}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u2} P] [_inst_3 : NormedAddTorsor.{u1, u2} V P _inst_1 _inst_2] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_8 : NormedSpace.{u3, u1} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c : 𝕜), Eq.{1} Real (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) (coeFn.{max (succ u3) (succ u1) (succ u2), max (succ u3) (succ u2)} (AffineMap.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (fun (_x : AffineMap.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) => 𝕜 -> P) (AffineMap.hasCoeToFun.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (AffineMap.lineMap.{u3, u1, u2} 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) p₁ p₂) c) p₂) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.hasMul) (Norm.norm.{u3} 𝕜 (NormedField.toHasNorm.{u3} 𝕜 _inst_7) (HSub.hSub.{u3, u3, u3} 𝕜 𝕜 𝕜 (instHSub.{u3} 𝕜 (SubNegMonoid.toHasSub.{u3} 𝕜 (AddGroup.toSubNegMonoid.{u3} 𝕜 (NormedAddGroup.toAddGroup.{u3} 𝕜 (NormedAddCommGroup.toNormedAddGroup.{u3} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u3} 𝕜 (NormedRing.toNonUnitalNormedRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))))) (OfNat.ofNat.{u3} 𝕜 1 (OfNat.mk.{u3} 𝕜 1 (One.one.{u3} 𝕜 (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))))))) c)) (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ p₂))
but is expected to have type
  forall {V : Type.{u1}} {P : Type.{u3}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u3} P] [_inst_3 : NormedAddTorsor.{u1, u3} V P _inst_1 _inst_2] {𝕜 : Type.{u2}} [_inst_7 : NormedField.{u2} 𝕜] [_inst_8 : NormedSpace.{u2, u1} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c : 𝕜), Eq.{1} Real (Dist.dist.{u3} ((fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : 𝕜) => P) c) (PseudoMetricSpace.toDist.{u3} ((fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : 𝕜) => P) c) _inst_2) (FunLike.coe.{max (max (succ u2) (succ u1)) (succ u3), succ u2, succ u3} (AffineMap.{u2, u2, u2, u1, u3} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (Ring.toAddCommGroup.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (AffineMap.instModuleToSemiringToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonUnitalRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (addGroupIsAddTorsor.{u2} 𝕜 (AddGroupWithOne.toAddGroup.{u2} 𝕜 (Ring.toAddGroupWithOne.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3)) 𝕜 (fun (_x : 𝕜) => (fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : 𝕜) => P) _x) (AffineMap.funLike.{u2, u2, u2, u1, u3} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (Ring.toAddCommGroup.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (AffineMap.instModuleToSemiringToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonUnitalRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (addGroupIsAddTorsor.{u2} 𝕜 (AddGroupWithOne.toAddGroup.{u2} 𝕜 (Ring.toAddGroupWithOne.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3)) (AffineMap.lineMap.{u2, u1, u3} 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3) p₁ p₂) c) p₂) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.instMulReal) (Norm.norm.{u2} 𝕜 (NormedField.toNorm.{u2} 𝕜 _inst_7) (HSub.hSub.{u2, u2, u2} 𝕜 𝕜 𝕜 (instHSub.{u2} 𝕜 (Ring.toSub.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (OfNat.ofNat.{u2} 𝕜 1 (One.toOfNat1.{u2} 𝕜 (NonAssocRing.toOne.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))))) c)) (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ p₂))
Case conversion may be inaccurate. Consider using '#align dist_line_map_right dist_lineMap_rightₓ'. -/
@[simp]
theorem dist_lineMap_right (p₁ p₂ : P) (c : 𝕜) : dist (lineMap p₁ p₂ c) p₂ = ‖1 - c‖ * dist p₁ p₂ :=
  by simpa only [line_map_apply_one, dist_eq_norm'] using dist_lineMap_lineMap p₁ p₂ c 1
#align dist_line_map_right dist_lineMap_right

/- warning: dist_right_line_map -> dist_right_lineMap is a dubious translation:
lean 3 declaration is
  forall {V : Type.{u1}} {P : Type.{u2}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u2} P] [_inst_3 : NormedAddTorsor.{u1, u2} V P _inst_1 _inst_2] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_8 : NormedSpace.{u3, u1} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c : 𝕜), Eq.{1} Real (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₂ (coeFn.{max (succ u3) (succ u1) (succ u2), max (succ u3) (succ u2)} (AffineMap.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (fun (_x : AffineMap.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) => 𝕜 -> P) (AffineMap.hasCoeToFun.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (AffineMap.lineMap.{u3, u1, u2} 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) p₁ p₂) c)) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.hasMul) (Norm.norm.{u3} 𝕜 (NormedField.toHasNorm.{u3} 𝕜 _inst_7) (HSub.hSub.{u3, u3, u3} 𝕜 𝕜 𝕜 (instHSub.{u3} 𝕜 (SubNegMonoid.toHasSub.{u3} 𝕜 (AddGroup.toSubNegMonoid.{u3} 𝕜 (NormedAddGroup.toAddGroup.{u3} 𝕜 (NormedAddCommGroup.toNormedAddGroup.{u3} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u3} 𝕜 (NormedRing.toNonUnitalNormedRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))))) (OfNat.ofNat.{u3} 𝕜 1 (OfNat.mk.{u3} 𝕜 1 (One.one.{u3} 𝕜 (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))))))) c)) (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ p₂))
but is expected to have type
  forall {V : Type.{u1}} {P : Type.{u3}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u3} P] [_inst_3 : NormedAddTorsor.{u1, u3} V P _inst_1 _inst_2] {𝕜 : Type.{u2}} [_inst_7 : NormedField.{u2} 𝕜] [_inst_8 : NormedSpace.{u2, u1} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c : 𝕜), Eq.{1} Real (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₂ (FunLike.coe.{max (max (succ u2) (succ u1)) (succ u3), succ u2, succ u3} (AffineMap.{u2, u2, u2, u1, u3} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (Ring.toAddCommGroup.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (AffineMap.instModuleToSemiringToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonUnitalRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (addGroupIsAddTorsor.{u2} 𝕜 (AddGroupWithOne.toAddGroup.{u2} 𝕜 (Ring.toAddGroupWithOne.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3)) 𝕜 (fun (_x : 𝕜) => (fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : 𝕜) => P) _x) (AffineMap.funLike.{u2, u2, u2, u1, u3} 𝕜 𝕜 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (Ring.toAddCommGroup.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (AffineMap.instModuleToSemiringToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonUnitalRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (addGroupIsAddTorsor.{u2} 𝕜 (AddGroupWithOne.toAddGroup.{u2} 𝕜 (Ring.toAddGroupWithOne.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3)) (AffineMap.lineMap.{u2, u1, u3} 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3) p₁ p₂) c)) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.instMulReal) (Norm.norm.{u2} 𝕜 (NormedField.toNorm.{u2} 𝕜 _inst_7) (HSub.hSub.{u2, u2, u2} 𝕜 𝕜 𝕜 (instHSub.{u2} 𝕜 (Ring.toSub.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (OfNat.ofNat.{u2} 𝕜 1 (One.toOfNat1.{u2} 𝕜 (NonAssocRing.toOne.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))))) c)) (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ p₂))
Case conversion may be inaccurate. Consider using '#align dist_right_line_map dist_right_lineMapₓ'. -/
@[simp]
theorem dist_right_lineMap (p₁ p₂ : P) (c : 𝕜) : dist p₂ (lineMap p₁ p₂ c) = ‖1 - c‖ * dist p₁ p₂ :=
  (dist_comm _ _).trans (dist_lineMap_right _ _ _)
#align dist_right_line_map dist_right_lineMap

/- warning: dist_homothety_self -> dist_homothety_self is a dubious translation:
lean 3 declaration is
  forall {V : Type.{u1}} {P : Type.{u2}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u2} P] [_inst_3 : NormedAddTorsor.{u1, u2} V P _inst_1 _inst_2] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_8 : NormedSpace.{u3, u1} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c : 𝕜), Eq.{1} Real (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) (coeFn.{max (succ u1) (succ u2), succ u2} (AffineMap.{u3, u1, u2, u1, u2} 𝕜 V P V P (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (fun (_x : AffineMap.{u3, u1, u2, u1, u2} 𝕜 V P V P (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) => P -> P) (AffineMap.hasCoeToFun.{u3, u1, u2, u1, u2} 𝕜 V P V P (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (AffineMap.homothety.{u3, u1, u2} 𝕜 V P (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) p₁ c) p₂) p₂) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.hasMul) (Norm.norm.{u3} 𝕜 (NormedField.toHasNorm.{u3} 𝕜 _inst_7) (HSub.hSub.{u3, u3, u3} 𝕜 𝕜 𝕜 (instHSub.{u3} 𝕜 (SubNegMonoid.toHasSub.{u3} 𝕜 (AddGroup.toSubNegMonoid.{u3} 𝕜 (NormedAddGroup.toAddGroup.{u3} 𝕜 (NormedAddCommGroup.toNormedAddGroup.{u3} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u3} 𝕜 (NormedRing.toNonUnitalNormedRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))))) (OfNat.ofNat.{u3} 𝕜 1 (OfNat.mk.{u3} 𝕜 1 (One.one.{u3} 𝕜 (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))))))) c)) (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ p₂))
but is expected to have type
  forall {V : Type.{u2}} {P : Type.{u3}} [_inst_1 : SeminormedAddCommGroup.{u2} V] [_inst_2 : PseudoMetricSpace.{u3} P] [_inst_3 : NormedAddTorsor.{u2, u3} V P _inst_1 _inst_2] {𝕜 : Type.{u1}} [_inst_7 : NormedField.{u1} 𝕜] [_inst_8 : NormedSpace.{u1, u2} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c : 𝕜), Eq.{1} Real (Dist.dist.{u3} ((fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : P) => P) p₂) (PseudoMetricSpace.toDist.{u3} ((fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : P) => P) p₂) _inst_2) (FunLike.coe.{max (succ u2) (succ u3), succ u3, succ u3} (AffineMap.{u1, u2, u3, u2, u3} 𝕜 V P V P (CommRing.toRing.{u1} 𝕜 (EuclideanDomain.toCommRing.{u1} 𝕜 (Field.toEuclideanDomain.{u1} 𝕜 (NormedField.toField.{u1} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3)) P (fun (_x : P) => (fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : P) => P) _x) (AffineMap.funLike.{u1, u2, u3, u2, u3} 𝕜 V P V P (CommRing.toRing.{u1} 𝕜 (EuclideanDomain.toCommRing.{u1} 𝕜 (Field.toEuclideanDomain.{u1} 𝕜 (NormedField.toField.{u1} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3)) (AffineMap.homothety.{u1, u2, u3} 𝕜 V P (EuclideanDomain.toCommRing.{u1} 𝕜 (Field.toEuclideanDomain.{u1} 𝕜 (NormedField.toField.{u1} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) p₁ c) p₂) p₂) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.instMulReal) (Norm.norm.{u1} 𝕜 (NormedField.toNorm.{u1} 𝕜 _inst_7) (HSub.hSub.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHSub.{u1} 𝕜 (Ring.toSub.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 (NormedField.toNormedCommRing.{u1} 𝕜 _inst_7))))) (OfNat.ofNat.{u1} 𝕜 1 (One.toOfNat1.{u1} 𝕜 (NonAssocRing.toOne.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 (NormedField.toNormedCommRing.{u1} 𝕜 _inst_7))))))) c)) (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ p₂))
Case conversion may be inaccurate. Consider using '#align dist_homothety_self dist_homothety_selfₓ'. -/
@[simp]
theorem dist_homothety_self (p₁ p₂ : P) (c : 𝕜) :
    dist (homothety p₁ c p₂) p₂ = ‖1 - c‖ * dist p₁ p₂ := by
  rw [homothety_eq_line_map, dist_lineMap_right]
#align dist_homothety_self dist_homothety_self

/- warning: dist_self_homothety -> dist_self_homothety is a dubious translation:
lean 3 declaration is
  forall {V : Type.{u1}} {P : Type.{u2}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u2} P] [_inst_3 : NormedAddTorsor.{u1, u2} V P _inst_1 _inst_2] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_8 : NormedSpace.{u3, u1} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c : 𝕜), Eq.{1} Real (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₂ (coeFn.{max (succ u1) (succ u2), succ u2} (AffineMap.{u3, u1, u2, u1, u2} 𝕜 V P V P (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (fun (_x : AffineMap.{u3, u1, u2, u1, u2} 𝕜 V P V P (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) => P -> P) (AffineMap.hasCoeToFun.{u3, u1, u2, u1, u2} 𝕜 V P V P (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3)) (AffineMap.homothety.{u3, u1, u2} 𝕜 V P (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) p₁ c) p₂)) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.hasMul) (Norm.norm.{u3} 𝕜 (NormedField.toHasNorm.{u3} 𝕜 _inst_7) (HSub.hSub.{u3, u3, u3} 𝕜 𝕜 𝕜 (instHSub.{u3} 𝕜 (SubNegMonoid.toHasSub.{u3} 𝕜 (AddGroup.toSubNegMonoid.{u3} 𝕜 (NormedAddGroup.toAddGroup.{u3} 𝕜 (NormedAddCommGroup.toNormedAddGroup.{u3} 𝕜 (NonUnitalNormedRing.toNormedAddCommGroup.{u3} 𝕜 (NormedRing.toNonUnitalNormedRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))))) (OfNat.ofNat.{u3} 𝕜 1 (OfNat.mk.{u3} 𝕜 1 (One.one.{u3} 𝕜 (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))))))) c)) (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ p₂))
but is expected to have type
  forall {V : Type.{u2}} {P : Type.{u3}} [_inst_1 : SeminormedAddCommGroup.{u2} V] [_inst_2 : PseudoMetricSpace.{u3} P] [_inst_3 : NormedAddTorsor.{u2, u3} V P _inst_1 _inst_2] {𝕜 : Type.{u1}} [_inst_7 : NormedField.{u1} 𝕜] [_inst_8 : NormedSpace.{u1, u2} 𝕜 V _inst_7 _inst_1] (p₁ : P) (p₂ : P) (c : 𝕜), Eq.{1} Real (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₂ (FunLike.coe.{max (succ u2) (succ u3), succ u3, succ u3} (AffineMap.{u1, u2, u3, u2, u3} 𝕜 V P V P (CommRing.toRing.{u1} 𝕜 (EuclideanDomain.toCommRing.{u1} 𝕜 (Field.toEuclideanDomain.{u1} 𝕜 (NormedField.toField.{u1} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3)) P (fun (_x : P) => (fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : P) => P) _x) (AffineMap.funLike.{u1, u2, u3, u2, u3} 𝕜 V P V P (CommRing.toRing.{u1} 𝕜 (EuclideanDomain.toCommRing.{u1} 𝕜 (Field.toEuclideanDomain.{u1} 𝕜 (NormedField.toField.{u1} 𝕜 _inst_7)))) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3)) (AffineMap.homothety.{u1, u2, u3} 𝕜 V P (EuclideanDomain.toCommRing.{u1} 𝕜 (Field.toEuclideanDomain.{u1} 𝕜 (NormedField.toField.{u1} 𝕜 _inst_7))) (SeminormedAddCommGroup.toAddCommGroup.{u2} V _inst_1) (NormedAddTorsor.toAddTorsor.{u2, u3} V P _inst_1 _inst_2 _inst_3) (NormedSpace.toModule.{u1, u2} 𝕜 V _inst_7 _inst_1 _inst_8) p₁ c) p₂)) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.instMulReal) (Norm.norm.{u1} 𝕜 (NormedField.toNorm.{u1} 𝕜 _inst_7) (HSub.hSub.{u1, u1, u1} 𝕜 𝕜 𝕜 (instHSub.{u1} 𝕜 (Ring.toSub.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 (NormedField.toNormedCommRing.{u1} 𝕜 _inst_7))))) (OfNat.ofNat.{u1} 𝕜 1 (One.toOfNat1.{u1} 𝕜 (NonAssocRing.toOne.{u1} 𝕜 (Ring.toNonAssocRing.{u1} 𝕜 (NormedRing.toRing.{u1} 𝕜 (NormedCommRing.toNormedRing.{u1} 𝕜 (NormedField.toNormedCommRing.{u1} 𝕜 _inst_7))))))) c)) (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ p₂))
Case conversion may be inaccurate. Consider using '#align dist_self_homothety dist_self_homothetyₓ'. -/
@[simp]
theorem dist_self_homothety (p₁ p₂ : P) (c : 𝕜) :
    dist p₂ (homothety p₁ c p₂) = ‖1 - c‖ * dist p₁ p₂ := by rw [dist_comm, dist_homothety_self]
#align dist_self_homothety dist_self_homothety

section invertibleTwo

variable [Invertible (2 : 𝕜)]

/- warning: dist_left_midpoint -> dist_left_midpoint is a dubious translation:
lean 3 declaration is
  forall {V : Type.{u1}} {P : Type.{u2}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u2} P] [_inst_3 : NormedAddTorsor.{u1, u2} V P _inst_1 _inst_2] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_8 : NormedSpace.{u3, u1} 𝕜 V _inst_7 _inst_1] [_inst_10 : Invertible.{u3} 𝕜 (Distrib.toHasMul.{u3} 𝕜 (Ring.toDistrib.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (OfNat.ofNat.{u3} 𝕜 2 (OfNat.mk.{u3} 𝕜 2 (bit0.{u3} 𝕜 (Distrib.toHasAdd.{u3} 𝕜 (Ring.toDistrib.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (One.one.{u3} 𝕜 (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))))))))] (p₁ : P) (p₂ : P), Eq.{1} Real (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ (midpoint.{u3, u1, u2} 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) _inst_10 (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) p₁ p₂)) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.hasMul) (Inv.inv.{0} Real Real.hasInv (Norm.norm.{u3} 𝕜 (NormedField.toHasNorm.{u3} 𝕜 _inst_7) (OfNat.ofNat.{u3} 𝕜 2 (OfNat.mk.{u3} 𝕜 2 (bit0.{u3} 𝕜 (Distrib.toHasAdd.{u3} 𝕜 (Ring.toDistrib.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (One.one.{u3} 𝕜 (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))))))))) (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ p₂))
but is expected to have type
  forall {V : Type.{u1}} {P : Type.{u3}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u3} P] [_inst_3 : NormedAddTorsor.{u1, u3} V P _inst_1 _inst_2] {𝕜 : Type.{u2}} [_inst_7 : NormedField.{u2} 𝕜] [_inst_8 : NormedSpace.{u2, u1} 𝕜 V _inst_7 _inst_1] [_inst_10 : Invertible.{u2} 𝕜 (NonUnitalNonAssocRing.toMul.{u2} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (NonAssocRing.toOne.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (OfNat.ofNat.{u2} 𝕜 2 (instOfNat.{u2} 𝕜 2 (NonAssocRing.toNatCast.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (instAtLeastTwoHAddNatInstHAddInstAddNatOfNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))))] (p₁ : P) (p₂ : P), Eq.{1} Real (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ (midpoint.{u2, u1, u3} 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) _inst_10 (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3) p₁ p₂)) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.instMulReal) (Inv.inv.{0} Real Real.instInvReal (Norm.norm.{u2} 𝕜 (NormedField.toNorm.{u2} 𝕜 _inst_7) (OfNat.ofNat.{u2} 𝕜 2 (instOfNat.{u2} 𝕜 2 (NonAssocRing.toNatCast.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (instAtLeastTwoHAddNatInstHAddInstAddNatOfNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))))))) (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ p₂))
Case conversion may be inaccurate. Consider using '#align dist_left_midpoint dist_left_midpointₓ'. -/
@[simp]
theorem dist_left_midpoint (p₁ p₂ : P) : dist p₁ (midpoint 𝕜 p₁ p₂) = ‖(2 : 𝕜)‖⁻¹ * dist p₁ p₂ := by
  rw [midpoint, dist_comm, dist_lineMap_left, invOf_eq_inv, ← norm_inv]
#align dist_left_midpoint dist_left_midpoint

/- warning: dist_midpoint_left -> dist_midpoint_left is a dubious translation:
lean 3 declaration is
  forall {V : Type.{u1}} {P : Type.{u2}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u2} P] [_inst_3 : NormedAddTorsor.{u1, u2} V P _inst_1 _inst_2] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_8 : NormedSpace.{u3, u1} 𝕜 V _inst_7 _inst_1] [_inst_10 : Invertible.{u3} 𝕜 (Distrib.toHasMul.{u3} 𝕜 (Ring.toDistrib.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (OfNat.ofNat.{u3} 𝕜 2 (OfNat.mk.{u3} 𝕜 2 (bit0.{u3} 𝕜 (Distrib.toHasAdd.{u3} 𝕜 (Ring.toDistrib.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (One.one.{u3} 𝕜 (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))))))))] (p₁ : P) (p₂ : P), Eq.{1} Real (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) (midpoint.{u3, u1, u2} 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) _inst_10 (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) p₁ p₂) p₁) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.hasMul) (Inv.inv.{0} Real Real.hasInv (Norm.norm.{u3} 𝕜 (NormedField.toHasNorm.{u3} 𝕜 _inst_7) (OfNat.ofNat.{u3} 𝕜 2 (OfNat.mk.{u3} 𝕜 2 (bit0.{u3} 𝕜 (Distrib.toHasAdd.{u3} 𝕜 (Ring.toDistrib.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (One.one.{u3} 𝕜 (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))))))))) (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ p₂))
but is expected to have type
  forall {V : Type.{u1}} {P : Type.{u3}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u3} P] [_inst_3 : NormedAddTorsor.{u1, u3} V P _inst_1 _inst_2] {𝕜 : Type.{u2}} [_inst_7 : NormedField.{u2} 𝕜] [_inst_8 : NormedSpace.{u2, u1} 𝕜 V _inst_7 _inst_1] [_inst_10 : Invertible.{u2} 𝕜 (NonUnitalNonAssocRing.toMul.{u2} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (NonAssocRing.toOne.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (OfNat.ofNat.{u2} 𝕜 2 (instOfNat.{u2} 𝕜 2 (NonAssocRing.toNatCast.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (instAtLeastTwoHAddNatInstHAddInstAddNatOfNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))))] (p₁ : P) (p₂ : P), Eq.{1} Real (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) (midpoint.{u2, u1, u3} 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) _inst_10 (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3) p₁ p₂) p₁) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.instMulReal) (Inv.inv.{0} Real Real.instInvReal (Norm.norm.{u2} 𝕜 (NormedField.toNorm.{u2} 𝕜 _inst_7) (OfNat.ofNat.{u2} 𝕜 2 (instOfNat.{u2} 𝕜 2 (NonAssocRing.toNatCast.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (instAtLeastTwoHAddNatInstHAddInstAddNatOfNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))))))) (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ p₂))
Case conversion may be inaccurate. Consider using '#align dist_midpoint_left dist_midpoint_leftₓ'. -/
@[simp]
theorem dist_midpoint_left (p₁ p₂ : P) : dist (midpoint 𝕜 p₁ p₂) p₁ = ‖(2 : 𝕜)‖⁻¹ * dist p₁ p₂ := by
  rw [dist_comm, dist_left_midpoint]
#align dist_midpoint_left dist_midpoint_left

/- warning: dist_midpoint_right -> dist_midpoint_right is a dubious translation:
lean 3 declaration is
  forall {V : Type.{u1}} {P : Type.{u2}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u2} P] [_inst_3 : NormedAddTorsor.{u1, u2} V P _inst_1 _inst_2] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_8 : NormedSpace.{u3, u1} 𝕜 V _inst_7 _inst_1] [_inst_10 : Invertible.{u3} 𝕜 (Distrib.toHasMul.{u3} 𝕜 (Ring.toDistrib.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (OfNat.ofNat.{u3} 𝕜 2 (OfNat.mk.{u3} 𝕜 2 (bit0.{u3} 𝕜 (Distrib.toHasAdd.{u3} 𝕜 (Ring.toDistrib.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (One.one.{u3} 𝕜 (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))))))))] (p₁ : P) (p₂ : P), Eq.{1} Real (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) (midpoint.{u3, u1, u2} 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) _inst_10 (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) p₁ p₂) p₂) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.hasMul) (Inv.inv.{0} Real Real.hasInv (Norm.norm.{u3} 𝕜 (NormedField.toHasNorm.{u3} 𝕜 _inst_7) (OfNat.ofNat.{u3} 𝕜 2 (OfNat.mk.{u3} 𝕜 2 (bit0.{u3} 𝕜 (Distrib.toHasAdd.{u3} 𝕜 (Ring.toDistrib.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (One.one.{u3} 𝕜 (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))))))))) (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ p₂))
but is expected to have type
  forall {V : Type.{u1}} {P : Type.{u3}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u3} P] [_inst_3 : NormedAddTorsor.{u1, u3} V P _inst_1 _inst_2] {𝕜 : Type.{u2}} [_inst_7 : NormedField.{u2} 𝕜] [_inst_8 : NormedSpace.{u2, u1} 𝕜 V _inst_7 _inst_1] [_inst_10 : Invertible.{u2} 𝕜 (NonUnitalNonAssocRing.toMul.{u2} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (NonAssocRing.toOne.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (OfNat.ofNat.{u2} 𝕜 2 (instOfNat.{u2} 𝕜 2 (NonAssocRing.toNatCast.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (instAtLeastTwoHAddNatInstHAddInstAddNatOfNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))))] (p₁ : P) (p₂ : P), Eq.{1} Real (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) (midpoint.{u2, u1, u3} 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) _inst_10 (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3) p₁ p₂) p₂) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.instMulReal) (Inv.inv.{0} Real Real.instInvReal (Norm.norm.{u2} 𝕜 (NormedField.toNorm.{u2} 𝕜 _inst_7) (OfNat.ofNat.{u2} 𝕜 2 (instOfNat.{u2} 𝕜 2 (NonAssocRing.toNatCast.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (instAtLeastTwoHAddNatInstHAddInstAddNatOfNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))))))) (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ p₂))
Case conversion may be inaccurate. Consider using '#align dist_midpoint_right dist_midpoint_rightₓ'. -/
@[simp]
theorem dist_midpoint_right (p₁ p₂ : P) : dist (midpoint 𝕜 p₁ p₂) p₂ = ‖(2 : 𝕜)‖⁻¹ * dist p₁ p₂ :=
  by rw [midpoint_comm, dist_midpoint_left, dist_comm]
#align dist_midpoint_right dist_midpoint_right

/- warning: dist_right_midpoint -> dist_right_midpoint is a dubious translation:
lean 3 declaration is
  forall {V : Type.{u1}} {P : Type.{u2}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u2} P] [_inst_3 : NormedAddTorsor.{u1, u2} V P _inst_1 _inst_2] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_8 : NormedSpace.{u3, u1} 𝕜 V _inst_7 _inst_1] [_inst_10 : Invertible.{u3} 𝕜 (Distrib.toHasMul.{u3} 𝕜 (Ring.toDistrib.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (OfNat.ofNat.{u3} 𝕜 2 (OfNat.mk.{u3} 𝕜 2 (bit0.{u3} 𝕜 (Distrib.toHasAdd.{u3} 𝕜 (Ring.toDistrib.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (One.one.{u3} 𝕜 (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))))))))] (p₁ : P) (p₂ : P), Eq.{1} Real (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₂ (midpoint.{u3, u1, u2} 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) _inst_10 (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) p₁ p₂)) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.hasMul) (Inv.inv.{0} Real Real.hasInv (Norm.norm.{u3} 𝕜 (NormedField.toHasNorm.{u3} 𝕜 _inst_7) (OfNat.ofNat.{u3} 𝕜 2 (OfNat.mk.{u3} 𝕜 2 (bit0.{u3} 𝕜 (Distrib.toHasAdd.{u3} 𝕜 (Ring.toDistrib.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (One.one.{u3} 𝕜 (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))))))))) (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ p₂))
but is expected to have type
  forall {V : Type.{u1}} {P : Type.{u3}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u3} P] [_inst_3 : NormedAddTorsor.{u1, u3} V P _inst_1 _inst_2] {𝕜 : Type.{u2}} [_inst_7 : NormedField.{u2} 𝕜] [_inst_8 : NormedSpace.{u2, u1} 𝕜 V _inst_7 _inst_1] [_inst_10 : Invertible.{u2} 𝕜 (NonUnitalNonAssocRing.toMul.{u2} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (NonAssocRing.toOne.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (OfNat.ofNat.{u2} 𝕜 2 (instOfNat.{u2} 𝕜 2 (NonAssocRing.toNatCast.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (instAtLeastTwoHAddNatInstHAddInstAddNatOfNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))))] (p₁ : P) (p₂ : P), Eq.{1} Real (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₂ (midpoint.{u2, u1, u3} 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) _inst_10 (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3) p₁ p₂)) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.instMulReal) (Inv.inv.{0} Real Real.instInvReal (Norm.norm.{u2} 𝕜 (NormedField.toNorm.{u2} 𝕜 _inst_7) (OfNat.ofNat.{u2} 𝕜 2 (instOfNat.{u2} 𝕜 2 (NonAssocRing.toNatCast.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (instAtLeastTwoHAddNatInstHAddInstAddNatOfNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))))))) (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ p₂))
Case conversion may be inaccurate. Consider using '#align dist_right_midpoint dist_right_midpointₓ'. -/
@[simp]
theorem dist_right_midpoint (p₁ p₂ : P) : dist p₂ (midpoint 𝕜 p₁ p₂) = ‖(2 : 𝕜)‖⁻¹ * dist p₁ p₂ :=
  by rw [dist_comm, dist_midpoint_right]
#align dist_right_midpoint dist_right_midpoint

/- warning: dist_midpoint_midpoint_le' -> dist_midpoint_midpoint_le' is a dubious translation:
lean 3 declaration is
  forall {V : Type.{u1}} {P : Type.{u2}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u2} P] [_inst_3 : NormedAddTorsor.{u1, u2} V P _inst_1 _inst_2] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_8 : NormedSpace.{u3, u1} 𝕜 V _inst_7 _inst_1] [_inst_10 : Invertible.{u3} 𝕜 (Distrib.toHasMul.{u3} 𝕜 (Ring.toDistrib.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (OfNat.ofNat.{u3} 𝕜 2 (OfNat.mk.{u3} 𝕜 2 (bit0.{u3} 𝕜 (Distrib.toHasAdd.{u3} 𝕜 (Ring.toDistrib.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (One.one.{u3} 𝕜 (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))))))))] (p₁ : P) (p₂ : P) (p₃ : P) (p₄ : P), LE.le.{0} Real Real.hasLe (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) (midpoint.{u3, u1, u2} 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) _inst_10 (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) p₁ p₂) (midpoint.{u3, u1, u2} 𝕜 V P (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) _inst_10 (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u3, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u2} V P _inst_1 _inst_2 _inst_3) p₃ p₄)) (HDiv.hDiv.{0, 0, 0} Real Real Real (instHDiv.{0} Real (DivInvMonoid.toHasDiv.{0} Real (DivisionRing.toDivInvMonoid.{0} Real Real.divisionRing))) (HAdd.hAdd.{0, 0, 0} Real Real Real (instHAdd.{0} Real Real.hasAdd) (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₁ p₃) (Dist.dist.{u2} P (PseudoMetricSpace.toHasDist.{u2} P _inst_2) p₂ p₄)) (Norm.norm.{u3} 𝕜 (NormedField.toHasNorm.{u3} 𝕜 _inst_7) (OfNat.ofNat.{u3} 𝕜 2 (OfNat.mk.{u3} 𝕜 2 (bit0.{u3} 𝕜 (Distrib.toHasAdd.{u3} 𝕜 (Ring.toDistrib.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (One.one.{u3} 𝕜 (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))))))))))
but is expected to have type
  forall {V : Type.{u1}} {P : Type.{u3}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_2 : PseudoMetricSpace.{u3} P] [_inst_3 : NormedAddTorsor.{u1, u3} V P _inst_1 _inst_2] {𝕜 : Type.{u2}} [_inst_7 : NormedField.{u2} 𝕜] [_inst_8 : NormedSpace.{u2, u1} 𝕜 V _inst_7 _inst_1] [_inst_10 : Invertible.{u2} 𝕜 (NonUnitalNonAssocRing.toMul.{u2} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (NonAssocRing.toOne.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (OfNat.ofNat.{u2} 𝕜 2 (instOfNat.{u2} 𝕜 2 (NonAssocRing.toNatCast.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (instAtLeastTwoHAddNatInstHAddInstAddNatOfNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))))] (p₁ : P) (p₂ : P) (p₃ : P) (p₄ : P), LE.le.{0} Real Real.instLEReal (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) (midpoint.{u2, u1, u3} 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) _inst_10 (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3) p₁ p₂) (midpoint.{u2, u1, u3} 𝕜 V P (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) _inst_10 (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{u2, u1} 𝕜 V _inst_7 _inst_1 _inst_8) (NormedAddTorsor.toAddTorsor.{u1, u3} V P _inst_1 _inst_2 _inst_3) p₃ p₄)) (HDiv.hDiv.{0, 0, 0} Real Real Real (instHDiv.{0} Real (LinearOrderedField.toDiv.{0} Real Real.instLinearOrderedFieldReal)) (HAdd.hAdd.{0, 0, 0} Real Real Real (instHAdd.{0} Real Real.instAddReal) (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₁ p₃) (Dist.dist.{u3} P (PseudoMetricSpace.toDist.{u3} P _inst_2) p₂ p₄)) (Norm.norm.{u2} 𝕜 (NormedField.toNorm.{u2} 𝕜 _inst_7) (OfNat.ofNat.{u2} 𝕜 2 (instOfNat.{u2} 𝕜 2 (NonAssocRing.toNatCast.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))))) (instAtLeastTwoHAddNatInstHAddInstAddNatOfNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))))))
Case conversion may be inaccurate. Consider using '#align dist_midpoint_midpoint_le' dist_midpoint_midpoint_le'ₓ'. -/
theorem dist_midpoint_midpoint_le' (p₁ p₂ p₃ p₄ : P) :
    dist (midpoint 𝕜 p₁ p₂) (midpoint 𝕜 p₃ p₄) ≤ (dist p₁ p₃ + dist p₂ p₄) / ‖(2 : 𝕜)‖ :=
  by
  rw [dist_eq_norm_vsub V, dist_eq_norm_vsub V, dist_eq_norm_vsub V, midpoint_vsub_midpoint] <;>
    try infer_instance
  rw [midpoint_eq_smul_add, norm_smul, invOf_eq_inv, norm_inv, ← div_eq_inv_mul]
  exact div_le_div_of_le_of_nonneg (norm_add_le _ _) (norm_nonneg _)
#align dist_midpoint_midpoint_le' dist_midpoint_midpoint_le'

end invertibleTwo

omit V

include W

/- warning: antilipschitz_with_line_map -> antilipschitzWith_lineMap is a dubious translation:
lean 3 declaration is
  forall {W : Type.{u1}} {Q : Type.{u2}} [_inst_4 : NormedAddCommGroup.{u1} W] [_inst_5 : MetricSpace.{u2} Q] [_inst_6 : NormedAddTorsor.{u1, u2} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u2} Q _inst_5)] {𝕜 : Type.{u3}} [_inst_7 : NormedField.{u3} 𝕜] [_inst_9 : NormedSpace.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4)] {p₁ : Q} {p₂ : Q}, (Ne.{succ u2} Q p₁ p₂) -> (AntilipschitzWith.{u3, u2} 𝕜 Q (PseudoMetricSpace.toPseudoEMetricSpace.{u3} 𝕜 (SeminormedRing.toPseudoMetricSpace.{u3} 𝕜 (SeminormedCommRing.toSemiNormedRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (PseudoMetricSpace.toPseudoEMetricSpace.{u2} Q (MetricSpace.toPseudoMetricSpace.{u2} Q _inst_5)) (Inv.inv.{0} NNReal (DivInvMonoid.toHasInv.{0} NNReal (GroupWithZero.toDivInvMonoid.{0} NNReal (DivisionSemiring.toGroupWithZero.{0} NNReal (Semifield.toDivisionSemiring.{0} NNReal (LinearOrderedSemifield.toSemifield.{0} NNReal (CanonicallyLinearOrderedSemifield.toLinearOrderedSemifield.{0} NNReal NNReal.canonicallyLinearOrderedSemifield)))))) (NNDist.nndist.{u2} Q (PseudoMetricSpace.toNNDist.{u2} Q (MetricSpace.toPseudoMetricSpace.{u2} Q _inst_5)) p₁ p₂)) (coeFn.{max (succ u3) (succ u1) (succ u2), max (succ u3) (succ u2)} (AffineMap.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 W Q (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6)) (fun (_x : AffineMap.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 W Q (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6)) => 𝕜 -> Q) (AffineMap.hasCoeToFun.{u3, u3, u3, u1, u2} 𝕜 𝕜 𝕜 W Q (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NonUnitalNonAssocRing.toAddCommGroup.{u3} 𝕜 (NonAssocRing.toNonUnitalNonAssocRing.{u3} 𝕜 (Ring.toNonAssocRing.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (Semiring.toModule.{u3} 𝕜 (Ring.toSemiring.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))) (addGroupIsAddTorsor.{u3} 𝕜 (AddGroupWithOne.toAddGroup.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6)) (AffineMap.lineMap.{u3, u1, u2} 𝕜 W Q (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6) p₁ p₂)))
but is expected to have type
  forall {W : Type.{u1}} {Q : Type.{u3}} [_inst_4 : NormedAddCommGroup.{u1} W] [_inst_5 : MetricSpace.{u3} Q] [_inst_6 : NormedAddTorsor.{u1, u3} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5)] {𝕜 : Type.{u2}} [_inst_7 : NormedField.{u2} 𝕜] [_inst_9 : NormedSpace.{u2, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4)] {p₁ : Q} {p₂ : Q}, (Ne.{succ u3} Q p₁ p₂) -> (AntilipschitzWith.{u2, u3} 𝕜 Q (EMetricSpace.toPseudoEMetricSpace.{u2} 𝕜 (MetricSpace.toEMetricSpace.{u2} 𝕜 (NormedField.toMetricSpace.{u2} 𝕜 _inst_7))) (EMetricSpace.toPseudoEMetricSpace.{u3} Q (MetricSpace.toEMetricSpace.{u3} Q _inst_5)) (Inv.inv.{0} NNReal (CanonicallyLinearOrderedSemifield.toInv.{0} NNReal NNReal.instCanonicallyLinearOrderedSemifieldNNReal) (NNDist.nndist.{u3} Q (PseudoMetricSpace.toNNDist.{u3} Q (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5)) p₁ p₂)) (FunLike.coe.{max (max (succ u2) (succ u1)) (succ u3), succ u2, succ u3} (AffineMap.{u2, u2, u2, u1, u3} 𝕜 𝕜 𝕜 W Q (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (Ring.toAddCommGroup.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (AffineMap.instModuleToSemiringToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonUnitalRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (addGroupIsAddTorsor.{u2} 𝕜 (AddGroupWithOne.toAddGroup.{u2} 𝕜 (Ring.toAddGroupWithOne.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u2, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor.{u1, u3} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5) _inst_6)) 𝕜 (fun (_x : 𝕜) => (fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : 𝕜) => Q) _x) (AffineMap.funLike.{u2, u2, u2, u1, u3} 𝕜 𝕜 𝕜 W Q (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (Ring.toAddCommGroup.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (AffineMap.instModuleToSemiringToAddCommMonoidToNonUnitalNonAssocSemiringToNonUnitalNonAssocRingToNonUnitalRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))) (addGroupIsAddTorsor.{u2} 𝕜 (AddGroupWithOne.toAddGroup.{u2} 𝕜 (Ring.toAddGroupWithOne.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u2, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor.{u1, u3} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5) _inst_6)) (AffineMap.lineMap.{u2, u1, u3} 𝕜 W Q (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u2, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor.{u1, u3} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5) _inst_6) p₁ p₂)))
Case conversion may be inaccurate. Consider using '#align antilipschitz_with_line_map antilipschitzWith_lineMapₓ'. -/
theorem antilipschitzWith_lineMap {p₁ p₂ : Q} (h : p₁ ≠ p₂) :
    AntilipschitzWith (nndist p₁ p₂)⁻¹ (lineMap p₁ p₂ : 𝕜 → Q) :=
  AntilipschitzWith.of_le_mul_dist fun c₁ c₂ => by
    rw [dist_lineMap_lineMap, NNReal.coe_inv, ← dist_nndist, mul_left_comm,
      inv_mul_cancel (dist_ne_zero.2 h), mul_one]
#align antilipschitz_with_line_map antilipschitzWith_lineMap

variable (𝕜)

/- warning: eventually_homothety_mem_of_mem_interior -> eventually_homothety_mem_of_mem_interior is a dubious translation:
lean 3 declaration is
  forall {W : Type.{u1}} {Q : Type.{u2}} [_inst_4 : NormedAddCommGroup.{u1} W] [_inst_5 : MetricSpace.{u2} Q] [_inst_6 : NormedAddTorsor.{u1, u2} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u2} Q _inst_5)] (𝕜 : Type.{u3}) [_inst_7 : NormedField.{u3} 𝕜] [_inst_9 : NormedSpace.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4)] (x : Q) {s : Set.{u2} Q} {y : Q}, (Membership.Mem.{u2, u2} Q (Set.{u2} Q) (Set.hasMem.{u2} Q) y (interior.{u2} Q (UniformSpace.toTopologicalSpace.{u2} Q (PseudoMetricSpace.toUniformSpace.{u2} Q (MetricSpace.toPseudoMetricSpace.{u2} Q _inst_5))) s)) -> (Filter.Eventually.{u3} 𝕜 (fun (δ : 𝕜) => Membership.Mem.{u2, u2} Q (Set.{u2} Q) (Set.hasMem.{u2} Q) (coeFn.{max (succ u1) (succ u2), succ u2} (AffineMap.{u3, u1, u2, u1, u2} 𝕜 W Q W Q (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6)) (fun (_x : AffineMap.{u3, u1, u2, u1, u2} 𝕜 W Q W Q (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6)) => Q -> Q) (AffineMap.hasCoeToFun.{u3, u1, u2, u1, u2} 𝕜 W Q W Q (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6)) (AffineMap.homothety.{u3, u1, u2} 𝕜 W Q (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) x δ) y) s) (nhds.{u3} 𝕜 (UniformSpace.toTopologicalSpace.{u3} 𝕜 (PseudoMetricSpace.toUniformSpace.{u3} 𝕜 (SeminormedRing.toPseudoMetricSpace.{u3} 𝕜 (SeminormedCommRing.toSemiNormedRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (OfNat.ofNat.{u3} 𝕜 1 (OfNat.mk.{u3} 𝕜 1 (One.one.{u3} 𝕜 (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))))))))
but is expected to have type
  forall {W : Type.{u1}} {Q : Type.{u3}} [_inst_4 : NormedAddCommGroup.{u1} W] [_inst_5 : MetricSpace.{u3} Q] [_inst_6 : NormedAddTorsor.{u1, u3} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5)] (𝕜 : Type.{u2}) [_inst_7 : NormedField.{u2} 𝕜] [_inst_9 : NormedSpace.{u2, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4)] (x : Q) {s : Set.{u3} Q} {y : Q}, (Membership.mem.{u3, u3} Q (Set.{u3} Q) (Set.instMembershipSet.{u3} Q) y (interior.{u3} Q (UniformSpace.toTopologicalSpace.{u3} Q (PseudoMetricSpace.toUniformSpace.{u3} Q (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5))) s)) -> (Filter.Eventually.{u2} 𝕜 (fun (δ : 𝕜) => Membership.mem.{u3, u3} ((fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : Q) => Q) y) (Set.{u3} Q) (Set.instMembershipSet.{u3} Q) (FunLike.coe.{max (succ u1) (succ u3), succ u3, succ u3} (AffineMap.{u2, u1, u3, u1, u3} 𝕜 W Q W Q (CommRing.toRing.{u2} 𝕜 (EuclideanDomain.toCommRing.{u2} 𝕜 (Field.toEuclideanDomain.{u2} 𝕜 (NormedField.toField.{u2} 𝕜 _inst_7)))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u2, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor.{u1, u3} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5) _inst_6) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u2, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor.{u1, u3} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5) _inst_6)) Q (fun (_x : Q) => (fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : Q) => Q) _x) (AffineMap.funLike.{u2, u1, u3, u1, u3} 𝕜 W Q W Q (CommRing.toRing.{u2} 𝕜 (EuclideanDomain.toCommRing.{u2} 𝕜 (Field.toEuclideanDomain.{u2} 𝕜 (NormedField.toField.{u2} 𝕜 _inst_7)))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u2, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor.{u1, u3} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5) _inst_6) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u2, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor.{u1, u3} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5) _inst_6)) (AffineMap.homothety.{u2, u1, u3} 𝕜 W Q (EuclideanDomain.toCommRing.{u2} 𝕜 (Field.toEuclideanDomain.{u2} 𝕜 (NormedField.toField.{u2} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedAddTorsor.toAddTorsor.{u1, u3} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5) _inst_6) (NormedSpace.toModule.{u2, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) x δ) y) s) (nhds.{u2} 𝕜 (UniformSpace.toTopologicalSpace.{u2} 𝕜 (PseudoMetricSpace.toUniformSpace.{u2} 𝕜 (SeminormedRing.toPseudoMetricSpace.{u2} 𝕜 (SeminormedCommRing.toSeminormedRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (OfNat.ofNat.{u2} 𝕜 1 (One.toOfNat1.{u2} 𝕜 (NonAssocRing.toOne.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))))))
Case conversion may be inaccurate. Consider using '#align eventually_homothety_mem_of_mem_interior eventually_homothety_mem_of_mem_interiorₓ'. -/
theorem eventually_homothety_mem_of_mem_interior (x : Q) {s : Set Q} {y : Q} (hy : y ∈ interior s) :
    ∀ᶠ δ in 𝓝 (1 : 𝕜), homothety x δ y ∈ s :=
  by
  rw [(NormedAddCommGroup.nhds_basis_norm_lt (1 : 𝕜)).eventually_iff]
  cases' eq_or_ne y x with h h
  · use 1
    simp [h.symm, interior_subset hy]
  have hxy : 0 < ‖y -ᵥ x‖ := by rwa [norm_pos_iff, vsub_ne_zero]
  obtain ⟨u, hu₁, hu₂, hu₃⟩ := mem_interior.mp hy
  obtain ⟨ε, hε, hyε⟩ := metric.is_open_iff.mp hu₂ y hu₃
  refine' ⟨ε / ‖y -ᵥ x‖, div_pos hε hxy, fun δ (hδ : ‖δ - 1‖ < ε / ‖y -ᵥ x‖) => hu₁ (hyε _)⟩
  rw [lt_div_iff hxy, ← norm_smul, sub_smul, one_smul] at hδ
  rwa [homothety_apply, Metric.mem_ball, dist_eq_norm_vsub W, vadd_vsub_eq_sub_vsub]
#align eventually_homothety_mem_of_mem_interior eventually_homothety_mem_of_mem_interior

/- warning: eventually_homothety_image_subset_of_finite_subset_interior -> eventually_homothety_image_subset_of_finite_subset_interior is a dubious translation:
lean 3 declaration is
  forall {W : Type.{u1}} {Q : Type.{u2}} [_inst_4 : NormedAddCommGroup.{u1} W] [_inst_5 : MetricSpace.{u2} Q] [_inst_6 : NormedAddTorsor.{u1, u2} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u2} Q _inst_5)] (𝕜 : Type.{u3}) [_inst_7 : NormedField.{u3} 𝕜] [_inst_9 : NormedSpace.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4)] (x : Q) {s : Set.{u2} Q} {t : Set.{u2} Q}, (Set.Finite.{u2} Q t) -> (HasSubset.Subset.{u2} (Set.{u2} Q) (Set.hasSubset.{u2} Q) t (interior.{u2} Q (UniformSpace.toTopologicalSpace.{u2} Q (PseudoMetricSpace.toUniformSpace.{u2} Q (MetricSpace.toPseudoMetricSpace.{u2} Q _inst_5))) s)) -> (Filter.Eventually.{u3} 𝕜 (fun (δ : 𝕜) => HasSubset.Subset.{u2} (Set.{u2} Q) (Set.hasSubset.{u2} Q) (Set.image.{u2, u2} Q Q (coeFn.{max (succ u1) (succ u2), succ u2} (AffineMap.{u3, u1, u2, u1, u2} 𝕜 W Q W Q (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6)) (fun (_x : AffineMap.{u3, u1, u2, u1, u2} 𝕜 W Q W Q (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6)) => Q -> Q) (AffineMap.hasCoeToFun.{u3, u1, u2, u1, u2} 𝕜 W Q W Q (CommRing.toRing.{u3} 𝕜 (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6)) (AffineMap.homothety.{u3, u1, u2} 𝕜 W Q (SeminormedCommRing.toCommRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedAddTorsor.toAddTorsor'.{u1, u2} W Q _inst_4 _inst_5 _inst_6) (NormedSpace.toModule.{u3, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) x δ)) t) s) (nhds.{u3} 𝕜 (UniformSpace.toTopologicalSpace.{u3} 𝕜 (PseudoMetricSpace.toUniformSpace.{u3} 𝕜 (SeminormedRing.toPseudoMetricSpace.{u3} 𝕜 (SeminormedCommRing.toSemiNormedRing.{u3} 𝕜 (NormedCommRing.toSeminormedCommRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7)))))) (OfNat.ofNat.{u3} 𝕜 1 (OfNat.mk.{u3} 𝕜 1 (One.one.{u3} 𝕜 (AddMonoidWithOne.toOne.{u3} 𝕜 (AddGroupWithOne.toAddMonoidWithOne.{u3} 𝕜 (AddCommGroupWithOne.toAddGroupWithOne.{u3} 𝕜 (Ring.toAddCommGroupWithOne.{u3} 𝕜 (NormedRing.toRing.{u3} 𝕜 (NormedCommRing.toNormedRing.{u3} 𝕜 (NormedField.toNormedCommRing.{u3} 𝕜 _inst_7))))))))))))
but is expected to have type
  forall {W : Type.{u1}} {Q : Type.{u3}} [_inst_4 : NormedAddCommGroup.{u1} W] [_inst_5 : MetricSpace.{u3} Q] [_inst_6 : NormedAddTorsor.{u1, u3} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5)] (𝕜 : Type.{u2}) [_inst_7 : NormedField.{u2} 𝕜] [_inst_9 : NormedSpace.{u2, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4)] (x : Q) {s : Set.{u3} Q} {t : Set.{u3} Q}, (Set.Finite.{u3} Q t) -> (HasSubset.Subset.{u3} (Set.{u3} Q) (Set.instHasSubsetSet.{u3} Q) t (interior.{u3} Q (UniformSpace.toTopologicalSpace.{u3} Q (PseudoMetricSpace.toUniformSpace.{u3} Q (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5))) s)) -> (Filter.Eventually.{u2} 𝕜 (fun (δ : 𝕜) => HasSubset.Subset.{u3} (Set.{u3} Q) (Set.instHasSubsetSet.{u3} Q) (Set.image.{u3, u3} Q Q (FunLike.coe.{max (succ u1) (succ u3), succ u3, succ u3} (AffineMap.{u2, u1, u3, u1, u3} 𝕜 W Q W Q (CommRing.toRing.{u2} 𝕜 (EuclideanDomain.toCommRing.{u2} 𝕜 (Field.toEuclideanDomain.{u2} 𝕜 (NormedField.toField.{u2} 𝕜 _inst_7)))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u2, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor.{u1, u3} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5) _inst_6) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u2, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor.{u1, u3} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5) _inst_6)) Q (fun (_x : Q) => (fun (a._@.Mathlib.LinearAlgebra.AffineSpace.AffineMap._hyg.1004 : Q) => Q) _x) (AffineMap.funLike.{u2, u1, u3, u1, u3} 𝕜 W Q W Q (CommRing.toRing.{u2} 𝕜 (EuclideanDomain.toCommRing.{u2} 𝕜 (Field.toEuclideanDomain.{u2} 𝕜 (NormedField.toField.{u2} 𝕜 _inst_7)))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u2, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor.{u1, u3} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5) _inst_6) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedSpace.toModule.{u2, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) (NormedAddTorsor.toAddTorsor.{u1, u3} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5) _inst_6)) (AffineMap.homothety.{u2, u1, u3} 𝕜 W Q (EuclideanDomain.toCommRing.{u2} 𝕜 (Field.toEuclideanDomain.{u2} 𝕜 (NormedField.toField.{u2} 𝕜 _inst_7))) (NormedAddCommGroup.toAddCommGroup.{u1} W _inst_4) (NormedAddTorsor.toAddTorsor.{u1, u3} W Q (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) (MetricSpace.toPseudoMetricSpace.{u3} Q _inst_5) _inst_6) (NormedSpace.toModule.{u2, u1} 𝕜 W _inst_7 (NormedAddCommGroup.toSeminormedAddCommGroup.{u1} W _inst_4) _inst_9) x δ)) t) s) (nhds.{u2} 𝕜 (UniformSpace.toTopologicalSpace.{u2} 𝕜 (PseudoMetricSpace.toUniformSpace.{u2} 𝕜 (SeminormedRing.toPseudoMetricSpace.{u2} 𝕜 (SeminormedCommRing.toSeminormedRing.{u2} 𝕜 (NormedCommRing.toSeminormedCommRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))) (OfNat.ofNat.{u2} 𝕜 1 (One.toOfNat1.{u2} 𝕜 (NonAssocRing.toOne.{u2} 𝕜 (Ring.toNonAssocRing.{u2} 𝕜 (NormedRing.toRing.{u2} 𝕜 (NormedCommRing.toNormedRing.{u2} 𝕜 (NormedField.toNormedCommRing.{u2} 𝕜 _inst_7)))))))))
Case conversion may be inaccurate. Consider using '#align eventually_homothety_image_subset_of_finite_subset_interior eventually_homothety_image_subset_of_finite_subset_interiorₓ'. -/
theorem eventually_homothety_image_subset_of_finite_subset_interior (x : Q) {s : Set Q} {t : Set Q}
    (ht : t.Finite) (h : t ⊆ interior s) : ∀ᶠ δ in 𝓝 (1 : 𝕜), homothety x δ '' t ⊆ s :=
  by
  suffices ∀ y ∈ t, ∀ᶠ δ in 𝓝 (1 : 𝕜), homothety x δ y ∈ s
    by
    simp_rw [Set.image_subset_iff]
    exact (Filter.eventually_all_finite ht).mpr this
  intro y hy
  exact eventually_homothety_mem_of_mem_interior 𝕜 x (h hy)
#align eventually_homothety_image_subset_of_finite_subset_interior eventually_homothety_image_subset_of_finite_subset_interior

end NormedSpace

variable [NormedSpace ℝ V] [NormedSpace ℝ W]

/- warning: dist_midpoint_midpoint_le -> dist_midpoint_midpoint_le is a dubious translation:
lean 3 declaration is
  forall {V : Type.{u1}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_7 : NormedSpace.{0, u1} Real V Real.normedField _inst_1] (p₁ : V) (p₂ : V) (p₃ : V) (p₄ : V), LE.le.{0} Real Real.hasLe (Dist.dist.{u1} V (PseudoMetricSpace.toHasDist.{u1} V (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} V _inst_1)) (midpoint.{0, u1, u1} Real V V Real.ring (invertibleTwo.{0} Real Real.divisionRing (StrictOrderedSemiring.to_charZero.{0} Real Real.strictOrderedSemiring)) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{0, u1} Real V Real.normedField _inst_1 _inst_7) (addGroupIsAddTorsor.{u1} V (SeminormedAddGroup.toAddGroup.{u1} V (SeminormedAddCommGroup.toSeminormedAddGroup.{u1} V _inst_1))) p₁ p₂) (midpoint.{0, u1, u1} Real V V Real.ring (invertibleTwo.{0} Real Real.divisionRing (StrictOrderedSemiring.to_charZero.{0} Real Real.strictOrderedSemiring)) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{0, u1} Real V Real.normedField _inst_1 _inst_7) (addGroupIsAddTorsor.{u1} V (SeminormedAddGroup.toAddGroup.{u1} V (SeminormedAddCommGroup.toSeminormedAddGroup.{u1} V _inst_1))) p₃ p₄)) (HDiv.hDiv.{0, 0, 0} Real Real Real (instHDiv.{0} Real (DivInvMonoid.toHasDiv.{0} Real (DivisionRing.toDivInvMonoid.{0} Real Real.divisionRing))) (HAdd.hAdd.{0, 0, 0} Real Real Real (instHAdd.{0} Real Real.hasAdd) (Dist.dist.{u1} V (PseudoMetricSpace.toHasDist.{u1} V (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} V _inst_1)) p₁ p₃) (Dist.dist.{u1} V (PseudoMetricSpace.toHasDist.{u1} V (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} V _inst_1)) p₂ p₄)) (OfNat.ofNat.{0} Real 2 (OfNat.mk.{0} Real 2 (bit0.{0} Real Real.hasAdd (One.one.{0} Real Real.hasOne)))))
but is expected to have type
  forall {V : Type.{u1}} [_inst_1 : SeminormedAddCommGroup.{u1} V] [_inst_7 : NormedSpace.{0, u1} Real V Real.normedField _inst_1] (p₁ : V) (p₂ : V) (p₃ : V) (p₄ : V), LE.le.{0} Real Real.instLEReal (Dist.dist.{u1} V (PseudoMetricSpace.toDist.{u1} V (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} V _inst_1)) (midpoint.{0, u1, u1} Real V V Real.instRingReal (invertibleTwo.{0} Real Real.instDivisionRingReal (StrictOrderedSemiring.to_charZero.{0} Real Real.strictOrderedSemiring)) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{0, u1} Real V Real.normedField _inst_1 _inst_7) (NormedAddTorsor.toAddTorsor.{u1, u1} V V _inst_1 (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} V _inst_1) (SeminormedAddCommGroup.toNormedAddTorsor.{u1} V _inst_1)) p₁ p₂) (midpoint.{0, u1, u1} Real V V Real.instRingReal (invertibleTwo.{0} Real Real.instDivisionRingReal (StrictOrderedSemiring.to_charZero.{0} Real Real.strictOrderedSemiring)) (SeminormedAddCommGroup.toAddCommGroup.{u1} V _inst_1) (NormedSpace.toModule.{0, u1} Real V Real.normedField _inst_1 _inst_7) (NormedAddTorsor.toAddTorsor.{u1, u1} V V _inst_1 (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} V _inst_1) (SeminormedAddCommGroup.toNormedAddTorsor.{u1} V _inst_1)) p₃ p₄)) (HDiv.hDiv.{0, 0, 0} Real Real Real (instHDiv.{0} Real (LinearOrderedField.toDiv.{0} Real Real.instLinearOrderedFieldReal)) (HAdd.hAdd.{0, 0, 0} Real Real Real (instHAdd.{0} Real Real.instAddReal) (Dist.dist.{u1} V (PseudoMetricSpace.toDist.{u1} V (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} V _inst_1)) p₁ p₃) (Dist.dist.{u1} V (PseudoMetricSpace.toDist.{u1} V (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} V _inst_1)) p₂ p₄)) (OfNat.ofNat.{0} Real 2 (instOfNat.{0} Real 2 Real.natCast (instAtLeastTwoHAddNatInstHAddInstAddNatOfNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))))))
Case conversion may be inaccurate. Consider using '#align dist_midpoint_midpoint_le dist_midpoint_midpoint_leₓ'. -/
theorem dist_midpoint_midpoint_le (p₁ p₂ p₃ p₄ : V) :
    dist (midpoint ℝ p₁ p₂) (midpoint ℝ p₃ p₄) ≤ (dist p₁ p₃ + dist p₂ p₄) / 2 := by
  simpa using dist_midpoint_midpoint_le' p₁ p₂ p₃ p₄
#align dist_midpoint_midpoint_le dist_midpoint_midpoint_le

include V W

#print AffineMap.ofMapMidpoint /-
/-- A continuous map between two normed affine spaces is an affine map provided that
it sends midpoints to midpoints. -/
def AffineMap.ofMapMidpoint (f : P → Q) (h : ∀ x y, f (midpoint ℝ x y) = midpoint ℝ (f x) (f y))
    (hfc : Continuous f) : P →ᵃ[ℝ] Q :=
  AffineMap.mk' f
    (↑((AddMonoidHom.ofMapMidpoint ℝ ℝ
            ((AffineEquiv.vaddConst ℝ (f <| Classical.arbitrary P)).symm ∘
              f ∘ AffineEquiv.vaddConst ℝ (Classical.arbitrary P))
            (by simp) fun x y => by simp [h]).toRealLinearMap <|
        by
        apply_rules [Continuous.vadd, Continuous.vsub, continuous_const, hfc.comp, continuous_id] ))
    (Classical.arbitrary P) fun p => by simp
#align affine_map.of_map_midpoint AffineMap.ofMapMidpoint
-/

