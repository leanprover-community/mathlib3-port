/-
Copyright (c) 2022 Anatole Dedecker. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Anatole Dedecker

! This file was ported from Lean 3 source module analysis.normed_space.compact_operator
! leanprover-community/mathlib commit 781cb2eed038c4caf53bdbd8d20a95e5822d77df
! Please do not edit these lines, except to modify the commit id
! if you have ported upstream changes.
-/
import Mathbin.Analysis.LocallyConvex.Bounded
import Mathbin.Topology.Algebra.Module.StrongTopology

/-!
# Compact operators

> THIS FILE IS SYNCHRONIZED WITH MATHLIB4.
> Any changes to this file require a corresponding PR to mathlib4.

In this file we define compact linear operators between two topological vector spaces (TVS).

## Main definitions

* `is_compact_operator` : predicate for compact operators

## Main statements

* `is_compact_operator_iff_is_compact_closure_image_closed_ball` : the usual characterization of
  compact operators from a normed space to a T2 TVS.
* `is_compact_operator.comp_clm` : precomposing a compact operator by a continuous linear map gives
  a compact operator
* `is_compact_operator.clm_comp` : postcomposing a compact operator by a continuous linear map
  gives a compact operator
* `is_compact_operator.continuous` : compact operators are automatically continuous
* `is_closed_set_of_is_compact_operator` : the set of compact operators is closed for the operator
  norm

## Implementation details

We define `is_compact_operator` as a predicate, because the space of compact operators inherits all
of its structure from the space of continuous linear maps (e.g we want to have the usual operator
norm on compact operators).

The two natural options then would be to make it a predicate over linear maps or continuous linear
maps. Instead we define it as a predicate over bare functions, although it really only makes sense
for linear functions, because Lean is really good at finding coercions to bare functions (whereas
coercing from continuous linear maps to linear maps often needs type ascriptions).

## References

* Bourbaki, *Spectral Theory*, chapters 3 to 5, to be published (2022)

## Tags

Compact operator
-/


open Function Set Filter Bornology Metric

open Pointwise BigOperators Topology

#print IsCompactOperator /-
/-- A compact operator between two topological vector spaces. This definition is usually
given as "there exists a neighborhood of zero whose image is contained in a compact set",
but we choose a definition which involves fewer existential quantifiers and replaces images
with preimages.

We prove the equivalence in `is_compact_operator_iff_exists_mem_nhds_image_subset_compact`. -/
def IsCompactOperator {M‚ÇÅ M‚ÇÇ : Type _} [Zero M‚ÇÅ] [TopologicalSpace M‚ÇÅ] [TopologicalSpace M‚ÇÇ]
    (f : M‚ÇÅ ‚Üí M‚ÇÇ) : Prop :=
  ‚àÉ K, IsCompact K ‚àß f ‚Åª¬π' K ‚àà (ùìù 0 : Filter M‚ÇÅ)
#align is_compact_operator IsCompactOperator
-/

/- warning: is_compact_operator_zero -> isCompactOperator_zero is a dubious translation:
lean 3 declaration is
  forall {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u2}} [_inst_1 : Zero.{u1} M‚ÇÅ] [_inst_2 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_3 : TopologicalSpace.{u2} M‚ÇÇ] [_inst_4 : Zero.{u2} M‚ÇÇ], IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÇ _inst_1 _inst_2 _inst_3 (OfNat.ofNat.{max u1 u2} (M‚ÇÅ -> M‚ÇÇ) 0 (OfNat.mk.{max u1 u2} (M‚ÇÅ -> M‚ÇÇ) 0 (Zero.zero.{max u1 u2} (M‚ÇÅ -> M‚ÇÇ) (Pi.instZero.{u1, u2} M‚ÇÅ (fun (·æ∞ : M‚ÇÅ) => M‚ÇÇ) (fun (i : M‚ÇÅ) => _inst_4)))))
but is expected to have type
  forall {M‚ÇÅ : Type.{u2}} {M‚ÇÇ : Type.{u1}} [_inst_1 : Zero.{u2} M‚ÇÅ] [_inst_2 : TopologicalSpace.{u2} M‚ÇÅ] [_inst_3 : TopologicalSpace.{u1} M‚ÇÇ] [_inst_4 : Zero.{u1} M‚ÇÇ], IsCompactOperator.{u2, u1} M‚ÇÅ M‚ÇÇ _inst_1 _inst_2 _inst_3 (OfNat.ofNat.{max u2 u1} (M‚ÇÅ -> M‚ÇÇ) 0 (Zero.toOfNat0.{max u2 u1} (M‚ÇÅ -> M‚ÇÇ) (Pi.instZero.{u2, u1} M‚ÇÅ (fun (a._@.Mathlib.Analysis.NormedSpace.CompactOperator._hyg.68 : M‚ÇÅ) => M‚ÇÇ) (fun (i : M‚ÇÅ) => _inst_4))))
Case conversion may be inaccurate. Consider using '#align is_compact_operator_zero isCompactOperator_zero‚Çì'. -/
theorem isCompactOperator_zero {M‚ÇÅ M‚ÇÇ : Type _} [Zero M‚ÇÅ] [TopologicalSpace M‚ÇÅ]
    [TopologicalSpace M‚ÇÇ] [Zero M‚ÇÇ] : IsCompactOperator (0 : M‚ÇÅ ‚Üí M‚ÇÇ) :=
  ‚ü®{0}, isCompact_singleton, mem_of_superset univ_mem fun x _ => rfl‚ü©
#align is_compact_operator_zero isCompactOperator_zero

section Characterizations

section

variable {R‚ÇÅ R‚ÇÇ : Type _} [Semiring R‚ÇÅ] [Semiring R‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : R‚ÇÅ ‚Üí+* R‚ÇÇ} {M‚ÇÅ M‚ÇÇ : Type _}
  [TopologicalSpace M‚ÇÅ] [AddCommMonoid M‚ÇÅ] [TopologicalSpace M‚ÇÇ]

/- warning: is_compact_operator_iff_exists_mem_nhds_image_subset_compact -> isCompactOperator_iff_exists_mem_nhds_image_subset_compact is a dubious translation:
lean 3 declaration is
  forall {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u2}} [_inst_3 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_4 : AddCommMonoid.{u1} M‚ÇÅ] [_inst_5 : TopologicalSpace.{u2} M‚ÇÇ] (f : M‚ÇÅ -> M‚ÇÇ), Iff (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_4))) _inst_3 _inst_5 f) (Exists.{succ u1} (Set.{u1} M‚ÇÅ) (fun (V : Set.{u1} M‚ÇÅ) => Exists.{0} (Membership.Mem.{u1, u1} (Set.{u1} M‚ÇÅ) (Filter.{u1} M‚ÇÅ) (Filter.hasMem.{u1} M‚ÇÅ) V (nhds.{u1} M‚ÇÅ _inst_3 (OfNat.ofNat.{u1} M‚ÇÅ 0 (OfNat.mk.{u1} M‚ÇÅ 0 (Zero.zero.{u1} M‚ÇÅ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_4)))))))) (fun (H : Membership.Mem.{u1, u1} (Set.{u1} M‚ÇÅ) (Filter.{u1} M‚ÇÅ) (Filter.hasMem.{u1} M‚ÇÅ) V (nhds.{u1} M‚ÇÅ _inst_3 (OfNat.ofNat.{u1} M‚ÇÅ 0 (OfNat.mk.{u1} M‚ÇÅ 0 (Zero.zero.{u1} M‚ÇÅ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_4)))))))) => Exists.{succ u2} (Set.{u2} M‚ÇÇ) (fun (K : Set.{u2} M‚ÇÇ) => And (IsCompact.{u2} M‚ÇÇ _inst_5 K) (HasSubset.Subset.{u2} (Set.{u2} M‚ÇÇ) (Set.hasSubset.{u2} M‚ÇÇ) (Set.image.{u1, u2} M‚ÇÅ M‚ÇÇ f V) K)))))
but is expected to have type
  forall {M‚ÇÅ : Type.{u2}} {M‚ÇÇ : Type.{u1}} [_inst_3 : TopologicalSpace.{u2} M‚ÇÅ] [_inst_4 : AddCommMonoid.{u2} M‚ÇÅ] [_inst_5 : TopologicalSpace.{u1} M‚ÇÇ] (f : M‚ÇÅ -> M‚ÇÇ), Iff (IsCompactOperator.{u2, u1} M‚ÇÅ M‚ÇÇ (AddMonoid.toZero.{u2} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÅ _inst_4)) _inst_3 _inst_5 f) (Exists.{succ u2} (Set.{u2} M‚ÇÅ) (fun (V : Set.{u2} M‚ÇÅ) => And (Membership.mem.{u2, u2} (Set.{u2} M‚ÇÅ) (Filter.{u2} M‚ÇÅ) (instMembershipSetFilter.{u2} M‚ÇÅ) V (nhds.{u2} M‚ÇÅ _inst_3 (OfNat.ofNat.{u2} M‚ÇÅ 0 (Zero.toOfNat0.{u2} M‚ÇÅ (AddMonoid.toZero.{u2} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÅ _inst_4)))))) (Exists.{succ u1} (Set.{u1} M‚ÇÇ) (fun (K : Set.{u1} M‚ÇÇ) => And (IsCompact.{u1} M‚ÇÇ _inst_5 K) (HasSubset.Subset.{u1} (Set.{u1} M‚ÇÇ) (Set.instHasSubsetSet.{u1} M‚ÇÇ) (Set.image.{u2, u1} M‚ÇÅ M‚ÇÇ f V) K)))))
Case conversion may be inaccurate. Consider using '#align is_compact_operator_iff_exists_mem_nhds_image_subset_compact isCompactOperator_iff_exists_mem_nhds_image_subset_compact‚Çì'. -/
theorem isCompactOperator_iff_exists_mem_nhds_image_subset_compact (f : M‚ÇÅ ‚Üí M‚ÇÇ) :
    IsCompactOperator f ‚Üî ‚àÉ V ‚àà (ùìù 0 : Filter M‚ÇÅ), ‚àÉ K : Set M‚ÇÇ, IsCompact K ‚àß f '' V ‚äÜ K :=
  ‚ü®fun ‚ü®K, hK, hKf‚ü© => ‚ü®f ‚Åª¬π' K, hKf, K, hK, image_preimage_subset _ _‚ü©, fun ‚ü®V, hV, K, hK, hVK‚ü© =>
    ‚ü®K, hK, mem_of_superset hV (image_subset_iff.mp hVK)‚ü©‚ü©
#align is_compact_operator_iff_exists_mem_nhds_image_subset_compact isCompactOperator_iff_exists_mem_nhds_image_subset_compact

/- warning: is_compact_operator_iff_exists_mem_nhds_is_compact_closure_image -> isCompactOperator_iff_exists_mem_nhds_isCompact_closure_image is a dubious translation:
lean 3 declaration is
  forall {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u2}} [_inst_3 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_4 : AddCommMonoid.{u1} M‚ÇÅ] [_inst_5 : TopologicalSpace.{u2} M‚ÇÇ] [_inst_6 : T2Space.{u2} M‚ÇÇ _inst_5] (f : M‚ÇÅ -> M‚ÇÇ), Iff (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_4))) _inst_3 _inst_5 f) (Exists.{succ u1} (Set.{u1} M‚ÇÅ) (fun (V : Set.{u1} M‚ÇÅ) => Exists.{0} (Membership.Mem.{u1, u1} (Set.{u1} M‚ÇÅ) (Filter.{u1} M‚ÇÅ) (Filter.hasMem.{u1} M‚ÇÅ) V (nhds.{u1} M‚ÇÅ _inst_3 (OfNat.ofNat.{u1} M‚ÇÅ 0 (OfNat.mk.{u1} M‚ÇÅ 0 (Zero.zero.{u1} M‚ÇÅ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_4)))))))) (fun (H : Membership.Mem.{u1, u1} (Set.{u1} M‚ÇÅ) (Filter.{u1} M‚ÇÅ) (Filter.hasMem.{u1} M‚ÇÅ) V (nhds.{u1} M‚ÇÅ _inst_3 (OfNat.ofNat.{u1} M‚ÇÅ 0 (OfNat.mk.{u1} M‚ÇÅ 0 (Zero.zero.{u1} M‚ÇÅ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_4)))))))) => IsCompact.{u2} M‚ÇÇ _inst_5 (closure.{u2} M‚ÇÇ _inst_5 (Set.image.{u1, u2} M‚ÇÅ M‚ÇÇ f V)))))
but is expected to have type
  forall {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u2}} [_inst_3 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_4 : AddCommMonoid.{u1} M‚ÇÅ] [_inst_5 : TopologicalSpace.{u2} M‚ÇÇ] [_inst_6 : T2Space.{u2} M‚ÇÇ _inst_5] (f : M‚ÇÅ -> M‚ÇÇ), Iff (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÇ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_4)) _inst_3 _inst_5 f) (Exists.{succ u1} (Set.{u1} M‚ÇÅ) (fun (V : Set.{u1} M‚ÇÅ) => And (Membership.mem.{u1, u1} (Set.{u1} M‚ÇÅ) (Filter.{u1} M‚ÇÅ) (instMembershipSetFilter.{u1} M‚ÇÅ) V (nhds.{u1} M‚ÇÅ _inst_3 (OfNat.ofNat.{u1} M‚ÇÅ 0 (Zero.toOfNat0.{u1} M‚ÇÅ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_4)))))) (IsCompact.{u2} M‚ÇÇ _inst_5 (closure.{u2} M‚ÇÇ _inst_5 (Set.image.{u1, u2} M‚ÇÅ M‚ÇÇ f V)))))
Case conversion may be inaccurate. Consider using '#align is_compact_operator_iff_exists_mem_nhds_is_compact_closure_image isCompactOperator_iff_exists_mem_nhds_isCompact_closure_image‚Çì'. -/
theorem isCompactOperator_iff_exists_mem_nhds_isCompact_closure_image [T2Space M‚ÇÇ] (f : M‚ÇÅ ‚Üí M‚ÇÇ) :
    IsCompactOperator f ‚Üî ‚àÉ V ‚àà (ùìù 0 : Filter M‚ÇÅ), IsCompact (closure <| f '' V) :=
  by
  rw [isCompactOperator_iff_exists_mem_nhds_image_subset_compact]
  exact
    ‚ü®fun ‚ü®V, hV, K, hK, hKV‚ü© => ‚ü®V, hV, isCompact_closure_of_subset_compact hK hKV‚ü©,
      fun ‚ü®V, hV, hVc‚ü© => ‚ü®V, hV, closure (f '' V), hVc, subset_closure‚ü©‚ü©
#align is_compact_operator_iff_exists_mem_nhds_is_compact_closure_image isCompactOperator_iff_exists_mem_nhds_isCompact_closure_image

end

section Bounded

variable {ùïú‚ÇÅ ùïú‚ÇÇ : Type _} [NontriviallyNormedField ùïú‚ÇÅ] [SeminormedRing ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : ùïú‚ÇÅ ‚Üí+* ùïú‚ÇÇ}
  {M‚ÇÅ M‚ÇÇ : Type _} [TopologicalSpace M‚ÇÅ] [AddCommMonoid M‚ÇÅ] [TopologicalSpace M‚ÇÇ] [AddCommMonoid M‚ÇÇ]
  [Module ùïú‚ÇÅ M‚ÇÅ] [Module ùïú‚ÇÇ M‚ÇÇ] [ContinuousConstSMul ùïú‚ÇÇ M‚ÇÇ]

/- warning: is_compact_operator.image_subset_compact_of_vonN_bounded -> IsCompactOperator.image_subset_compact_of_vonN_bounded is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_3 : TopologicalSpace.{u3} M‚ÇÅ] [_inst_4 : AddCommMonoid.{u3} M‚ÇÅ] [_inst_5 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_6 : AddCommMonoid.{u4} M‚ÇÇ] [_inst_7 : Module.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) _inst_4] [_inst_8 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_6] [_inst_9 : ContinuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ _inst_5 (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_6))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_6))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_6))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_6 _inst_8))))] {f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 _inst_7 _inst_8}, (IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_4))) _inst_3 _inst_5 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 _inst_7 _inst_8) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 _inst_7 _inst_8) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_4 _inst_6 _inst_7 _inst_8 œÉ‚ÇÅ‚ÇÇ) f)) -> (forall {S : Set.{u3} M‚ÇÅ}, (Bornology.IsVonNBounded.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (SeminormedCommRing.toSemiNormedRing.{u1} ùïú‚ÇÅ (NormedCommRing.toSeminormedCommRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))) (SMulZeroClass.toHasSmul.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_4))) (SMulWithZero.toSmulZeroClass.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (MulZeroClass.toHasZero.{u1} ùïú‚ÇÅ (MulZeroOneClass.toMulZeroClass.{u1} ùïú‚ÇÅ (MonoidWithZero.toMulZeroOneClass.{u1} ùïú‚ÇÅ (Semiring.toMonoidWithZero.{u1} ùïú‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))))))) (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_4))) (MulActionWithZero.toSMulWithZero.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Semiring.toMonoidWithZero.{u1} ùïú‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_4))) (Module.toMulActionWithZero.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) _inst_4 _inst_7)))) (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_4))) _inst_3 S) -> (Exists.{succ u4} (Set.{u4} M‚ÇÇ) (fun (K : Set.{u4} M‚ÇÇ) => And (IsCompact.{u4} M‚ÇÇ _inst_5 K) (HasSubset.Subset.{u4} (Set.{u4} M‚ÇÇ) (Set.hasSubset.{u4} M‚ÇÇ) (Set.image.{u3, u4} M‚ÇÅ M‚ÇÇ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 _inst_7 _inst_8) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 _inst_7 _inst_8) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_4 _inst_6 _inst_7 _inst_8 œÉ‚ÇÅ‚ÇÇ) f) S) K))))
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u4}} {ùïú‚ÇÇ : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u4} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u3} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u4, u3} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u3} ùïú‚ÇÇ (Ring.toSemiring.{u3} ùïú‚ÇÇ (SeminormedRing.toRing.{u3} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u2}} {M‚ÇÇ : Type.{u1}} [_inst_3 : TopologicalSpace.{u2} M‚ÇÅ] [_inst_4 : AddCommMonoid.{u2} M‚ÇÅ] [_inst_5 : TopologicalSpace.{u1} M‚ÇÇ] [_inst_6 : AddCommMonoid.{u1} M‚ÇÇ] [_inst_7 : Module.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) _inst_4] [_inst_8 : Module.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u3} ùïú‚ÇÇ (SeminormedRing.toRing.{u3} ùïú‚ÇÇ _inst_2)) _inst_6] [_inst_9 : ContinuousConstSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ _inst_5 (SMulZeroClass.toSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (AddMonoid.toZero.{u1} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÇ _inst_6)) (SMulWithZero.toSMulZeroClass.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (MonoidWithZero.toZero.{u3} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (Ring.toSemiring.{u3} ùïú‚ÇÇ (SeminormedRing.toRing.{u3} ùïú‚ÇÇ _inst_2)))) (AddMonoid.toZero.{u1} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÇ _inst_6)) (MulActionWithZero.toSMulWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (Ring.toSemiring.{u3} ùïú‚ÇÇ (SeminormedRing.toRing.{u3} ùïú‚ÇÇ _inst_2))) (AddMonoid.toZero.{u1} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÇ _inst_6)) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u3} ùïú‚ÇÇ (SeminormedRing.toRing.{u3} ùïú‚ÇÇ _inst_2)) _inst_6 _inst_8))))] {f : LinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u3} ùïú‚ÇÇ (SeminormedRing.toRing.{u3} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 _inst_7 _inst_8}, (IsCompactOperator.{u2, u1} M‚ÇÅ M‚ÇÇ (AddMonoid.toZero.{u2} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÅ _inst_4)) _inst_3 _inst_5 (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (LinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u3} ùïú‚ÇÇ (SeminormedRing.toRing.{u3} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 _inst_7 _inst_8) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u3} ùïú‚ÇÇ (SeminormedRing.toRing.{u3} ùïú‚ÇÇ _inst_2)) _inst_4 _inst_6 _inst_7 _inst_8 œÉ‚ÇÅ‚ÇÇ) f)) -> (forall {S : Set.{u2} M‚ÇÅ}, (Bornology.IsVonNBounded.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (SeminormedCommRing.toSeminormedRing.{u4} ùïú‚ÇÅ (NormedCommRing.toSeminormedCommRing.{u4} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))) (SMulZeroClass.toSMul.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (AddMonoid.toZero.{u2} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÅ _inst_4)) (SMulWithZero.toSMulZeroClass.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (CommMonoidWithZero.toZero.{u4} ùïú‚ÇÅ (CommGroupWithZero.toCommMonoidWithZero.{u4} ùïú‚ÇÅ (Semifield.toCommGroupWithZero.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (AddMonoid.toZero.{u2} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÅ _inst_4)) (MulActionWithZero.toSMulWithZero.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (AddMonoid.toZero.{u2} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÅ _inst_4)) (Module.toMulActionWithZero.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) _inst_4 _inst_7)))) (AddMonoid.toZero.{u2} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÅ _inst_4)) _inst_3 S) -> (Exists.{succ u1} (Set.{u1} M‚ÇÇ) (fun (K : Set.{u1} M‚ÇÇ) => And (IsCompact.{u1} M‚ÇÇ _inst_5 K) (HasSubset.Subset.{u1} (Set.{u1} M‚ÇÇ) (Set.instHasSubsetSet.{u1} M‚ÇÇ) (Set.image.{u2, u1} M‚ÇÅ M‚ÇÇ (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (LinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u3} ùïú‚ÇÇ (SeminormedRing.toRing.{u3} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 _inst_7 _inst_8) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u3} ùïú‚ÇÇ (SeminormedRing.toRing.{u3} ùïú‚ÇÇ _inst_2)) _inst_4 _inst_6 _inst_7 _inst_8 œÉ‚ÇÅ‚ÇÇ) f) S) K))))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.image_subset_compact_of_vonN_bounded IsCompactOperator.image_subset_compact_of_vonN_bounded‚Çì'. -/
theorem IsCompactOperator.image_subset_compact_of_vonN_bounded {f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ}
    (hf : IsCompactOperator f) {S : Set M‚ÇÅ} (hS : IsVonNBounded ùïú‚ÇÅ S) :
    ‚àÉ K : Set M‚ÇÇ, IsCompact K ‚àß f '' S ‚äÜ K :=
  let ‚ü®K, hK, hKf‚ü© := hf
  let ‚ü®r, hr, hrS‚ü© := hS hKf
  let ‚ü®c, hc‚ü© := NormedField.exists_lt_norm ùïú‚ÇÅ r
  let this := ne_zero_of_norm_ne_zero (hr.trans hc).Ne.symm
  ‚ü®œÉ‚ÇÅ‚ÇÇ c ‚Ä¢ K, hK.image <| continuous_id.const_smul (œÉ‚ÇÅ‚ÇÇ c), by
    rw [image_subset_iff, preimage_smul_set‚Çõ‚Çó _ _ _ f this.is_unit] <;> exact hrS c hc.le‚ü©
#align is_compact_operator.image_subset_compact_of_vonN_bounded IsCompactOperator.image_subset_compact_of_vonN_bounded

/- warning: is_compact_operator.is_compact_closure_image_of_vonN_bounded -> IsCompactOperator.isCompact_closure_image_of_vonN_bounded is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_3 : TopologicalSpace.{u3} M‚ÇÅ] [_inst_4 : AddCommMonoid.{u3} M‚ÇÅ] [_inst_5 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_6 : AddCommMonoid.{u4} M‚ÇÇ] [_inst_7 : Module.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) _inst_4] [_inst_8 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_6] [_inst_9 : ContinuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ _inst_5 (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_6))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_6))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_6))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_6 _inst_8))))] [_inst_10 : T2Space.{u4} M‚ÇÇ _inst_5] {f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 _inst_7 _inst_8}, (IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_4))) _inst_3 _inst_5 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 _inst_7 _inst_8) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 _inst_7 _inst_8) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_4 _inst_6 _inst_7 _inst_8 œÉ‚ÇÅ‚ÇÇ) f)) -> (forall {S : Set.{u3} M‚ÇÅ}, (Bornology.IsVonNBounded.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (SeminormedCommRing.toSemiNormedRing.{u1} ùïú‚ÇÅ (NormedCommRing.toSeminormedCommRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))) (SMulZeroClass.toHasSmul.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_4))) (SMulWithZero.toSmulZeroClass.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (MulZeroClass.toHasZero.{u1} ùïú‚ÇÅ (MulZeroOneClass.toMulZeroClass.{u1} ùïú‚ÇÅ (MonoidWithZero.toMulZeroOneClass.{u1} ùïú‚ÇÅ (Semiring.toMonoidWithZero.{u1} ùïú‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))))))) (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_4))) (MulActionWithZero.toSMulWithZero.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Semiring.toMonoidWithZero.{u1} ùïú‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_4))) (Module.toMulActionWithZero.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) _inst_4 _inst_7)))) (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_4))) _inst_3 S) -> (IsCompact.{u4} M‚ÇÇ _inst_5 (closure.{u4} M‚ÇÇ _inst_5 (Set.image.{u3, u4} M‚ÇÅ M‚ÇÇ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 _inst_7 _inst_8) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 _inst_7 _inst_8) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_4 _inst_6 _inst_7 _inst_8 œÉ‚ÇÅ‚ÇÇ) f) S))))
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u3}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u3} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u3, u2} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u3} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÅ (Field.toSemifield.{u3} ùïú‚ÇÅ (NormedField.toField.{u3} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u4}} [_inst_3 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_4 : AddCommMonoid.{u1} M‚ÇÅ] [_inst_5 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_6 : AddCommMonoid.{u4} M‚ÇÇ] [_inst_7 : Module.{u3, u1} ùïú‚ÇÅ M‚ÇÅ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÅ (Field.toSemifield.{u3} ùïú‚ÇÅ (NormedField.toField.{u3} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÅ _inst_1))))) _inst_4] [_inst_8 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_6] [_inst_9 : ContinuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ _inst_5 (SMulZeroClass.toSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddMonoid.toZero.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_6)) (SMulWithZero.toSMulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MonoidWithZero.toZero.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))) (AddMonoid.toZero.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_6)) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2))) (AddMonoid.toZero.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_6)) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_6 _inst_8))))] [_inst_10 : T2Space.{u4} M‚ÇÇ _inst_5] {f : LinearMap.{u3, u2, u1, u4} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÅ (Field.toSemifield.{u3} ùïú‚ÇÅ (NormedField.toField.{u3} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 _inst_7 _inst_8}, (IsCompactOperator.{u1, u4} M‚ÇÅ M‚ÇÇ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_4)) _inst_3 _inst_5 (FunLike.coe.{max (succ u1) (succ u4), succ u1, succ u4} (LinearMap.{u3, u2, u1, u4} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÅ (Field.toSemifield.{u3} ùïú‚ÇÅ (NormedField.toField.{u3} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 _inst_7 _inst_8) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u3, u2, u1, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÅ (Field.toSemifield.{u3} ùïú‚ÇÅ (NormedField.toField.{u3} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_4 _inst_6 _inst_7 _inst_8 œÉ‚ÇÅ‚ÇÇ) f)) -> (forall {S : Set.{u1} M‚ÇÅ}, (Bornology.IsVonNBounded.{u3, u1} ùïú‚ÇÅ M‚ÇÅ (SeminormedCommRing.toSeminormedRing.{u3} ùïú‚ÇÅ (NormedCommRing.toSeminormedCommRing.{u3} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÅ _inst_1)))) (SMulZeroClass.toSMul.{u3, u1} ùïú‚ÇÅ M‚ÇÅ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_4)) (SMulWithZero.toSMulZeroClass.{u3, u1} ùïú‚ÇÅ M‚ÇÅ (CommMonoidWithZero.toZero.{u3} ùïú‚ÇÅ (CommGroupWithZero.toCommMonoidWithZero.{u3} ùïú‚ÇÅ (Semifield.toCommGroupWithZero.{u3} ùïú‚ÇÅ (Field.toSemifield.{u3} ùïú‚ÇÅ (NormedField.toField.{u3} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÅ _inst_1)))))) (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_4)) (MulActionWithZero.toSMulWithZero.{u3, u1} ùïú‚ÇÅ M‚ÇÅ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÅ (Field.toSemifield.{u3} ùïú‚ÇÅ (NormedField.toField.{u3} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÅ _inst_1)))))) (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_4)) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÅ M‚ÇÅ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÅ (Field.toSemifield.{u3} ùïú‚ÇÅ (NormedField.toField.{u3} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÅ _inst_1))))) _inst_4 _inst_7)))) (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_4)) _inst_3 S) -> (IsCompact.{u4} M‚ÇÇ _inst_5 (closure.{u4} M‚ÇÇ _inst_5 (Set.image.{u1, u4} M‚ÇÅ M‚ÇÇ (FunLike.coe.{max (succ u1) (succ u4), succ u1, succ u4} (LinearMap.{u3, u2, u1, u4} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÅ (Field.toSemifield.{u3} ùïú‚ÇÅ (NormedField.toField.{u3} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 _inst_7 _inst_8) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u3, u2, u1, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÅ (Field.toSemifield.{u3} ùïú‚ÇÅ (NormedField.toField.{u3} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_4 _inst_6 _inst_7 _inst_8 œÉ‚ÇÅ‚ÇÇ) f) S))))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.is_compact_closure_image_of_vonN_bounded IsCompactOperator.isCompact_closure_image_of_vonN_bounded‚Çì'. -/
theorem IsCompactOperator.isCompact_closure_image_of_vonN_bounded [T2Space M‚ÇÇ] {f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ}
    (hf : IsCompactOperator f) {S : Set M‚ÇÅ} (hS : IsVonNBounded ùïú‚ÇÅ S) :
    IsCompact (closure <| f '' S) :=
  let ‚ü®K, hK, hKf‚ü© := hf.image_subset_compact_of_vonN_bounded hS
  isCompact_closure_of_subset_compact hK hKf
#align is_compact_operator.is_compact_closure_image_of_vonN_bounded IsCompactOperator.isCompact_closure_image_of_vonN_bounded

end Bounded

section NormedSpace

variable {ùïú‚ÇÅ ùïú‚ÇÇ : Type _} [NontriviallyNormedField ùïú‚ÇÅ] [SeminormedRing ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : ùïú‚ÇÅ ‚Üí+* ùïú‚ÇÇ}
  {M‚ÇÅ M‚ÇÇ M‚ÇÉ : Type _} [SeminormedAddCommGroup M‚ÇÅ] [TopologicalSpace M‚ÇÇ] [AddCommMonoid M‚ÇÇ]
  [NormedSpace ùïú‚ÇÅ M‚ÇÅ] [Module ùïú‚ÇÇ M‚ÇÇ]

/- warning: is_compact_operator.image_subset_compact_of_bounded -> IsCompactOperator.image_subset_compact_of_bounded is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_3 : SeminormedAddCommGroup.{u3} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u4} M‚ÇÇ] [_inst_6 : NormedSpace.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] {f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7}, (IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) _inst_4 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) -> (forall {S : Set.{u3} M‚ÇÅ}, (Metric.Bounded.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3) S) -> (Exists.{succ u4} (Set.{u4} M‚ÇÇ) (fun (K : Set.{u4} M‚ÇÇ) => And (IsCompact.{u4} M‚ÇÇ _inst_4 K) (HasSubset.Subset.{u4} (Set.{u4} M‚ÇÇ) (Set.hasSubset.{u4} M‚ÇÇ) (Set.image.{u3, u4} M‚ÇÅ M‚ÇÇ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) S) K))))
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u2}} {ùïú‚ÇÇ : Type.{u4}} [_inst_1 : NontriviallyNormedField.{u2} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u4} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u2, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u2} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u3}} [_inst_3 : SeminormedAddCommGroup.{u1} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u3} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u3} M‚ÇÇ] [_inst_6 : NormedSpace.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (SMulWithZero.toSMulZeroClass.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (MonoidWithZero.toZero.{u4} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (MulActionWithZero.toSMulWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (Module.toMulActionWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] {f : LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7}, (IsCompactOperator.{u1, u3} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3))) _inst_4 (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) -> (forall {S : Set.{u1} M‚ÇÅ}, (Metric.Bounded.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3) S) -> (Exists.{succ u3} (Set.{u3} M‚ÇÇ) (fun (K : Set.{u3} M‚ÇÇ) => And (IsCompact.{u3} M‚ÇÇ _inst_4 K) (HasSubset.Subset.{u3} (Set.{u3} M‚ÇÇ) (Set.instHasSubsetSet.{u3} M‚ÇÇ) (Set.image.{u1, u3} M‚ÇÅ M‚ÇÇ (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) S) K))))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.image_subset_compact_of_bounded IsCompactOperator.image_subset_compact_of_bounded‚Çì'. -/
theorem IsCompactOperator.image_subset_compact_of_bounded [ContinuousConstSMul ùïú‚ÇÇ M‚ÇÇ]
    {f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ} (hf : IsCompactOperator f) {S : Set M‚ÇÅ} (hS : Metric.Bounded S) :
    ‚àÉ K : Set M‚ÇÇ, IsCompact K ‚àß f '' S ‚äÜ K :=
  hf.image_subset_compact_of_vonN_bounded
    (by rwa [NormedSpace.isVonNBounded_iff, ‚Üê Metric.bounded_iff_isBounded])
#align is_compact_operator.image_subset_compact_of_bounded IsCompactOperator.image_subset_compact_of_bounded

/- warning: is_compact_operator.is_compact_closure_image_of_bounded -> IsCompactOperator.isCompact_closure_image_of_bounded is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_3 : SeminormedAddCommGroup.{u3} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u4} M‚ÇÇ] [_inst_6 : NormedSpace.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] [_inst_9 : T2Space.{u4} M‚ÇÇ _inst_4] {f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7}, (IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) _inst_4 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) -> (forall {S : Set.{u3} M‚ÇÅ}, (Metric.Bounded.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3) S) -> (IsCompact.{u4} M‚ÇÇ _inst_4 (closure.{u4} M‚ÇÇ _inst_4 (Set.image.{u3, u4} M‚ÇÅ M‚ÇÇ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) S))))
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u2}} {ùïú‚ÇÇ : Type.{u4}} [_inst_1 : NontriviallyNormedField.{u2} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u4} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u2, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u2} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u3}} [_inst_3 : SeminormedAddCommGroup.{u1} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u3} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u3} M‚ÇÇ] [_inst_6 : NormedSpace.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (SMulWithZero.toSMulZeroClass.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (MonoidWithZero.toZero.{u4} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (MulActionWithZero.toSMulWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (Module.toMulActionWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] [_inst_9 : T2Space.{u3} M‚ÇÇ _inst_4] {f : LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7}, (IsCompactOperator.{u1, u3} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3))) _inst_4 (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) -> (forall {S : Set.{u1} M‚ÇÅ}, (Metric.Bounded.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3) S) -> (IsCompact.{u3} M‚ÇÇ _inst_4 (closure.{u3} M‚ÇÇ _inst_4 (Set.image.{u1, u3} M‚ÇÅ M‚ÇÇ (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) S))))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.is_compact_closure_image_of_bounded IsCompactOperator.isCompact_closure_image_of_bounded‚Çì'. -/
theorem IsCompactOperator.isCompact_closure_image_of_bounded [ContinuousConstSMul ùïú‚ÇÇ M‚ÇÇ]
    [T2Space M‚ÇÇ] {f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ} (hf : IsCompactOperator f) {S : Set M‚ÇÅ}
    (hS : Metric.Bounded S) : IsCompact (closure <| f '' S) :=
  hf.isCompact_closure_image_of_vonN_bounded
    (by rwa [NormedSpace.isVonNBounded_iff, ‚Üê Metric.bounded_iff_isBounded])
#align is_compact_operator.is_compact_closure_image_of_bounded IsCompactOperator.isCompact_closure_image_of_bounded

/- warning: is_compact_operator.image_ball_subset_compact -> IsCompactOperator.image_ball_subset_compact is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_3 : SeminormedAddCommGroup.{u3} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u4} M‚ÇÇ] [_inst_6 : NormedSpace.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] {f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7}, (IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) _inst_4 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) -> (forall (r : Real), Exists.{succ u4} (Set.{u4} M‚ÇÇ) (fun (K : Set.{u4} M‚ÇÇ) => And (IsCompact.{u4} M‚ÇÇ _inst_4 K) (HasSubset.Subset.{u4} (Set.{u4} M‚ÇÇ) (Set.hasSubset.{u4} M‚ÇÇ) (Set.image.{u3, u4} M‚ÇÅ M‚ÇÇ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) (Metric.ball.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3) (OfNat.ofNat.{u3} M‚ÇÅ 0 (OfNat.mk.{u3} M‚ÇÅ 0 (Zero.zero.{u3} M‚ÇÅ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3))))))))) r)) K)))
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u2}} {ùïú‚ÇÇ : Type.{u4}} [_inst_1 : NontriviallyNormedField.{u2} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u4} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u2, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u2} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u3}} [_inst_3 : SeminormedAddCommGroup.{u1} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u3} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u3} M‚ÇÇ] [_inst_6 : NormedSpace.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (SMulWithZero.toSMulZeroClass.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (MonoidWithZero.toZero.{u4} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (MulActionWithZero.toSMulWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (Module.toMulActionWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] {f : LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7}, (IsCompactOperator.{u1, u3} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3))) _inst_4 (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) -> (forall (r : Real), Exists.{succ u3} (Set.{u3} M‚ÇÇ) (fun (K : Set.{u3} M‚ÇÇ) => And (IsCompact.{u3} M‚ÇÇ _inst_4 K) (HasSubset.Subset.{u3} (Set.{u3} M‚ÇÇ) (Set.instHasSubsetSet.{u3} M‚ÇÇ) (Set.image.{u1, u3} M‚ÇÅ M‚ÇÇ (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) (Metric.ball.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3) (OfNat.ofNat.{u1} M‚ÇÅ 0 (Zero.toOfNat0.{u1} M‚ÇÅ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))))) r)) K)))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.image_ball_subset_compact IsCompactOperator.image_ball_subset_compact‚Çì'. -/
theorem IsCompactOperator.image_ball_subset_compact [ContinuousConstSMul ùïú‚ÇÇ M‚ÇÇ] {f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ}
    (hf : IsCompactOperator f) (r : ‚Ñù) : ‚àÉ K : Set M‚ÇÇ, IsCompact K ‚àß f '' Metric.ball 0 r ‚äÜ K :=
  hf.image_subset_compact_of_vonN_bounded (NormedSpace.isVonNBounded_ball ùïú‚ÇÅ M‚ÇÅ r)
#align is_compact_operator.image_ball_subset_compact IsCompactOperator.image_ball_subset_compact

/- warning: is_compact_operator.image_closed_ball_subset_compact -> IsCompactOperator.image_closedBall_subset_compact is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_3 : SeminormedAddCommGroup.{u3} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u4} M‚ÇÇ] [_inst_6 : NormedSpace.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] {f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7}, (IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) _inst_4 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) -> (forall (r : Real), Exists.{succ u4} (Set.{u4} M‚ÇÇ) (fun (K : Set.{u4} M‚ÇÇ) => And (IsCompact.{u4} M‚ÇÇ _inst_4 K) (HasSubset.Subset.{u4} (Set.{u4} M‚ÇÇ) (Set.hasSubset.{u4} M‚ÇÇ) (Set.image.{u3, u4} M‚ÇÅ M‚ÇÇ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) (Metric.closedBall.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3) (OfNat.ofNat.{u3} M‚ÇÅ 0 (OfNat.mk.{u3} M‚ÇÅ 0 (Zero.zero.{u3} M‚ÇÅ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3))))))))) r)) K)))
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u2}} {ùïú‚ÇÇ : Type.{u4}} [_inst_1 : NontriviallyNormedField.{u2} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u4} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u2, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u2} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u3}} [_inst_3 : SeminormedAddCommGroup.{u1} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u3} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u3} M‚ÇÇ] [_inst_6 : NormedSpace.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (SMulWithZero.toSMulZeroClass.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (MonoidWithZero.toZero.{u4} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (MulActionWithZero.toSMulWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (Module.toMulActionWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] {f : LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7}, (IsCompactOperator.{u1, u3} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3))) _inst_4 (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) -> (forall (r : Real), Exists.{succ u3} (Set.{u3} M‚ÇÇ) (fun (K : Set.{u3} M‚ÇÇ) => And (IsCompact.{u3} M‚ÇÇ _inst_4 K) (HasSubset.Subset.{u3} (Set.{u3} M‚ÇÇ) (Set.instHasSubsetSet.{u3} M‚ÇÇ) (Set.image.{u1, u3} M‚ÇÅ M‚ÇÇ (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) (Metric.closedBall.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3) (OfNat.ofNat.{u1} M‚ÇÅ 0 (Zero.toOfNat0.{u1} M‚ÇÅ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))))) r)) K)))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.image_closed_ball_subset_compact IsCompactOperator.image_closedBall_subset_compact‚Çì'. -/
theorem IsCompactOperator.image_closedBall_subset_compact [ContinuousConstSMul ùïú‚ÇÇ M‚ÇÇ]
    {f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ} (hf : IsCompactOperator f) (r : ‚Ñù) :
    ‚àÉ K : Set M‚ÇÇ, IsCompact K ‚àß f '' Metric.closedBall 0 r ‚äÜ K :=
  hf.image_subset_compact_of_vonN_bounded (NormedSpace.isVonNBounded_closedBall ùïú‚ÇÅ M‚ÇÅ r)
#align is_compact_operator.image_closed_ball_subset_compact IsCompactOperator.image_closedBall_subset_compact

/- warning: is_compact_operator.is_compact_closure_image_ball -> IsCompactOperator.isCompact_closure_image_ball is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_3 : SeminormedAddCommGroup.{u3} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u4} M‚ÇÇ] [_inst_6 : NormedSpace.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] [_inst_9 : T2Space.{u4} M‚ÇÇ _inst_4] {f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7}, (IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) _inst_4 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) -> (forall (r : Real), IsCompact.{u4} M‚ÇÇ _inst_4 (closure.{u4} M‚ÇÇ _inst_4 (Set.image.{u3, u4} M‚ÇÅ M‚ÇÇ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) (Metric.ball.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3) (OfNat.ofNat.{u3} M‚ÇÅ 0 (OfNat.mk.{u3} M‚ÇÅ 0 (Zero.zero.{u3} M‚ÇÅ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3))))))))) r))))
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u2}} {ùïú‚ÇÇ : Type.{u4}} [_inst_1 : NontriviallyNormedField.{u2} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u4} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u2, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u2} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u3}} [_inst_3 : SeminormedAddCommGroup.{u1} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u3} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u3} M‚ÇÇ] [_inst_6 : NormedSpace.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (SMulWithZero.toSMulZeroClass.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (MonoidWithZero.toZero.{u4} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (MulActionWithZero.toSMulWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (Module.toMulActionWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] [_inst_9 : T2Space.{u3} M‚ÇÇ _inst_4] {f : LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7}, (IsCompactOperator.{u1, u3} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3))) _inst_4 (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) -> (forall (r : Real), IsCompact.{u3} M‚ÇÇ _inst_4 (closure.{u3} M‚ÇÇ _inst_4 (Set.image.{u1, u3} M‚ÇÅ M‚ÇÇ (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) (Metric.ball.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3) (OfNat.ofNat.{u1} M‚ÇÅ 0 (Zero.toOfNat0.{u1} M‚ÇÅ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))))) r))))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.is_compact_closure_image_ball IsCompactOperator.isCompact_closure_image_ball‚Çì'. -/
theorem IsCompactOperator.isCompact_closure_image_ball [ContinuousConstSMul ùïú‚ÇÇ M‚ÇÇ] [T2Space M‚ÇÇ]
    {f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ} (hf : IsCompactOperator f) (r : ‚Ñù) :
    IsCompact (closure <| f '' Metric.ball 0 r) :=
  hf.isCompact_closure_image_of_vonN_bounded (NormedSpace.isVonNBounded_ball ùïú‚ÇÅ M‚ÇÅ r)
#align is_compact_operator.is_compact_closure_image_ball IsCompactOperator.isCompact_closure_image_ball

/- warning: is_compact_operator.is_compact_closure_image_closed_ball -> IsCompactOperator.isCompact_closure_image_closedBall is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_3 : SeminormedAddCommGroup.{u3} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u4} M‚ÇÇ] [_inst_6 : NormedSpace.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] [_inst_9 : T2Space.{u4} M‚ÇÇ _inst_4] {f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7}, (IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) _inst_4 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) -> (forall (r : Real), IsCompact.{u4} M‚ÇÇ _inst_4 (closure.{u4} M‚ÇÇ _inst_4 (Set.image.{u3, u4} M‚ÇÅ M‚ÇÇ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) (Metric.closedBall.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3) (OfNat.ofNat.{u3} M‚ÇÅ 0 (OfNat.mk.{u3} M‚ÇÅ 0 (Zero.zero.{u3} M‚ÇÅ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3))))))))) r))))
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u2}} {ùïú‚ÇÇ : Type.{u4}} [_inst_1 : NontriviallyNormedField.{u2} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u4} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u2, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u2} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u3}} [_inst_3 : SeminormedAddCommGroup.{u1} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u3} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u3} M‚ÇÇ] [_inst_6 : NormedSpace.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (SMulWithZero.toSMulZeroClass.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (MonoidWithZero.toZero.{u4} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (MulActionWithZero.toSMulWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (Module.toMulActionWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] [_inst_9 : T2Space.{u3} M‚ÇÇ _inst_4] {f : LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7}, (IsCompactOperator.{u1, u3} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3))) _inst_4 (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) -> (forall (r : Real), IsCompact.{u3} M‚ÇÇ _inst_4 (closure.{u3} M‚ÇÇ _inst_4 (Set.image.{u1, u3} M‚ÇÅ M‚ÇÇ (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) (Metric.closedBall.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3) (OfNat.ofNat.{u1} M‚ÇÅ 0 (Zero.toOfNat0.{u1} M‚ÇÅ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))))) r))))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.is_compact_closure_image_closed_ball IsCompactOperator.isCompact_closure_image_closedBall‚Çì'. -/
theorem IsCompactOperator.isCompact_closure_image_closedBall [ContinuousConstSMul ùïú‚ÇÇ M‚ÇÇ]
    [T2Space M‚ÇÇ] {f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ} (hf : IsCompactOperator f) (r : ‚Ñù) :
    IsCompact (closure <| f '' Metric.closedBall 0 r) :=
  hf.isCompact_closure_image_of_vonN_bounded (NormedSpace.isVonNBounded_closedBall ùïú‚ÇÅ M‚ÇÅ r)
#align is_compact_operator.is_compact_closure_image_closed_ball IsCompactOperator.isCompact_closure_image_closedBall

/- warning: is_compact_operator_iff_image_ball_subset_compact -> isCompactOperator_iff_image_ball_subset_compact is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_3 : SeminormedAddCommGroup.{u3} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u4} M‚ÇÇ] [_inst_6 : NormedSpace.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] (f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) {r : Real}, (LT.lt.{0} Real Real.hasLt (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))) r) -> (Iff (IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) _inst_4 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) (Exists.{succ u4} (Set.{u4} M‚ÇÇ) (fun (K : Set.{u4} M‚ÇÇ) => And (IsCompact.{u4} M‚ÇÇ _inst_4 K) (HasSubset.Subset.{u4} (Set.{u4} M‚ÇÇ) (Set.hasSubset.{u4} M‚ÇÇ) (Set.image.{u3, u4} M‚ÇÅ M‚ÇÇ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) (Metric.ball.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3) (OfNat.ofNat.{u3} M‚ÇÅ 0 (OfNat.mk.{u3} M‚ÇÅ 0 (Zero.zero.{u3} M‚ÇÅ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3))))))))) r)) K))))
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u2}} {ùïú‚ÇÇ : Type.{u4}} [_inst_1 : NontriviallyNormedField.{u2} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u4} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u2, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u2} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u3}} [_inst_3 : SeminormedAddCommGroup.{u1} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u3} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u3} M‚ÇÇ] [_inst_6 : NormedSpace.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (SMulWithZero.toSMulZeroClass.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (MonoidWithZero.toZero.{u4} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (MulActionWithZero.toSMulWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (Module.toMulActionWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] (f : LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) {r : Real}, (LT.lt.{0} Real Real.instLTReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)) r) -> (Iff (IsCompactOperator.{u1, u3} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3))) _inst_4 (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) (Exists.{succ u3} (Set.{u3} M‚ÇÇ) (fun (K : Set.{u3} M‚ÇÇ) => And (IsCompact.{u3} M‚ÇÇ _inst_4 K) (HasSubset.Subset.{u3} (Set.{u3} M‚ÇÇ) (Set.instHasSubsetSet.{u3} M‚ÇÇ) (Set.image.{u1, u3} M‚ÇÅ M‚ÇÇ (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) (Metric.ball.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3) (OfNat.ofNat.{u1} M‚ÇÅ 0 (Zero.toOfNat0.{u1} M‚ÇÅ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))))) r)) K))))
Case conversion may be inaccurate. Consider using '#align is_compact_operator_iff_image_ball_subset_compact isCompactOperator_iff_image_ball_subset_compact‚Çì'. -/
theorem isCompactOperator_iff_image_ball_subset_compact [ContinuousConstSMul ùïú‚ÇÇ M‚ÇÇ]
    (f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ) {r : ‚Ñù} (hr : 0 < r) :
    IsCompactOperator f ‚Üî ‚àÉ K : Set M‚ÇÇ, IsCompact K ‚àß f '' Metric.ball 0 r ‚äÜ K :=
  ‚ü®fun hf => hf.image_ball_subset_compact r, fun ‚ü®K, hK, hKr‚ü© =>
    (isCompactOperator_iff_exists_mem_nhds_image_subset_compact f).mpr
      ‚ü®Metric.ball 0 r, ball_mem_nhds _ hr, K, hK, hKr‚ü©‚ü©
#align is_compact_operator_iff_image_ball_subset_compact isCompactOperator_iff_image_ball_subset_compact

/- warning: is_compact_operator_iff_image_closed_ball_subset_compact -> isCompactOperator_iff_image_closedBall_subset_compact is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_3 : SeminormedAddCommGroup.{u3} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u4} M‚ÇÇ] [_inst_6 : NormedSpace.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] (f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) {r : Real}, (LT.lt.{0} Real Real.hasLt (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))) r) -> (Iff (IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) _inst_4 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) (Exists.{succ u4} (Set.{u4} M‚ÇÇ) (fun (K : Set.{u4} M‚ÇÇ) => And (IsCompact.{u4} M‚ÇÇ _inst_4 K) (HasSubset.Subset.{u4} (Set.{u4} M‚ÇÇ) (Set.hasSubset.{u4} M‚ÇÇ) (Set.image.{u3, u4} M‚ÇÅ M‚ÇÇ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) (Metric.closedBall.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3) (OfNat.ofNat.{u3} M‚ÇÅ 0 (OfNat.mk.{u3} M‚ÇÅ 0 (Zero.zero.{u3} M‚ÇÅ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3))))))))) r)) K))))
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u2}} {ùïú‚ÇÇ : Type.{u4}} [_inst_1 : NontriviallyNormedField.{u2} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u4} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u2, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u2} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u3}} [_inst_3 : SeminormedAddCommGroup.{u1} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u3} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u3} M‚ÇÇ] [_inst_6 : NormedSpace.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (SMulWithZero.toSMulZeroClass.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (MonoidWithZero.toZero.{u4} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (MulActionWithZero.toSMulWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (Module.toMulActionWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] (f : LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) {r : Real}, (LT.lt.{0} Real Real.instLTReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)) r) -> (Iff (IsCompactOperator.{u1, u3} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3))) _inst_4 (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) (Exists.{succ u3} (Set.{u3} M‚ÇÇ) (fun (K : Set.{u3} M‚ÇÇ) => And (IsCompact.{u3} M‚ÇÇ _inst_4 K) (HasSubset.Subset.{u3} (Set.{u3} M‚ÇÇ) (Set.instHasSubsetSet.{u3} M‚ÇÇ) (Set.image.{u1, u3} M‚ÇÅ M‚ÇÇ (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) (Metric.closedBall.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3) (OfNat.ofNat.{u1} M‚ÇÅ 0 (Zero.toOfNat0.{u1} M‚ÇÅ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))))) r)) K))))
Case conversion may be inaccurate. Consider using '#align is_compact_operator_iff_image_closed_ball_subset_compact isCompactOperator_iff_image_closedBall_subset_compact‚Çì'. -/
theorem isCompactOperator_iff_image_closedBall_subset_compact [ContinuousConstSMul ùïú‚ÇÇ M‚ÇÇ]
    (f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ) {r : ‚Ñù} (hr : 0 < r) :
    IsCompactOperator f ‚Üî ‚àÉ K : Set M‚ÇÇ, IsCompact K ‚àß f '' Metric.closedBall 0 r ‚äÜ K :=
  ‚ü®fun hf => hf.image_closedBall_subset_compact r, fun ‚ü®K, hK, hKr‚ü© =>
    (isCompactOperator_iff_exists_mem_nhds_image_subset_compact f).mpr
      ‚ü®Metric.closedBall 0 r, closedBall_mem_nhds _ hr, K, hK, hKr‚ü©‚ü©
#align is_compact_operator_iff_image_closed_ball_subset_compact isCompactOperator_iff_image_closedBall_subset_compact

/- warning: is_compact_operator_iff_is_compact_closure_image_ball -> isCompactOperator_iff_isCompact_closure_image_ball is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_3 : SeminormedAddCommGroup.{u3} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u4} M‚ÇÇ] [_inst_6 : NormedSpace.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] [_inst_9 : T2Space.{u4} M‚ÇÇ _inst_4] (f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) {r : Real}, (LT.lt.{0} Real Real.hasLt (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))) r) -> (Iff (IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) _inst_4 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) (IsCompact.{u4} M‚ÇÇ _inst_4 (closure.{u4} M‚ÇÇ _inst_4 (Set.image.{u3, u4} M‚ÇÅ M‚ÇÇ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) (Metric.ball.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3) (OfNat.ofNat.{u3} M‚ÇÅ 0 (OfNat.mk.{u3} M‚ÇÅ 0 (Zero.zero.{u3} M‚ÇÅ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3))))))))) r)))))
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u2}} {ùïú‚ÇÇ : Type.{u4}} [_inst_1 : NontriviallyNormedField.{u2} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u4} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u2, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u2} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u3}} [_inst_3 : SeminormedAddCommGroup.{u1} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u3} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u3} M‚ÇÇ] [_inst_6 : NormedSpace.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (SMulWithZero.toSMulZeroClass.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (MonoidWithZero.toZero.{u4} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (MulActionWithZero.toSMulWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (Module.toMulActionWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] [_inst_9 : T2Space.{u3} M‚ÇÇ _inst_4] (f : LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) {r : Real}, (LT.lt.{0} Real Real.instLTReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)) r) -> (Iff (IsCompactOperator.{u1, u3} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3))) _inst_4 (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) (IsCompact.{u3} M‚ÇÇ _inst_4 (closure.{u3} M‚ÇÇ _inst_4 (Set.image.{u1, u3} M‚ÇÅ M‚ÇÇ (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) (Metric.ball.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3) (OfNat.ofNat.{u1} M‚ÇÅ 0 (Zero.toOfNat0.{u1} M‚ÇÅ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))))) r)))))
Case conversion may be inaccurate. Consider using '#align is_compact_operator_iff_is_compact_closure_image_ball isCompactOperator_iff_isCompact_closure_image_ball‚Çì'. -/
theorem isCompactOperator_iff_isCompact_closure_image_ball [ContinuousConstSMul ùïú‚ÇÇ M‚ÇÇ] [T2Space M‚ÇÇ]
    (f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ) {r : ‚Ñù} (hr : 0 < r) :
    IsCompactOperator f ‚Üî IsCompact (closure <| f '' Metric.ball 0 r) :=
  ‚ü®fun hf => hf.isCompact_closure_image_ball r, fun hf =>
    (isCompactOperator_iff_exists_mem_nhds_isCompact_closure_image f).mpr
      ‚ü®Metric.ball 0 r, ball_mem_nhds _ hr, hf‚ü©‚ü©
#align is_compact_operator_iff_is_compact_closure_image_ball isCompactOperator_iff_isCompact_closure_image_ball

/- warning: is_compact_operator_iff_is_compact_closure_image_closed_ball -> isCompactOperator_iff_isCompact_closure_image_closedBall is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_3 : SeminormedAddCommGroup.{u3} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u4} M‚ÇÇ] [_inst_6 : NormedSpace.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_5))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] [_inst_9 : T2Space.{u4} M‚ÇÇ _inst_4] (f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) {r : Real}, (LT.lt.{0} Real Real.hasLt (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))) r) -> (Iff (IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) _inst_4 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) (IsCompact.{u4} M‚ÇÇ _inst_4 (closure.{u4} M‚ÇÇ _inst_4 (Set.image.{u3, u4} M‚ÇÅ M‚ÇÇ (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (SeminormedRing.toRing.{u2} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) (Metric.closedBall.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3) (OfNat.ofNat.{u3} M‚ÇÅ 0 (OfNat.mk.{u3} M‚ÇÅ 0 (Zero.zero.{u3} M‚ÇÅ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3))))))))) r)))))
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u2}} {ùïú‚ÇÇ : Type.{u4}} [_inst_1 : NontriviallyNormedField.{u2} ùïú‚ÇÅ] [_inst_2 : SeminormedRing.{u4} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u2, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u2} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))} {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u3}} [_inst_3 : SeminormedAddCommGroup.{u1} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u3} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u3} M‚ÇÇ] [_inst_6 : NormedSpace.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_7 : Module.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5] [_inst_8 : ContinuousConstSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ _inst_4 (SMulZeroClass.toSMul.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (SMulWithZero.toSMulZeroClass.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (MonoidWithZero.toZero.{u4} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (MulActionWithZero.toSMulWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2))) (AddMonoid.toZero.{u3} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÇ _inst_5)) (Module.toMulActionWithZero.{u4, u3} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) _inst_5 _inst_7))))] [_inst_9 : T2Space.{u3} M‚ÇÇ _inst_4] (f : LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) {r : Real}, (LT.lt.{0} Real Real.instLTReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)) r) -> (Iff (IsCompactOperator.{u1, u3} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3))) _inst_4 (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f)) (IsCompact.{u3} M‚ÇÇ _inst_4 (closure.{u3} M‚ÇÇ _inst_4 (Set.image.{u1, u3} M‚ÇÅ M‚ÇÇ (FunLike.coe.{max (succ u1) (succ u3), succ u1, succ u3} (LinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u2, u4, u1, u3} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÅ (Field.toSemifield.{u2} ùïú‚ÇÅ (NormedField.toField.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u4} ùïú‚ÇÇ (SeminormedRing.toRing.{u4} ùïú‚ÇÇ _inst_2)) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)) _inst_5 (NormedSpace.toModule.{u2, u1} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_6) _inst_7 œÉ‚ÇÅ‚ÇÇ) f) (Metric.closedBall.{u1} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} M‚ÇÅ _inst_3) (OfNat.ofNat.{u1} M‚ÇÅ 0 (Zero.toOfNat0.{u1} M‚ÇÅ (NegZeroClass.toZero.{u1} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u1} M‚ÇÅ _inst_3)))))))) r)))))
Case conversion may be inaccurate. Consider using '#align is_compact_operator_iff_is_compact_closure_image_closed_ball isCompactOperator_iff_isCompact_closure_image_closedBall‚Çì'. -/
theorem isCompactOperator_iff_isCompact_closure_image_closedBall [ContinuousConstSMul ùïú‚ÇÇ M‚ÇÇ]
    [T2Space M‚ÇÇ] (f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ) {r : ‚Ñù} (hr : 0 < r) :
    IsCompactOperator f ‚Üî IsCompact (closure <| f '' Metric.closedBall 0 r) :=
  ‚ü®fun hf => hf.isCompact_closure_image_closedBall r, fun hf =>
    (isCompactOperator_iff_exists_mem_nhds_isCompact_closure_image f).mpr
      ‚ü®Metric.closedBall 0 r, closedBall_mem_nhds _ hr, hf‚ü©‚ü©
#align is_compact_operator_iff_is_compact_closure_image_closed_ball isCompactOperator_iff_isCompact_closure_image_closedBall

end NormedSpace

end Characterizations

section Operations

variable {R‚ÇÅ R‚ÇÇ R‚ÇÉ R‚ÇÑ : Type _} [Semiring R‚ÇÅ] [Semiring R‚ÇÇ] [CommSemiring R‚ÇÉ] [CommSemiring R‚ÇÑ]
  {œÉ‚ÇÅ‚ÇÇ : R‚ÇÅ ‚Üí+* R‚ÇÇ} {œÉ‚ÇÅ‚ÇÑ : R‚ÇÅ ‚Üí+* R‚ÇÑ} {œÉ‚ÇÉ‚ÇÑ : R‚ÇÉ ‚Üí+* R‚ÇÑ} {M‚ÇÅ M‚ÇÇ M‚ÇÉ M‚ÇÑ : Type _} [TopologicalSpace M‚ÇÅ]
  [AddCommMonoid M‚ÇÅ] [TopologicalSpace M‚ÇÇ] [AddCommMonoid M‚ÇÇ] [TopologicalSpace M‚ÇÉ]
  [AddCommGroup M‚ÇÉ] [TopologicalSpace M‚ÇÑ] [AddCommGroup M‚ÇÑ]

/- warning: is_compact_operator.smul -> IsCompactOperator.smul is a dubious translation:
lean 3 declaration is
  forall {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u2}} [_inst_5 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_6 : AddCommMonoid.{u1} M‚ÇÅ] [_inst_7 : TopologicalSpace.{u2} M‚ÇÇ] [_inst_8 : AddCommMonoid.{u2} M‚ÇÇ] {S : Type.{u3}} [_inst_13 : Monoid.{u3} S] [_inst_14 : DistribMulAction.{u3, u2} S M‚ÇÇ _inst_13 (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8)] [_inst_15 : ContinuousConstSMul.{u3, u2} S M‚ÇÇ _inst_7 (SMulZeroClass.toHasSmul.{u3, u2} S M‚ÇÇ (AddZeroClass.toHasZero.{u2} M‚ÇÇ (AddMonoid.toAddZeroClass.{u2} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8))) (DistribSMul.toSmulZeroClass.{u3, u2} S M‚ÇÇ (AddMonoid.toAddZeroClass.{u2} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8)) (DistribMulAction.toDistribSMul.{u3, u2} S M‚ÇÇ _inst_13 (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8) _inst_14)))] {f : M‚ÇÅ -> M‚ÇÇ}, (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6))) _inst_5 _inst_7 f) -> (forall (c : S), IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6))) _inst_5 _inst_7 (SMul.smul.{u3, max u1 u2} S (M‚ÇÅ -> M‚ÇÇ) (Function.hasSMul.{u1, u3, u2} M‚ÇÅ S M‚ÇÇ (SMulZeroClass.toHasSmul.{u3, u2} S M‚ÇÇ (AddZeroClass.toHasZero.{u2} M‚ÇÇ (AddMonoid.toAddZeroClass.{u2} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8))) (DistribSMul.toSmulZeroClass.{u3, u2} S M‚ÇÇ (AddMonoid.toAddZeroClass.{u2} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8)) (DistribMulAction.toDistribSMul.{u3, u2} S M‚ÇÇ _inst_13 (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8) _inst_14)))) c f))
but is expected to have type
  forall {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u2}} [_inst_5 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_6 : AddCommMonoid.{u1} M‚ÇÅ] [_inst_7 : TopologicalSpace.{u2} M‚ÇÇ] [_inst_8 : AddCommMonoid.{u2} M‚ÇÇ] {S : Type.{u3}} [_inst_13 : Monoid.{u3} S] [_inst_14 : DistribMulAction.{u3, u2} S M‚ÇÇ _inst_13 (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8)] [_inst_15 : ContinuousConstSMul.{u3, u2} S M‚ÇÇ _inst_7 (SMulZeroClass.toSMul.{u3, u2} S M‚ÇÇ (AddMonoid.toZero.{u2} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8)) (DistribSMul.toSMulZeroClass.{u3, u2} S M‚ÇÇ (AddMonoid.toAddZeroClass.{u2} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8)) (DistribMulAction.toDistribSMul.{u3, u2} S M‚ÇÇ _inst_13 (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8) _inst_14)))] {f : M‚ÇÅ -> M‚ÇÇ}, (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÇ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6)) _inst_5 _inst_7 f) -> (forall (c : S), IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÇ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6)) _inst_5 _inst_7 (HSMul.hSMul.{u3, max u1 u2, max u1 u2} S (M‚ÇÅ -> M‚ÇÇ) (M‚ÇÅ -> M‚ÇÇ) (instHSMul.{u3, max u1 u2} S (M‚ÇÅ -> M‚ÇÇ) (Pi.instSMul.{u1, u2, u3} M‚ÇÅ S (fun (a._@.Mathlib.Analysis.NormedSpace.CompactOperator._hyg.2185 : M‚ÇÅ) => M‚ÇÇ) (fun (i : M‚ÇÅ) => SMulZeroClass.toSMul.{u3, u2} S M‚ÇÇ (AddMonoid.toZero.{u2} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8)) (DistribSMul.toSMulZeroClass.{u3, u2} S M‚ÇÇ (AddMonoid.toAddZeroClass.{u2} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8)) (DistribMulAction.toDistribSMul.{u3, u2} S M‚ÇÇ _inst_13 (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8) _inst_14))))) c f))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.smul IsCompactOperator.smul‚Çì'. -/
theorem IsCompactOperator.smul {S : Type _} [Monoid S] [DistribMulAction S M‚ÇÇ]
    [ContinuousConstSMul S M‚ÇÇ] {f : M‚ÇÅ ‚Üí M‚ÇÇ} (hf : IsCompactOperator f) (c : S) :
    IsCompactOperator (c ‚Ä¢ f) :=
  let ‚ü®K, hK, hKf‚ü© := hf
  ‚ü®c ‚Ä¢ K, hK.image <| continuous_id.const_smul c,
    mem_of_superset hKf fun x hx => smul_mem_smul_set hx‚ü©
#align is_compact_operator.smul IsCompactOperator.smul

/- warning: is_compact_operator.add -> IsCompactOperator.add is a dubious translation:
lean 3 declaration is
  forall {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u2}} [_inst_5 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_6 : AddCommMonoid.{u1} M‚ÇÅ] [_inst_7 : TopologicalSpace.{u2} M‚ÇÇ] [_inst_8 : AddCommMonoid.{u2} M‚ÇÇ] [_inst_13 : ContinuousAdd.{u2} M‚ÇÇ _inst_7 (AddZeroClass.toHasAdd.{u2} M‚ÇÇ (AddMonoid.toAddZeroClass.{u2} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8)))] {f : M‚ÇÅ -> M‚ÇÇ} {g : M‚ÇÅ -> M‚ÇÇ}, (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6))) _inst_5 _inst_7 f) -> (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6))) _inst_5 _inst_7 g) -> (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6))) _inst_5 _inst_7 (HAdd.hAdd.{max u1 u2, max u1 u2, max u1 u2} (M‚ÇÅ -> M‚ÇÇ) (M‚ÇÅ -> M‚ÇÇ) (M‚ÇÅ -> M‚ÇÇ) (instHAdd.{max u1 u2} (M‚ÇÅ -> M‚ÇÇ) (Pi.instAdd.{u1, u2} M‚ÇÅ (fun (·æ∞ : M‚ÇÅ) => M‚ÇÇ) (fun (i : M‚ÇÅ) => AddZeroClass.toHasAdd.{u2} M‚ÇÇ (AddMonoid.toAddZeroClass.{u2} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8))))) f g))
but is expected to have type
  forall {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u2}} [_inst_5 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_6 : AddCommMonoid.{u1} M‚ÇÅ] [_inst_7 : TopologicalSpace.{u2} M‚ÇÇ] [_inst_8 : AddCommMonoid.{u2} M‚ÇÇ] [_inst_13 : ContinuousAdd.{u2} M‚ÇÇ _inst_7 (AddZeroClass.toAdd.{u2} M‚ÇÇ (AddMonoid.toAddZeroClass.{u2} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8)))] {f : M‚ÇÅ -> M‚ÇÇ} {g : M‚ÇÅ -> M‚ÇÇ}, (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÇ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6)) _inst_5 _inst_7 f) -> (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÇ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6)) _inst_5 _inst_7 g) -> (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÇ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6)) _inst_5 _inst_7 (HAdd.hAdd.{max u1 u2, max u1 u2, max u1 u2} (M‚ÇÅ -> M‚ÇÇ) (M‚ÇÅ -> M‚ÇÇ) (M‚ÇÅ -> M‚ÇÇ) (instHAdd.{max u1 u2} (M‚ÇÅ -> M‚ÇÇ) (Pi.instAdd.{u1, u2} M‚ÇÅ (fun (·æ∞ : M‚ÇÅ) => M‚ÇÇ) (fun (i : M‚ÇÅ) => AddZeroClass.toAdd.{u2} M‚ÇÇ (AddMonoid.toAddZeroClass.{u2} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8))))) f g))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.add IsCompactOperator.add‚Çì'. -/
theorem IsCompactOperator.add [ContinuousAdd M‚ÇÇ] {f g : M‚ÇÅ ‚Üí M‚ÇÇ} (hf : IsCompactOperator f)
    (hg : IsCompactOperator g) : IsCompactOperator (f + g) :=
  let ‚ü®A, hA, hAf‚ü© := hf
  let ‚ü®B, hB, hBg‚ü© := hg
  ‚ü®A + B, hA.add hB,
    mem_of_superset (inter_mem hAf hBg) fun x ‚ü®hxA, hxB‚ü© => Set.add_mem_add hxA hxB‚ü©
#align is_compact_operator.add IsCompactOperator.add

/- warning: is_compact_operator.neg -> IsCompactOperator.neg is a dubious translation:
lean 3 declaration is
  forall {M‚ÇÅ : Type.{u1}} {M‚ÇÑ : Type.{u2}} [_inst_5 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_6 : AddCommMonoid.{u1} M‚ÇÅ] [_inst_11 : TopologicalSpace.{u2} M‚ÇÑ] [_inst_12 : AddCommGroup.{u2} M‚ÇÑ] [_inst_13 : ContinuousNeg.{u2} M‚ÇÑ _inst_11 (SubNegMonoid.toHasNeg.{u2} M‚ÇÑ (AddGroup.toSubNegMonoid.{u2} M‚ÇÑ (AddCommGroup.toAddGroup.{u2} M‚ÇÑ _inst_12)))] {f : M‚ÇÅ -> M‚ÇÑ}, (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÑ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6))) _inst_5 _inst_11 f) -> (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÑ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6))) _inst_5 _inst_11 (Neg.neg.{max u1 u2} (M‚ÇÅ -> M‚ÇÑ) (Pi.instNeg.{u1, u2} M‚ÇÅ (fun (·æ∞ : M‚ÇÅ) => M‚ÇÑ) (fun (i : M‚ÇÅ) => SubNegMonoid.toHasNeg.{u2} M‚ÇÑ (AddGroup.toSubNegMonoid.{u2} M‚ÇÑ (AddCommGroup.toAddGroup.{u2} M‚ÇÑ _inst_12)))) f))
but is expected to have type
  forall {M‚ÇÅ : Type.{u1}} {M‚ÇÑ : Type.{u2}} [_inst_5 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_6 : AddCommMonoid.{u1} M‚ÇÅ] [_inst_11 : TopologicalSpace.{u2} M‚ÇÑ] [_inst_12 : AddCommGroup.{u2} M‚ÇÑ] [_inst_13 : ContinuousNeg.{u2} M‚ÇÑ _inst_11 (NegZeroClass.toNeg.{u2} M‚ÇÑ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÑ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÑ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÑ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÑ _inst_12)))))] {f : M‚ÇÅ -> M‚ÇÑ}, (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÑ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6)) _inst_5 _inst_11 f) -> (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÑ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6)) _inst_5 _inst_11 (Neg.neg.{max u1 u2} (M‚ÇÅ -> M‚ÇÑ) (Pi.instNeg.{u1, u2} M‚ÇÅ (fun (·æ∞ : M‚ÇÅ) => M‚ÇÑ) (fun (i : M‚ÇÅ) => NegZeroClass.toNeg.{u2} M‚ÇÑ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÑ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÑ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÑ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÑ _inst_12)))))) f))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.neg IsCompactOperator.neg‚Çì'. -/
theorem IsCompactOperator.neg [ContinuousNeg M‚ÇÑ] {f : M‚ÇÅ ‚Üí M‚ÇÑ} (hf : IsCompactOperator f) :
    IsCompactOperator (-f) :=
  let ‚ü®K, hK, hKf‚ü© := hf
  ‚ü®-K, hK.neg, mem_of_superset hKf fun x (hx : f x ‚àà K) => Set.neg_mem_neg.mpr hx‚ü©
#align is_compact_operator.neg IsCompactOperator.neg

/- warning: is_compact_operator.sub -> IsCompactOperator.sub is a dubious translation:
lean 3 declaration is
  forall {M‚ÇÅ : Type.{u1}} {M‚ÇÑ : Type.{u2}} [_inst_5 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_6 : AddCommMonoid.{u1} M‚ÇÅ] [_inst_11 : TopologicalSpace.{u2} M‚ÇÑ] [_inst_12 : AddCommGroup.{u2} M‚ÇÑ] [_inst_13 : TopologicalAddGroup.{u2} M‚ÇÑ _inst_11 (AddCommGroup.toAddGroup.{u2} M‚ÇÑ _inst_12)] {f : M‚ÇÅ -> M‚ÇÑ} {g : M‚ÇÅ -> M‚ÇÑ}, (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÑ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6))) _inst_5 _inst_11 f) -> (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÑ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6))) _inst_5 _inst_11 g) -> (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÑ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6))) _inst_5 _inst_11 (HSub.hSub.{max u1 u2, max u1 u2, max u1 u2} (M‚ÇÅ -> M‚ÇÑ) (M‚ÇÅ -> M‚ÇÑ) (M‚ÇÅ -> M‚ÇÑ) (instHSub.{max u1 u2} (M‚ÇÅ -> M‚ÇÑ) (Pi.instSub.{u1, u2} M‚ÇÅ (fun (·æ∞ : M‚ÇÅ) => M‚ÇÑ) (fun (i : M‚ÇÅ) => SubNegMonoid.toHasSub.{u2} M‚ÇÑ (AddGroup.toSubNegMonoid.{u2} M‚ÇÑ (AddCommGroup.toAddGroup.{u2} M‚ÇÑ _inst_12))))) f g))
but is expected to have type
  forall {M‚ÇÅ : Type.{u1}} {M‚ÇÑ : Type.{u2}} [_inst_5 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_6 : AddCommMonoid.{u1} M‚ÇÅ] [_inst_11 : TopologicalSpace.{u2} M‚ÇÑ] [_inst_12 : AddCommGroup.{u2} M‚ÇÑ] [_inst_13 : TopologicalAddGroup.{u2} M‚ÇÑ _inst_11 (AddCommGroup.toAddGroup.{u2} M‚ÇÑ _inst_12)] {f : M‚ÇÅ -> M‚ÇÑ} {g : M‚ÇÅ -> M‚ÇÑ}, (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÑ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6)) _inst_5 _inst_11 f) -> (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÑ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6)) _inst_5 _inst_11 g) -> (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÑ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_6)) _inst_5 _inst_11 (HSub.hSub.{max u1 u2, max u1 u2, max u1 u2} (M‚ÇÅ -> M‚ÇÑ) (M‚ÇÅ -> M‚ÇÑ) (M‚ÇÅ -> M‚ÇÑ) (instHSub.{max u1 u2} (M‚ÇÅ -> M‚ÇÑ) (Pi.instSub.{u1, u2} M‚ÇÅ (fun (·æ∞ : M‚ÇÅ) => M‚ÇÑ) (fun (i : M‚ÇÅ) => SubNegMonoid.toSub.{u2} M‚ÇÑ (AddGroup.toSubNegMonoid.{u2} M‚ÇÑ (AddCommGroup.toAddGroup.{u2} M‚ÇÑ _inst_12))))) f g))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.sub IsCompactOperator.sub‚Çì'. -/
theorem IsCompactOperator.sub [TopologicalAddGroup M‚ÇÑ] {f g : M‚ÇÅ ‚Üí M‚ÇÑ} (hf : IsCompactOperator f)
    (hg : IsCompactOperator g) : IsCompactOperator (f - g) := by
  rw [sub_eq_add_neg] <;> exact hf.add hg.neg
#align is_compact_operator.sub IsCompactOperator.sub

variable (œÉ‚ÇÅ‚ÇÑ M‚ÇÅ M‚ÇÑ)

#print compactOperator /-
/-- The submodule of compact continuous linear maps. -/
def compactOperator [Module R‚ÇÅ M‚ÇÅ] [Module R‚ÇÑ M‚ÇÑ] [ContinuousConstSMul R‚ÇÑ M‚ÇÑ]
    [TopologicalAddGroup M‚ÇÑ] : Submodule R‚ÇÑ (M‚ÇÅ ‚ÜíSL[œÉ‚ÇÅ‚ÇÑ] M‚ÇÑ)
    where
  carrier := { f | IsCompactOperator f }
  add_mem' f g hf hg := hf.add hg
  zero_mem' := isCompactOperator_zero
  smul_mem' c f hf := hf.smul c
#align compact_operator compactOperator
-/

end Operations

section Comp

variable {R‚ÇÅ R‚ÇÇ R‚ÇÉ : Type _} [Semiring R‚ÇÅ] [Semiring R‚ÇÇ] [Semiring R‚ÇÉ] {œÉ‚ÇÅ‚ÇÇ : R‚ÇÅ ‚Üí+* R‚ÇÇ}
  {œÉ‚ÇÇ‚ÇÉ : R‚ÇÇ ‚Üí+* R‚ÇÉ} {M‚ÇÅ M‚ÇÇ M‚ÇÉ : Type _} [TopologicalSpace M‚ÇÅ] [TopologicalSpace M‚ÇÇ]
  [TopologicalSpace M‚ÇÉ] [AddCommMonoid M‚ÇÅ] [Module R‚ÇÅ M‚ÇÅ]

/- warning: is_compact_operator.comp_clm -> IsCompactOperator.comp_clm is a dubious translation:
lean 3 declaration is
  forall {R‚ÇÅ : Type.{u1}} {R‚ÇÇ : Type.{u2}} [_inst_1 : Semiring.{u1} R‚ÇÅ] [_inst_2 : Semiring.{u2} R‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} R‚ÇÅ R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÅ _inst_1) (Semiring.toNonAssocSemiring.{u2} R‚ÇÇ _inst_2)} {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} {M‚ÇÉ : Type.{u5}} [_inst_4 : TopologicalSpace.{u3} M‚ÇÅ] [_inst_5 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_6 : TopologicalSpace.{u5} M‚ÇÉ] [_inst_7 : AddCommMonoid.{u3} M‚ÇÅ] [_inst_8 : Module.{u1, u3} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7] [_inst_9 : AddCommMonoid.{u4} M‚ÇÇ] [_inst_10 : Module.{u2, u4} R‚ÇÇ M‚ÇÇ _inst_2 _inst_9] {f : M‚ÇÇ -> M‚ÇÉ}, (IsCompactOperator.{u4, u5} M‚ÇÇ M‚ÇÉ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ _inst_9))) _inst_5 _inst_6 f) -> (forall (g : ContinuousLinearMap.{u1, u2, u3, u4} R‚ÇÅ R‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 _inst_7 M‚ÇÇ _inst_5 _inst_9 _inst_8 _inst_10), IsCompactOperator.{u3, u5} M‚ÇÅ M‚ÇÉ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_7))) _inst_4 _inst_6 (Function.comp.{succ u3, succ u4, succ u5} M‚ÇÅ M‚ÇÇ M‚ÇÉ f (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} R‚ÇÅ R‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 _inst_7 M‚ÇÇ _inst_5 _inst_9 _inst_8 _inst_10) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} R‚ÇÅ R‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 _inst_7 M‚ÇÇ _inst_5 _inst_9 _inst_8 _inst_10) => M‚ÇÅ -> M‚ÇÇ) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} R‚ÇÅ R‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 _inst_7 M‚ÇÇ _inst_5 _inst_9 _inst_8 _inst_10) g)))
but is expected to have type
  forall {R‚ÇÅ : Type.{u2}} {R‚ÇÇ : Type.{u4}} [_inst_1 : Semiring.{u2} R‚ÇÅ] [_inst_2 : Semiring.{u4} R‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u2, u4} R‚ÇÅ R‚ÇÇ (Semiring.toNonAssocSemiring.{u2} R‚ÇÅ _inst_1) (Semiring.toNonAssocSemiring.{u4} R‚ÇÇ _inst_2)} {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u5}} {M‚ÇÉ : Type.{u3}} [_inst_4 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_5 : TopologicalSpace.{u5} M‚ÇÇ] [_inst_6 : TopologicalSpace.{u3} M‚ÇÉ] [_inst_7 : AddCommMonoid.{u1} M‚ÇÅ] [_inst_8 : Module.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7] [_inst_9 : AddCommMonoid.{u5} M‚ÇÇ] [_inst_10 : Module.{u4, u5} R‚ÇÇ M‚ÇÇ _inst_2 _inst_9] {f : M‚ÇÇ -> M‚ÇÉ}, (IsCompactOperator.{u5, u3} M‚ÇÇ M‚ÇÉ (AddMonoid.toZero.{u5} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u5} M‚ÇÇ _inst_9)) _inst_5 _inst_6 f) -> (forall (g : ContinuousLinearMap.{u2, u4, u1, u5} R‚ÇÅ R‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 _inst_7 M‚ÇÇ _inst_5 _inst_9 _inst_8 _inst_10), IsCompactOperator.{u1, u3} M‚ÇÅ M‚ÇÉ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_7)) _inst_4 _inst_6 (Function.comp.{succ u1, succ u5, succ u3} M‚ÇÅ M‚ÇÇ M‚ÇÉ f (FunLike.coe.{max (succ u1) (succ u5), succ u1, succ u5} (ContinuousLinearMap.{u2, u4, u1, u5} R‚ÇÅ R‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 _inst_7 M‚ÇÇ _inst_5 _inst_9 _inst_8 _inst_10) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M‚ÇÅ) => M‚ÇÇ) _x) (ContinuousMapClass.toFunLike.{max u1 u5, u1, u5} (ContinuousLinearMap.{u2, u4, u1, u5} R‚ÇÅ R‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 _inst_7 M‚ÇÇ _inst_5 _inst_9 _inst_8 _inst_10) M‚ÇÅ M‚ÇÇ _inst_4 _inst_5 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u1 u5, u2, u4, u1, u5} (ContinuousLinearMap.{u2, u4, u1, u5} R‚ÇÅ R‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 _inst_7 M‚ÇÇ _inst_5 _inst_9 _inst_8 _inst_10) R‚ÇÅ R‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 _inst_7 M‚ÇÇ _inst_5 _inst_9 _inst_8 _inst_10 (ContinuousLinearMap.continuousSemilinearMapClass.{u2, u4, u1, u5} R‚ÇÅ R‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 _inst_7 M‚ÇÇ _inst_5 _inst_9 _inst_8 _inst_10))) g)))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.comp_clm IsCompactOperator.comp_clm‚Çì'. -/
theorem IsCompactOperator.comp_clm [AddCommMonoid M‚ÇÇ] [Module R‚ÇÇ M‚ÇÇ] {f : M‚ÇÇ ‚Üí M‚ÇÉ}
    (hf : IsCompactOperator f) (g : M‚ÇÅ ‚ÜíSL[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ) : IsCompactOperator (f ‚àò g) :=
  by
  have := g.continuous.tendsto 0
  rw [map_zero] at this
  rcases hf with ‚ü®K, hK, hKf‚ü©
  exact ‚ü®K, hK, this hKf‚ü©
#align is_compact_operator.comp_clm IsCompactOperator.comp_clm

/- warning: is_compact_operator.continuous_comp -> IsCompactOperator.continuous_comp is a dubious translation:
lean 3 declaration is
  forall {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u2}} {M‚ÇÉ : Type.{u3}} [_inst_4 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_5 : TopologicalSpace.{u2} M‚ÇÇ] [_inst_6 : TopologicalSpace.{u3} M‚ÇÉ] [_inst_7 : AddCommMonoid.{u1} M‚ÇÅ] {f : M‚ÇÅ -> M‚ÇÇ}, (IsCompactOperator.{u1, u2} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_7))) _inst_4 _inst_5 f) -> (forall {g : M‚ÇÇ -> M‚ÇÉ}, (Continuous.{u2, u3} M‚ÇÇ M‚ÇÉ _inst_5 _inst_6 g) -> (IsCompactOperator.{u1, u3} M‚ÇÅ M‚ÇÉ (AddZeroClass.toHasZero.{u1} M‚ÇÅ (AddMonoid.toAddZeroClass.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_7))) _inst_4 _inst_6 (Function.comp.{succ u1, succ u2, succ u3} M‚ÇÅ M‚ÇÇ M‚ÇÉ g f)))
but is expected to have type
  forall {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u2}} {M‚ÇÉ : Type.{u1}} [_inst_4 : TopologicalSpace.{u3} M‚ÇÅ] [_inst_5 : TopologicalSpace.{u2} M‚ÇÇ] [_inst_6 : TopologicalSpace.{u1} M‚ÇÉ] [_inst_7 : AddCommMonoid.{u3} M‚ÇÅ] {f : M‚ÇÅ -> M‚ÇÇ}, (IsCompactOperator.{u3, u2} M‚ÇÅ M‚ÇÇ (AddMonoid.toZero.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_7)) _inst_4 _inst_5 f) -> (forall {g : M‚ÇÇ -> M‚ÇÉ}, (Continuous.{u2, u1} M‚ÇÇ M‚ÇÉ _inst_5 _inst_6 g) -> (IsCompactOperator.{u3, u1} M‚ÇÅ M‚ÇÉ (AddMonoid.toZero.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_7)) _inst_4 _inst_6 (Function.comp.{succ u3, succ u2, succ u1} M‚ÇÅ M‚ÇÇ M‚ÇÉ g f)))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.continuous_comp IsCompactOperator.continuous_comp‚Çì'. -/
theorem IsCompactOperator.continuous_comp {f : M‚ÇÅ ‚Üí M‚ÇÇ} (hf : IsCompactOperator f) {g : M‚ÇÇ ‚Üí M‚ÇÉ}
    (hg : Continuous g) : IsCompactOperator (g ‚àò f) :=
  by
  rcases hf with ‚ü®K, hK, hKf‚ü©
  refine' ‚ü®g '' K, hK.image hg, mem_of_superset hKf _‚ü©
  nth_rw 2 [preimage_comp]
  exact preimage_mono (subset_preimage_image _ _)
#align is_compact_operator.continuous_comp IsCompactOperator.continuous_comp

/- warning: is_compact_operator.clm_comp -> IsCompactOperator.clm_comp is a dubious translation:
lean 3 declaration is
  forall {R‚ÇÇ : Type.{u1}} {R‚ÇÉ : Type.{u2}} [_inst_2 : Semiring.{u1} R‚ÇÇ] [_inst_3 : Semiring.{u2} R‚ÇÉ] {œÉ‚ÇÇ‚ÇÉ : RingHom.{u1, u2} R‚ÇÇ R‚ÇÉ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2) (Semiring.toNonAssocSemiring.{u2} R‚ÇÉ _inst_3)} {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} {M‚ÇÉ : Type.{u5}} [_inst_4 : TopologicalSpace.{u3} M‚ÇÅ] [_inst_5 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_6 : TopologicalSpace.{u5} M‚ÇÉ] [_inst_7 : AddCommMonoid.{u3} M‚ÇÅ] [_inst_9 : AddCommMonoid.{u4} M‚ÇÇ] [_inst_10 : Module.{u1, u4} R‚ÇÇ M‚ÇÇ _inst_2 _inst_9] [_inst_11 : AddCommMonoid.{u5} M‚ÇÉ] [_inst_12 : Module.{u2, u5} R‚ÇÉ M‚ÇÉ _inst_3 _inst_11] {f : M‚ÇÅ -> M‚ÇÇ}, (IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_7))) _inst_4 _inst_5 f) -> (forall (g : ContinuousLinearMap.{u1, u2, u4, u5} R‚ÇÇ R‚ÇÉ _inst_2 _inst_3 œÉ‚ÇÇ‚ÇÉ M‚ÇÇ _inst_5 _inst_9 M‚ÇÉ _inst_6 _inst_11 _inst_10 _inst_12), IsCompactOperator.{u3, u5} M‚ÇÅ M‚ÇÉ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_7))) _inst_4 _inst_6 (Function.comp.{succ u3, succ u4, succ u5} M‚ÇÅ M‚ÇÇ M‚ÇÉ (coeFn.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearMap.{u1, u2, u4, u5} R‚ÇÇ R‚ÇÉ _inst_2 _inst_3 œÉ‚ÇÇ‚ÇÉ M‚ÇÇ _inst_5 _inst_9 M‚ÇÉ _inst_6 _inst_11 _inst_10 _inst_12) (fun (_x : ContinuousLinearMap.{u1, u2, u4, u5} R‚ÇÇ R‚ÇÉ _inst_2 _inst_3 œÉ‚ÇÇ‚ÇÉ M‚ÇÇ _inst_5 _inst_9 M‚ÇÉ _inst_6 _inst_11 _inst_10 _inst_12) => M‚ÇÇ -> M‚ÇÉ) (ContinuousLinearMap.toFun.{u1, u2, u4, u5} R‚ÇÇ R‚ÇÉ _inst_2 _inst_3 œÉ‚ÇÇ‚ÇÉ M‚ÇÇ _inst_5 _inst_9 M‚ÇÉ _inst_6 _inst_11 _inst_10 _inst_12) g) f))
but is expected to have type
  forall {R‚ÇÇ : Type.{u4}} {R‚ÇÉ : Type.{u2}} [_inst_2 : Semiring.{u4} R‚ÇÇ] [_inst_3 : Semiring.{u2} R‚ÇÉ] {œÉ‚ÇÇ‚ÇÉ : RingHom.{u4, u2} R‚ÇÇ R‚ÇÉ (Semiring.toNonAssocSemiring.{u4} R‚ÇÇ _inst_2) (Semiring.toNonAssocSemiring.{u2} R‚ÇÉ _inst_3)} {M‚ÇÅ : Type.{u1}} {M‚ÇÇ : Type.{u5}} {M‚ÇÉ : Type.{u3}} [_inst_4 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_5 : TopologicalSpace.{u5} M‚ÇÇ] [_inst_6 : TopologicalSpace.{u3} M‚ÇÉ] [_inst_7 : AddCommMonoid.{u1} M‚ÇÅ] [_inst_9 : AddCommMonoid.{u5} M‚ÇÇ] [_inst_10 : Module.{u4, u5} R‚ÇÇ M‚ÇÇ _inst_2 _inst_9] [_inst_11 : AddCommMonoid.{u3} M‚ÇÉ] [_inst_12 : Module.{u2, u3} R‚ÇÉ M‚ÇÉ _inst_3 _inst_11] {f : M‚ÇÅ -> M‚ÇÇ}, (IsCompactOperator.{u1, u5} M‚ÇÅ M‚ÇÇ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_7)) _inst_4 _inst_5 f) -> (forall (g : ContinuousLinearMap.{u4, u2, u5, u3} R‚ÇÇ R‚ÇÉ _inst_2 _inst_3 œÉ‚ÇÇ‚ÇÉ M‚ÇÇ _inst_5 _inst_9 M‚ÇÉ _inst_6 _inst_11 _inst_10 _inst_12), IsCompactOperator.{u1, u3} M‚ÇÅ M‚ÇÉ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_7)) _inst_4 _inst_6 (Function.comp.{succ u1, succ u5, succ u3} M‚ÇÅ M‚ÇÇ M‚ÇÉ (FunLike.coe.{max (succ u5) (succ u3), succ u5, succ u3} (ContinuousLinearMap.{u4, u2, u5, u3} R‚ÇÇ R‚ÇÉ _inst_2 _inst_3 œÉ‚ÇÇ‚ÇÉ M‚ÇÇ _inst_5 _inst_9 M‚ÇÉ _inst_6 _inst_11 _inst_10 _inst_12) M‚ÇÇ (fun (_x : M‚ÇÇ) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M‚ÇÇ) => M‚ÇÉ) _x) (ContinuousMapClass.toFunLike.{max u5 u3, u5, u3} (ContinuousLinearMap.{u4, u2, u5, u3} R‚ÇÇ R‚ÇÉ _inst_2 _inst_3 œÉ‚ÇÇ‚ÇÉ M‚ÇÇ _inst_5 _inst_9 M‚ÇÉ _inst_6 _inst_11 _inst_10 _inst_12) M‚ÇÇ M‚ÇÉ _inst_5 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u5 u3, u4, u2, u5, u3} (ContinuousLinearMap.{u4, u2, u5, u3} R‚ÇÇ R‚ÇÉ _inst_2 _inst_3 œÉ‚ÇÇ‚ÇÉ M‚ÇÇ _inst_5 _inst_9 M‚ÇÉ _inst_6 _inst_11 _inst_10 _inst_12) R‚ÇÇ R‚ÇÉ _inst_2 _inst_3 œÉ‚ÇÇ‚ÇÉ M‚ÇÇ _inst_5 _inst_9 M‚ÇÉ _inst_6 _inst_11 _inst_10 _inst_12 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u2, u5, u3} R‚ÇÇ R‚ÇÉ _inst_2 _inst_3 œÉ‚ÇÇ‚ÇÉ M‚ÇÇ _inst_5 _inst_9 M‚ÇÉ _inst_6 _inst_11 _inst_10 _inst_12))) g) f))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.clm_comp IsCompactOperator.clm_comp‚Çì'. -/
theorem IsCompactOperator.clm_comp [AddCommMonoid M‚ÇÇ] [Module R‚ÇÇ M‚ÇÇ] [AddCommMonoid M‚ÇÉ]
    [Module R‚ÇÉ M‚ÇÉ] {f : M‚ÇÅ ‚Üí M‚ÇÇ} (hf : IsCompactOperator f) (g : M‚ÇÇ ‚ÜíSL[œÉ‚ÇÇ‚ÇÉ] M‚ÇÉ) :
    IsCompactOperator (g ‚àò f) :=
  hf.continuous_comp g.Continuous
#align is_compact_operator.clm_comp IsCompactOperator.clm_comp

end Comp

section CodRestrict

variable {R‚ÇÅ R‚ÇÇ : Type _} [Semiring R‚ÇÅ] [Semiring R‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : R‚ÇÅ ‚Üí+* R‚ÇÇ} {M‚ÇÅ M‚ÇÇ : Type _}
  [TopologicalSpace M‚ÇÅ] [TopologicalSpace M‚ÇÇ] [AddCommMonoid M‚ÇÅ] [AddCommMonoid M‚ÇÇ] [Module R‚ÇÅ M‚ÇÅ]
  [Module R‚ÇÇ M‚ÇÇ]

/- warning: is_compact_operator.cod_restrict -> IsCompactOperator.codRestrict is a dubious translation:
lean 3 declaration is
  forall {R‚ÇÇ : Type.{u1}} [_inst_2 : Semiring.{u1} R‚ÇÇ] {M‚ÇÅ : Type.{u2}} {M‚ÇÇ : Type.{u3}} [_inst_3 : TopologicalSpace.{u2} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u3} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u2} M‚ÇÅ] [_inst_6 : AddCommMonoid.{u3} M‚ÇÇ] [_inst_8 : Module.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6] {f : M‚ÇÅ -> M‚ÇÇ}, (IsCompactOperator.{u2, u3} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u2} M‚ÇÅ (AddMonoid.toAddZeroClass.{u2} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÅ _inst_5))) _inst_3 _inst_4 f) -> (forall {V : Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8} (hV : forall (x : M‚ÇÅ), Membership.Mem.{u3, u3} M‚ÇÇ (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) (SetLike.hasMem.{u3, u3} (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) M‚ÇÇ (Submodule.setLike.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8)) (f x) V), (IsClosed.{u3} M‚ÇÇ _inst_4 ((fun (a : Type.{u3}) (b : Type.{u3}) [self : HasLiftT.{succ u3, succ u3} a b] => self.0) (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) (Set.{u3} M‚ÇÇ) (HasLiftT.mk.{succ u3, succ u3} (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) (Set.{u3} M‚ÇÇ) (CoeTC‚Çì.coe.{succ u3, succ u3} (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) (Set.{u3} M‚ÇÇ) (SetLike.Set.hasCoeT.{u3, u3} (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) M‚ÇÇ (Submodule.setLike.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8)))) V)) -> (IsCompactOperator.{u2, u3} M‚ÇÅ (coeSort.{succ u3, succ (succ u3)} (Set.{u3} M‚ÇÇ) Type.{u3} (Set.hasCoeToSort.{u3} M‚ÇÇ) ((fun (a : Type.{u3}) (b : Type.{u3}) [self : HasLiftT.{succ u3, succ u3} a b] => self.0) (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) (Set.{u3} M‚ÇÇ) (HasLiftT.mk.{succ u3, succ u3} (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) (Set.{u3} M‚ÇÇ) (CoeTC‚Çì.coe.{succ u3, succ u3} (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) (Set.{u3} M‚ÇÇ) (SetLike.Set.hasCoeT.{u3, u3} (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) M‚ÇÇ (Submodule.setLike.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8)))) V)) (AddZeroClass.toHasZero.{u2} M‚ÇÅ (AddMonoid.toAddZeroClass.{u2} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÅ _inst_5))) _inst_3 (Subtype.topologicalSpace.{u3} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.Mem.{u3, u3} M‚ÇÇ (Set.{u3} M‚ÇÇ) (Set.hasMem.{u3} M‚ÇÇ) x ((fun (a : Type.{u3}) (b : Type.{u3}) [self : HasLiftT.{succ u3, succ u3} a b] => self.0) (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) (Set.{u3} M‚ÇÇ) (HasLiftT.mk.{succ u3, succ u3} (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) (Set.{u3} M‚ÇÇ) (CoeTC‚Çì.coe.{succ u3, succ u3} (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) (Set.{u3} M‚ÇÇ) (SetLike.Set.hasCoeT.{u3, u3} (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) M‚ÇÇ (Submodule.setLike.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8)))) V)) _inst_4) (Set.codRestrict.{u3, succ u2} M‚ÇÇ M‚ÇÅ f ((fun (a : Type.{u3}) (b : Type.{u3}) [self : HasLiftT.{succ u3, succ u3} a b] => self.0) (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) (Set.{u3} M‚ÇÇ) (HasLiftT.mk.{succ u3, succ u3} (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) (Set.{u3} M‚ÇÇ) (CoeTC‚Çì.coe.{succ u3, succ u3} (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) (Set.{u3} M‚ÇÇ) (SetLike.Set.hasCoeT.{u3, u3} (Submodule.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) M‚ÇÇ (Submodule.setLike.{u1, u3} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8)))) V) hV)))
but is expected to have type
  forall {R‚ÇÇ : Type.{u1}} [_inst_2 : Semiring.{u1} R‚ÇÇ] {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u2}} [_inst_3 : TopologicalSpace.{u3} M‚ÇÅ] [_inst_4 : TopologicalSpace.{u2} M‚ÇÇ] [_inst_5 : AddCommMonoid.{u3} M‚ÇÅ] [_inst_6 : AddCommMonoid.{u2} M‚ÇÇ] [_inst_8 : Module.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6] {f : M‚ÇÅ -> M‚ÇÇ}, (IsCompactOperator.{u3, u2} M‚ÇÅ M‚ÇÇ (AddMonoid.toZero.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_5)) _inst_3 _inst_4 f) -> (forall {V : Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8} (hV : forall (x : M‚ÇÅ), Membership.mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8)) (f x) V), (IsClosed.{u2} M‚ÇÇ _inst_4 (SetLike.coe.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) V)) -> (IsCompactOperator.{u3, u2} M‚ÇÅ (Set.Elem.{u2} M‚ÇÇ (SetLike.coe.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) V)) (AddMonoid.toZero.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ _inst_5)) _inst_3 (instTopologicalSpaceSubtype.{u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.mem.{u2, u2} M‚ÇÇ (Set.{u2} M‚ÇÇ) (Set.instMembershipSet.{u2} M‚ÇÇ) x (SetLike.coe.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) V)) _inst_4) (Set.codRestrict.{u2, succ u3} M‚ÇÇ M‚ÇÅ f (SetLike.coe.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_6 _inst_8) V) hV)))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.cod_restrict IsCompactOperator.codRestrict‚Çì'. -/
theorem IsCompactOperator.codRestrict {f : M‚ÇÅ ‚Üí M‚ÇÇ} (hf : IsCompactOperator f) {V : Submodule R‚ÇÇ M‚ÇÇ}
    (hV : ‚àÄ x, f x ‚àà V) (h_closed : IsClosed (V : Set M‚ÇÇ)) :
    IsCompactOperator (Set.codRestrict f V hV) :=
  let ‚ü®K, hK, hKf‚ü© := hf
  ‚ü®coe ‚Åª¬π' K, (closedEmbedding_subtype_val h_closed).isCompact_preimage hK, hKf‚ü©
#align is_compact_operator.cod_restrict IsCompactOperator.codRestrict

end CodRestrict

section Restrict

variable {R‚ÇÅ R‚ÇÇ R‚ÇÉ : Type _} [Semiring R‚ÇÅ] [Semiring R‚ÇÇ] [Semiring R‚ÇÉ] {œÉ‚ÇÅ‚ÇÇ : R‚ÇÅ ‚Üí+* R‚ÇÇ}
  {œÉ‚ÇÇ‚ÇÉ : R‚ÇÇ ‚Üí+* R‚ÇÉ} {M‚ÇÅ M‚ÇÇ M‚ÇÉ : Type _} [TopologicalSpace M‚ÇÅ] [UniformSpace M‚ÇÇ]
  [TopologicalSpace M‚ÇÉ] [AddCommMonoid M‚ÇÅ] [AddCommMonoid M‚ÇÇ] [AddCommMonoid M‚ÇÉ] [Module R‚ÇÅ M‚ÇÅ]
  [Module R‚ÇÇ M‚ÇÇ] [Module R‚ÇÉ M‚ÇÉ]

/- warning: is_compact_operator.restrict -> IsCompactOperator.restrict is a dubious translation:
lean 3 declaration is
  forall {R‚ÇÅ : Type.{u1}} [_inst_1 : Semiring.{u1} R‚ÇÅ] {M‚ÇÅ : Type.{u2}} [_inst_4 : TopologicalSpace.{u2} M‚ÇÅ] [_inst_7 : AddCommMonoid.{u2} M‚ÇÅ] [_inst_10 : Module.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7] {f : LinearMap.{u1, u1, u2, u2} R‚ÇÅ R‚ÇÅ _inst_1 _inst_1 (RingHom.id.{u1} R‚ÇÅ (Semiring.toNonAssocSemiring.{u1} R‚ÇÅ _inst_1)) M‚ÇÅ M‚ÇÅ _inst_7 _inst_7 _inst_10 _inst_10}, (IsCompactOperator.{u2, u2} M‚ÇÅ M‚ÇÅ (AddZeroClass.toHasZero.{u2} M‚ÇÅ (AddMonoid.toAddZeroClass.{u2} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÅ _inst_7))) _inst_4 _inst_4 (coeFn.{succ u2, succ u2} (LinearMap.{u1, u1, u2, u2} R‚ÇÅ R‚ÇÅ _inst_1 _inst_1 (RingHom.id.{u1} R‚ÇÅ (Semiring.toNonAssocSemiring.{u1} R‚ÇÅ _inst_1)) M‚ÇÅ M‚ÇÅ _inst_7 _inst_7 _inst_10 _inst_10) (fun (_x : LinearMap.{u1, u1, u2, u2} R‚ÇÅ R‚ÇÅ _inst_1 _inst_1 (RingHom.id.{u1} R‚ÇÅ (Semiring.toNonAssocSemiring.{u1} R‚ÇÅ _inst_1)) M‚ÇÅ M‚ÇÅ _inst_7 _inst_7 _inst_10 _inst_10) => M‚ÇÅ -> M‚ÇÅ) (LinearMap.hasCoeToFun.{u1, u1, u2, u2} R‚ÇÅ R‚ÇÅ M‚ÇÅ M‚ÇÅ _inst_1 _inst_1 _inst_7 _inst_7 _inst_10 _inst_10 (RingHom.id.{u1} R‚ÇÅ (Semiring.toNonAssocSemiring.{u1} R‚ÇÅ _inst_1))) f)) -> (forall {V : Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10} (hV : forall (v : M‚ÇÅ), (Membership.Mem.{u2, u2} M‚ÇÅ (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) v V) -> (Membership.Mem.{u2, u2} M‚ÇÅ (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) (coeFn.{succ u2, succ u2} (LinearMap.{u1, u1, u2, u2} R‚ÇÅ R‚ÇÅ _inst_1 _inst_1 (RingHom.id.{u1} R‚ÇÅ (Semiring.toNonAssocSemiring.{u1} R‚ÇÅ _inst_1)) M‚ÇÅ M‚ÇÅ _inst_7 _inst_7 _inst_10 _inst_10) (fun (_x : LinearMap.{u1, u1, u2, u2} R‚ÇÅ R‚ÇÅ _inst_1 _inst_1 (RingHom.id.{u1} R‚ÇÅ (Semiring.toNonAssocSemiring.{u1} R‚ÇÅ _inst_1)) M‚ÇÅ M‚ÇÅ _inst_7 _inst_7 _inst_10 _inst_10) => M‚ÇÅ -> M‚ÇÅ) (LinearMap.hasCoeToFun.{u1, u1, u2, u2} R‚ÇÅ R‚ÇÅ M‚ÇÅ M‚ÇÅ _inst_1 _inst_1 _inst_7 _inst_7 _inst_10 _inst_10 (RingHom.id.{u1} R‚ÇÅ (Semiring.toNonAssocSemiring.{u1} R‚ÇÅ _inst_1))) f v) V)), (IsClosed.{u2} M‚ÇÅ _inst_4 ((fun (a : Type.{u2}) (b : Type.{u2}) [self : HasLiftT.{succ u2, succ u2} a b] => self.0) (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (Set.{u2} M‚ÇÅ) (HasLiftT.mk.{succ u2, succ u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (Set.{u2} M‚ÇÅ) (CoeTC‚Çì.coe.{succ u2, succ u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (Set.{u2} M‚ÇÅ) (SetLike.Set.hasCoeT.{u2, u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)))) V)) -> (IsCompactOperator.{u2, u2} (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) V) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) V) (Submodule.zero.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (Subtype.topologicalSpace.{u2} M‚ÇÅ (fun (x : M‚ÇÅ) => Membership.Mem.{u2, u2} M‚ÇÅ (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) x V) _inst_4) (Subtype.topologicalSpace.{u2} M‚ÇÅ (fun (x : M‚ÇÅ) => Membership.Mem.{u2, u2} M‚ÇÅ (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) x V) _inst_4) (coeFn.{succ u2, succ u2} (LinearMap.{u1, u1, u2, u2} R‚ÇÅ R‚ÇÅ _inst_1 _inst_1 (RingHom.id.{u1} R‚ÇÅ (Semiring.toNonAssocSemiring.{u1} R‚ÇÅ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) V) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) V) (Submodule.addCommMonoid.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (Submodule.addCommMonoid.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (Submodule.module.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (Submodule.module.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V)) (fun (_x : LinearMap.{u1, u1, u2, u2} R‚ÇÅ R‚ÇÅ _inst_1 _inst_1 (RingHom.id.{u1} R‚ÇÅ (Semiring.toNonAssocSemiring.{u1} R‚ÇÅ _inst_1)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) V) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) V) (Submodule.addCommMonoid.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (Submodule.addCommMonoid.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (Submodule.module.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (Submodule.module.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V)) => (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) V) -> (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) V)) (LinearMap.hasCoeToFun.{u1, u1, u2, u2} R‚ÇÅ R‚ÇÅ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) V) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) V) _inst_1 _inst_1 (Submodule.addCommMonoid.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (Submodule.addCommMonoid.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (Submodule.module.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (Submodule.module.{u1, u2} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (RingHom.id.{u1} R‚ÇÅ (Semiring.toNonAssocSemiring.{u1} R‚ÇÅ _inst_1))) (LinearMap.restrict.{u1, u2, u2} R‚ÇÅ M‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_7 _inst_10 _inst_10 f V V hV))))
but is expected to have type
  forall {R‚ÇÅ : Type.{u2}} [_inst_1 : Semiring.{u2} R‚ÇÅ] {M‚ÇÅ : Type.{u1}} [_inst_4 : TopologicalSpace.{u1} M‚ÇÅ] [_inst_7 : AddCommMonoid.{u1} M‚ÇÅ] [_inst_10 : Module.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7] {f : LinearMap.{u2, u2, u1, u1} R‚ÇÅ R‚ÇÅ _inst_1 _inst_1 (RingHom.id.{u2} R‚ÇÅ (Semiring.toNonAssocSemiring.{u2} R‚ÇÅ _inst_1)) M‚ÇÅ M‚ÇÅ _inst_7 _inst_7 _inst_10 _inst_10}, (IsCompactOperator.{u1, u1} M‚ÇÅ M‚ÇÅ (AddMonoid.toZero.{u1} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u1} M‚ÇÅ _inst_7)) _inst_4 _inst_4 (FunLike.coe.{succ u1, succ u1, succ u1} (LinearMap.{u2, u2, u1, u1} R‚ÇÅ R‚ÇÅ _inst_1 _inst_1 (RingHom.id.{u2} R‚ÇÅ (Semiring.toNonAssocSemiring.{u2} R‚ÇÅ _inst_1)) M‚ÇÅ M‚ÇÅ _inst_7 _inst_7 _inst_10 _inst_10) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÅ) _x) (LinearMap.instFunLikeLinearMap.{u2, u2, u1, u1} R‚ÇÅ R‚ÇÅ M‚ÇÅ M‚ÇÅ _inst_1 _inst_1 _inst_7 _inst_7 _inst_10 _inst_10 (RingHom.id.{u2} R‚ÇÅ (Semiring.toNonAssocSemiring.{u2} R‚ÇÅ _inst_1))) f)) -> (forall {V : Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10} (hV : forall (v : M‚ÇÅ), (Membership.mem.{u1, u1} M‚ÇÅ (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) v V) -> (Membership.mem.{u1, u1} ((fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÅ) v) (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) (FunLike.coe.{succ u1, succ u1, succ u1} (LinearMap.{u2, u2, u1, u1} R‚ÇÅ R‚ÇÅ _inst_1 _inst_1 (RingHom.id.{u2} R‚ÇÅ (Semiring.toNonAssocSemiring.{u2} R‚ÇÅ _inst_1)) M‚ÇÅ M‚ÇÅ _inst_7 _inst_7 _inst_10 _inst_10) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÅ) _x) (LinearMap.instFunLikeLinearMap.{u2, u2, u1, u1} R‚ÇÅ R‚ÇÅ M‚ÇÅ M‚ÇÅ _inst_1 _inst_1 _inst_7 _inst_7 _inst_10 _inst_10 (RingHom.id.{u2} R‚ÇÅ (Semiring.toNonAssocSemiring.{u2} R‚ÇÅ _inst_1))) f v) V)), (IsClosed.{u1} M‚ÇÅ _inst_4 (SetLike.coe.{u1, u1} (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) V)) -> (IsCompactOperator.{u1, u1} (Subtype.{succ u1} M‚ÇÅ (fun (x : M‚ÇÅ) => Membership.mem.{u1, u1} M‚ÇÅ (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) x V)) (Subtype.{succ u1} M‚ÇÅ (fun (x : M‚ÇÅ) => Membership.mem.{u1, u1} M‚ÇÅ (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) x V)) (Submodule.zero.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (instTopologicalSpaceSubtype.{u1} M‚ÇÅ (fun (x : M‚ÇÅ) => Membership.mem.{u1, u1} M‚ÇÅ (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) x V) _inst_4) (instTopologicalSpaceSubtype.{u1} M‚ÇÅ (fun (x : M‚ÇÅ) => Membership.mem.{u1, u1} M‚ÇÅ (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) x V) _inst_4) (FunLike.coe.{succ u1, succ u1, succ u1} (LinearMap.{u2, u2, u1, u1} R‚ÇÅ R‚ÇÅ _inst_1 _inst_1 (RingHom.id.{u2} R‚ÇÅ (Semiring.toNonAssocSemiring.{u2} R‚ÇÅ _inst_1)) (Subtype.{succ u1} M‚ÇÅ (fun (x : M‚ÇÅ) => Membership.mem.{u1, u1} M‚ÇÅ (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) x V)) (Subtype.{succ u1} M‚ÇÅ (fun (x : M‚ÇÅ) => Membership.mem.{u1, u1} M‚ÇÅ (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) x V)) (Submodule.addCommMonoid.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (Submodule.addCommMonoid.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (Submodule.module.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (Submodule.module.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V)) (Subtype.{succ u1} M‚ÇÅ (fun (x : M‚ÇÅ) => Membership.mem.{u1, u1} M‚ÇÅ (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) x V)) (fun (_x : Subtype.{succ u1} M‚ÇÅ (fun (x : M‚ÇÅ) => Membership.mem.{u1, u1} M‚ÇÅ (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) x V)) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : Subtype.{succ u1} M‚ÇÅ (fun (x : M‚ÇÅ) => Membership.mem.{u1, u1} M‚ÇÅ (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) x V)) => Subtype.{succ u1} M‚ÇÅ (fun (x : M‚ÇÅ) => Membership.mem.{u1, u1} M‚ÇÅ (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) x V)) _x) (LinearMap.instFunLikeLinearMap.{u2, u2, u1, u1} R‚ÇÅ R‚ÇÅ (Subtype.{succ u1} M‚ÇÅ (fun (x : M‚ÇÅ) => Membership.mem.{u1, u1} M‚ÇÅ (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) x V)) (Subtype.{succ u1} M‚ÇÅ (fun (x : M‚ÇÅ) => Membership.mem.{u1, u1} M‚ÇÅ (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) (SetLike.instMembership.{u1, u1} (Submodule.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10) M‚ÇÅ (Submodule.setLike.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10)) x V)) _inst_1 _inst_1 (Submodule.addCommMonoid.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (Submodule.addCommMonoid.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (Submodule.module.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (Submodule.module.{u2, u1} R‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_10 V) (RingHom.id.{u2} R‚ÇÅ (Semiring.toNonAssocSemiring.{u2} R‚ÇÅ _inst_1))) (LinearMap.restrict.{u2, u1, u1} R‚ÇÅ M‚ÇÅ M‚ÇÅ _inst_1 _inst_7 _inst_7 _inst_10 _inst_10 f V V hV))))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.restrict IsCompactOperator.restrict‚Çì'. -/
/-- If a compact operator preserves a closed submodule, its restriction to that submodule is
compact.

Note that, following mathlib's convention in linear algebra, `restrict` designates the restriction
of an endomorphism `f : E ‚Üí‚Çó E` to an endomorphism `f' : ‚Ü•V ‚Üí‚Çó ‚Ü•V`. To prove that the restriction
`f' : ‚Ü•U ‚Üí‚Çõ‚Çó ‚Ü•V` of a compact operator `f : E ‚Üí‚Çõ‚Çó F` is compact, apply
`is_compact_operator.cod_restrict` to `f ‚àò U.subtypeL`, which is compact by
`is_compact_operator.comp_clm`. -/
theorem IsCompactOperator.restrict {f : M‚ÇÅ ‚Üí‚Çó[R‚ÇÅ] M‚ÇÅ} (hf : IsCompactOperator f)
    {V : Submodule R‚ÇÅ M‚ÇÅ} (hV : ‚àÄ v ‚àà V, f v ‚àà V) (h_closed : IsClosed (V : Set M‚ÇÅ)) :
    IsCompactOperator (f.restrict hV) :=
  (hf.comp_clm V.subtypeL).codRestrict (SetLike.forall.2 hV) h_closed
#align is_compact_operator.restrict IsCompactOperator.restrict

/- warning: is_compact_operator.restrict' -> IsCompactOperator.restrict' is a dubious translation:
lean 3 declaration is
  forall {R‚ÇÇ : Type.{u1}} [_inst_2 : Semiring.{u1} R‚ÇÇ] {M‚ÇÇ : Type.{u2}} [_inst_5 : UniformSpace.{u2} M‚ÇÇ] [_inst_8 : AddCommMonoid.{u2} M‚ÇÇ] [_inst_11 : Module.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8] [_inst_13 : SeparatedSpace.{u2} M‚ÇÇ _inst_5] {f : LinearMap.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ _inst_2 _inst_2 (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2)) M‚ÇÇ M‚ÇÇ _inst_8 _inst_8 _inst_11 _inst_11}, (IsCompactOperator.{u2, u2} M‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u2} M‚ÇÇ (AddMonoid.toAddZeroClass.{u2} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8))) (UniformSpace.toTopologicalSpace.{u2} M‚ÇÇ _inst_5) (UniformSpace.toTopologicalSpace.{u2} M‚ÇÇ _inst_5) (coeFn.{succ u2, succ u2} (LinearMap.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ _inst_2 _inst_2 (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2)) M‚ÇÇ M‚ÇÇ _inst_8 _inst_8 _inst_11 _inst_11) (fun (_x : LinearMap.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ _inst_2 _inst_2 (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2)) M‚ÇÇ M‚ÇÇ _inst_8 _inst_8 _inst_11 _inst_11) => M‚ÇÇ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ M‚ÇÇ M‚ÇÇ _inst_2 _inst_2 _inst_8 _inst_8 _inst_11 _inst_11 (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2))) f)) -> (forall {V : Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11} (hV : forall (v : M‚ÇÇ), (Membership.Mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) v V) -> (Membership.Mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) (coeFn.{succ u2, succ u2} (LinearMap.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ _inst_2 _inst_2 (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2)) M‚ÇÇ M‚ÇÇ _inst_8 _inst_8 _inst_11 _inst_11) (fun (_x : LinearMap.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ _inst_2 _inst_2 (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2)) M‚ÇÇ M‚ÇÇ _inst_8 _inst_8 _inst_11 _inst_11) => M‚ÇÇ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ M‚ÇÇ M‚ÇÇ _inst_2 _inst_2 _inst_8 _inst_8 _inst_11 _inst_11 (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2))) f v) V)) [hcomplete : CompleteSpace.{u2} (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) V) (Subtype.uniformSpace.{u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.Mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V) _inst_5)], IsCompactOperator.{u2, u2} (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) V) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) V) (Submodule.zero.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (Subtype.topologicalSpace.{u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.Mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V) (UniformSpace.toTopologicalSpace.{u2} M‚ÇÇ _inst_5)) (Subtype.topologicalSpace.{u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.Mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.hasMem.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V) (UniformSpace.toTopologicalSpace.{u2} M‚ÇÇ _inst_5)) (coeFn.{succ u2, succ u2} (LinearMap.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ _inst_2 _inst_2 (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) V) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) V) (Submodule.addCommMonoid.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (Submodule.addCommMonoid.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (Submodule.module.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (Submodule.module.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V)) (fun (_x : LinearMap.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ _inst_2 _inst_2 (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2)) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) V) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) V) (Submodule.addCommMonoid.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (Submodule.addCommMonoid.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (Submodule.module.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (Submodule.module.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V)) => (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) V) -> (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) V)) (LinearMap.hasCoeToFun.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) V) (coeSort.{succ u2, succ (succ u2)} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) Type.{u2} (SetLike.hasCoeToSort.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) V) _inst_2 _inst_2 (Submodule.addCommMonoid.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (Submodule.addCommMonoid.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (Submodule.module.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (Submodule.module.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2))) (LinearMap.restrict.{u1, u2, u2} R‚ÇÇ M‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_8 _inst_11 _inst_11 f V V hV)))
but is expected to have type
  forall {R‚ÇÇ : Type.{u1}} [_inst_2 : Semiring.{u1} R‚ÇÇ] {M‚ÇÇ : Type.{u2}} [_inst_5 : UniformSpace.{u2} M‚ÇÇ] [_inst_8 : AddCommMonoid.{u2} M‚ÇÇ] [_inst_11 : Module.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8] [_inst_13 : SeparatedSpace.{u2} M‚ÇÇ _inst_5] {f : LinearMap.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ _inst_2 _inst_2 (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2)) M‚ÇÇ M‚ÇÇ _inst_8 _inst_8 _inst_11 _inst_11}, (IsCompactOperator.{u2, u2} M‚ÇÇ M‚ÇÇ (AddMonoid.toZero.{u2} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u2} M‚ÇÇ _inst_8)) (UniformSpace.toTopologicalSpace.{u2} M‚ÇÇ _inst_5) (UniformSpace.toTopologicalSpace.{u2} M‚ÇÇ _inst_5) (FunLike.coe.{succ u2, succ u2, succ u2} (LinearMap.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ _inst_2 _inst_2 (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2)) M‚ÇÇ M‚ÇÇ _inst_8 _inst_8 _inst_11 _inst_11) M‚ÇÇ (fun (_x : M‚ÇÇ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÇ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ M‚ÇÇ M‚ÇÇ _inst_2 _inst_2 _inst_8 _inst_8 _inst_11 _inst_11 (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2))) f)) -> (forall {V : Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11} (hV : forall (v : M‚ÇÇ), (Membership.mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) v V) -> (Membership.mem.{u2, u2} ((fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÇ) => M‚ÇÇ) v) (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) (FunLike.coe.{succ u2, succ u2, succ u2} (LinearMap.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ _inst_2 _inst_2 (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2)) M‚ÇÇ M‚ÇÇ _inst_8 _inst_8 _inst_11 _inst_11) M‚ÇÇ (fun (_x : M‚ÇÇ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÇ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ M‚ÇÇ M‚ÇÇ _inst_2 _inst_2 _inst_8 _inst_8 _inst_11 _inst_11 (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2))) f v) V)) [hcomplete : CompleteSpace.{u2} (Subtype.{succ u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V)) (instUniformSpaceSubtype.{u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V) _inst_5)], IsCompactOperator.{u2, u2} (Subtype.{succ u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V)) (Subtype.{succ u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V)) (Submodule.zero.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (instTopologicalSpaceSubtype.{u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V) (UniformSpace.toTopologicalSpace.{u2} M‚ÇÇ _inst_5)) (instTopologicalSpaceSubtype.{u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V) (UniformSpace.toTopologicalSpace.{u2} M‚ÇÇ _inst_5)) (FunLike.coe.{succ u2, succ u2, succ u2} (LinearMap.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ _inst_2 _inst_2 (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2)) (Subtype.{succ u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V)) (Subtype.{succ u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V)) (Submodule.addCommMonoid.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (Submodule.addCommMonoid.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (Submodule.module.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (Submodule.module.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V)) (Subtype.{succ u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V)) (fun (_x : Subtype.{succ u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V)) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : Subtype.{succ u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V)) => Subtype.{succ u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V)) _x) (LinearMap.instFunLikeLinearMap.{u1, u1, u2, u2} R‚ÇÇ R‚ÇÇ (Subtype.{succ u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V)) (Subtype.{succ u2} M‚ÇÇ (fun (x : M‚ÇÇ) => Membership.mem.{u2, u2} M‚ÇÇ (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) (SetLike.instMembership.{u2, u2} (Submodule.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11) M‚ÇÇ (Submodule.setLike.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11)) x V)) _inst_2 _inst_2 (Submodule.addCommMonoid.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (Submodule.addCommMonoid.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (Submodule.module.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (Submodule.module.{u1, u2} R‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_11 V) (RingHom.id.{u1} R‚ÇÇ (Semiring.toNonAssocSemiring.{u1} R‚ÇÇ _inst_2))) (LinearMap.restrict.{u1, u2, u2} R‚ÇÇ M‚ÇÇ M‚ÇÇ _inst_2 _inst_8 _inst_8 _inst_11 _inst_11 f V V hV)))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.restrict' IsCompactOperator.restrict'‚Çì'. -/
/-- If a compact operator preserves a complete submodule, its restriction to that submodule is
compact.

Note that, following mathlib's convention in linear algebra, `restrict` designates the restriction
of an endomorphism `f : E ‚Üí‚Çó E` to an endomorphism `f' : ‚Ü•V ‚Üí‚Çó ‚Ü•V`. To prove that the restriction
`f' : ‚Ü•U ‚Üí‚Çõ‚Çó ‚Ü•V` of a compact operator `f : E ‚Üí‚Çõ‚Çó F` is compact, apply
`is_compact_operator.cod_restrict` to `f ‚àò U.subtypeL`, which is compact by
`is_compact_operator.comp_clm`. -/
theorem IsCompactOperator.restrict' [SeparatedSpace M‚ÇÇ] {f : M‚ÇÇ ‚Üí‚Çó[R‚ÇÇ] M‚ÇÇ}
    (hf : IsCompactOperator f) {V : Submodule R‚ÇÇ M‚ÇÇ} (hV : ‚àÄ v ‚àà V, f v ‚àà V)
    [hcomplete : CompleteSpace V] : IsCompactOperator (f.restrict hV) :=
  hf.restrict hV (completeSpace_coe_iff_isComplete.mp hcomplete).IsClosed
#align is_compact_operator.restrict' IsCompactOperator.restrict'

end Restrict

section Continuous

variable {ùïú‚ÇÅ ùïú‚ÇÇ : Type _} [NontriviallyNormedField ùïú‚ÇÅ] [NontriviallyNormedField ùïú‚ÇÇ]
  {œÉ‚ÇÅ‚ÇÇ : ùïú‚ÇÅ ‚Üí+* ùïú‚ÇÇ} [RingHomIsometric œÉ‚ÇÅ‚ÇÇ] {M‚ÇÅ M‚ÇÇ : Type _} [TopologicalSpace M‚ÇÅ] [AddCommGroup M‚ÇÅ]
  [TopologicalSpace M‚ÇÇ] [AddCommGroup M‚ÇÇ] [Module ùïú‚ÇÅ M‚ÇÅ] [Module ùïú‚ÇÇ M‚ÇÇ] [TopologicalAddGroup M‚ÇÅ]
  [ContinuousConstSMul ùïú‚ÇÅ M‚ÇÅ] [TopologicalAddGroup M‚ÇÇ] [ContinuousSMul ùïú‚ÇÇ M‚ÇÇ]

/- warning: is_compact_operator.continuous -> IsCompactOperator.continuous is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : NontriviallyNormedField.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))} [_inst_3 : RingHomIsometric.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (NormedField.toHasNorm.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)) (NormedField.toHasNorm.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ] {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_4 : TopologicalSpace.{u3} M‚ÇÅ] [_inst_5 : AddCommGroup.{u3} M‚ÇÅ] [_inst_6 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_7 : AddCommGroup.{u4} M‚ÇÇ] [_inst_8 : Module.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)] [_inst_9 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)] [_inst_10 : TopologicalAddGroup.{u3} M‚ÇÅ _inst_4 (AddCommGroup.toAddGroup.{u3} M‚ÇÅ _inst_5)] [_inst_11 : ContinuousConstSMul.{u1, u3} ùïú‚ÇÅ M‚ÇÅ _inst_4 (SMulZeroClass.toHasSmul.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)))) (SMulWithZero.toSmulZeroClass.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (MulZeroClass.toHasZero.{u1} ùïú‚ÇÅ (MulZeroOneClass.toMulZeroClass.{u1} ùïú‚ÇÅ (MonoidWithZero.toMulZeroOneClass.{u1} ùïú‚ÇÅ (Semiring.toMonoidWithZero.{u1} ùïú‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))))))) (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)))) (MulActionWithZero.toSMulWithZero.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Semiring.toMonoidWithZero.{u1} ùïú‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)))) (Module.toMulActionWithZero.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) _inst_8))))] [_inst_12 : TopologicalAddGroup.{u4} M‚ÇÇ _inst_6 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_7)] [_inst_13 : ContinuousSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_9)))) (UniformSpace.toTopologicalSpace.{u2} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u2} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u2} ùïú‚ÇÇ (SeminormedCommRing.toSemiNormedRing.{u2} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))) _inst_6] {f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9}, (IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddGroup.{u3} M‚ÇÅ _inst_5))))) _inst_4 _inst_6 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9 œÉ‚ÇÅ‚ÇÇ) f)) -> (Continuous.{u3, u4} M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9 œÉ‚ÇÅ‚ÇÇ) f))
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u4}} {ùïú‚ÇÇ : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u4} ùïú‚ÇÅ] [_inst_2 : NontriviallyNormedField.{u3} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u4, u3} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))))} [_inst_3 : RingHomIsometric.{u4, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (NormedField.toNorm.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)) (NormedField.toNorm.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ] {M‚ÇÅ : Type.{u2}} {M‚ÇÇ : Type.{u1}} [_inst_4 : TopologicalSpace.{u2} M‚ÇÅ] [_inst_5 : AddCommGroup.{u2} M‚ÇÅ] [_inst_6 : TopologicalSpace.{u1} M‚ÇÇ] [_inst_7 : AddCommGroup.{u1} M‚ÇÇ] [_inst_8 : Module.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5)] [_inst_9 : Module.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7)] [_inst_10 : TopologicalAddGroup.{u2} M‚ÇÅ _inst_4 (AddCommGroup.toAddGroup.{u2} M‚ÇÅ _inst_5)] [_inst_11 : ContinuousConstSMul.{u4, u2} ùïú‚ÇÅ M‚ÇÅ _inst_4 (SMulZeroClass.toSMul.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ _inst_5))))) (SMulWithZero.toSMulZeroClass.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (CommMonoidWithZero.toZero.{u4} ùïú‚ÇÅ (CommGroupWithZero.toCommMonoidWithZero.{u4} ùïú‚ÇÅ (Semifield.toCommGroupWithZero.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ _inst_5))))) (MulActionWithZero.toSMulWithZero.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ _inst_5))))) (Module.toMulActionWithZero.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) _inst_8))))] [_inst_12 : TopologicalAddGroup.{u1} M‚ÇÇ _inst_6 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_7)] [_inst_13 : ContinuousSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (SMulZeroClass.toSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (SMulWithZero.toSMulZeroClass.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommMonoidWithZero.toZero.{u3} ùïú‚ÇÇ (CommGroupWithZero.toCommMonoidWithZero.{u3} ùïú‚ÇÇ (Semifield.toCommGroupWithZero.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (MulActionWithZero.toSMulWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_9)))) (UniformSpace.toTopologicalSpace.{u3} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u3} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u3} ùïú‚ÇÇ (SeminormedCommRing.toSeminormedRing.{u3} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))))) _inst_6] {f : LinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9}, (IsCompactOperator.{u2, u1} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ _inst_5))))) _inst_4 _inst_6 (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (LinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9 œÉ‚ÇÅ‚ÇÇ) f)) -> (Continuous.{u2, u1} M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (LinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9 œÉ‚ÇÅ‚ÇÇ) f))
Case conversion may be inaccurate. Consider using '#align is_compact_operator.continuous IsCompactOperator.continuous‚Çì'. -/
@[continuity]
theorem IsCompactOperator.continuous {f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ} (hf : IsCompactOperator f) :
    Continuous f :=
  by
  letI : UniformSpace M‚ÇÇ := TopologicalAddGroup.toUniformSpace _
  haveI : UniformAddGroup M‚ÇÇ := comm_topologicalAddGroup_is_uniform
  -- Since `f` is linear, we only need to show that it is continuous at zero.
  -- Let `U` be a neighborhood of `0` in `M‚ÇÇ`.
  refine' continuous_of_continuousAt_zero f fun U hU => _
  rw [map_zero] at hU
  -- The compactness of `f` gives us a compact set `K : set M‚ÇÇ` such that `f ‚Åª¬π' K` is a
  -- neighborhood of `0` in `M‚ÇÅ`.
  rcases hf with ‚ü®K, hK, hKf‚ü©
  -- But any compact set is totally bounded, hence Von-Neumann bounded. Thus, `K` absorbs `U`.
  -- This gives `r > 0` such that `‚àÄ a : ùïú‚ÇÇ, r ‚â§ ‚Äña‚Äñ ‚Üí K ‚äÜ a ‚Ä¢ U`.
  rcases hK.totally_bounded.is_vonN_bounded ùïú‚ÇÇ hU with ‚ü®r, hr, hrU‚ü©
  -- Choose `c : ùïú‚ÇÇ` with `r < ‚Äñc‚Äñ`.
  rcases NormedField.exists_lt_norm ùïú‚ÇÅ r with ‚ü®c, hc‚ü©
  have hcnz : c ‚â† 0 := ne_zero_of_norm_ne_zero (hr.trans hc).Ne.symm
  -- We have `f ‚Åª¬π' ((œÉ‚ÇÅ‚ÇÇ c‚Åª¬π) ‚Ä¢ K) = c‚Åª¬π ‚Ä¢ f ‚Åª¬π' K ‚àà ùìù 0`. Thus, showing that
  -- `(œÉ‚ÇÅ‚ÇÇ c‚Åª¬π) ‚Ä¢ K ‚äÜ U` is enough to deduce that `f ‚Åª¬π' U ‚àà ùìù 0`.
  suffices (œÉ‚ÇÅ‚ÇÇ <| c‚Åª¬π) ‚Ä¢ K ‚äÜ U by
    refine' mem_of_superset _ this
    have : IsUnit c‚Åª¬π := hcnz.is_unit.inv
    rwa [mem_map, preimage_smul_set‚Çõ‚Çó _ _ _ f this, set_smul_mem_nhds_zero_iff (inv_ne_zero hcnz)]
    infer_instance
  -- Since `œÉ‚ÇÅ‚ÇÇ c‚Åª¬π` = `(œÉ‚ÇÅ‚ÇÇ c)‚Åª¬π`, we have to prove that `K ‚äÜ œÉ‚ÇÅ‚ÇÇ c ‚Ä¢ U`.
  rw [map_inv‚ÇÄ, ‚Üê subset_set_smul_iff‚ÇÄ ((map_ne_zero œÉ‚ÇÅ‚ÇÇ).mpr hcnz)]
  -- But `œÉ‚ÇÅ‚ÇÇ` is isometric, so `‚ÄñœÉ‚ÇÅ‚ÇÇ c‚Äñ = ‚Äñc‚Äñ > r`, which concludes the argument since
  -- `‚àÄ a : ùïú‚ÇÇ, r ‚â§ ‚Äña‚Äñ ‚Üí K ‚äÜ a ‚Ä¢ U`.
  refine' hrU (œÉ‚ÇÅ‚ÇÇ c) _
  rw [RingHomIsometric.is_iso]
  exact hc.le
#align is_compact_operator.continuous IsCompactOperator.continuous

/- warning: continuous_linear_map.mk_of_is_compact_operator -> ContinuousLinearMap.mkOfIsCompactOperator is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : NontriviallyNormedField.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))} [_inst_3 : RingHomIsometric.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (NormedField.toHasNorm.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)) (NormedField.toHasNorm.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ] {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_4 : TopologicalSpace.{u3} M‚ÇÅ] [_inst_5 : AddCommGroup.{u3} M‚ÇÅ] [_inst_6 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_7 : AddCommGroup.{u4} M‚ÇÇ] [_inst_8 : Module.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)] [_inst_9 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)] [_inst_10 : TopologicalAddGroup.{u3} M‚ÇÅ _inst_4 (AddCommGroup.toAddGroup.{u3} M‚ÇÅ _inst_5)] [_inst_11 : ContinuousConstSMul.{u1, u3} ùïú‚ÇÅ M‚ÇÅ _inst_4 (SMulZeroClass.toHasSmul.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)))) (SMulWithZero.toSmulZeroClass.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (MulZeroClass.toHasZero.{u1} ùïú‚ÇÅ (MulZeroOneClass.toMulZeroClass.{u1} ùïú‚ÇÅ (MonoidWithZero.toMulZeroOneClass.{u1} ùïú‚ÇÅ (Semiring.toMonoidWithZero.{u1} ùïú‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))))))) (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)))) (MulActionWithZero.toSMulWithZero.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Semiring.toMonoidWithZero.{u1} ùïú‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)))) (Module.toMulActionWithZero.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) _inst_8))))] [_inst_12 : TopologicalAddGroup.{u4} M‚ÇÇ _inst_6 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_7)] [_inst_13 : ContinuousSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_9)))) (UniformSpace.toTopologicalSpace.{u2} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u2} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u2} ùïú‚ÇÇ (SeminormedCommRing.toSemiNormedRing.{u2} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))) _inst_6] {f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9}, (IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddGroup.{u3} M‚ÇÅ _inst_5))))) _inst_4 _inst_6 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9 œÉ‚ÇÅ‚ÇÇ) f)) -> (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9)
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : NontriviallyNormedField.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u1} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u1} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u1} ùïú‚ÇÅ (Field.toSemifield.{u1} ùïú‚ÇÅ (NormedField.toField.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u2} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))} [_inst_3 : RingHomIsometric.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u1} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u1} ùïú‚ÇÅ (Field.toSemifield.{u1} ùïú‚ÇÅ (NormedField.toField.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (NormedField.toNorm.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)) (NormedField.toNorm.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ] {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_4 : TopologicalSpace.{u3} M‚ÇÅ] [_inst_5 : AddCommGroup.{u3} M‚ÇÅ] [_inst_6 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_7 : AddCommGroup.{u4} M‚ÇÇ] [_inst_8 : Module.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (DivisionSemiring.toSemiring.{u1} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u1} ùïú‚ÇÅ (Field.toSemifield.{u1} ùïú‚ÇÅ (NormedField.toField.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)] [_inst_9 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)] [_inst_10 : TopologicalAddGroup.{u3} M‚ÇÅ _inst_4 (AddCommGroup.toAddGroup.{u3} M‚ÇÅ _inst_5)] [_inst_11 : ContinuousConstSMul.{u1, u3} ùïú‚ÇÅ M‚ÇÅ _inst_4 (SMulZeroClass.toSMul.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NegZeroClass.toZero.{u3} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u3} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u3} M‚ÇÅ _inst_5))))) (SMulWithZero.toSMulZeroClass.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (CommMonoidWithZero.toZero.{u1} ùïú‚ÇÅ (CommGroupWithZero.toCommMonoidWithZero.{u1} ùïú‚ÇÅ (Semifield.toCommGroupWithZero.{u1} ùïú‚ÇÅ (Field.toSemifield.{u1} ùïú‚ÇÅ (NormedField.toField.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NegZeroClass.toZero.{u3} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u3} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u3} M‚ÇÅ _inst_5))))) (MulActionWithZero.toSMulWithZero.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Semiring.toMonoidWithZero.{u1} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u1} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u1} ùïú‚ÇÅ (Field.toSemifield.{u1} ùïú‚ÇÅ (NormedField.toField.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NegZeroClass.toZero.{u3} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u3} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u3} M‚ÇÅ _inst_5))))) (Module.toMulActionWithZero.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (DivisionSemiring.toSemiring.{u1} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u1} ùïú‚ÇÅ (Field.toSemifield.{u1} ùïú‚ÇÅ (NormedField.toField.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) _inst_8))))] [_inst_12 : TopologicalAddGroup.{u4} M‚ÇÇ _inst_6 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_7)] [_inst_13 : ContinuousSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (SMulZeroClass.toSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (NegZeroClass.toZero.{u4} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u4} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u4} M‚ÇÇ _inst_7))))) (SMulWithZero.toSMulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (CommMonoidWithZero.toZero.{u2} ùïú‚ÇÇ (CommGroupWithZero.toCommMonoidWithZero.{u2} ùïú‚ÇÇ (Semifield.toCommGroupWithZero.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u4} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u4} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u4} M‚ÇÇ _inst_7))))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u4} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u4} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u4} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u4} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u4} M‚ÇÇ _inst_7))))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_9)))) (UniformSpace.toTopologicalSpace.{u2} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u2} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u2} ùïú‚ÇÇ (SeminormedCommRing.toSeminormedRing.{u2} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))) _inst_6] {f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u1} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u1} ùïú‚ÇÅ (Field.toSemifield.{u1} ùïú‚ÇÅ (NormedField.toField.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9}, (IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u3} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u3} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u3} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u3} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u3} M‚ÇÅ _inst_5))))) _inst_4 _inst_6 (FunLike.coe.{max (succ u3) (succ u4), succ u3, succ u4} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u1} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u1} ùïú‚ÇÅ (Field.toSemifield.{u1} ùïú‚ÇÅ (NormedField.toField.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u1} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u1} ùïú‚ÇÅ (Field.toSemifield.{u1} ùïú‚ÇÅ (NormedField.toField.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9 œÉ‚ÇÅ‚ÇÇ) f)) -> (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u1} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u1} ùïú‚ÇÅ (Field.toSemifield.{u1} ùïú‚ÇÅ (NormedField.toField.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.mk_of_is_compact_operator ContinuousLinearMap.mkOfIsCompactOperator‚Çì'. -/
/-- Upgrade a compact `linear_map` to a `continuous_linear_map`. -/
def ContinuousLinearMap.mkOfIsCompactOperator {f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ} (hf : IsCompactOperator f) :
    M‚ÇÅ ‚ÜíSL[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ :=
  ‚ü®f, hf.Continuous‚ü©
#align continuous_linear_map.mk_of_is_compact_operator ContinuousLinearMap.mkOfIsCompactOperator

/- warning: continuous_linear_map.mk_of_is_compact_operator_to_linear_map -> ContinuousLinearMap.mkOfIsCompactOperator_to_linearMap is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : NontriviallyNormedField.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))} [_inst_3 : RingHomIsometric.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (NormedField.toHasNorm.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)) (NormedField.toHasNorm.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ] {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_4 : TopologicalSpace.{u3} M‚ÇÅ] [_inst_5 : AddCommGroup.{u3} M‚ÇÅ] [_inst_6 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_7 : AddCommGroup.{u4} M‚ÇÇ] [_inst_8 : Module.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)] [_inst_9 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)] [_inst_10 : TopologicalAddGroup.{u3} M‚ÇÅ _inst_4 (AddCommGroup.toAddGroup.{u3} M‚ÇÅ _inst_5)] [_inst_11 : ContinuousConstSMul.{u1, u3} ùïú‚ÇÅ M‚ÇÅ _inst_4 (SMulZeroClass.toHasSmul.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)))) (SMulWithZero.toSmulZeroClass.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (MulZeroClass.toHasZero.{u1} ùïú‚ÇÅ (MulZeroOneClass.toMulZeroClass.{u1} ùïú‚ÇÅ (MonoidWithZero.toMulZeroOneClass.{u1} ùïú‚ÇÅ (Semiring.toMonoidWithZero.{u1} ùïú‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))))))) (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)))) (MulActionWithZero.toSMulWithZero.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Semiring.toMonoidWithZero.{u1} ùïú‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)))) (Module.toMulActionWithZero.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) _inst_8))))] [_inst_12 : TopologicalAddGroup.{u4} M‚ÇÇ _inst_6 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_7)] [_inst_13 : ContinuousSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_9)))) (UniformSpace.toTopologicalSpace.{u2} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u2} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u2} ùïú‚ÇÇ (SeminormedCommRing.toSemiNormedRing.{u2} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))) _inst_6] {f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9} (hf : IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddGroup.{u3} M‚ÇÅ _inst_5))))) _inst_4 _inst_6 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9 œÉ‚ÇÅ‚ÇÇ) f)), Eq.{max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) ((fun (a : Sort.{max (succ u3) (succ u4)}) (b : Sort.{max (succ u3) (succ u4)}) [self : HasLiftT.{max (succ u3) (succ u4), max (succ u3) (succ u4)} a b] => self.0) (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (HasLiftT.mk.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (CoeTC‚Çì.coe.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (coeBase.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (ContinuousLinearMap.LinearMap.coe.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9)))) (ContinuousLinearMap.mkOfIsCompactOperator.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ _inst_3 M‚ÇÅ M‚ÇÇ _inst_4 _inst_5 _inst_6 _inst_7 _inst_8 _inst_9 _inst_10 _inst_11 _inst_12 _inst_13 f hf)) f
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u4}} {ùïú‚ÇÇ : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u4} ùïú‚ÇÅ] [_inst_2 : NontriviallyNormedField.{u3} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u4, u3} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))))} [_inst_3 : RingHomIsometric.{u4, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (NormedField.toNorm.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)) (NormedField.toNorm.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ] {M‚ÇÅ : Type.{u2}} {M‚ÇÇ : Type.{u1}} [_inst_4 : TopologicalSpace.{u2} M‚ÇÅ] [_inst_5 : AddCommGroup.{u2} M‚ÇÅ] [_inst_6 : TopologicalSpace.{u1} M‚ÇÇ] [_inst_7 : AddCommGroup.{u1} M‚ÇÇ] [_inst_8 : Module.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5)] [_inst_9 : Module.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7)] [_inst_10 : TopologicalAddGroup.{u2} M‚ÇÅ _inst_4 (AddCommGroup.toAddGroup.{u2} M‚ÇÅ _inst_5)] [_inst_11 : ContinuousConstSMul.{u4, u2} ùïú‚ÇÅ M‚ÇÅ _inst_4 (SMulZeroClass.toSMul.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ _inst_5))))) (SMulWithZero.toSMulZeroClass.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (CommMonoidWithZero.toZero.{u4} ùïú‚ÇÅ (CommGroupWithZero.toCommMonoidWithZero.{u4} ùïú‚ÇÅ (Semifield.toCommGroupWithZero.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ _inst_5))))) (MulActionWithZero.toSMulWithZero.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ _inst_5))))) (Module.toMulActionWithZero.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) _inst_8))))] [_inst_12 : TopologicalAddGroup.{u1} M‚ÇÇ _inst_6 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_7)] [_inst_13 : ContinuousSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (SMulZeroClass.toSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (SMulWithZero.toSMulZeroClass.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommMonoidWithZero.toZero.{u3} ùïú‚ÇÇ (CommGroupWithZero.toCommMonoidWithZero.{u3} ùïú‚ÇÇ (Semifield.toCommGroupWithZero.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (MulActionWithZero.toSMulWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_9)))) (UniformSpace.toTopologicalSpace.{u3} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u3} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u3} ùïú‚ÇÇ (SeminormedCommRing.toSeminormedRing.{u3} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))))) _inst_6] {f : LinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9} (hf : IsCompactOperator.{u2, u1} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ _inst_5))))) _inst_4 _inst_6 (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (LinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9 œÉ‚ÇÅ‚ÇÇ) f)), Eq.{max (succ u2) (succ u1)} (LinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9) (ContinuousLinearMap.toLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9 (ContinuousLinearMap.mkOfIsCompactOperator.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ _inst_3 M‚ÇÅ M‚ÇÇ _inst_4 _inst_5 _inst_6 _inst_7 _inst_8 _inst_9 _inst_10 _inst_11 _inst_12 _inst_13 f hf)) f
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.mk_of_is_compact_operator_to_linear_map ContinuousLinearMap.mkOfIsCompactOperator_to_linearMap‚Çì'. -/
@[simp]
theorem ContinuousLinearMap.mkOfIsCompactOperator_to_linearMap {f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ}
    (hf : IsCompactOperator f) :
    (ContinuousLinearMap.mkOfIsCompactOperator hf : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ) = f :=
  rfl
#align continuous_linear_map.mk_of_is_compact_operator_to_linear_map ContinuousLinearMap.mkOfIsCompactOperator_to_linearMap

/- warning: continuous_linear_map.coe_mk_of_is_compact_operator -> ContinuousLinearMap.coe_mkOfIsCompactOperator is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : NontriviallyNormedField.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))} [_inst_3 : RingHomIsometric.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (NormedField.toHasNorm.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)) (NormedField.toHasNorm.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ] {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_4 : TopologicalSpace.{u3} M‚ÇÅ] [_inst_5 : AddCommGroup.{u3} M‚ÇÅ] [_inst_6 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_7 : AddCommGroup.{u4} M‚ÇÇ] [_inst_8 : Module.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)] [_inst_9 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)] [_inst_10 : TopologicalAddGroup.{u3} M‚ÇÅ _inst_4 (AddCommGroup.toAddGroup.{u3} M‚ÇÅ _inst_5)] [_inst_11 : ContinuousConstSMul.{u1, u3} ùïú‚ÇÅ M‚ÇÅ _inst_4 (SMulZeroClass.toHasSmul.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)))) (SMulWithZero.toSmulZeroClass.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (MulZeroClass.toHasZero.{u1} ùïú‚ÇÅ (MulZeroOneClass.toMulZeroClass.{u1} ùïú‚ÇÅ (MonoidWithZero.toMulZeroOneClass.{u1} ùïú‚ÇÅ (Semiring.toMonoidWithZero.{u1} ùïú‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))))))) (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)))) (MulActionWithZero.toSMulWithZero.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Semiring.toMonoidWithZero.{u1} ùïú‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)))) (Module.toMulActionWithZero.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) _inst_8))))] [_inst_12 : TopologicalAddGroup.{u4} M‚ÇÇ _inst_6 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_7)] [_inst_13 : ContinuousSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_9)))) (UniformSpace.toTopologicalSpace.{u2} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u2} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u2} ùïú‚ÇÇ (SeminormedCommRing.toSemiNormedRing.{u2} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))) _inst_6] {f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9} (hf : IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddGroup.{u3} M‚ÇÅ _inst_5))))) _inst_4 _inst_6 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9 œÉ‚ÇÅ‚ÇÇ) f)), Eq.{max (succ u3) (succ u4)} ((fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) => M‚ÇÅ -> M‚ÇÇ) (ContinuousLinearMap.mkOfIsCompactOperator.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ _inst_3 M‚ÇÅ M‚ÇÇ _inst_4 _inst_5 _inst_6 _inst_7 _inst_8 _inst_9 _inst_10 _inst_11 _inst_12 _inst_13 f hf)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) => M‚ÇÅ -> M‚ÇÇ) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (ContinuousLinearMap.mkOfIsCompactOperator.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ _inst_3 M‚ÇÅ M‚ÇÇ _inst_4 _inst_5 _inst_6 _inst_7 _inst_8 _inst_9 _inst_10 _inst_11 _inst_12 _inst_13 f hf)) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9 œÉ‚ÇÅ‚ÇÇ) f)
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u4}} {ùïú‚ÇÇ : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u4} ùïú‚ÇÅ] [_inst_2 : NontriviallyNormedField.{u3} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u4, u3} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))))} [_inst_3 : RingHomIsometric.{u4, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (NormedField.toNorm.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)) (NormedField.toNorm.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ] {M‚ÇÅ : Type.{u2}} {M‚ÇÇ : Type.{u1}} [_inst_4 : TopologicalSpace.{u2} M‚ÇÅ] [_inst_5 : AddCommGroup.{u2} M‚ÇÅ] [_inst_6 : TopologicalSpace.{u1} M‚ÇÇ] [_inst_7 : AddCommGroup.{u1} M‚ÇÇ] [_inst_8 : Module.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5)] [_inst_9 : Module.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7)] [_inst_10 : TopologicalAddGroup.{u2} M‚ÇÅ _inst_4 (AddCommGroup.toAddGroup.{u2} M‚ÇÅ _inst_5)] [_inst_11 : ContinuousConstSMul.{u4, u2} ùïú‚ÇÅ M‚ÇÅ _inst_4 (SMulZeroClass.toSMul.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ _inst_5))))) (SMulWithZero.toSMulZeroClass.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (CommMonoidWithZero.toZero.{u4} ùïú‚ÇÅ (CommGroupWithZero.toCommMonoidWithZero.{u4} ùïú‚ÇÅ (Semifield.toCommGroupWithZero.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ _inst_5))))) (MulActionWithZero.toSMulWithZero.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ _inst_5))))) (Module.toMulActionWithZero.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) _inst_8))))] [_inst_12 : TopologicalAddGroup.{u1} M‚ÇÇ _inst_6 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_7)] [_inst_13 : ContinuousSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (SMulZeroClass.toSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (SMulWithZero.toSMulZeroClass.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommMonoidWithZero.toZero.{u3} ùïú‚ÇÇ (CommGroupWithZero.toCommMonoidWithZero.{u3} ùïú‚ÇÇ (Semifield.toCommGroupWithZero.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (MulActionWithZero.toSMulWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_9)))) (UniformSpace.toTopologicalSpace.{u3} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u3} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u3} ùïú‚ÇÇ (SeminormedCommRing.toSeminormedRing.{u3} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))))) _inst_6] {f : LinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9} (hf : IsCompactOperator.{u2, u1} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ _inst_5))))) _inst_4 _inst_6 (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (LinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9 œÉ‚ÇÅ‚ÇÇ) f)), Eq.{max (succ u2) (succ u1)} (forall (a : M‚ÇÅ), (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M‚ÇÅ) => M‚ÇÇ) a) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M‚ÇÅ) => M‚ÇÇ) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9) M‚ÇÅ M‚ÇÇ _inst_4 _inst_6 (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9) ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9))) (ContinuousLinearMap.mkOfIsCompactOperator.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ _inst_3 M‚ÇÅ M‚ÇÇ _inst_4 _inst_5 _inst_6 _inst_7 _inst_8 _inst_9 _inst_10 _inst_11 _inst_12 _inst_13 f hf)) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (LinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9 œÉ‚ÇÅ‚ÇÇ) f)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.coe_mk_of_is_compact_operator ContinuousLinearMap.coe_mkOfIsCompactOperator‚Çì'. -/
@[simp]
theorem ContinuousLinearMap.coe_mkOfIsCompactOperator {f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ}
    (hf : IsCompactOperator f) : (ContinuousLinearMap.mkOfIsCompactOperator hf : M‚ÇÅ ‚Üí M‚ÇÇ) = f :=
  rfl
#align continuous_linear_map.coe_mk_of_is_compact_operator ContinuousLinearMap.coe_mkOfIsCompactOperator

/- warning: continuous_linear_map.mk_of_is_compact_operator_mem_compact_operator -> ContinuousLinearMap.mkOfIsCompactOperator_mem_compactOperator is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : NontriviallyNormedField.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))} [_inst_3 : RingHomIsometric.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (NormedField.toHasNorm.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)) (NormedField.toHasNorm.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ] {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_4 : TopologicalSpace.{u3} M‚ÇÅ] [_inst_5 : AddCommGroup.{u3} M‚ÇÅ] [_inst_6 : TopologicalSpace.{u4} M‚ÇÇ] [_inst_7 : AddCommGroup.{u4} M‚ÇÇ] [_inst_8 : Module.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)] [_inst_9 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)] [_inst_10 : TopologicalAddGroup.{u3} M‚ÇÅ _inst_4 (AddCommGroup.toAddGroup.{u3} M‚ÇÅ _inst_5)] [_inst_11 : ContinuousConstSMul.{u1, u3} ùïú‚ÇÅ M‚ÇÅ _inst_4 (SMulZeroClass.toHasSmul.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)))) (SMulWithZero.toSmulZeroClass.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (MulZeroClass.toHasZero.{u1} ùïú‚ÇÅ (MulZeroOneClass.toMulZeroClass.{u1} ùïú‚ÇÅ (MonoidWithZero.toMulZeroOneClass.{u1} ùïú‚ÇÅ (Semiring.toMonoidWithZero.{u1} ùïú‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))))))) (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)))) (MulActionWithZero.toSMulWithZero.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Semiring.toMonoidWithZero.{u1} ùïú‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (AddCommMonoid.toAddMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5)))) (Module.toMulActionWithZero.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) _inst_8))))] [_inst_12 : TopologicalAddGroup.{u4} M‚ÇÇ _inst_6 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_7)] [_inst_13 : ContinuousSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_9)))) (UniformSpace.toTopologicalSpace.{u2} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u2} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u2} ùïú‚ÇÇ (SeminormedCommRing.toSemiNormedRing.{u2} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))) _inst_6] {f : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9} (hf : IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (AddCommGroup.toAddGroup.{u3} M‚ÇÅ _inst_5))))) _inst_4 _inst_6 (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (fun (_x : LinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) => M‚ÇÅ -> M‚ÇÇ) (LinearMap.hasCoeToFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9 œÉ‚ÇÅ‚ÇÇ) f)), Membership.Mem.{max u3 u4, max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (Submodule.{u2, max u3 u4} ùïú‚ÇÇ (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (ContinuousLinearMap.addCommMonoid.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9 (compactOperator._proof_1.{u4} M‚ÇÇ _inst_6 _inst_7 _inst_12)) (ContinuousLinearMap.module.{u1, u2, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) _inst_8 M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_9 _inst_9 (compactOperator._proof_2.{u2, u4} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)))) M‚ÇÇ _inst_7 _inst_9) (ContinuousSMul.continuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u2} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u2} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u2} ùïú‚ÇÇ (SeminormedCommRing.toSemiNormedRing.{u2} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))) _inst_6 (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_9)))) _inst_13) œÉ‚ÇÅ‚ÇÇ (compactOperator._proof_3.{u4} M‚ÇÇ _inst_6 _inst_7 _inst_12))) (SetLike.hasMem.{max u3 u4, max u3 u4} (Submodule.{u2, max u3 u4} ùïú‚ÇÇ (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (ContinuousLinearMap.addCommMonoid.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9 (compactOperator._proof_1.{u4} M‚ÇÇ _inst_6 _inst_7 _inst_12)) (ContinuousLinearMap.module.{u1, u2, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) _inst_8 M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_9 _inst_9 (compactOperator._proof_2.{u2, u4} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)))) M‚ÇÇ _inst_7 _inst_9) (ContinuousSMul.continuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u2} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u2} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u2} ùïú‚ÇÇ (SeminormedCommRing.toSemiNormedRing.{u2} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))) _inst_6 (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_9)))) _inst_13) œÉ‚ÇÅ‚ÇÇ (compactOperator._proof_3.{u4} M‚ÇÇ _inst_6 _inst_7 _inst_12))) (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (Submodule.setLike.{u2, max u3 u4} ùïú‚ÇÇ (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (ContinuousLinearMap.addCommMonoid.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_8 _inst_9 (compactOperator._proof_1.{u4} M‚ÇÇ _inst_6 _inst_7 _inst_12)) (ContinuousLinearMap.module.{u1, u2, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) _inst_8 M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_9 _inst_9 (compactOperator._proof_2.{u2, u4} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)))) M‚ÇÇ _inst_7 _inst_9) (ContinuousSMul.continuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u2} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u2} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u2} ùïú‚ÇÇ (SeminormedCommRing.toSemiNormedRing.{u2} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))) _inst_6 (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_9)))) _inst_13) œÉ‚ÇÅ‚ÇÇ (compactOperator._proof_3.{u4} M‚ÇÇ _inst_6 _inst_7 _inst_12)))) (ContinuousLinearMap.mkOfIsCompactOperator.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ _inst_3 M‚ÇÅ M‚ÇÇ _inst_4 _inst_5 _inst_6 _inst_7 _inst_8 _inst_9 _inst_10 _inst_11 _inst_12 _inst_13 f hf) (compactOperator.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ _inst_5) _inst_6 _inst_7 _inst_8 _inst_9 (ContinuousSMul.continuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u2} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u2} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u2} ùïú‚ÇÇ (SeminormedCommRing.toSemiNormedRing.{u2} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))) _inst_6 (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2)))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7)))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_7) _inst_9)))) _inst_13) _inst_12)
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u4}} {ùïú‚ÇÇ : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u4} ùïú‚ÇÅ] [_inst_2 : NontriviallyNormedField.{u3} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u4, u3} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))))} [_inst_3 : RingHomIsometric.{u4, u3} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (NormedField.toNorm.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)) (NormedField.toNorm.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)) œÉ‚ÇÅ‚ÇÇ] {M‚ÇÅ : Type.{u2}} {M‚ÇÇ : Type.{u1}} [_inst_4 : TopologicalSpace.{u2} M‚ÇÅ] [_inst_5 : AddCommGroup.{u2} M‚ÇÅ] [_inst_6 : TopologicalSpace.{u1} M‚ÇÇ] [_inst_7 : AddCommGroup.{u1} M‚ÇÇ] [_inst_8 : Module.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5)] [_inst_9 : Module.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7)] [_inst_10 : TopologicalAddGroup.{u2} M‚ÇÅ _inst_4 (AddCommGroup.toAddGroup.{u2} M‚ÇÅ _inst_5)] [_inst_11 : ContinuousConstSMul.{u4, u2} ùïú‚ÇÅ M‚ÇÅ _inst_4 (SMulZeroClass.toSMul.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ _inst_5))))) (SMulWithZero.toSMulZeroClass.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (CommMonoidWithZero.toZero.{u4} ùïú‚ÇÅ (CommGroupWithZero.toCommMonoidWithZero.{u4} ùïú‚ÇÅ (Semifield.toCommGroupWithZero.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ _inst_5))))) (MulActionWithZero.toSMulWithZero.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (Semiring.toMonoidWithZero.{u4} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ _inst_5))))) (Module.toMulActionWithZero.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) _inst_8))))] [_inst_12 : TopologicalAddGroup.{u1} M‚ÇÇ _inst_6 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_7)] [_inst_13 : ContinuousSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (SMulZeroClass.toSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (SMulWithZero.toSMulZeroClass.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommMonoidWithZero.toZero.{u3} ùïú‚ÇÇ (CommGroupWithZero.toCommMonoidWithZero.{u3} ùïú‚ÇÇ (Semifield.toCommGroupWithZero.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (MulActionWithZero.toSMulWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_9)))) (UniformSpace.toTopologicalSpace.{u3} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u3} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u3} ùïú‚ÇÇ (SeminormedCommRing.toSeminormedRing.{u3} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))))) _inst_6] {f : LinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9} (hf : IsCompactOperator.{u2, u1} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ _inst_5))))) _inst_4 _inst_6 (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (LinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Algebra.Module.LinearMap._hyg.6190 : M‚ÇÅ) => M‚ÇÇ) _x) (LinearMap.instFunLikeLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ M‚ÇÅ M‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9 œÉ‚ÇÅ‚ÇÇ) f)), Membership.mem.{max u1 u2, max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9) (Submodule.{u3, max u1 u2} ùïú‚ÇÇ (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (ContinuousLinearMap.addCommMonoid.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9 (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ _inst_6 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_7) _inst_12)) (ContinuousLinearMap.module.{u4, u3, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) _inst_8 M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_9 _inst_9 (smulCommClass_self.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toCommMonoid.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (MulActionWithZero.toMulAction.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_9))) (ContinuousSMul.continuousConstSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u3} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u3} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u3} ùïú‚ÇÇ (SeminormedCommRing.toSeminormedRing.{u3} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))))) _inst_6 (SMulZeroClass.toSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (SMulWithZero.toSMulZeroClass.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommMonoidWithZero.toZero.{u3} ùïú‚ÇÇ (CommSemiring.toCommMonoidWithZero.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (MulActionWithZero.toSMulWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_9)))) _inst_13) œÉ‚ÇÅ‚ÇÇ (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ _inst_6 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_7) _inst_12))) (SetLike.instMembership.{max u2 u1, max u2 u1} (Submodule.{u3, max u1 u2} ùïú‚ÇÇ (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (ContinuousLinearMap.addCommMonoid.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9 (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ _inst_6 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_7) _inst_12)) (ContinuousLinearMap.module.{u4, u3, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) _inst_8 M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_9 _inst_9 (smulCommClass_self.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toCommMonoid.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (MulActionWithZero.toMulAction.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_9))) (ContinuousSMul.continuousConstSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u3} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u3} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u3} ùïú‚ÇÇ (SeminormedCommRing.toSeminormedRing.{u3} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))))) _inst_6 (SMulZeroClass.toSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (SMulWithZero.toSMulZeroClass.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommMonoidWithZero.toZero.{u3} ùïú‚ÇÇ (CommSemiring.toCommMonoidWithZero.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (MulActionWithZero.toSMulWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_9)))) _inst_13) œÉ‚ÇÅ‚ÇÇ (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ _inst_6 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_7) _inst_12))) (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9) (Submodule.setLike.{u3, max u2 u1} ùïú‚ÇÇ (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (ContinuousLinearMap.addCommMonoid.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_8 _inst_9 (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ _inst_6 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_7) _inst_12)) (ContinuousLinearMap.module.{u4, u3, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) M‚ÇÅ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) _inst_8 M‚ÇÇ _inst_6 (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_9 _inst_9 (smulCommClass_self.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toCommMonoid.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (MulActionWithZero.toMulAction.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_9))) (ContinuousSMul.continuousConstSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u3} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u3} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u3} ùïú‚ÇÇ (SeminormedCommRing.toSeminormedRing.{u3} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))))) _inst_6 (SMulZeroClass.toSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (SMulWithZero.toSMulZeroClass.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommMonoidWithZero.toZero.{u3} ùïú‚ÇÇ (CommSemiring.toCommMonoidWithZero.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (MulActionWithZero.toSMulWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_9)))) _inst_13) œÉ‚ÇÅ‚ÇÇ (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ _inst_6 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_7) _inst_12)))) (ContinuousLinearMap.mkOfIsCompactOperator.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ _inst_1 _inst_2 œÉ‚ÇÅ‚ÇÇ _inst_3 M‚ÇÅ M‚ÇÇ _inst_4 _inst_5 _inst_6 _inst_7 _inst_8 _inst_9 _inst_10 _inst_11 _inst_12 _inst_13 f hf) (compactOperator.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ _inst_4 (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ _inst_5) _inst_6 _inst_7 _inst_8 _inst_9 (ContinuousSMul.continuousConstSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u3} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u3} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u3} ùïú‚ÇÇ (SeminormedCommRing.toSeminormedRing.{u3} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))))) _inst_6 (SMulZeroClass.toSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (SMulWithZero.toSMulZeroClass.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommMonoidWithZero.toZero.{u3} ùïú‚ÇÇ (CommSemiring.toCommMonoidWithZero.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (MulActionWithZero.toSMulWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2)))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_7))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u3} ùïú‚ÇÇ _inst_2))))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_7) _inst_9)))) _inst_13) _inst_12)
Case conversion may be inaccurate. Consider using '#align continuous_linear_map.mk_of_is_compact_operator_mem_compact_operator ContinuousLinearMap.mkOfIsCompactOperator_mem_compactOperator‚Çì'. -/
theorem ContinuousLinearMap.mkOfIsCompactOperator_mem_compactOperator {f : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ}
    (hf : IsCompactOperator f) :
    ContinuousLinearMap.mkOfIsCompactOperator hf ‚àà compactOperator œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ :=
  hf
#align continuous_linear_map.mk_of_is_compact_operator_mem_compact_operator ContinuousLinearMap.mkOfIsCompactOperator_mem_compactOperator

end Continuous

/- warning: is_closed_set_of_is_compact_operator -> isClosed_setOf_isCompactOperator is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : NormedField.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))))} {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_3 : SeminormedAddCommGroup.{u3} M‚ÇÅ] [_inst_4 : AddCommGroup.{u4} M‚ÇÇ] [_inst_5 : NormedSpace.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_6 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4)] [_inst_7 : UniformSpace.{u4} M‚ÇÇ] [_inst_8 : UniformAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4)] [_inst_9 : ContinuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4)))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4)))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4)))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) _inst_6))))] [_inst_10 : T2Space.{u4} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7)] [_inst_11 : CompleteSpace.{u4} M‚ÇÇ _inst_7], IsClosed.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (ContinuousLinearMap.topologicalSpace.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_4 _inst_6 (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8)) (setOf.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (fun (f : ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) => IsCompactOperator.{u3, u4} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u3} M‚ÇÅ (AddMonoid.toAddZeroClass.{u3} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u3} M‚ÇÅ (AddGroup.toSubNegMonoid.{u3} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u3} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u3} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (coeFn.{max (succ u3) (succ u4), max (succ u3) (succ u4)} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (fun (_x : ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) => M‚ÇÅ -> M‚ÇÇ) (ContinuousLinearMap.toFun.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) f)))
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u4}} {ùïú‚ÇÇ : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u4} ùïú‚ÇÅ] [_inst_2 : NormedField.{u3} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u4, u3} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))))} {M‚ÇÅ : Type.{u2}} {M‚ÇÇ : Type.{u1}} [_inst_3 : SeminormedAddCommGroup.{u2} M‚ÇÅ] [_inst_4 : AddCommGroup.{u1} M‚ÇÇ] [_inst_5 : NormedSpace.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_6 : Module.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4)] [_inst_7 : UniformSpace.{u1} M‚ÇÇ] [_inst_8 : UniformAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4)] [_inst_9 : ContinuousConstSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (SMulZeroClass.toSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_4))))) (SMulWithZero.toSMulZeroClass.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommMonoidWithZero.toZero.{u3} ùïú‚ÇÇ (CommGroupWithZero.toCommMonoidWithZero.{u3} ùïú‚ÇÇ (Semifield.toCommGroupWithZero.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_4))))) (MulActionWithZero.toSMulWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_4))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) _inst_6))))] [_inst_10 : T2Space.{u1} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7)] [_inst_11 : CompleteSpace.{u1} M‚ÇÇ _inst_7], IsClosed.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (ContinuousLinearMap.topologicalSpace.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_4 _inst_6 (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8)) (setOf.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (fun (f : ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) => IsCompactOperator.{u2, u1} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M‚ÇÅ) => M‚ÇÇ) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) M‚ÇÅ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6))) f)))
Case conversion may be inaccurate. Consider using '#align is_closed_set_of_is_compact_operator isClosed_setOf_isCompactOperator‚Çì'. -/
/-- The set of compact operators from a normed space to a complete topological vector space is
closed. -/
theorem isClosed_setOf_isCompactOperator {ùïú‚ÇÅ ùïú‚ÇÇ : Type _} [NontriviallyNormedField ùïú‚ÇÅ]
    [NormedField ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : ùïú‚ÇÅ ‚Üí+* ùïú‚ÇÇ} {M‚ÇÅ M‚ÇÇ : Type _} [SeminormedAddCommGroup M‚ÇÅ]
    [AddCommGroup M‚ÇÇ] [NormedSpace ùïú‚ÇÅ M‚ÇÅ] [Module ùïú‚ÇÇ M‚ÇÇ] [UniformSpace M‚ÇÇ] [UniformAddGroup M‚ÇÇ]
    [ContinuousConstSMul ùïú‚ÇÇ M‚ÇÇ] [T2Space M‚ÇÇ] [CompleteSpace M‚ÇÇ] :
    IsClosed { f : M‚ÇÅ ‚ÜíSL[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ | IsCompactOperator f } :=
  by
  refine' isClosed_of_closure_subset _
  rintro u hu
  rw [mem_closure_iff_nhds_zero] at hu
  suffices TotallyBounded (u '' Metric.closedBall 0 1)
    by
    change IsCompactOperator (u : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ)
    rw [isCompactOperator_iff_isCompact_closure_image_closedBall (u : M‚ÇÅ ‚Üí‚Çõ‚Çó[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ) zero_lt_one]
    exact isCompact_of_totallyBounded_isClosed this.closure isClosed_closure
  rw [totallyBounded_iff_subset_finite_iUnion_nhds_zero]
  intro U hU
  rcases exists_nhds_zero_half hU with ‚ü®V, hV, hVU‚ü©
  let SV : Set M‚ÇÅ √ó Set M‚ÇÇ := ‚ü®closed_ball 0 1, -V‚ü©
  rcases hu { f | ‚àÄ x ‚àà SV.1, f x ‚àà SV.2 }
      (continuous_linear_map.has_basis_nhds_zero.mem_of_mem
        ‚ü®NormedSpace.isVonNBounded_closedBall _ _ _, neg_mem_nhds_zero M‚ÇÇ hV‚ü©) with
    ‚ü®v, hv, huv‚ü©
  rcases totally_bounded_iff_subset_finite_Union_nhds_zero.mp
      (hv.is_compact_closure_image_closed_ball 1).TotallyBounded V hV with
    ‚ü®T, hT, hTv‚ü©
  have hTv : v '' closed_ball 0 1 ‚äÜ _ := subset_closure.trans hTv
  refine' ‚ü®T, hT, _‚ü©
  rw [image_subset_iff, preimage_Union‚ÇÇ] at hTv‚ä¢
  intro x hx
  specialize hTv hx
  rw [mem_Union‚ÇÇ] at hTv‚ä¢
  rcases hTv with ‚ü®t, ht, htx‚ü©
  refine' ‚ü®t, ht, _‚ü©
  rw [mem_preimage, mem_vadd_set_iff_neg_vadd_mem, vadd_eq_add, neg_add_eq_sub] at htx‚ä¢
  convert hVU _ htx _ (huv x hx) using 1
  rw [ContinuousLinearMap.sub_apply]
  abel
#align is_closed_set_of_is_compact_operator isClosed_setOf_isCompactOperator

/- warning: compact_operator_topological_closure -> compactOperator_topologicalClosure is a dubious translation:
lean 3 declaration is
  forall {ùïú‚ÇÅ : Type.{u1}} {ùïú‚ÇÇ : Type.{u2}} [_inst_1 : NontriviallyNormedField.{u1} ùïú‚ÇÅ] [_inst_2 : NormedField.{u2} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u1, u2} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u1} ùïú‚ÇÅ (Ring.toNonAssocRing.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÇ (Ring.toNonAssocRing.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))))} {M‚ÇÅ : Type.{u3}} {M‚ÇÇ : Type.{u4}} [_inst_3 : SeminormedAddCommGroup.{u3} M‚ÇÅ] [_inst_4 : AddCommGroup.{u4} M‚ÇÇ] [_inst_5 : NormedSpace.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_6 : Module.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4)] [_inst_7 : UniformSpace.{u4} M‚ÇÇ] [_inst_8 : UniformAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4)] [_inst_9 : ContinuousConstSMul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (SMulZeroClass.toHasSmul.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4)))) (SMulWithZero.toSmulZeroClass.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4)))) (MulActionWithZero.toSMulWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4)))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) _inst_6))))] [_inst_10 : T2Space.{u4} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7)] [_inst_11 : CompleteSpace.{u4} M‚ÇÇ _inst_7] [_inst_12 : ContinuousSMul.{u2, max u3 u4} ùïú‚ÇÇ (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (SMulZeroClass.toHasSmul.{u2, max u3 u4} ùïú‚ÇÇ (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (AddZeroClass.toHasZero.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (AddMonoid.toAddZeroClass.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (AddCommMonoid.toAddMonoid.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (ContinuousLinearMap.addCommMonoid.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 (TopologicalAddGroup.to_continuousAdd.{u4} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8)))))) (SMulWithZero.toSmulZeroClass.{u2, max u3 u4} ùïú‚ÇÇ (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (MulZeroClass.toHasZero.{u2} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u2} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u2} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))))))) (AddZeroClass.toHasZero.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (AddMonoid.toAddZeroClass.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (AddCommMonoid.toAddMonoid.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (ContinuousLinearMap.addCommMonoid.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 (TopologicalAddGroup.to_continuousAdd.{u4} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8)))))) (MulActionWithZero.toSMulWithZero.{u2, max u3 u4} ùïú‚ÇÇ (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2))))) (AddZeroClass.toHasZero.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (AddMonoid.toAddZeroClass.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (AddCommMonoid.toAddMonoid.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (ContinuousLinearMap.addCommMonoid.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 (TopologicalAddGroup.to_continuousAdd.{u4} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8)))))) (Module.toMulActionWithZero.{u2, max u3 u4} ùïú‚ÇÇ (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) (ContinuousLinearMap.addCommMonoid.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 (TopologicalAddGroup.to_continuousAdd.{u4} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8))) (ContinuousLinearMap.module.{u1, u2, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) _inst_6 _inst_6 (smulCommClass_self.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (CommRing.toCommMonoid.{u2} ùïú‚ÇÇ (SeminormedCommRing.toCommRing.{u2} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) (MulActionWithZero.toMulAction.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u2} ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2))))) (AddZeroClass.toHasZero.{u4} M‚ÇÇ (AddMonoid.toAddZeroClass.{u4} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u4} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4)))) (Module.toMulActionWithZero.{u2, u4} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) _inst_6))) _inst_9 œÉ‚ÇÅ‚ÇÇ (TopologicalAddGroup.to_continuousAdd.{u4} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8))))))) (UniformSpace.toTopologicalSpace.{u2} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u2} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u2} ùïú‚ÇÇ (SeminormedCommRing.toSemiNormedRing.{u2} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))))) (ContinuousLinearMap.topologicalSpace.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_4 _inst_6 (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8))], Eq.{succ (max u3 u4)} (Submodule.{u2, max u3 u4} ùïú‚ÇÇ (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ _inst_2)))) (ContinuousLinearMap.addCommMonoid.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 (compactOperator._proof_1.{u4} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) _inst_4 (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8))) (ContinuousLinearMap.module.{u1, u2, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ _inst_2)))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ _inst_2)))) M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) _inst_6 _inst_6 (compactOperator._proof_2.{u2, u4} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ _inst_2))) M‚ÇÇ _inst_4 _inst_6) _inst_9 œÉ‚ÇÅ‚ÇÇ (compactOperator._proof_3.{u4} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) _inst_4 (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8)))) (Submodule.topologicalClosure.{u2, max u3 u4} ùïú‚ÇÇ (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ _inst_2)))) (UniformSpace.toTopologicalSpace.{u2} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u2} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u2} ùïú‚ÇÇ (SeminormedCommRing.toSemiNormedRing.{u2} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2)))))) (ContinuousLinearMap.topologicalSpace.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_4 _inst_6 (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8)) (ContinuousLinearMap.addCommMonoid.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 (compactOperator._proof_1.{u4} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) _inst_4 (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8))) (ContinuousLinearMap.module.{u1, u2, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ _inst_2)))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ _inst_2)))) M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) _inst_6 _inst_6 (compactOperator._proof_2.{u2, u4} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ _inst_2))) M‚ÇÇ _inst_4 _inst_6) _inst_9 œÉ‚ÇÅ‚ÇÇ (compactOperator._proof_3.{u4} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) _inst_4 (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8))) _inst_12 (TopologicalAddGroup.to_continuousAdd.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (ContinuousLinearMap.topologicalSpace.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_4 _inst_6 (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8)) (AddCommGroup.toAddGroup.{max u3 u4} (ContinuousLinearMap.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u2} ùïú‚ÇÇ (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (ContinuousLinearMap.addCommGroup.{u1, u2, u3, u4} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1)))) ùïú‚ÇÇ (NormedRing.toRing.{u2} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÇ _inst_2))) M‚ÇÅ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) _inst_4 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 œÉ‚ÇÅ‚ÇÇ (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8))) (ContinuousLinearMap.topologicalAddGroup.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3) (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_4 _inst_6 (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8))) (compactOperator.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ _inst_2))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) _inst_4 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 _inst_9 (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8))) (compactOperator.{u1, u2, u3, u4} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u1} ùïú‚ÇÅ (NormedRing.toRing.{u1} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u1} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u1} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1))))) (Semifield.toCommSemiring.{u2} ùïú‚ÇÇ (Field.toSemifield.{u2} ùïú‚ÇÇ (NormedField.toField.{u2} ùïú‚ÇÇ _inst_2))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u3} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u3} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u3} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u3} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u3} M‚ÇÅ _inst_3)) (UniformSpace.toTopologicalSpace.{u4} M‚ÇÇ _inst_7) _inst_4 (NormedSpace.toModule.{u1, u3} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u1} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 _inst_9 (UniformAddGroup.to_topologicalAddGroup.{u4} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u4} M‚ÇÇ _inst_4) _inst_8))
but is expected to have type
  forall {ùïú‚ÇÅ : Type.{u4}} {ùïú‚ÇÇ : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u4} ùïú‚ÇÅ] [_inst_2 : NormedField.{u3} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u4, u3} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))))} {M‚ÇÅ : Type.{u2}} {M‚ÇÇ : Type.{u1}} [_inst_3 : SeminormedAddCommGroup.{u2} M‚ÇÅ] [_inst_4 : AddCommGroup.{u1} M‚ÇÇ] [_inst_5 : NormedSpace.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_6 : Module.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4)] [_inst_7 : UniformSpace.{u1} M‚ÇÇ] [_inst_8 : UniformAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4)] [_inst_9 : ContinuousConstSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (SMulZeroClass.toSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_4))))) (SMulWithZero.toSMulZeroClass.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommMonoidWithZero.toZero.{u3} ùïú‚ÇÇ (CommGroupWithZero.toCommMonoidWithZero.{u3} ùïú‚ÇÇ (Semifield.toCommGroupWithZero.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_4))))) (MulActionWithZero.toSMulWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_4))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) _inst_6))))] [_inst_10 : T2Space.{u1} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7)] [_inst_11 : CompleteSpace.{u1} M‚ÇÇ _inst_7] [_inst_12 : ContinuousSMul.{u3, max u1 u2} ùïú‚ÇÇ (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (SMulZeroClass.toSMul.{u3, max u2 u1} ùïú‚ÇÇ (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (ContinuousLinearMap.zero.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (SMulWithZero.toSMulZeroClass.{u3, max u2 u1} ùïú‚ÇÇ (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (CommMonoidWithZero.toZero.{u3} ùïú‚ÇÇ (CommGroupWithZero.toCommMonoidWithZero.{u3} ùïú‚ÇÇ (Semifield.toCommGroupWithZero.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2))))) (ContinuousLinearMap.zero.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (MulActionWithZero.toSMulWithZero.{u3, max u2 u1} ùïú‚ÇÇ (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2))))) (ContinuousLinearMap.zero.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (Module.toMulActionWithZero.{u3, max u2 u1} ùïú‚ÇÇ (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (ContinuousLinearMap.addCommMonoid.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8))) (ContinuousLinearMap.module.{u4, u3, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) _inst_6 _inst_6 (IsScalarTower.to_smulCommClass'.{u3, u3, u1} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2))) ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (NormedAlgebra.toAlgebra.{u3, u3} ùïú‚ÇÇ ùïú‚ÇÇ _inst_2 (SeminormedCommRing.toSeminormedRing.{u3} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2))) (NormedAlgebra.id.{u3} ùïú‚ÇÇ _inst_2)) M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) _inst_6 _inst_6 (IsScalarTower.left.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (MonoidWithZero.toMonoid.{u3} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))))) (MulActionWithZero.toMulAction.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_4))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) _inst_6)))) _inst_9 œÉ‚ÇÅ‚ÇÇ (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8))))))) (UniformSpace.toTopologicalSpace.{u3} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u3} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u3} ùïú‚ÇÇ (SeminormedCommRing.toSeminormedRing.{u3} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2)))))) (ContinuousLinearMap.topologicalSpace.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_4 _inst_6 (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8))], Eq.{max (succ u2) (succ u1)} (Submodule.{u3, max u2 u1} ùïú‚ÇÇ (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (ContinuousLinearMap.addCommMonoid.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8))) (ContinuousLinearMap.module.{u4, u3, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) _inst_6 _inst_6 (smulCommClass_self.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toCommMonoid.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (MulActionWithZero.toMulAction.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_4))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) _inst_6))) _inst_9 œÉ‚ÇÅ‚ÇÇ (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8)))) (Submodule.topologicalClosure.{u3, max u2 u1} ùïú‚ÇÇ (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (ContinuousLinearMap.topologicalSpace.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_4 _inst_6 (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8)) (ContinuousLinearMap.addCommMonoid.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8))) (ContinuousLinearMap.module.{u4, u3, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) _inst_6 _inst_6 (smulCommClass_self.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toCommMonoid.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (MulActionWithZero.toMulAction.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_4))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) _inst_6))) _inst_9 œÉ‚ÇÅ‚ÇÇ (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8))) (ContinuousSMul.continuousConstSMul.{u3, max u2 u1} ùïú‚ÇÇ (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (UniformSpace.toTopologicalSpace.{u3} ùïú‚ÇÇ (PseudoMetricSpace.toUniformSpace.{u3} ùïú‚ÇÇ (SeminormedRing.toPseudoMetricSpace.{u3} ùïú‚ÇÇ (SeminormedCommRing.toSeminormedRing.{u3} ùïú‚ÇÇ (NormedCommRing.toSeminormedCommRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2)))))) (ContinuousLinearMap.topologicalSpace.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_4 _inst_6 (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8)) (SMulZeroClass.toSMul.{u3, max u2 u1} ùïú‚ÇÇ (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (AddMonoid.toZero.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (AddCommMonoid.toAddMonoid.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (ContinuousLinearMap.addCommMonoid.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8))))) (SMulWithZero.toSMulZeroClass.{u3, max u2 u1} ùïú‚ÇÇ (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (MonoidWithZero.toZero.{u3} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))))) (AddMonoid.toZero.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (AddCommMonoid.toAddMonoid.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (ContinuousLinearMap.addCommMonoid.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8))))) (MulActionWithZero.toSMulWithZero.{u3, max u2 u1} ùïú‚ÇÇ (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2))))) (AddMonoid.toZero.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (AddCommMonoid.toAddMonoid.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (ContinuousLinearMap.addCommMonoid.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8))))) (Module.toMulActionWithZero.{u3, max u2 u1} ùïú‚ÇÇ (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (ContinuousLinearMap.addCommMonoid.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8))) (ContinuousLinearMap.module.{u4, u3, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) _inst_6 _inst_6 (smulCommClass_self.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toCommMonoid.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (MulActionWithZero.toMulAction.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_4))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) _inst_6))) _inst_9 œÉ‚ÇÅ‚ÇÇ (TopologicalAddGroup.toContinuousAdd.{u1} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8))))))) _inst_12) (TopologicalAddGroup.toContinuousAdd.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (ContinuousLinearMap.topologicalSpace.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_4 _inst_6 (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8)) (AddCommGroup.toAddGroup.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (CommSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (ContinuousLinearMap.addCommGroup.{u4, u3, u2, u1} ùïú‚ÇÅ (NormedRing.toRing.{u4} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u4} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))) ùïú‚ÇÇ (NormedRing.toRing.{u3} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2))) M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) _inst_4 (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 œÉ‚ÇÅ‚ÇÇ (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8))) (ContinuousLinearMap.topologicalAddGroup.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_4 _inst_6 (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8))) (compactOperator.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) _inst_4 (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 _inst_9 (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8))) (compactOperator.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (Semifield.toCommSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) _inst_4 (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 _inst_9 (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8))
Case conversion may be inaccurate. Consider using '#align compact_operator_topological_closure compactOperator_topologicalClosure‚Çì'. -/
theorem compactOperator_topologicalClosure {ùïú‚ÇÅ ùïú‚ÇÇ : Type _} [NontriviallyNormedField ùïú‚ÇÅ]
    [NormedField ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : ùïú‚ÇÅ ‚Üí+* ùïú‚ÇÇ} {M‚ÇÅ M‚ÇÇ : Type _} [SeminormedAddCommGroup M‚ÇÅ]
    [AddCommGroup M‚ÇÇ] [NormedSpace ùïú‚ÇÅ M‚ÇÅ] [Module ùïú‚ÇÇ M‚ÇÇ] [UniformSpace M‚ÇÇ] [UniformAddGroup M‚ÇÇ]
    [ContinuousConstSMul ùïú‚ÇÇ M‚ÇÇ] [T2Space M‚ÇÇ] [CompleteSpace M‚ÇÇ]
    [ContinuousSMul ùïú‚ÇÇ (M‚ÇÅ ‚ÜíSL[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ)] :
    (compactOperator œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ).topologicalClosure = compactOperator œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ :=
  SetLike.ext' isClosed_setOf_isCompactOperator.closure_eq
#align compact_operator_topological_closure compactOperator_topologicalClosure

/- warning: is_compact_operator_of_tendsto -> isCompactOperator_of_tendsto is a dubious translation:
lean 3 declaration is
  forall {Œπ : Type.{u1}} {ùïú‚ÇÅ : Type.{u2}} {ùïú‚ÇÇ : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u2} ùïú‚ÇÅ] [_inst_2 : NormedField.{u3} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u2, u3} ùïú‚ÇÅ ùïú‚ÇÇ (NonAssocRing.toNonAssocSemiring.{u2} ùïú‚ÇÅ (Ring.toNonAssocRing.{u2} ùïú‚ÇÅ (NormedRing.toRing.{u2} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1)))))) (NonAssocRing.toNonAssocSemiring.{u3} ùïú‚ÇÇ (Ring.toNonAssocRing.{u3} ùïú‚ÇÇ (NormedRing.toRing.{u3} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2)))))} {M‚ÇÅ : Type.{u4}} {M‚ÇÇ : Type.{u5}} [_inst_3 : SeminormedAddCommGroup.{u4} M‚ÇÅ] [_inst_4 : AddCommGroup.{u5} M‚ÇÇ] [_inst_5 : NormedSpace.{u2, u4} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_6 : Module.{u3, u5} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u3} ùïú‚ÇÇ (NormedRing.toRing.{u3} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u5} M‚ÇÇ _inst_4)] [_inst_7 : UniformSpace.{u5} M‚ÇÇ] [_inst_8 : UniformAddGroup.{u5} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u5} M‚ÇÇ _inst_4)] [_inst_9 : ContinuousConstSMul.{u3, u5} ùïú‚ÇÇ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u5} M‚ÇÇ _inst_7) (SMulZeroClass.toHasSmul.{u3, u5} ùïú‚ÇÇ M‚ÇÇ (AddZeroClass.toHasZero.{u5} M‚ÇÇ (AddMonoid.toAddZeroClass.{u5} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u5} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u5} M‚ÇÇ _inst_4)))) (SMulWithZero.toSmulZeroClass.{u3, u5} ùïú‚ÇÇ M‚ÇÇ (MulZeroClass.toHasZero.{u3} ùïú‚ÇÇ (MulZeroOneClass.toMulZeroClass.{u3} ùïú‚ÇÇ (MonoidWithZero.toMulZeroOneClass.{u3} ùïú‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (Ring.toSemiring.{u3} ùïú‚ÇÇ (NormedRing.toRing.{u3} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2)))))))) (AddZeroClass.toHasZero.{u5} M‚ÇÇ (AddMonoid.toAddZeroClass.{u5} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u5} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u5} M‚ÇÇ _inst_4)))) (MulActionWithZero.toSMulWithZero.{u3, u5} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (Ring.toSemiring.{u3} ùïú‚ÇÇ (NormedRing.toRing.{u3} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2))))) (AddZeroClass.toHasZero.{u5} M‚ÇÇ (AddMonoid.toAddZeroClass.{u5} M‚ÇÇ (AddCommMonoid.toAddMonoid.{u5} M‚ÇÇ (AddCommGroup.toAddCommMonoid.{u5} M‚ÇÇ _inst_4)))) (Module.toMulActionWithZero.{u3, u5} ùïú‚ÇÇ M‚ÇÇ (Ring.toSemiring.{u3} ùïú‚ÇÇ (NormedRing.toRing.{u3} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u5} M‚ÇÇ _inst_4) _inst_6))))] [_inst_10 : T2Space.{u5} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u5} M‚ÇÇ _inst_7)] [_inst_11 : CompleteSpace.{u5} M‚ÇÇ _inst_7] {l : Filter.{u1} Œπ} [_inst_12 : Filter.NeBot.{u1} Œπ l] {F : Œπ -> (ContinuousLinearMap.{u2, u3, u4, u5} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÅ (NormedRing.toRing.{u2} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u3} ùïú‚ÇÇ (NormedRing.toRing.{u3} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u4} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u4} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u5} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u5} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u2, u4} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6)} {f : ContinuousLinearMap.{u2, u3, u4, u5} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÅ (NormedRing.toRing.{u2} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u3} ùïú‚ÇÇ (NormedRing.toRing.{u3} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u4} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u4} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u5} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u5} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u2, u4} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6}, (Filter.Tendsto.{u1, max u4 u5} Œπ (ContinuousLinearMap.{u2, u3, u4, u5} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÅ (NormedRing.toRing.{u2} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u3} ùïú‚ÇÇ (NormedRing.toRing.{u3} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u4} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u4} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u5} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u5} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u2, u4} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) F l (nhds.{max u4 u5} (ContinuousLinearMap.{u2, u3, u4, u5} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÅ (NormedRing.toRing.{u2} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u3} ùïú‚ÇÇ (NormedRing.toRing.{u3} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u4} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u4} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u5} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u5} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u2, u4} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (ContinuousLinearMap.topologicalSpace.{u2, u3, u4, u5} ùïú‚ÇÅ ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (SeminormedAddCommGroup.toAddCommGroup.{u4} M‚ÇÅ _inst_3) (NormedSpace.toModule.{u2, u4} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_4 _inst_6 (UniformSpace.toTopologicalSpace.{u4} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u4} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u5} M‚ÇÇ _inst_7) (UniformAddGroup.to_topologicalAddGroup.{u5} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u5} M‚ÇÇ _inst_4) _inst_8)) f)) -> (Filter.Eventually.{u1} Œπ (fun (i : Œπ) => IsCompactOperator.{u4, u5} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÅ (AddMonoid.toAddZeroClass.{u4} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u4} M‚ÇÅ (AddGroup.toSubNegMonoid.{u4} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u4} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u4} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u4} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u4} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u5} M‚ÇÇ _inst_7) (coeFn.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearMap.{u2, u3, u4, u5} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÅ (NormedRing.toRing.{u2} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u3} ùïú‚ÇÇ (NormedRing.toRing.{u3} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u4} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u4} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u5} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u5} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u2, u4} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (fun (_x : ContinuousLinearMap.{u2, u3, u4, u5} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÅ (NormedRing.toRing.{u2} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u3} ùïú‚ÇÇ (NormedRing.toRing.{u3} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u4} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u4} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u5} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u5} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u2, u4} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) => M‚ÇÅ -> M‚ÇÇ) (ContinuousLinearMap.toFun.{u2, u3, u4, u5} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÅ (NormedRing.toRing.{u2} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u3} ùïú‚ÇÇ (NormedRing.toRing.{u3} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u4} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u4} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u5} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u5} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u2, u4} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (F i))) l) -> (IsCompactOperator.{u4, u5} M‚ÇÅ M‚ÇÇ (AddZeroClass.toHasZero.{u4} M‚ÇÅ (AddMonoid.toAddZeroClass.{u4} M‚ÇÅ (SubNegMonoid.toAddMonoid.{u4} M‚ÇÅ (AddGroup.toSubNegMonoid.{u4} M‚ÇÅ (SeminormedAddGroup.toAddGroup.{u4} M‚ÇÅ (SeminormedAddCommGroup.toSeminormedAddGroup.{u4} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u4} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u4} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u5} M‚ÇÇ _inst_7) (coeFn.{max (succ u4) (succ u5), max (succ u4) (succ u5)} (ContinuousLinearMap.{u2, u3, u4, u5} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÅ (NormedRing.toRing.{u2} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u3} ùïú‚ÇÇ (NormedRing.toRing.{u3} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u4} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u4} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u5} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u5} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u2, u4} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (fun (_x : ContinuousLinearMap.{u2, u3, u4, u5} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÅ (NormedRing.toRing.{u2} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u3} ùïú‚ÇÇ (NormedRing.toRing.{u3} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u4} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u4} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u5} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u5} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u2, u4} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) => M‚ÇÅ -> M‚ÇÇ) (ContinuousLinearMap.toFun.{u2, u3, u4, u5} ùïú‚ÇÅ ùïú‚ÇÇ (Ring.toSemiring.{u2} ùïú‚ÇÅ (NormedRing.toRing.{u2} ùïú‚ÇÅ (NormedCommRing.toNormedRing.{u2} ùïú‚ÇÅ (NormedField.toNormedCommRing.{u2} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1))))) (Ring.toSemiring.{u3} ùïú‚ÇÇ (NormedRing.toRing.{u3} ùïú‚ÇÇ (NormedCommRing.toNormedRing.{u3} ùïú‚ÇÇ (NormedField.toNormedCommRing.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u4} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u4} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u4} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u4} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u4} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u5} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u5} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u2, u4} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u2} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) f))
but is expected to have type
  forall {Œπ : Type.{u5}} {ùïú‚ÇÅ : Type.{u4}} {ùïú‚ÇÇ : Type.{u3}} [_inst_1 : NontriviallyNormedField.{u4} ùïú‚ÇÅ] [_inst_2 : NormedField.{u3} ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : RingHom.{u4, u3} ùïú‚ÇÅ ùïú‚ÇÇ (Semiring.toNonAssocSemiring.{u4} ùïú‚ÇÅ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1)))))) (Semiring.toNonAssocSemiring.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))))} {M‚ÇÅ : Type.{u2}} {M‚ÇÇ : Type.{u1}} [_inst_3 : SeminormedAddCommGroup.{u2} M‚ÇÅ] [_inst_4 : AddCommGroup.{u1} M‚ÇÇ] [_inst_5 : NormedSpace.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3] [_inst_6 : Module.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4)] [_inst_7 : UniformSpace.{u1} M‚ÇÇ] [_inst_8 : UniformAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4)] [_inst_9 : ContinuousConstSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (SMulZeroClass.toSMul.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_4))))) (SMulWithZero.toSMulZeroClass.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (CommMonoidWithZero.toZero.{u3} ùïú‚ÇÇ (CommGroupWithZero.toCommMonoidWithZero.{u3} ùïú‚ÇÇ (Semifield.toCommGroupWithZero.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_4))))) (MulActionWithZero.toSMulWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (Semiring.toMonoidWithZero.{u3} ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2))))) (NegZeroClass.toZero.{u1} M‚ÇÇ (SubNegZeroMonoid.toNegZeroClass.{u1} M‚ÇÇ (SubtractionMonoid.toSubNegZeroMonoid.{u1} M‚ÇÇ (SubtractionCommMonoid.toSubtractionMonoid.{u1} M‚ÇÇ (AddCommGroup.toDivisionAddCommMonoid.{u1} M‚ÇÇ _inst_4))))) (Module.toMulActionWithZero.{u3, u1} ùïú‚ÇÇ M‚ÇÇ (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) _inst_6))))] [_inst_10 : T2Space.{u1} M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7)] [_inst_11 : CompleteSpace.{u1} M‚ÇÇ _inst_7] {l : Filter.{u5} Œπ} [_inst_12 : Filter.NeBot.{u5} Œπ l] {F : Œπ -> (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6)} {f : ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6}, (Filter.Tendsto.{u5, max u2 u1} Œπ (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) F l (nhds.{max u2 u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) (ContinuousLinearMap.topologicalSpace.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_2 œÉ‚ÇÅ‚ÇÇ M‚ÇÅ M‚ÇÇ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_4 _inst_6 (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (UniformAddGroup.to_topologicalAddGroup.{u1} M‚ÇÇ _inst_7 (AddCommGroup.toAddGroup.{u1} M‚ÇÇ _inst_4) _inst_8)) f)) -> (Filter.Eventually.{u5} Œπ (fun (i : Œπ) => IsCompactOperator.{u2, u1} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M‚ÇÅ) => M‚ÇÇ) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) M‚ÇÅ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6))) (F i))) l) -> (IsCompactOperator.{u2, u1} M‚ÇÅ M‚ÇÇ (NegZeroClass.toZero.{u2} M‚ÇÅ (SubNegZeroMonoid.toNegZeroClass.{u2} M‚ÇÅ (SubtractionMonoid.toSubNegZeroMonoid.{u2} M‚ÇÅ (SubtractionCommMonoid.toSubtractionMonoid.{u2} M‚ÇÅ (AddCommGroup.toDivisionAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)))))) (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (FunLike.coe.{max (succ u2) (succ u1), succ u2, succ u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) M‚ÇÅ (fun (_x : M‚ÇÅ) => (fun (x._@.Mathlib.Topology.ContinuousFunction.Basic._hyg.699 : M‚ÇÅ) => M‚ÇÇ) _x) (ContinuousMapClass.toFunLike.{max u2 u1, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) M‚ÇÅ M‚ÇÇ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (ContinuousSemilinearMapClass.toContinuousMapClass.{max u2 u1, u4, u3, u2, u1} (ContinuousLinearMap.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6) ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6 (ContinuousLinearMap.continuousSemilinearMapClass.{u4, u3, u2, u1} ùïú‚ÇÅ ùïú‚ÇÇ (DivisionSemiring.toSemiring.{u4} ùïú‚ÇÅ (Semifield.toDivisionSemiring.{u4} ùïú‚ÇÅ (Field.toSemifield.{u4} ùïú‚ÇÅ (NormedField.toField.{u4} ùïú‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1))))) (DivisionSemiring.toSemiring.{u3} ùïú‚ÇÇ (Semifield.toDivisionSemiring.{u3} ùïú‚ÇÇ (Field.toSemifield.{u3} ùïú‚ÇÇ (NormedField.toField.{u3} ùïú‚ÇÇ _inst_2)))) œÉ‚ÇÅ‚ÇÇ M‚ÇÅ (UniformSpace.toTopologicalSpace.{u2} M‚ÇÅ (PseudoMetricSpace.toUniformSpace.{u2} M‚ÇÅ (SeminormedAddCommGroup.toPseudoMetricSpace.{u2} M‚ÇÅ _inst_3))) (AddCommGroup.toAddCommMonoid.{u2} M‚ÇÅ (SeminormedAddCommGroup.toAddCommGroup.{u2} M‚ÇÅ _inst_3)) M‚ÇÇ (UniformSpace.toTopologicalSpace.{u1} M‚ÇÇ _inst_7) (AddCommGroup.toAddCommMonoid.{u1} M‚ÇÇ _inst_4) (NormedSpace.toModule.{u4, u2} ùïú‚ÇÅ M‚ÇÅ (NontriviallyNormedField.toNormedField.{u4} ùïú‚ÇÅ _inst_1) _inst_3 _inst_5) _inst_6))) f))
Case conversion may be inaccurate. Consider using '#align is_compact_operator_of_tendsto isCompactOperator_of_tendsto‚Çì'. -/
theorem isCompactOperator_of_tendsto {Œπ ùïú‚ÇÅ ùïú‚ÇÇ : Type _} [NontriviallyNormedField ùïú‚ÇÅ]
    [NormedField ùïú‚ÇÇ] {œÉ‚ÇÅ‚ÇÇ : ùïú‚ÇÅ ‚Üí+* ùïú‚ÇÇ} {M‚ÇÅ M‚ÇÇ : Type _} [SeminormedAddCommGroup M‚ÇÅ]
    [AddCommGroup M‚ÇÇ] [NormedSpace ùïú‚ÇÅ M‚ÇÅ] [Module ùïú‚ÇÇ M‚ÇÇ] [UniformSpace M‚ÇÇ] [UniformAddGroup M‚ÇÇ]
    [ContinuousConstSMul ùïú‚ÇÇ M‚ÇÇ] [T2Space M‚ÇÇ] [CompleteSpace M‚ÇÇ] {l : Filter Œπ} [l.ne_bot]
    {F : Œπ ‚Üí M‚ÇÅ ‚ÜíSL[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ} {f : M‚ÇÅ ‚ÜíSL[œÉ‚ÇÅ‚ÇÇ] M‚ÇÇ} (hf : Tendsto F l (ùìù f))
    (hF : ‚àÄ·∂† i in l, IsCompactOperator (F i)) : IsCompactOperator f :=
  isClosed_setOf_isCompactOperator.mem_of_tendsto hf hF
#align is_compact_operator_of_tendsto isCompactOperator_of_tendsto

