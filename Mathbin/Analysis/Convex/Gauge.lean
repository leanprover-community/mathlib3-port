/-
Copyright (c) 2021 Ya√´l Dillies, Bhavik Mehta. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Ya√´l Dillies, Bhavik Mehta

! This file was ported from Lean 3 source module analysis.convex.gauge
! leanprover-community/mathlib commit 3f655f5297b030a87d641ad4e825af8d9679eb0b
! Please do not edit these lines, except to modify the commit id
! if you have ported upstream changes.
-/
import Mathbin.Analysis.Convex.Basic
import Mathbin.Analysis.NormedSpace.Pointwise
import Mathbin.Analysis.Seminorm
import Mathbin.Data.IsROrC.Basic
import Mathbin.Tactic.Congrm

/-!
# The Minkowksi functional

This file defines the Minkowski functional, aka gauge.

The Minkowski functional of a set `s` is the function which associates each point to how much you
need to scale `s` for `x` to be inside it. When `s` is symmetric, convex and absorbent, its gauge is
a seminorm. Reciprocally, any seminorm arises as the gauge of some set, namely its unit ball. This
induces the equivalence of seminorms and locally convex topological vector spaces.

## Main declarations

For a real vector space,
* `gauge`: Aka Minkowksi functional. `gauge s x` is the least (actually, an infimum) `r` such
  that `x ‚àà r ‚Ä¢ s`.
* `gauge_seminorm`: The Minkowski functional as a seminorm, when `s` is symmetric, convex and
  absorbent.

## References

* [H. H. Schaefer, *Topological Vector Spaces*][schaefer1966]

## Tags

Minkowski functional, gauge
-/


open NormedField Set

open Pointwise

noncomputable section

variable {ùïú E F : Type _}

section AddCommGroup

variable [AddCommGroup E] [Module ‚Ñù E]

#print gauge /-
/-- The Minkowski functional. Given a set `s` in a real vector space, `gauge s` is the functional
which sends `x : E` to the smallest `r : ‚Ñù` such that `x` is in `s` scaled by `r`. -/
def gauge (s : Set E) (x : E) : ‚Ñù :=
  inf‚Çõ { r : ‚Ñù | 0 < r ‚àß x ‚àà r ‚Ä¢ s }
#align gauge gauge
-/

variable {s t : Set E} {a : ‚Ñù} {x : E}

/- warning: gauge_def -> gauge_def is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {x : E}, Eq.{1} Real (gauge.{u1} E _inst_1 _inst_2 s x) (InfSet.inf‚Çõ.{0} Real Real.hasInf (Sep.sep.{0, 0} Real (Set.{0} Real) (Set.hasSep.{0} Real) (fun (r : Real) => Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) x (SMul.smul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) r s)) (Set.Ioi.{0} Real Real.preorder (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))))))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {x : E}, Eq.{1} Real (gauge.{u1} E _inst_1 _inst_2 s x) (InfSet.inf‚Çõ.{0} Real Real.instInfSetReal (setOf.{0} Real (fun (r : Real) => And (Membership.mem.{0, 0} Real (Set.{0} Real) (Set.instMembershipSet.{0} Real) r (Set.Ioi.{0} Real Real.instPreorderReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)))) (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) x (HSMul.hSMul.{0, u1, u1} Real (Set.{u1} E) (Set.{u1} E) (instHSMul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))))) r s)))))
Case conversion may be inaccurate. Consider using '#align gauge_def gauge_def‚Çì'. -/
theorem gauge_def : gauge s x = inf‚Çõ ({ r ‚àà Set.Ioi 0 | x ‚àà r ‚Ä¢ s }) :=
  rfl
#align gauge_def gauge_def

/- warning: gauge_def' -> gauge_def' is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {x : E}, Eq.{1} Real (gauge.{u1} E _inst_1 _inst_2 s x) (InfSet.inf‚Çõ.{0} Real Real.hasInf (Sep.sep.{0, 0} Real (Set.{0} Real) (Set.hasSep.{0} Real) (fun (r : Real) => Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) (SMul.smul.{0, u1} Real E (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (Inv.inv.{0} Real Real.hasInv r) x) s) (Set.Ioi.{0} Real Real.preorder (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))))))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {x : E}, Eq.{1} Real (gauge.{u1} E _inst_1 _inst_2 s x) (InfSet.inf‚Çõ.{0} Real Real.instInfSetReal (setOf.{0} Real (fun (r : Real) => And (Membership.mem.{0, 0} Real (Set.{0} Real) (Set.instMembershipSet.{0} Real) r (Set.Ioi.{0} Real Real.instPreorderReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)))) (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) (HSMul.hSMul.{0, u1, u1} Real E E (instHSMul.{0, u1} Real E (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) (Inv.inv.{0} Real Real.instInvReal r) x) s))))
Case conversion may be inaccurate. Consider using '#align gauge_def' gauge_def'‚Çì'. -/
/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `congrm #[[expr Inf (Œª r, _)]] -/
/-- An alternative definition of the gauge using scalar multiplication on the element rather than on
the set. -/
theorem gauge_def' : gauge s x = inf‚Çõ ({ r ‚àà Set.Ioi 0 | r‚Åª¬π ‚Ä¢ x ‚àà s }) :=
  by
  trace
    "./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `congrm #[[expr Inf (Œª r, _)]]"
  exact and_congr_right fun hr => mem_smul_set_iff_inv_smul_mem‚ÇÄ hr.ne' _ _
#align gauge_def' gauge_def'

private theorem gauge_set_bdd_below : BddBelow { r : ‚Ñù | 0 < r ‚àß x ‚àà r ‚Ä¢ s } :=
  ‚ü®0, fun r hr => hr.1.le‚ü©
#align gauge_set_bdd_below gauge_set_bdd_below

/- warning: absorbent.gauge_set_nonempty -> Absorbent.gauge_set_nonempty is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {x : E}, (Absorbent.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (Set.Nonempty.{0} Real (setOf.{0} Real (fun (r : Real) => And (LT.lt.{0} Real Real.hasLt (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))) r) (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) x (SMul.smul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) r s)))))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {x : E}, (Absorbent.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (Set.Nonempty.{0} Real (setOf.{0} Real (fun (r : Real) => And (LT.lt.{0} Real Real.instLTReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)) r) (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) x (HSMul.hSMul.{0, u1, u1} Real (Set.{u1} E) (Set.{u1} E) (instHSMul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))))) r s)))))
Case conversion may be inaccurate. Consider using '#align absorbent.gauge_set_nonempty Absorbent.gauge_set_nonempty‚Çì'. -/
/-- If the given subset is `absorbent` then the set we take an infimum over in `gauge` is nonempty,
which is useful for proving many properties about the gauge.  -/
theorem Absorbent.gauge_set_nonempty (absorbs : Absorbent ‚Ñù s) :
    { r : ‚Ñù | 0 < r ‚àß x ‚àà r ‚Ä¢ s }.Nonempty :=
  let ‚ü®r, hr‚ÇÅ, hr‚ÇÇ‚ü© := Absorbs x
  ‚ü®r, hr‚ÇÅ, hr‚ÇÇ r (Real.norm_of_nonneg hr‚ÇÅ.le).ge‚ü©
#align absorbent.gauge_set_nonempty Absorbent.gauge_set_nonempty

/- warning: gauge_mono -> gauge_mono is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {t : Set.{u1} E}, (Absorbent.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (HasSubset.Subset.{u1} (Set.{u1} E) (Set.hasSubset.{u1} E) s t) -> (LE.le.{u1} (E -> Real) (Pi.hasLe.{u1, 0} E (fun (x : E) => Real) (fun (i : E) => Real.hasLe)) (gauge.{u1} E _inst_1 _inst_2 t) (gauge.{u1} E _inst_1 _inst_2 s))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {t : Set.{u1} E}, (Absorbent.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (HasSubset.Subset.{u1} (Set.{u1} E) (Set.instHasSubsetSet.{u1} E) s t) -> (LE.le.{u1} (E -> Real) (Pi.hasLe.{u1, 0} E (fun (x : E) => Real) (fun (i : E) => Real.instLEReal)) (gauge.{u1} E _inst_1 _inst_2 t) (gauge.{u1} E _inst_1 _inst_2 s))
Case conversion may be inaccurate. Consider using '#align gauge_mono gauge_mono‚Çì'. -/
theorem gauge_mono (hs : Absorbent ‚Ñù s) (h : s ‚äÜ t) : gauge t ‚â§ gauge s := fun x =>
  cinf‚Çõ_le_cinf‚Çõ gauge_set_bddBelow hs.gauge_set_nonempty fun r hr => ‚ü®hr.1, smul_set_mono h hr.2‚ü©
#align gauge_mono gauge_mono

/- warning: exists_lt_of_gauge_lt -> exists_lt_of_gauge_lt is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {a : Real} {x : E}, (Absorbent.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (LT.lt.{0} Real Real.hasLt (gauge.{u1} E _inst_1 _inst_2 s x) a) -> (Exists.{1} Real (fun (b : Real) => And (LT.lt.{0} Real Real.hasLt (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))) b) (And (LT.lt.{0} Real Real.hasLt b a) (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) x (SMul.smul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) b s)))))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {a : Real} {x : E}, (Absorbent.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (LT.lt.{0} Real Real.instLTReal (gauge.{u1} E _inst_1 _inst_2 s x) a) -> (Exists.{1} Real (fun (b : Real) => And (LT.lt.{0} Real Real.instLTReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)) b) (And (LT.lt.{0} Real Real.instLTReal b a) (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) x (HSMul.hSMul.{0, u1, u1} Real (Set.{u1} E) (Set.{u1} E) (instHSMul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))))) b s)))))
Case conversion may be inaccurate. Consider using '#align exists_lt_of_gauge_lt exists_lt_of_gauge_lt‚Çì'. -/
theorem exists_lt_of_gauge_lt (absorbs : Absorbent ‚Ñù s) (h : gauge s x < a) :
    ‚àÉ b, 0 < b ‚àß b < a ‚àß x ‚àà b ‚Ä¢ s :=
  by
  obtain ‚ü®b, ‚ü®hb, hx‚ü©, hba‚ü© := exists_lt_of_cinf‚Çõ_lt absorbs.gauge_set_nonempty h
  exact ‚ü®b, hb, hba, hx‚ü©
#align exists_lt_of_gauge_lt exists_lt_of_gauge_lt

/- warning: gauge_zero -> gauge_zero is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, Eq.{1} Real (gauge.{u1} E _inst_1 _inst_2 s (OfNat.ofNat.{u1} E 0 (OfNat.mk.{u1} E 0 (Zero.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))))))))) (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero)))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, Eq.{1} Real (gauge.{u1} E _inst_1 _inst_2 s (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1)))))))) (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal))
Case conversion may be inaccurate. Consider using '#align gauge_zero gauge_zero‚Çì'. -/
/-- The gauge evaluated at `0` is always zero (mathematically this requires `0` to be in the set `s`
but, the real infimum of the empty set in Lean being defined as `0`, it holds unconditionally). -/
@[simp]
theorem gauge_zero : gauge s 0 = 0 := by
  rw [gauge_def']
  by_cases (0 : E) ‚àà s
  ¬∑ simp only [smul_zero, sep_true, h, cinf‚Çõ_Ioi]
  ¬∑ simp only [smul_zero, sep_false, h, Real.inf‚Çõ_empty]
#align gauge_zero gauge_zero

/- warning: gauge_zero' -> gauge_zero' is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)], Eq.{succ u1} (E -> Real) (gauge.{u1} E _inst_1 _inst_2 (OfNat.ofNat.{u1} (Set.{u1} E) 0 (OfNat.mk.{u1} (Set.{u1} E) 0 (Zero.zero.{u1} (Set.{u1} E) (Set.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))))))) (OfNat.ofNat.{u1} (E -> Real) 0 (OfNat.mk.{u1} (E -> Real) 0 (Zero.zero.{u1} (E -> Real) (Pi.instZero.{u1, 0} E (fun (x : E) => Real) (fun (i : E) => Real.hasZero)))))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)], Eq.{succ u1} (E -> Real) (gauge.{u1} E _inst_1 _inst_2 (OfNat.ofNat.{u1} (Set.{u1} E) 0 (Zero.toOfNat0.{u1} (Set.{u1} E) (Set.zero.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))))))) (OfNat.ofNat.{u1} (E -> Real) 0 (Zero.toOfNat0.{u1} (E -> Real) (Pi.instZero.{u1, 0} E (fun (x : E) => Real) (fun (i : E) => Real.instZeroReal))))
Case conversion may be inaccurate. Consider using '#align gauge_zero' gauge_zero'‚Çì'. -/
@[simp]
theorem gauge_zero' : gauge (0 : Set E) = 0 := by
  ext
  rw [gauge_def']
  obtain rfl | hx := eq_or_ne x 0
  ¬∑ simp only [cinf‚Çõ_Ioi, mem_zero, Pi.zero_apply, eq_self_iff_true, sep_true, smul_zero]
  ¬∑ simp only [mem_zero, Pi.zero_apply, inv_eq_zero, smul_eq_zero]
    convert Real.inf‚Çõ_empty
    exact eq_empty_iff_forall_not_mem.2 fun r hr => hr.2.elim (ne_of_gt hr.1) hx
#align gauge_zero' gauge_zero'

/- warning: gauge_empty -> gauge_empty is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)], Eq.{succ u1} (E -> Real) (gauge.{u1} E _inst_1 _inst_2 (EmptyCollection.emptyCollection.{u1} (Set.{u1} E) (Set.hasEmptyc.{u1} E))) (OfNat.ofNat.{u1} (E -> Real) 0 (OfNat.mk.{u1} (E -> Real) 0 (Zero.zero.{u1} (E -> Real) (Pi.instZero.{u1, 0} E (fun (x : E) => Real) (fun (i : E) => Real.hasZero)))))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)], Eq.{succ u1} (E -> Real) (gauge.{u1} E _inst_1 _inst_2 (EmptyCollection.emptyCollection.{u1} (Set.{u1} E) (Set.instEmptyCollectionSet.{u1} E))) (OfNat.ofNat.{u1} (E -> Real) 0 (Zero.toOfNat0.{u1} (E -> Real) (Pi.instZero.{u1, 0} E (fun (x : E) => Real) (fun (i : E) => Real.instZeroReal))))
Case conversion may be inaccurate. Consider using '#align gauge_empty gauge_empty‚Çì'. -/
@[simp]
theorem gauge_empty : gauge (‚àÖ : Set E) = 0 := by
  ext
  simp only [gauge_def', Real.inf‚Çõ_empty, mem_empty_iff_false, Pi.zero_apply, sep_false]
#align gauge_empty gauge_empty

/- warning: gauge_of_subset_zero -> gauge_of_subset_zero is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, (HasSubset.Subset.{u1} (Set.{u1} E) (Set.hasSubset.{u1} E) s (OfNat.ofNat.{u1} (Set.{u1} E) 0 (OfNat.mk.{u1} (Set.{u1} E) 0 (Zero.zero.{u1} (Set.{u1} E) (Set.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))))))) -> (Eq.{succ u1} (E -> Real) (gauge.{u1} E _inst_1 _inst_2 s) (OfNat.ofNat.{u1} (E -> Real) 0 (OfNat.mk.{u1} (E -> Real) 0 (Zero.zero.{u1} (E -> Real) (Pi.instZero.{u1, 0} E (fun (x : E) => Real) (fun (i : E) => Real.hasZero))))))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, (HasSubset.Subset.{u1} (Set.{u1} E) (Set.instHasSubsetSet.{u1} E) s (OfNat.ofNat.{u1} (Set.{u1} E) 0 (Zero.toOfNat0.{u1} (Set.{u1} E) (Set.zero.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))))))) -> (Eq.{succ u1} (E -> Real) (gauge.{u1} E _inst_1 _inst_2 s) (OfNat.ofNat.{u1} (E -> Real) 0 (Zero.toOfNat0.{u1} (E -> Real) (Pi.instZero.{u1, 0} E (fun (x : E) => Real) (fun (i : E) => Real.instZeroReal)))))
Case conversion may be inaccurate. Consider using '#align gauge_of_subset_zero gauge_of_subset_zero‚Çì'. -/
theorem gauge_of_subset_zero (h : s ‚äÜ 0) : gauge s = 0 :=
  by
  obtain rfl | rfl := subset_singleton_iff_eq.1 h
  exacts[gauge_empty, gauge_zero']
#align gauge_of_subset_zero gauge_of_subset_zero

/- warning: gauge_nonneg -> gauge_nonneg is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} (x : E), LE.le.{0} Real Real.hasLe (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))) (gauge.{u1} E _inst_1 _inst_2 s x)
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} (x : E), LE.le.{0} Real Real.instLEReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)) (gauge.{u1} E _inst_1 _inst_2 s x)
Case conversion may be inaccurate. Consider using '#align gauge_nonneg gauge_nonneg‚Çì'. -/
/-- The gauge is always nonnegative. -/
theorem gauge_nonneg (x : E) : 0 ‚â§ gauge s x :=
  Real.inf‚Çõ_nonneg _ fun x hx => hx.1.le
#align gauge_nonneg gauge_nonneg

/- warning: gauge_neg -> gauge_neg is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, (forall (x : E), (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) x s) -> (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) (Neg.neg.{u1} E (SubNegMonoid.toHasNeg.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))) x) s)) -> (forall (x : E), Eq.{1} Real (gauge.{u1} E _inst_1 _inst_2 s (Neg.neg.{u1} E (SubNegMonoid.toHasNeg.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))) x)) (gauge.{u1} E _inst_1 _inst_2 s x))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, (forall (x : E), (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) x s) -> (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) (Neg.neg.{u1} E (NegZeroClass.toNeg.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) x) s)) -> (forall (x : E), Eq.{1} Real (gauge.{u1} E _inst_1 _inst_2 s (Neg.neg.{u1} E (NegZeroClass.toNeg.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) x)) (gauge.{u1} E _inst_1 _inst_2 s x))
Case conversion may be inaccurate. Consider using '#align gauge_neg gauge_neg‚Çì'. -/
theorem gauge_neg (symmetric : ‚àÄ x ‚àà s, -x ‚àà s) (x : E) : gauge s (-x) = gauge s x :=
  by
  have : ‚àÄ x, -x ‚àà s ‚Üî x ‚àà s := fun x => ‚ü®fun h => by simpa using Symmetric _ h, Symmetric x‚ü©
  simp_rw [gauge_def', smul_neg, this]
#align gauge_neg gauge_neg

/- warning: gauge_neg_set_neg -> gauge_neg_set_neg is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} (x : E), Eq.{1} Real (gauge.{u1} E _inst_1 _inst_2 (Neg.neg.{u1} (Set.{u1} E) (Set.neg.{u1} E (SubNegMonoid.toHasNeg.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))) s) (Neg.neg.{u1} E (SubNegMonoid.toHasNeg.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))) x)) (gauge.{u1} E _inst_1 _inst_2 s x)
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} (x : E), Eq.{1} Real (gauge.{u1} E _inst_1 _inst_2 (Neg.neg.{u1} (Set.{u1} E) (Set.neg.{u1} E (NegZeroClass.toNeg.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1)))))) s) (Neg.neg.{u1} E (NegZeroClass.toNeg.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) x)) (gauge.{u1} E _inst_1 _inst_2 s x)
Case conversion may be inaccurate. Consider using '#align gauge_neg_set_neg gauge_neg_set_neg‚Çì'. -/
theorem gauge_neg_set_neg (x : E) : gauge (-s) (-x) = gauge s x := by
  simp_rw [gauge_def', smul_neg, neg_mem_neg]
#align gauge_neg_set_neg gauge_neg_set_neg

/- warning: gauge_neg_set_eq_gauge_neg -> gauge_neg_set_eq_gauge_neg is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} (x : E), Eq.{1} Real (gauge.{u1} E _inst_1 _inst_2 (Neg.neg.{u1} (Set.{u1} E) (Set.neg.{u1} E (SubNegMonoid.toHasNeg.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))) s) x) (gauge.{u1} E _inst_1 _inst_2 s (Neg.neg.{u1} E (SubNegMonoid.toHasNeg.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))) x))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} (x : E), Eq.{1} Real (gauge.{u1} E _inst_1 _inst_2 (Neg.neg.{u1} (Set.{u1} E) (Set.neg.{u1} E (NegZeroClass.toNeg.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1)))))) s) x) (gauge.{u1} E _inst_1 _inst_2 s (Neg.neg.{u1} E (NegZeroClass.toNeg.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) x))
Case conversion may be inaccurate. Consider using '#align gauge_neg_set_eq_gauge_neg gauge_neg_set_eq_gauge_neg‚Çì'. -/
theorem gauge_neg_set_eq_gauge_neg (x : E) : gauge (-s) x = gauge s (-x) := by
  rw [‚Üê gauge_neg_set_neg, neg_neg]
#align gauge_neg_set_eq_gauge_neg gauge_neg_set_eq_gauge_neg

/- warning: gauge_le_of_mem -> gauge_le_of_mem is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {a : Real} {x : E}, (LE.le.{0} Real Real.hasLe (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))) a) -> (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) x (SMul.smul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) a s)) -> (LE.le.{0} Real Real.hasLe (gauge.{u1} E _inst_1 _inst_2 s x) a)
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {a : Real} {x : E}, (LE.le.{0} Real Real.instLEReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)) a) -> (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) x (HSMul.hSMul.{0, u1, u1} Real (Set.{u1} E) (Set.{u1} E) (instHSMul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))))) a s)) -> (LE.le.{0} Real Real.instLEReal (gauge.{u1} E _inst_1 _inst_2 s x) a)
Case conversion may be inaccurate. Consider using '#align gauge_le_of_mem gauge_le_of_mem‚Çì'. -/
theorem gauge_le_of_mem (ha : 0 ‚â§ a) (hx : x ‚àà a ‚Ä¢ s) : gauge s x ‚â§ a :=
  by
  obtain rfl | ha' := ha.eq_or_lt
  ¬∑ rw [mem_singleton_iff.1 (zero_smul_set_subset _ hx), gauge_zero]
  ¬∑ exact cinf‚Çõ_le gauge_set_bdd_below ‚ü®ha', hx‚ü©
#align gauge_le_of_mem gauge_le_of_mem

/- warning: gauge_le_eq -> gauge_le_eq is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {a : Real}, (Convex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) (OfNat.ofNat.{u1} E 0 (OfNat.mk.{u1} E 0 (Zero.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))))) s) -> (Absorbent.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (LE.le.{0} Real Real.hasLe (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))) a) -> (Eq.{succ u1} (Set.{u1} E) (setOf.{u1} E (fun (x : E) => LE.le.{0} Real Real.hasLe (gauge.{u1} E _inst_1 _inst_2 s x) a)) (Set.inter·µ¢.{u1, 1} E Real (fun (r : Real) => Set.inter·µ¢.{u1, 0} E (LT.lt.{0} Real Real.hasLt a r) (fun (H : LT.lt.{0} Real Real.hasLt a r) => SMul.smul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) r s))))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {a : Real}, (Convex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))))) s) -> (Absorbent.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (LE.le.{0} Real Real.instLEReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)) a) -> (Eq.{succ u1} (Set.{u1} E) (setOf.{u1} E (fun (x : E) => LE.le.{0} Real Real.instLEReal (gauge.{u1} E _inst_1 _inst_2 s x) a)) (Set.inter·µ¢.{u1, 1} E Real (fun (r : Real) => Set.inter·µ¢.{u1, 0} E (LT.lt.{0} Real Real.instLTReal a r) (fun (H : LT.lt.{0} Real Real.instLTReal a r) => HSMul.hSMul.{0, u1, u1} Real (Set.{u1} E) (Set.{u1} E) (instHSMul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))))) r s))))
Case conversion may be inaccurate. Consider using '#align gauge_le_eq gauge_le_eq‚Çì'. -/
theorem gauge_le_eq (hs‚ÇÅ : Convex ‚Ñù s) (hs‚ÇÄ : (0 : E) ‚àà s) (hs‚ÇÇ : Absorbent ‚Ñù s) (ha : 0 ‚â§ a) :
    { x | gauge s x ‚â§ a } = ‚ãÇ (r : ‚Ñù) (H : a < r), r ‚Ä¢ s :=
  by
  ext
  simp_rw [Set.mem_inter·µ¢, Set.mem_setOf_eq]
  refine' ‚ü®fun h r hr => _, fun h => le_of_forall_pos_lt_add fun Œµ hŒµ => _‚ü©
  ¬∑ have hr' := ha.trans_lt hr
    rw [mem_smul_set_iff_inv_smul_mem‚ÇÄ hr'.ne']
    obtain ‚ü®Œ¥, Œ¥_pos, hŒ¥r, hŒ¥‚ü© := exists_lt_of_gauge_lt hs‚ÇÇ (h.trans_lt hr)
    suffices (r‚Åª¬π * Œ¥) ‚Ä¢ Œ¥‚Åª¬π ‚Ä¢ x ‚àà s by rwa [smul_smul, mul_inv_cancel_right‚ÇÄ Œ¥_pos.ne'] at this
    rw [mem_smul_set_iff_inv_smul_mem‚ÇÄ Œ¥_pos.ne'] at hŒ¥
    refine' hs‚ÇÅ.smul_mem_of_zero_mem hs‚ÇÄ hŒ¥ ‚ü®by positivity, _‚ü©
    rw [inv_mul_le_iff hr', mul_one]
    exact hŒ¥r.le
  ¬∑ have hŒµ' := (lt_add_iff_pos_right a).2 (half_pos hŒµ)
    exact
      (gauge_le_of_mem (ha.trans hŒµ'.le) <| h _ hŒµ').trans_lt (add_lt_add_left (half_lt_self hŒµ) _)
#align gauge_le_eq gauge_le_eq

/- warning: gauge_lt_eq' -> gauge_lt_eq' is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, (Absorbent.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (forall (a : Real), Eq.{succ u1} (Set.{u1} E) (setOf.{u1} E (fun (x : E) => LT.lt.{0} Real Real.hasLt (gauge.{u1} E _inst_1 _inst_2 s x) a)) (Set.union·µ¢.{u1, 1} E Real (fun (r : Real) => Set.union·µ¢.{u1, 0} E (LT.lt.{0} Real Real.hasLt (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))) r) (fun (H : LT.lt.{0} Real Real.hasLt (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))) r) => Set.union·µ¢.{u1, 0} E (LT.lt.{0} Real Real.hasLt r a) (fun (H : LT.lt.{0} Real Real.hasLt r a) => SMul.smul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) r s)))))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, (Absorbent.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (forall (a : Real), Eq.{succ u1} (Set.{u1} E) (setOf.{u1} E (fun (x : E) => LT.lt.{0} Real Real.instLTReal (gauge.{u1} E _inst_1 _inst_2 s x) a)) (Set.union·µ¢.{u1, 1} E Real (fun (r : Real) => Set.union·µ¢.{u1, 0} E (LT.lt.{0} Real Real.instLTReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)) r) (fun (H : LT.lt.{0} Real Real.instLTReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)) r) => Set.union·µ¢.{u1, 0} E (LT.lt.{0} Real Real.instLTReal r a) (fun (H : LT.lt.{0} Real Real.instLTReal r a) => HSMul.hSMul.{0, u1, u1} Real (Set.{u1} E) (Set.{u1} E) (instHSMul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))))) r s)))))
Case conversion may be inaccurate. Consider using '#align gauge_lt_eq' gauge_lt_eq'‚Çì'. -/
theorem gauge_lt_eq' (absorbs : Absorbent ‚Ñù s) (a : ‚Ñù) :
    { x | gauge s x < a } = ‚ãÉ (r : ‚Ñù) (H : 0 < r) (H : r < a), r ‚Ä¢ s :=
  by
  ext
  simp_rw [mem_set_of_eq, mem_Union, exists_prop]
  exact
    ‚ü®exists_lt_of_gauge_lt Absorbs, fun ‚ü®r, hr‚ÇÄ, hr‚ÇÅ, hx‚ü© =>
      (gauge_le_of_mem hr‚ÇÄ.le hx).trans_lt hr‚ÇÅ‚ü©
#align gauge_lt_eq' gauge_lt_eq'

/- warning: gauge_lt_eq -> gauge_lt_eq is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, (Absorbent.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (forall (a : Real), Eq.{succ u1} (Set.{u1} E) (setOf.{u1} E (fun (x : E) => LT.lt.{0} Real Real.hasLt (gauge.{u1} E _inst_1 _inst_2 s x) a)) (Set.union·µ¢.{u1, 1} E Real (fun (r : Real) => Set.union·µ¢.{u1, 0} E (Membership.Mem.{0, 0} Real (Set.{0} Real) (Set.hasMem.{0} Real) r (Set.Ioo.{0} Real Real.preorder (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))) a)) (fun (H : Membership.Mem.{0, 0} Real (Set.{0} Real) (Set.hasMem.{0} Real) r (Set.Ioo.{0} Real Real.preorder (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))) a)) => SMul.smul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) r s))))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, (Absorbent.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (forall (a : Real), Eq.{succ u1} (Set.{u1} E) (setOf.{u1} E (fun (x : E) => LT.lt.{0} Real Real.instLTReal (gauge.{u1} E _inst_1 _inst_2 s x) a)) (Set.union·µ¢.{u1, 1} E Real (fun (r : Real) => Set.union·µ¢.{u1, 0} E (Membership.mem.{0, 0} Real (Set.{0} Real) (Set.instMembershipSet.{0} Real) r (Set.Ioo.{0} Real Real.instPreorderReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)) a)) (fun (H : Membership.mem.{0, 0} Real (Set.{0} Real) (Set.instMembershipSet.{0} Real) r (Set.Ioo.{0} Real Real.instPreorderReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)) a)) => HSMul.hSMul.{0, u1, u1} Real (Set.{u1} E) (Set.{u1} E) (instHSMul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))))) r s))))
Case conversion may be inaccurate. Consider using '#align gauge_lt_eq gauge_lt_eq‚Çì'. -/
theorem gauge_lt_eq (absorbs : Absorbent ‚Ñù s) (a : ‚Ñù) :
    { x | gauge s x < a } = ‚ãÉ r ‚àà Set.Ioo 0 (a : ‚Ñù), r ‚Ä¢ s :=
  by
  ext
  simp_rw [mem_set_of_eq, mem_Union, exists_prop, mem_Ioo, and_assoc']
  exact
    ‚ü®exists_lt_of_gauge_lt Absorbs, fun ‚ü®r, hr‚ÇÄ, hr‚ÇÅ, hx‚ü© =>
      (gauge_le_of_mem hr‚ÇÄ.le hx).trans_lt hr‚ÇÅ‚ü©
#align gauge_lt_eq gauge_lt_eq

/- warning: gauge_lt_one_subset_self -> gauge_lt_one_subset_self is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, (Convex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) (OfNat.ofNat.{u1} E 0 (OfNat.mk.{u1} E 0 (Zero.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))))) s) -> (Absorbent.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (HasSubset.Subset.{u1} (Set.{u1} E) (Set.hasSubset.{u1} E) (setOf.{u1} E (fun (x : E) => LT.lt.{0} Real Real.hasLt (gauge.{u1} E _inst_1 _inst_2 s x) (OfNat.ofNat.{0} Real 1 (OfNat.mk.{0} Real 1 (One.one.{0} Real Real.hasOne))))) s)
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, (Convex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))))) s) -> (Absorbent.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (HasSubset.Subset.{u1} (Set.{u1} E) (Set.instHasSubsetSet.{u1} E) (setOf.{u1} E (fun (x : E) => LT.lt.{0} Real Real.instLTReal (gauge.{u1} E _inst_1 _inst_2 s x) (OfNat.ofNat.{0} Real 1 (One.toOfNat1.{0} Real Real.instOneReal)))) s)
Case conversion may be inaccurate. Consider using '#align gauge_lt_one_subset_self gauge_lt_one_subset_self‚Çì'. -/
theorem gauge_lt_one_subset_self (hs : Convex ‚Ñù s) (h‚ÇÄ : (0 : E) ‚àà s) (absorbs : Absorbent ‚Ñù s) :
    { x | gauge s x < 1 } ‚äÜ s := by
  rw [gauge_lt_eq Absorbs]
  refine' Set.union·µ¢‚ÇÇ_subset fun r hr _ => _
  rintro ‚ü®y, hy, rfl‚ü©
  exact hs.smul_mem_of_zero_mem h‚ÇÄ hy (Ioo_subset_Icc_self hr)
#align gauge_lt_one_subset_self gauge_lt_one_subset_self

/- warning: gauge_le_one_of_mem -> gauge_le_one_of_mem is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {x : E}, (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) x s) -> (LE.le.{0} Real Real.hasLe (gauge.{u1} E _inst_1 _inst_2 s x) (OfNat.ofNat.{0} Real 1 (OfNat.mk.{0} Real 1 (One.one.{0} Real Real.hasOne))))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {x : E}, (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) x s) -> (LE.le.{0} Real Real.instLEReal (gauge.{u1} E _inst_1 _inst_2 s x) (OfNat.ofNat.{0} Real 1 (One.toOfNat1.{0} Real Real.instOneReal)))
Case conversion may be inaccurate. Consider using '#align gauge_le_one_of_mem gauge_le_one_of_mem‚Çì'. -/
theorem gauge_le_one_of_mem {x : E} (hx : x ‚àà s) : gauge s x ‚â§ 1 :=
  gauge_le_of_mem zero_le_one <| by rwa [one_smul]
#align gauge_le_one_of_mem gauge_le_one_of_mem

/- warning: self_subset_gauge_le_one -> self_subset_gauge_le_one is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, HasSubset.Subset.{u1} (Set.{u1} E) (Set.hasSubset.{u1} E) s (setOf.{u1} E (fun (x : E) => LE.le.{0} Real Real.hasLe (gauge.{u1} E _inst_1 _inst_2 s x) (OfNat.ofNat.{0} Real 1 (OfNat.mk.{0} Real 1 (One.one.{0} Real Real.hasOne)))))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, HasSubset.Subset.{u1} (Set.{u1} E) (Set.instHasSubsetSet.{u1} E) s (setOf.{u1} E (fun (x : E) => LE.le.{0} Real Real.instLEReal (gauge.{u1} E _inst_1 _inst_2 s x) (OfNat.ofNat.{0} Real 1 (One.toOfNat1.{0} Real Real.instOneReal))))
Case conversion may be inaccurate. Consider using '#align self_subset_gauge_le_one self_subset_gauge_le_one‚Çì'. -/
theorem self_subset_gauge_le_one : s ‚äÜ { x | gauge s x ‚â§ 1 } := fun x => gauge_le_one_of_mem
#align self_subset_gauge_le_one self_subset_gauge_le_one

/- warning: convex.gauge_le -> Convex.gauge_le is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, (Convex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) (OfNat.ofNat.{u1} E 0 (OfNat.mk.{u1} E 0 (Zero.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))))) s) -> (Absorbent.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (forall (a : Real), Convex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (setOf.{u1} E (fun (x : E) => LE.le.{0} Real Real.hasLe (gauge.{u1} E _inst_1 _inst_2 s x) a)))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, (Convex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))))) s) -> (Absorbent.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (forall (a : Real), Convex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (setOf.{u1} E (fun (x : E) => LE.le.{0} Real Real.instLEReal (gauge.{u1} E _inst_1 _inst_2 s x) a)))
Case conversion may be inaccurate. Consider using '#align convex.gauge_le Convex.gauge_le‚Çì'. -/
theorem Convex.gauge_le (hs : Convex ‚Ñù s) (h‚ÇÄ : (0 : E) ‚àà s) (absorbs : Absorbent ‚Ñù s) (a : ‚Ñù) :
    Convex ‚Ñù { x | gauge s x ‚â§ a } := by
  by_cases ha : 0 ‚â§ a
  ¬∑ rw [gauge_le_eq hs h‚ÇÄ Absorbs ha]
    exact convex_inter·µ¢ fun i => convex_inter·µ¢ fun hi => hs.smul _
  ¬∑ convert convex_empty
    exact eq_empty_iff_forall_not_mem.2 fun x hx => ha <| (gauge_nonneg _).trans hx
#align convex.gauge_le Convex.gauge_le

/- warning: balanced.star_convex -> Balanced.starConvex is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, (Balanced.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (StarConvex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (OfNat.ofNat.{u1} E 0 (OfNat.mk.{u1} E 0 (Zero.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))))) s)
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, (Balanced.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (StarConvex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))))) s)
Case conversion may be inaccurate. Consider using '#align balanced.star_convex Balanced.starConvex‚Çì'. -/
theorem Balanced.starConvex (hs : Balanced ‚Ñù s) : StarConvex ‚Ñù 0 s :=
  starConvex_zero_iff.2 fun x hx a ha‚ÇÄ ha‚ÇÅ =>
    hs _ (by rwa [Real.norm_of_nonneg ha‚ÇÄ]) (smul_mem_smul_set hx)
#align balanced.star_convex Balanced.starConvex

/- warning: le_gauge_of_not_mem -> le_gauge_of_not_mem is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {a : Real} {x : E}, (StarConvex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (OfNat.ofNat.{u1} E 0 (OfNat.mk.{u1} E 0 (Zero.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))))) s) -> (Absorbs.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s (Singleton.singleton.{u1, u1} E (Set.{u1} E) (Set.hasSingleton.{u1} E) x)) -> (Not (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) x (SMul.smul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) a s))) -> (LE.le.{0} Real Real.hasLe a (gauge.{u1} E _inst_1 _inst_2 s x))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {a : Real} {x : E}, (StarConvex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))))) s) -> (Absorbs.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s (Singleton.singleton.{u1, u1} E (Set.{u1} E) (Set.instSingletonSet.{u1} E) x)) -> (Not (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) x (HSMul.hSMul.{0, u1, u1} Real (Set.{u1} E) (Set.{u1} E) (instHSMul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))))) a s))) -> (LE.le.{0} Real Real.instLEReal a (gauge.{u1} E _inst_1 _inst_2 s x))
Case conversion may be inaccurate. Consider using '#align le_gauge_of_not_mem le_gauge_of_not_mem‚Çì'. -/
theorem le_gauge_of_not_mem (hs‚ÇÄ : StarConvex ‚Ñù 0 s) (hs‚ÇÇ : Absorbs ‚Ñù s {x}) (hx : x ‚àâ a ‚Ä¢ s) :
    a ‚â§ gauge s x := by
  rw [starConvex_zero_iff] at hs‚ÇÄ
  obtain ‚ü®r, hr, h‚ü© := hs‚ÇÇ
  refine' le_cinf‚Çõ ‚ü®r, hr, singleton_subset_iff.1 <| h _ (Real.norm_of_nonneg hr.le).ge‚ü© _
  rintro b ‚ü®hb, x, hx', rfl‚ü©
  refine' not_lt.1 fun hba => hx _
  have ha := hb.trans hba
  refine' ‚ü®(a‚Åª¬π * b) ‚Ä¢ x, hs‚ÇÄ hx' (by positivity) _, _‚ü©
  ¬∑ rw [‚Üê div_eq_inv_mul]
    exact div_le_one_of_le hba.le ha.le
  ¬∑ rw [‚Üê mul_smul, mul_inv_cancel_left‚ÇÄ ha.ne']
#align le_gauge_of_not_mem le_gauge_of_not_mem

/- warning: one_le_gauge_of_not_mem -> one_le_gauge_of_not_mem is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {x : E}, (StarConvex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (OfNat.ofNat.{u1} E 0 (OfNat.mk.{u1} E 0 (Zero.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))))) s) -> (Absorbs.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s (Singleton.singleton.{u1, u1} E (Set.{u1} E) (Set.hasSingleton.{u1} E) x)) -> (Not (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) x s)) -> (LE.le.{0} Real Real.hasLe (OfNat.ofNat.{0} Real 1 (OfNat.mk.{0} Real 1 (One.one.{0} Real Real.hasOne))) (gauge.{u1} E _inst_1 _inst_2 s x))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} {x : E}, (StarConvex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))))) s) -> (Absorbs.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s (Singleton.singleton.{u1, u1} E (Set.{u1} E) (Set.instSingletonSet.{u1} E) x)) -> (Not (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) x s)) -> (LE.le.{0} Real Real.instLEReal (OfNat.ofNat.{0} Real 1 (One.toOfNat1.{0} Real Real.instOneReal)) (gauge.{u1} E _inst_1 _inst_2 s x))
Case conversion may be inaccurate. Consider using '#align one_le_gauge_of_not_mem one_le_gauge_of_not_mem‚Çì'. -/
theorem one_le_gauge_of_not_mem (hs‚ÇÅ : StarConvex ‚Ñù 0 s) (hs‚ÇÇ : Absorbs ‚Ñù s {x}) (hx : x ‚àâ s) :
    1 ‚â§ gauge s x :=
  le_gauge_of_not_mem hs‚ÇÅ hs‚ÇÇ <| by rwa [one_smul]
#align one_le_gauge_of_not_mem one_le_gauge_of_not_mem

section LinearOrderedField

variable {Œ± : Type _} [LinearOrderedField Œ±] [MulActionWithZero Œ± ‚Ñù] [OrderedSMul Œ± ‚Ñù]

/- warning: gauge_smul_of_nonneg -> gauge_smul_of_nonneg is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {Œ± : Type.{u2}} [_inst_3 : LinearOrderedField.{u2} Œ±] [_inst_4 : MulActionWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) Real.hasZero] [_inst_5 : OrderedSMul.{u2, 0} Œ± Real (StrictOrderedSemiring.toOrderedSemiring.{u2} Œ± (StrictOrderedRing.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedRing.toStrictOrderedRing.{u2} Œ± (LinearOrderedCommRing.toLinearOrderedRing.{u2} Œ± (LinearOrderedField.toLinearOrderedCommRing.{u2} Œ± _inst_3))))) Real.orderedAddCommMonoid (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) (AddZeroClass.toHasZero.{0} Real (AddMonoid.toAddZeroClass.{0} Real (AddCommMonoid.toAddMonoid.{0} Real (OrderedAddCommMonoid.toAddCommMonoid.{0} Real Real.orderedAddCommMonoid)))) _inst_4)] [_inst_6 : MulActionWithZero.{u2, u1} Œ± E (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))] [_inst_7 : IsScalarTower.{u2, 0, u1} Œ± Real (Set.{u1} E) (SMulZeroClass.toHasSmul.{u2, 0} Œ± Real Real.hasZero (SMulWithZero.toSmulZeroClass.{u2, 0} Œ± Real (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) Real.hasZero (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) Real.hasZero _inst_4))) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) (Set.smulSet.{u2, u1} Œ± E (SMulZeroClass.toHasSmul.{u2, u1} Œ± E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))))) (SMulWithZero.toSmulZeroClass.{u2, u1} Œ± E (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u2, u1} Œ± E (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))))) _inst_6))))] {s : Set.{u1} E} {a : Œ±}, (LE.le.{u2} Œ± (Preorder.toLE.{u2} Œ± (PartialOrder.toPreorder.{u2} Œ± (OrderedAddCommGroup.toPartialOrder.{u2} Œ± (StrictOrderedRing.toOrderedAddCommGroup.{u2} Œ± (LinearOrderedRing.toStrictOrderedRing.{u2} Œ± (LinearOrderedCommRing.toLinearOrderedRing.{u2} Œ± (LinearOrderedField.toLinearOrderedCommRing.{u2} Œ± _inst_3))))))) (OfNat.ofNat.{u2} Œ± 0 (OfNat.mk.{u2} Œ± 0 (Zero.zero.{u2} Œ± (MulZeroClass.toHasZero.{u2} Œ± (NonUnitalNonAssocSemiring.toMulZeroClass.{u2} Œ± (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} Œ± (NonAssocRing.toNonUnitalNonAssocRing.{u2} Œ± (Ring.toNonAssocRing.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))))))))) a) -> (forall (x : E), Eq.{1} Real (gauge.{u1} E _inst_1 _inst_2 s (SMul.smul.{u2, u1} Œ± E (SMulZeroClass.toHasSmul.{u2, u1} Œ± E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))))) (SMulWithZero.toSmulZeroClass.{u2, u1} Œ± E (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u2, u1} Œ± E (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))))) _inst_6))) a x)) (SMul.smul.{u2, 0} Œ± Real (SMulZeroClass.toHasSmul.{u2, 0} Œ± Real Real.hasZero (SMulWithZero.toSmulZeroClass.{u2, 0} Œ± Real (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) Real.hasZero (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) Real.hasZero _inst_4))) a (gauge.{u1} E _inst_1 _inst_2 s x)))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {Œ± : Type.{u2}} [_inst_3 : LinearOrderedField.{u2} Œ±] [_inst_4 : MulActionWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) Real.instZeroReal] [_inst_5 : OrderedSMul.{u2, 0} Œ± Real (OrderedCommSemiring.toOrderedSemiring.{u2} Œ± (StrictOrderedCommSemiring.toOrderedCommSemiring.{u2} Œ± (LinearOrderedCommSemiring.toStrictOrderedCommSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) Real.orderedAddCommMonoid (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) (AddMonoid.toZero.{0} Real (AddCommMonoid.toAddMonoid.{0} Real (OrderedAddCommMonoid.toAddCommMonoid.{0} Real Real.orderedAddCommMonoid))) _inst_4)] [_inst_6 : MulActionWithZero.{u2, u1} Œ± E (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1)))))] [_inst_7 : IsScalarTower.{u2, 0, u1} Œ± Real (Set.{u1} E) (SMulZeroClass.toSMul.{u2, 0} Œ± Real Real.instZeroReal (SMulWithZero.toSMulZeroClass.{u2, 0} Œ± Real (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) Real.instZeroReal (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) Real.instZeroReal _inst_4))) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) (Set.smulSet.{u2, u1} Œ± E (SMulZeroClass.toSMul.{u2, u1} Œ± E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u2, u1} Œ± E (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u2, u1} Œ± E (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) _inst_6))))] {s : Set.{u1} E} {a : Œ±}, (LE.le.{u2} Œ± (Preorder.toLE.{u2} Œ± (PartialOrder.toPreorder.{u2} Œ± (StrictOrderedRing.toPartialOrder.{u2} Œ± (LinearOrderedRing.toStrictOrderedRing.{u2} Œ± (LinearOrderedCommRing.toLinearOrderedRing.{u2} Œ± (LinearOrderedField.toLinearOrderedCommRing.{u2} Œ± _inst_3)))))) (OfNat.ofNat.{u2} Œ± 0 (Zero.toOfNat0.{u2} Œ± (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))))) a) -> (forall (x : E), Eq.{1} Real (gauge.{u1} E _inst_1 _inst_2 s (HSMul.hSMul.{u2, u1, u1} Œ± E E (instHSMul.{u2, u1} Œ± E (SMulZeroClass.toSMul.{u2, u1} Œ± E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u2, u1} Œ± E (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u2, u1} Œ± E (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) _inst_6)))) a x)) (HSMul.hSMul.{u2, 0, 0} Œ± Real Real (instHSMul.{u2, 0} Œ± Real (SMulZeroClass.toSMul.{u2, 0} Œ± Real Real.instZeroReal (SMulWithZero.toSMulZeroClass.{u2, 0} Œ± Real (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) Real.instZeroReal (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) Real.instZeroReal _inst_4)))) a (gauge.{u1} E _inst_1 _inst_2 s x)))
Case conversion may be inaccurate. Consider using '#align gauge_smul_of_nonneg gauge_smul_of_nonneg‚Çì'. -/
theorem gauge_smul_of_nonneg [MulActionWithZero Œ± E] [IsScalarTower Œ± ‚Ñù (Set E)] {s : Set E} {a : Œ±}
    (ha : 0 ‚â§ a) (x : E) : gauge s (a ‚Ä¢ x) = a ‚Ä¢ gauge s x :=
  by
  obtain rfl | ha' := ha.eq_or_lt
  ¬∑ rw [zero_smul, gauge_zero, zero_smul]
  rw [gauge_def', gauge_def', ‚Üê Real.inf‚Çõ_smul_of_nonneg ha]
  congr 1
  ext r
  simp_rw [Set.mem_smul_set, Set.mem_sep_iff]
  constructor
  ¬∑ rintro ‚ü®hr, hx‚ü©
    simp_rw [mem_Ioi] at hr‚ä¢
    rw [‚Üê mem_smul_set_iff_inv_smul_mem‚ÇÄ hr.ne'] at hx
    have := smul_pos (inv_pos.2 ha') hr
    refine' ‚ü®a‚Åª¬π ‚Ä¢ r, ‚ü®this, _‚ü©, smul_inv_smul‚ÇÄ ha'.ne' _‚ü©
    rwa [‚Üê mem_smul_set_iff_inv_smul_mem‚ÇÄ this.ne', smul_assoc,
      mem_smul_set_iff_inv_smul_mem‚ÇÄ (inv_ne_zero ha'.ne'), inv_inv]
  ¬∑ rintro ‚ü®r, ‚ü®hr, hx‚ü©, rfl‚ü©
    rw [mem_Ioi] at hr‚ä¢
    rw [‚Üê mem_smul_set_iff_inv_smul_mem‚ÇÄ hr.ne'] at hx
    have := smul_pos ha' hr
    refine' ‚ü®this, _‚ü©
    rw [‚Üê mem_smul_set_iff_inv_smul_mem‚ÇÄ this.ne', smul_assoc]
    exact smul_mem_smul_set hx
#align gauge_smul_of_nonneg gauge_smul_of_nonneg

/- warning: gauge_smul_left_of_nonneg -> gauge_smul_left_of_nonneg is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {Œ± : Type.{u2}} [_inst_3 : LinearOrderedField.{u2} Œ±] [_inst_4 : MulActionWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) Real.hasZero] [_inst_5 : OrderedSMul.{u2, 0} Œ± Real (StrictOrderedSemiring.toOrderedSemiring.{u2} Œ± (StrictOrderedRing.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedRing.toStrictOrderedRing.{u2} Œ± (LinearOrderedCommRing.toLinearOrderedRing.{u2} Œ± (LinearOrderedField.toLinearOrderedCommRing.{u2} Œ± _inst_3))))) Real.orderedAddCommMonoid (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) (AddZeroClass.toHasZero.{0} Real (AddMonoid.toAddZeroClass.{0} Real (AddCommMonoid.toAddMonoid.{0} Real (OrderedAddCommMonoid.toAddCommMonoid.{0} Real Real.orderedAddCommMonoid)))) _inst_4)] [_inst_6 : MulActionWithZero.{u2, u1} Œ± E (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))] [_inst_7 : SMulCommClass.{u2, 0, 0} Œ± Real Real (SMulZeroClass.toHasSmul.{u2, 0} Œ± Real Real.hasZero (SMulWithZero.toSmulZeroClass.{u2, 0} Œ± Real (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) Real.hasZero (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) Real.hasZero _inst_4))) (Mul.toSMul.{0} Real Real.hasMul)] [_inst_8 : IsScalarTower.{u2, 0, 0} Œ± Real Real (SMulZeroClass.toHasSmul.{u2, 0} Œ± Real Real.hasZero (SMulWithZero.toSmulZeroClass.{u2, 0} Œ± Real (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) Real.hasZero (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) Real.hasZero _inst_4))) (Mul.toSMul.{0} Real Real.hasMul) (SMulZeroClass.toHasSmul.{u2, 0} Œ± Real Real.hasZero (SMulWithZero.toSmulZeroClass.{u2, 0} Œ± Real (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) Real.hasZero (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) Real.hasZero _inst_4)))] [_inst_9 : IsScalarTower.{u2, 0, u1} Œ± Real E (SMulZeroClass.toHasSmul.{u2, 0} Œ± Real Real.hasZero (SMulWithZero.toSmulZeroClass.{u2, 0} Œ± Real (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) Real.hasZero (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) Real.hasZero _inst_4))) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (SMulZeroClass.toHasSmul.{u2, u1} Œ± E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))))) (SMulWithZero.toSmulZeroClass.{u2, u1} Œ± E (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u2, u1} Œ± E (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))))) _inst_6)))] {s : Set.{u1} E} {a : Œ±}, (LE.le.{u2} Œ± (Preorder.toLE.{u2} Œ± (PartialOrder.toPreorder.{u2} Œ± (OrderedAddCommGroup.toPartialOrder.{u2} Œ± (StrictOrderedRing.toOrderedAddCommGroup.{u2} Œ± (LinearOrderedRing.toStrictOrderedRing.{u2} Œ± (LinearOrderedCommRing.toLinearOrderedRing.{u2} Œ± (LinearOrderedField.toLinearOrderedCommRing.{u2} Œ± _inst_3))))))) (OfNat.ofNat.{u2} Œ± 0 (OfNat.mk.{u2} Œ± 0 (Zero.zero.{u2} Œ± (MulZeroClass.toHasZero.{u2} Œ± (NonUnitalNonAssocSemiring.toMulZeroClass.{u2} Œ± (NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring.{u2} Œ± (NonAssocRing.toNonUnitalNonAssocRing.{u2} Œ± (Ring.toNonAssocRing.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))))))))) a) -> (Eq.{succ u1} (E -> Real) (gauge.{u1} E _inst_1 _inst_2 (SMul.smul.{u2, u1} Œ± (Set.{u1} E) (Set.smulSet.{u2, u1} Œ± E (SMulZeroClass.toHasSmul.{u2, u1} Œ± E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))))) (SMulWithZero.toSmulZeroClass.{u2, u1} Œ± E (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u2, u1} Œ± E (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))))) _inst_6)))) a s)) (SMul.smul.{u2, u1} Œ± (E -> Real) (Function.hasSMul.{u1, u2, 0} E Œ± Real (SMulZeroClass.toHasSmul.{u2, 0} Œ± Real Real.hasZero (SMulWithZero.toSmulZeroClass.{u2, 0} Œ± Real (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) Real.hasZero (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) Real.hasZero _inst_4)))) (Inv.inv.{u2} Œ± (DivInvMonoid.toHasInv.{u2} Œ± (DivisionRing.toDivInvMonoid.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))) a) (gauge.{u1} E _inst_1 _inst_2 s)))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {Œ± : Type.{u2}} [_inst_3 : LinearOrderedField.{u2} Œ±] [_inst_4 : MulActionWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) Real.instZeroReal] [_inst_5 : OrderedSMul.{u2, 0} Œ± Real (OrderedCommSemiring.toOrderedSemiring.{u2} Œ± (StrictOrderedCommSemiring.toOrderedCommSemiring.{u2} Œ± (LinearOrderedCommSemiring.toStrictOrderedCommSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) Real.orderedAddCommMonoid (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) (AddMonoid.toZero.{0} Real (AddCommMonoid.toAddMonoid.{0} Real (OrderedAddCommMonoid.toAddCommMonoid.{0} Real Real.orderedAddCommMonoid))) _inst_4)] [_inst_6 : MulActionWithZero.{u2, u1} Œ± E (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1)))))] [_inst_7 : SMulCommClass.{u2, 0, 0} Œ± Real Real (SMulZeroClass.toSMul.{u2, 0} Œ± Real Real.instZeroReal (SMulWithZero.toSMulZeroClass.{u2, 0} Œ± Real (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) Real.instZeroReal (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) Real.instZeroReal _inst_4))) (Algebra.toSMul.{0, 0} Real Real Real.instCommSemiringReal Real.semiring (NormedAlgebra.toAlgebra.{0, 0} Real Real Real.normedField (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (IsROrC.toNormedAlgebra.{0} Real Real.isROrC)))] [_inst_8 : IsScalarTower.{u2, 0, 0} Œ± Real Real (SMulZeroClass.toSMul.{u2, 0} Œ± Real Real.instZeroReal (SMulWithZero.toSMulZeroClass.{u2, 0} Œ± Real (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) Real.instZeroReal (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) Real.instZeroReal _inst_4))) (Algebra.toSMul.{0, 0} Real Real Real.instCommSemiringReal Real.semiring (NormedAlgebra.toAlgebra.{0, 0} Real Real Real.normedField (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (IsROrC.toNormedAlgebra.{0} Real Real.isROrC))) (SMulZeroClass.toSMul.{u2, 0} Œ± Real Real.instZeroReal (SMulWithZero.toSMulZeroClass.{u2, 0} Œ± Real (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) Real.instZeroReal (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) Real.instZeroReal _inst_4)))] [_inst_9 : IsScalarTower.{u2, 0, u1} Œ± Real E (SMulZeroClass.toSMul.{u2, 0} Œ± Real Real.instZeroReal (SMulWithZero.toSMulZeroClass.{u2, 0} Œ± Real (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) Real.instZeroReal (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) Real.instZeroReal _inst_4))) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (SMulZeroClass.toSMul.{u2, u1} Œ± E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u2, u1} Œ± E (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u2, u1} Œ± E (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) _inst_6)))] {s : Set.{u1} E} {a : Œ±}, (LE.le.{u2} Œ± (Preorder.toLE.{u2} Œ± (PartialOrder.toPreorder.{u2} Œ± (StrictOrderedRing.toPartialOrder.{u2} Œ± (LinearOrderedRing.toStrictOrderedRing.{u2} Œ± (LinearOrderedCommRing.toLinearOrderedRing.{u2} Œ± (LinearOrderedField.toLinearOrderedCommRing.{u2} Œ± _inst_3)))))) (OfNat.ofNat.{u2} Œ± 0 (Zero.toOfNat0.{u2} Œ± (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))))) a) -> (Eq.{succ u1} (E -> Real) (gauge.{u1} E _inst_1 _inst_2 (HSMul.hSMul.{u2, u1, u1} Œ± (Set.{u1} E) (Set.{u1} E) (instHSMul.{u2, u1} Œ± (Set.{u1} E) (Set.smulSet.{u2, u1} Œ± E (SMulZeroClass.toSMul.{u2, u1} Œ± E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u2, u1} Œ± E (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u2, u1} Œ± E (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) _inst_6))))) a s)) (HSMul.hSMul.{u2, u1, u1} Œ± (E -> Real) (E -> Real) (instHSMul.{u2, u1} Œ± (E -> Real) (Pi.instSMul.{u1, 0, u2} E Œ± (fun (x : E) => Real) (fun (i : E) => SMulZeroClass.toSMul.{u2, 0} Œ± Real Real.instZeroReal (SMulWithZero.toSMulZeroClass.{u2, 0} Œ± Real (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) Real.instZeroReal (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) Real.instZeroReal _inst_4))))) (Inv.inv.{u2} Œ± (LinearOrderedField.toInv.{u2} Œ± _inst_3) a) (gauge.{u1} E _inst_1 _inst_2 s)))
Case conversion may be inaccurate. Consider using '#align gauge_smul_left_of_nonneg gauge_smul_left_of_nonneg‚Çì'. -/
theorem gauge_smul_left_of_nonneg [MulActionWithZero Œ± E] [SMulCommClass Œ± ‚Ñù ‚Ñù]
    [IsScalarTower Œ± ‚Ñù ‚Ñù] [IsScalarTower Œ± ‚Ñù E] {s : Set E} {a : Œ±} (ha : 0 ‚â§ a) :
    gauge (a ‚Ä¢ s) = a‚Åª¬π ‚Ä¢ gauge s :=
  by
  obtain rfl | ha' := ha.eq_or_lt
  ¬∑ rw [inv_zero, zero_smul, gauge_of_subset_zero (zero_smul_set_subset _)]
  ext
  rw [gauge_def', Pi.smul_apply, gauge_def', ‚Üê Real.inf‚Çõ_smul_of_nonneg (inv_nonneg.2 ha)]
  congr 1
  ext r
  simp_rw [Set.mem_smul_set, Set.mem_sep_iff]
  constructor
  ¬∑ rintro ‚ü®hr, y, hy, h‚ü©
    simp_rw [mem_Ioi] at hr‚ä¢
    refine' ‚ü®a ‚Ä¢ r, ‚ü®smul_pos ha' hr, _‚ü©, inv_smul_smul‚ÇÄ ha'.ne' _‚ü©
    rwa [smul_inv‚ÇÄ, smul_assoc, ‚Üê h, inv_smul_smul‚ÇÄ ha'.ne']
  ¬∑ rintro ‚ü®r, ‚ü®hr, hx‚ü©, rfl‚ü©
    rw [mem_Ioi] at hr‚ä¢
    have := smul_pos ha' hr
    refine' ‚ü®smul_pos (inv_pos.2 ha') hr, r‚Åª¬π ‚Ä¢ x, hx, _‚ü©
    rw [smul_inv‚ÇÄ, smul_assoc, inv_inv]
#align gauge_smul_left_of_nonneg gauge_smul_left_of_nonneg

/- warning: gauge_smul_left -> gauge_smul_left is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {Œ± : Type.{u2}} [_inst_3 : LinearOrderedField.{u2} Œ±] [_inst_4 : MulActionWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) Real.hasZero] [_inst_5 : OrderedSMul.{u2, 0} Œ± Real (StrictOrderedSemiring.toOrderedSemiring.{u2} Œ± (StrictOrderedRing.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedRing.toStrictOrderedRing.{u2} Œ± (LinearOrderedCommRing.toLinearOrderedRing.{u2} Œ± (LinearOrderedField.toLinearOrderedCommRing.{u2} Œ± _inst_3))))) Real.orderedAddCommMonoid (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) (AddZeroClass.toHasZero.{0} Real (AddMonoid.toAddZeroClass.{0} Real (AddCommMonoid.toAddMonoid.{0} Real (OrderedAddCommMonoid.toAddCommMonoid.{0} Real Real.orderedAddCommMonoid)))) _inst_4)] [_inst_6 : Module.{u2, u1} Œ± E (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] [_inst_7 : SMulCommClass.{u2, 0, 0} Œ± Real Real (SMulZeroClass.toHasSmul.{u2, 0} Œ± Real Real.hasZero (SMulWithZero.toSmulZeroClass.{u2, 0} Œ± Real (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) Real.hasZero (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) Real.hasZero _inst_4))) (Mul.toSMul.{0} Real Real.hasMul)] [_inst_8 : IsScalarTower.{u2, 0, 0} Œ± Real Real (SMulZeroClass.toHasSmul.{u2, 0} Œ± Real Real.hasZero (SMulWithZero.toSmulZeroClass.{u2, 0} Œ± Real (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) Real.hasZero (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) Real.hasZero _inst_4))) (Mul.toSMul.{0} Real Real.hasMul) (SMulZeroClass.toHasSmul.{u2, 0} Œ± Real Real.hasZero (SMulWithZero.toSmulZeroClass.{u2, 0} Œ± Real (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) Real.hasZero (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) Real.hasZero _inst_4)))] [_inst_9 : IsScalarTower.{u2, 0, u1} Œ± Real E (SMulZeroClass.toHasSmul.{u2, 0} Œ± Real Real.hasZero (SMulWithZero.toSmulZeroClass.{u2, 0} Œ± Real (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) Real.hasZero (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) Real.hasZero _inst_4))) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (SMulZeroClass.toHasSmul.{u2, u1} Œ± E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{u2, u1} Œ± E (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{u2, u1} Œ± E (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{u2, u1} Œ± E (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_6))))] {s : Set.{u1} E}, (forall (x : E), (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) x s) -> (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) (Neg.neg.{u1} E (SubNegMonoid.toHasNeg.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))) x) s)) -> (forall (a : Œ±), Eq.{succ u1} (E -> Real) (gauge.{u1} E _inst_1 _inst_2 (SMul.smul.{u2, u1} Œ± (Set.{u1} E) (Set.smulSet.{u2, u1} Œ± E (SMulZeroClass.toHasSmul.{u2, u1} Œ± E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{u2, u1} Œ± E (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{u2, u1} Œ± E (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{u2, u1} Œ± E (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_6))))) a s)) (SMul.smul.{u2, u1} Œ± (E -> Real) (Function.hasSMul.{u1, u2, 0} E Œ± Real (SMulZeroClass.toHasSmul.{u2, 0} Œ± Real Real.hasZero (SMulWithZero.toSmulZeroClass.{u2, 0} Œ± Real (MulZeroClass.toHasZero.{u2} Œ± (MulZeroOneClass.toMulZeroClass.{u2} Œ± (MonoidWithZero.toMulZeroOneClass.{u2} Œ± (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) Real.hasZero (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (Ring.toSemiring.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3))))) Real.hasZero _inst_4)))) (Inv.inv.{u2} Œ± (DivInvMonoid.toHasInv.{u2} Œ± (DivisionRing.toDivInvMonoid.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))) (Abs.abs.{u2} Œ± (Neg.toHasAbs.{u2} Œ± (SubNegMonoid.toHasNeg.{u2} Œ± (AddGroup.toSubNegMonoid.{u2} Œ± (AddGroupWithOne.toAddGroup.{u2} Œ± (AddCommGroupWithOne.toAddGroupWithOne.{u2} Œ± (Ring.toAddCommGroupWithOne.{u2} Œ± (DivisionRing.toRing.{u2} Œ± (Field.toDivisionRing.{u2} Œ± (LinearOrderedField.toField.{u2} Œ± _inst_3)))))))) (SemilatticeSup.toHasSup.{u2} Œ± (Lattice.toSemilatticeSup.{u2} Œ± (LinearOrder.toLattice.{u2} Œ± (LinearOrderedRing.toLinearOrder.{u2} Œ± (LinearOrderedCommRing.toLinearOrderedRing.{u2} Œ± (LinearOrderedField.toLinearOrderedCommRing.{u2} Œ± _inst_3))))))) a)) (gauge.{u1} E _inst_1 _inst_2 s)))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {Œ± : Type.{u2}} [_inst_3 : LinearOrderedField.{u2} Œ±] [_inst_4 : MulActionWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) Real.instZeroReal] [_inst_5 : OrderedSMul.{u2, 0} Œ± Real (OrderedCommSemiring.toOrderedSemiring.{u2} Œ± (StrictOrderedCommSemiring.toOrderedCommSemiring.{u2} Œ± (LinearOrderedCommSemiring.toStrictOrderedCommSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) Real.orderedAddCommMonoid (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) (AddMonoid.toZero.{0} Real (AddCommMonoid.toAddMonoid.{0} Real (OrderedAddCommMonoid.toAddCommMonoid.{0} Real Real.orderedAddCommMonoid))) _inst_4)] [_inst_6 : Module.{u2, u1} Œ± E (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] [_inst_7 : SMulCommClass.{u2, 0, 0} Œ± Real Real (SMulZeroClass.toSMul.{u2, 0} Œ± Real Real.instZeroReal (SMulWithZero.toSMulZeroClass.{u2, 0} Œ± Real (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) Real.instZeroReal (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) Real.instZeroReal _inst_4))) (Algebra.toSMul.{0, 0} Real Real Real.instCommSemiringReal Real.semiring (NormedAlgebra.toAlgebra.{0, 0} Real Real Real.normedField (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (IsROrC.toNormedAlgebra.{0} Real Real.isROrC)))] [_inst_8 : IsScalarTower.{u2, 0, 0} Œ± Real Real (SMulZeroClass.toSMul.{u2, 0} Œ± Real Real.instZeroReal (SMulWithZero.toSMulZeroClass.{u2, 0} Œ± Real (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) Real.instZeroReal (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) Real.instZeroReal _inst_4))) (Algebra.toSMul.{0, 0} Real Real Real.instCommSemiringReal Real.semiring (NormedAlgebra.toAlgebra.{0, 0} Real Real Real.normedField (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (IsROrC.toNormedAlgebra.{0} Real Real.isROrC))) (SMulZeroClass.toSMul.{u2, 0} Œ± Real Real.instZeroReal (SMulWithZero.toSMulZeroClass.{u2, 0} Œ± Real (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) Real.instZeroReal (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) Real.instZeroReal _inst_4)))] [_inst_9 : IsScalarTower.{u2, 0, u1} Œ± Real E (SMulZeroClass.toSMul.{u2, 0} Œ± Real Real.instZeroReal (SMulWithZero.toSMulZeroClass.{u2, 0} Œ± Real (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) Real.instZeroReal (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) Real.instZeroReal _inst_4))) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (SMulZeroClass.toSMul.{u2, u1} Œ± E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u2, u1} Œ± E (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u2, u1} Œ± E (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{u2, u1} Œ± E (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_6))))] {s : Set.{u1} E}, (forall (x : E), (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) x s) -> (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) (Neg.neg.{u1} E (NegZeroClass.toNeg.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) x) s)) -> (forall (a : Œ±), Eq.{succ u1} (E -> Real) (gauge.{u1} E _inst_1 _inst_2 (HSMul.hSMul.{u2, u1, u1} Œ± (Set.{u1} E) (Set.{u1} E) (instHSMul.{u2, u1} Œ± (Set.{u1} E) (Set.smulSet.{u2, u1} Œ± E (SMulZeroClass.toSMul.{u2, u1} Œ± E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u2, u1} Œ± E (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u2, u1} Œ± E (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{u2, u1} Œ± E (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_6)))))) a s)) (HSMul.hSMul.{u2, u1, u1} Œ± (E -> Real) (E -> Real) (instHSMul.{u2, u1} Œ± (E -> Real) (Pi.instSMul.{u1, 0, u2} E Œ± (fun (x : E) => Real) (fun (i : E) => SMulZeroClass.toSMul.{u2, 0} Œ± Real Real.instZeroReal (SMulWithZero.toSMulZeroClass.{u2, 0} Œ± Real (CommMonoidWithZero.toZero.{u2} Œ± (CommGroupWithZero.toCommMonoidWithZero.{u2} Œ± (Semifield.toCommGroupWithZero.{u2} Œ± (LinearOrderedSemifield.toSemifield.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3))))) Real.instZeroReal (MulActionWithZero.toSMulWithZero.{u2, 0} Œ± Real (Semiring.toMonoidWithZero.{u2} Œ± (StrictOrderedSemiring.toSemiring.{u2} Œ± (LinearOrderedSemiring.toStrictOrderedSemiring.{u2} Œ± (LinearOrderedCommSemiring.toLinearOrderedSemiring.{u2} Œ± (LinearOrderedSemifield.toLinearOrderedCommSemiring.{u2} Œ± (LinearOrderedField.toLinearOrderedSemifield.{u2} Œ± _inst_3)))))) Real.instZeroReal _inst_4))))) (Inv.inv.{u2} Œ± (LinearOrderedField.toInv.{u2} Œ± _inst_3) (Abs.abs.{u2} Œ± (Neg.toHasAbs.{u2} Œ± (Ring.toNeg.{u2} Œ± (StrictOrderedRing.toRing.{u2} Œ± (LinearOrderedRing.toStrictOrderedRing.{u2} Œ± (LinearOrderedCommRing.toLinearOrderedRing.{u2} Œ± (LinearOrderedField.toLinearOrderedCommRing.{u2} Œ± _inst_3))))) (SemilatticeSup.toSup.{u2} Œ± (Lattice.toSemilatticeSup.{u2} Œ± (DistribLattice.toLattice.{u2} Œ± (instDistribLattice.{u2} Œ± (LinearOrderedRing.toLinearOrder.{u2} Œ± (LinearOrderedCommRing.toLinearOrderedRing.{u2} Œ± (LinearOrderedField.toLinearOrderedCommRing.{u2} Œ± _inst_3)))))))) a)) (gauge.{u1} E _inst_1 _inst_2 s)))
Case conversion may be inaccurate. Consider using '#align gauge_smul_left gauge_smul_left‚Çì'. -/
theorem gauge_smul_left [Module Œ± E] [SMulCommClass Œ± ‚Ñù ‚Ñù] [IsScalarTower Œ± ‚Ñù ‚Ñù]
    [IsScalarTower Œ± ‚Ñù E] {s : Set E} (symmetric : ‚àÄ x ‚àà s, -x ‚àà s) (a : Œ±) :
    gauge (a ‚Ä¢ s) = (|a|)‚Åª¬π ‚Ä¢ gauge s :=
  by
  rw [‚Üê gauge_smul_left_of_nonneg (abs_nonneg a)]
  obtain h | h := abs_choice a
  ¬∑ rw [h]
  ¬∑ rw [h, Set.neg_smul_set, ‚Üê Set.smul_set_neg]
    congr
    ext y
    refine' ‚ü®Symmetric _, fun hy => _‚ü©
    rw [‚Üê neg_neg y]
    exact Symmetric _ hy
  ¬∑ infer_instance
#align gauge_smul_left gauge_smul_left

end LinearOrderedField

section IsROrC

variable [IsROrC ùïú] [Module ùïú E] [IsScalarTower ‚Ñù ùïú E]

/- warning: gauge_norm_smul -> gauge_norm_smul is a dubious translation:
lean 3 declaration is
  forall {ùïú : Type.{u1}} {E : Type.{u2}} [_inst_1 : AddCommGroup.{u2} E] [_inst_2 : Module.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)] {s : Set.{u2} E} [_inst_3 : IsROrC.{u1} ùïú] [_inst_4 : Module.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)] [_inst_5 : IsScalarTower.{0, u1, u2} Real ùïú E (SMulZeroClass.toHasSmul.{0, u1} Real ùïú (AddZeroClass.toHasZero.{u1} ùïú (AddMonoid.toAddZeroClass.{u1} ùïú (AddCommMonoid.toAddMonoid.{u1} ùïú (AddCommGroup.toAddCommMonoid.{u1} ùïú (SeminormedAddCommGroup.toAddCommGroup.{u1} ùïú (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))))) (SMulWithZero.toSmulZeroClass.{0, u1} Real ùïú (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real (Ring.toSemiring.{0} Real (NormedRing.toRing.{0} Real (NormedCommRing.toNormedRing.{0} Real (NormedField.toNormedCommRing.{0} Real Real.normedField)))))))) (AddZeroClass.toHasZero.{u1} ùïú (AddMonoid.toAddZeroClass.{u1} ùïú (AddCommMonoid.toAddMonoid.{u1} ùïú (AddCommGroup.toAddCommMonoid.{u1} ùïú (SeminormedAddCommGroup.toAddCommGroup.{u1} ùïú (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real ùïú (Semiring.toMonoidWithZero.{0} Real (Ring.toSemiring.{0} Real (NormedRing.toRing.{0} Real (NormedCommRing.toNormedRing.{0} Real (NormedField.toNormedCommRing.{0} Real Real.normedField))))) (AddZeroClass.toHasZero.{u1} ùïú (AddMonoid.toAddZeroClass.{u1} ùïú (AddCommMonoid.toAddMonoid.{u1} ùïú (AddCommGroup.toAddCommMonoid.{u1} ùïú (SeminormedAddCommGroup.toAddCommGroup.{u1} ùïú (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))))) (Module.toMulActionWithZero.{0, u1} Real ùïú (Ring.toSemiring.{0} Real (NormedRing.toRing.{0} Real (NormedCommRing.toNormedRing.{0} Real (NormedField.toNormedCommRing.{0} Real Real.normedField)))) (AddCommGroup.toAddCommMonoid.{u1} ùïú (SeminormedAddCommGroup.toAddCommGroup.{u1} ùïú (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))))) (NormedSpace.toModule.{0, u1} Real ùïú Real.normedField (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NormedAlgebra.toNormedSpace'.{0, u1} Real Real.normedField ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))) (IsROrC.toNormedAlgebra.{u1} ùïú _inst_3))))))) (SMulZeroClass.toHasSmul.{u1, u2} ùïú E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{u1, u2} ùïú E (MulZeroClass.toHasZero.{u1} ùïú (MulZeroOneClass.toMulZeroClass.{u1} ùïú (MonoidWithZero.toMulZeroOneClass.{u1} ùïú (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) (SMulZeroClass.toHasSmul.{0, u2} Real E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u2} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2))))], (Balanced.{u1, u2} ùïú E (SeminormedCommRing.toSemiNormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (SMulZeroClass.toHasSmul.{u1, u2} ùïú E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{u1, u2} ùïú E (MulZeroClass.toHasZero.{u1} ùïú (MulZeroOneClass.toMulZeroClass.{u1} ùïú (MonoidWithZero.toMulZeroOneClass.{u1} ùïú (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) s) -> (forall (r : ùïú) (x : E), Eq.{1} Real (gauge.{u2} E _inst_1 _inst_2 s (SMul.smul.{0, u2} Real E (SMulZeroClass.toHasSmul.{0, u2} Real E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u2} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2)))) (Norm.norm.{u1} ùïú (NormedField.toHasNorm.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))) r) x)) (gauge.{u2} E _inst_1 _inst_2 s (SMul.smul.{u1, u2} ùïú E (SMulZeroClass.toHasSmul.{u1, u2} ùïú E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{u1, u2} ùïú E (MulZeroClass.toHasZero.{u1} ùïú (MulZeroOneClass.toMulZeroClass.{u1} ùïú (MonoidWithZero.toMulZeroOneClass.{u1} ùïú (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) r x)))
but is expected to have type
  forall {ùïú : Type.{u2}} {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} [_inst_3 : IsROrC.{u2} ùïú] [_inst_4 : Module.{u2, u1} ùïú E (DivisionSemiring.toSemiring.{u2} ùïú (Semifield.toDivisionSemiring.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] [_inst_5 : IsScalarTower.{0, u2, u1} Real ùïú E (Algebra.toSMul.{0, u2} Real ùïú Real.instCommSemiringReal (DivisionSemiring.toSemiring.{u2} ùïú (Semifield.toDivisionSemiring.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3)))))) (NormedAlgebra.toAlgebra.{0, u2} Real ùïú Real.normedField (SeminormedCommRing.toSeminormedRing.{u2} ùïú (NormedCommRing.toSeminormedCommRing.{u2} ùïú (NormedField.toNormedCommRing.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))))) (IsROrC.toNormedAlgebra.{u2} ùïú _inst_3))) (SMulZeroClass.toSMul.{u2, u1} ùïú E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u2, u1} ùïú E (CommMonoidWithZero.toZero.{u2} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u2} ùïú (Semifield.toCommGroupWithZero.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u2, u1} ùïú E (Semiring.toMonoidWithZero.{u2} ùïú (DivisionSemiring.toSemiring.{u2} ùïú (Semifield.toDivisionSemiring.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{u2, u1} ùïú E (DivisionSemiring.toSemiring.{u2} ùïú (Semifield.toDivisionSemiring.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_4)))) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))], (Balanced.{u2, u1} ùïú E (SeminormedCommRing.toSeminormedRing.{u2} ùïú (NormedCommRing.toSeminormedCommRing.{u2} ùïú (NormedField.toNormedCommRing.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))))) (SMulZeroClass.toSMul.{u2, u1} ùïú E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u2, u1} ùïú E (CommMonoidWithZero.toZero.{u2} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u2} ùïú (Semifield.toCommGroupWithZero.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u2, u1} ùïú E (Semiring.toMonoidWithZero.{u2} ùïú (DivisionSemiring.toSemiring.{u2} ùïú (Semifield.toDivisionSemiring.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{u2, u1} ùïú E (DivisionSemiring.toSemiring.{u2} ùïú (Semifield.toDivisionSemiring.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_4)))) s) -> (forall (r : ùïú) (x : E), Eq.{1} Real (gauge.{u1} E _inst_1 _inst_2 s (HSMul.hSMul.{0, u1, u1} Real E E (instHSMul.{0, u1} Real E (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) (Norm.norm.{u2} ùïú (NormedField.toNorm.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))) r) x)) (gauge.{u1} E _inst_1 _inst_2 s (HSMul.hSMul.{u2, u1, u1} ùïú E E (instHSMul.{u2, u1} ùïú E (SMulZeroClass.toSMul.{u2, u1} ùïú E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u2, u1} ùïú E (CommMonoidWithZero.toZero.{u2} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u2} ùïú (Semifield.toCommGroupWithZero.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u2, u1} ùïú E (Semiring.toMonoidWithZero.{u2} ùïú (DivisionSemiring.toSemiring.{u2} ùïú (Semifield.toDivisionSemiring.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{u2, u1} ùïú E (DivisionSemiring.toSemiring.{u2} ùïú (Semifield.toDivisionSemiring.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_4))))) r x)))
Case conversion may be inaccurate. Consider using '#align gauge_norm_smul gauge_norm_smul‚Çì'. -/
theorem gauge_norm_smul (hs : Balanced ùïú s) (r : ùïú) (x : E) : gauge s (‚Äñr‚Äñ ‚Ä¢ x) = gauge s (r ‚Ä¢ x) :=
  by
  unfold gauge
  congr with Œ∏
  rw [@IsROrC.real_smul_eq_coe_smul ùïú]
  refine' and_congr_right fun hŒ∏ => (hs.smul _).mem_smul_iff _
  rw [IsROrC.norm_ofReal, abs_norm]
#align gauge_norm_smul gauge_norm_smul

/- warning: gauge_smul -> gauge_smul is a dubious translation:
lean 3 declaration is
  forall {ùïú : Type.{u1}} {E : Type.{u2}} [_inst_1 : AddCommGroup.{u2} E] [_inst_2 : Module.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)] {s : Set.{u2} E} [_inst_3 : IsROrC.{u1} ùïú] [_inst_4 : Module.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)] [_inst_5 : IsScalarTower.{0, u1, u2} Real ùïú E (SMulZeroClass.toHasSmul.{0, u1} Real ùïú (AddZeroClass.toHasZero.{u1} ùïú (AddMonoid.toAddZeroClass.{u1} ùïú (AddCommMonoid.toAddMonoid.{u1} ùïú (AddCommGroup.toAddCommMonoid.{u1} ùïú (SeminormedAddCommGroup.toAddCommGroup.{u1} ùïú (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))))) (SMulWithZero.toSmulZeroClass.{0, u1} Real ùïú (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real (Ring.toSemiring.{0} Real (NormedRing.toRing.{0} Real (NormedCommRing.toNormedRing.{0} Real (NormedField.toNormedCommRing.{0} Real Real.normedField)))))))) (AddZeroClass.toHasZero.{u1} ùïú (AddMonoid.toAddZeroClass.{u1} ùïú (AddCommMonoid.toAddMonoid.{u1} ùïú (AddCommGroup.toAddCommMonoid.{u1} ùïú (SeminormedAddCommGroup.toAddCommGroup.{u1} ùïú (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real ùïú (Semiring.toMonoidWithZero.{0} Real (Ring.toSemiring.{0} Real (NormedRing.toRing.{0} Real (NormedCommRing.toNormedRing.{0} Real (NormedField.toNormedCommRing.{0} Real Real.normedField))))) (AddZeroClass.toHasZero.{u1} ùïú (AddMonoid.toAddZeroClass.{u1} ùïú (AddCommMonoid.toAddMonoid.{u1} ùïú (AddCommGroup.toAddCommMonoid.{u1} ùïú (SeminormedAddCommGroup.toAddCommGroup.{u1} ùïú (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))))) (Module.toMulActionWithZero.{0, u1} Real ùïú (Ring.toSemiring.{0} Real (NormedRing.toRing.{0} Real (NormedCommRing.toNormedRing.{0} Real (NormedField.toNormedCommRing.{0} Real Real.normedField)))) (AddCommGroup.toAddCommMonoid.{u1} ùïú (SeminormedAddCommGroup.toAddCommGroup.{u1} ùïú (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))))) (NormedSpace.toModule.{0, u1} Real ùïú Real.normedField (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NormedAlgebra.toNormedSpace'.{0, u1} Real Real.normedField ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))) (IsROrC.toNormedAlgebra.{u1} ùïú _inst_3))))))) (SMulZeroClass.toHasSmul.{u1, u2} ùïú E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{u1, u2} ùïú E (MulZeroClass.toHasZero.{u1} ùïú (MulZeroOneClass.toMulZeroClass.{u1} ùïú (MonoidWithZero.toMulZeroOneClass.{u1} ùïú (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) (SMulZeroClass.toHasSmul.{0, u2} Real E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u2} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2))))], (Balanced.{u1, u2} ùïú E (SeminormedCommRing.toSemiNormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (SMulZeroClass.toHasSmul.{u1, u2} ùïú E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{u1, u2} ùïú E (MulZeroClass.toHasZero.{u1} ùïú (MulZeroOneClass.toMulZeroClass.{u1} ùïú (MonoidWithZero.toMulZeroOneClass.{u1} ùïú (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) s) -> (forall (r : ùïú) (x : E), Eq.{1} Real (gauge.{u2} E _inst_1 _inst_2 s (SMul.smul.{u1, u2} ùïú E (SMulZeroClass.toHasSmul.{u1, u2} ùïú E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{u1, u2} ùïú E (MulZeroClass.toHasZero.{u1} ùïú (MulZeroOneClass.toMulZeroClass.{u1} ùïú (MonoidWithZero.toMulZeroOneClass.{u1} ùïú (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) r x)) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.hasMul) (Norm.norm.{u1} ùïú (NormedField.toHasNorm.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))) r) (gauge.{u2} E _inst_1 _inst_2 s x)))
but is expected to have type
  forall {ùïú : Type.{u2}} {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} [_inst_3 : IsROrC.{u2} ùïú] [_inst_4 : Module.{u2, u1} ùïú E (DivisionSemiring.toSemiring.{u2} ùïú (Semifield.toDivisionSemiring.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] [_inst_5 : IsScalarTower.{0, u2, u1} Real ùïú E (Algebra.toSMul.{0, u2} Real ùïú Real.instCommSemiringReal (DivisionSemiring.toSemiring.{u2} ùïú (Semifield.toDivisionSemiring.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3)))))) (NormedAlgebra.toAlgebra.{0, u2} Real ùïú Real.normedField (SeminormedCommRing.toSeminormedRing.{u2} ùïú (NormedCommRing.toSeminormedCommRing.{u2} ùïú (NormedField.toNormedCommRing.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))))) (IsROrC.toNormedAlgebra.{u2} ùïú _inst_3))) (SMulZeroClass.toSMul.{u2, u1} ùïú E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u2, u1} ùïú E (CommMonoidWithZero.toZero.{u2} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u2} ùïú (Semifield.toCommGroupWithZero.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u2, u1} ùïú E (Semiring.toMonoidWithZero.{u2} ùïú (DivisionSemiring.toSemiring.{u2} ùïú (Semifield.toDivisionSemiring.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{u2, u1} ùïú E (DivisionSemiring.toSemiring.{u2} ùïú (Semifield.toDivisionSemiring.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_4)))) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))], (Balanced.{u2, u1} ùïú E (SeminormedCommRing.toSeminormedRing.{u2} ùïú (NormedCommRing.toSeminormedCommRing.{u2} ùïú (NormedField.toNormedCommRing.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))))) (SMulZeroClass.toSMul.{u2, u1} ùïú E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u2, u1} ùïú E (CommMonoidWithZero.toZero.{u2} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u2} ùïú (Semifield.toCommGroupWithZero.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u2, u1} ùïú E (Semiring.toMonoidWithZero.{u2} ùïú (DivisionSemiring.toSemiring.{u2} ùïú (Semifield.toDivisionSemiring.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{u2, u1} ùïú E (DivisionSemiring.toSemiring.{u2} ùïú (Semifield.toDivisionSemiring.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_4)))) s) -> (forall (r : ùïú) (x : E), Eq.{1} Real (gauge.{u1} E _inst_1 _inst_2 s (HSMul.hSMul.{u2, u1, u1} ùïú E E (instHSMul.{u2, u1} ùïú E (SMulZeroClass.toSMul.{u2, u1} ùïú E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u2, u1} ùïú E (CommMonoidWithZero.toZero.{u2} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u2} ùïú (Semifield.toCommGroupWithZero.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u2, u1} ùïú E (Semiring.toMonoidWithZero.{u2} ùïú (DivisionSemiring.toSemiring.{u2} ùïú (Semifield.toDivisionSemiring.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{u2, u1} ùïú E (DivisionSemiring.toSemiring.{u2} ùïú (Semifield.toDivisionSemiring.{u2} ùïú (Field.toSemifield.{u2} ùïú (NormedField.toField.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_4))))) r x)) (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.instMulReal) (Norm.norm.{u2} ùïú (NormedField.toNorm.{u2} ùïú (DenselyNormedField.toNormedField.{u2} ùïú (IsROrC.toDenselyNormedField.{u2} ùïú _inst_3))) r) (gauge.{u1} E _inst_1 _inst_2 s x)))
Case conversion may be inaccurate. Consider using '#align gauge_smul gauge_smul‚Çì'. -/
/-- If `s` is balanced, then the Minkowski functional is ‚ÑÇ-homogeneous. -/
theorem gauge_smul (hs : Balanced ùïú s) (r : ùïú) (x : E) : gauge s (r ‚Ä¢ x) = ‚Äñr‚Äñ * gauge s x :=
  by
  rw [‚Üê smul_eq_mul, ‚Üê gauge_smul_of_nonneg (norm_nonneg r), gauge_norm_smul hs]
  infer_instance
#align gauge_smul gauge_smul

end IsROrC

section TopologicalSpace

variable [TopologicalSpace E] [ContinuousSMul ‚Ñù E]

/- warning: interior_subset_gauge_lt_one -> interior_subset_gauge_lt_one is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] [_inst_3 : TopologicalSpace.{u1} E] [_inst_4 : ContinuousSMul.{0, u1} Real E (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (UniformSpace.toTopologicalSpace.{0} Real (PseudoMetricSpace.toUniformSpace.{0} Real Real.pseudoMetricSpace)) _inst_3] (s : Set.{u1} E), HasSubset.Subset.{u1} (Set.{u1} E) (Set.hasSubset.{u1} E) (interior.{u1} E _inst_3 s) (setOf.{u1} E (fun (x : E) => LT.lt.{0} Real Real.hasLt (gauge.{u1} E _inst_1 _inst_2 s x) (OfNat.ofNat.{0} Real 1 (OfNat.mk.{0} Real 1 (One.one.{0} Real Real.hasOne)))))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] [_inst_3 : TopologicalSpace.{u1} E] [_inst_4 : ContinuousSMul.{0, u1} Real E (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (UniformSpace.toTopologicalSpace.{0} Real (PseudoMetricSpace.toUniformSpace.{0} Real Real.pseudoMetricSpace)) _inst_3] (s : Set.{u1} E), HasSubset.Subset.{u1} (Set.{u1} E) (Set.instHasSubsetSet.{u1} E) (interior.{u1} E _inst_3 s) (setOf.{u1} E (fun (x : E) => LT.lt.{0} Real Real.instLTReal (gauge.{u1} E _inst_1 _inst_2 s x) (OfNat.ofNat.{0} Real 1 (One.toOfNat1.{0} Real Real.instOneReal))))
Case conversion may be inaccurate. Consider using '#align interior_subset_gauge_lt_one interior_subset_gauge_lt_one‚Çì'. -/
theorem interior_subset_gauge_lt_one (s : Set E) : interior s ‚äÜ { x | gauge s x < 1 } :=
  by
  intro x hx
  let f : ‚Ñù ‚Üí E := fun t => t ‚Ä¢ x
  have hf : Continuous f := by continuity
  let s' := f ‚Åª¬π' interior s
  have hs' : IsOpen s' := hf.is_open_preimage _ isOpen_interior
  have one_mem : (1 : ‚Ñù) ‚àà s' := by simpa only [s', f, Set.mem_preimage, one_smul]
  obtain ‚ü®Œµ, hŒµ‚ÇÄ, hŒµ‚ü© := (Metric.nhds_basis_closedBall.1 _).1 (isOpen_iff_mem_nhds.1 hs' 1 one_mem)
  rw [Real.closedBall_eq_Icc] at hŒµ
  have hŒµ‚ÇÅ : 0 < 1 + Œµ := hŒµ‚ÇÄ.trans (lt_one_add Œµ)
  have : (1 + Œµ)‚Åª¬π < 1 := by
    rw [inv_lt_one_iff]
    right
    linarith
  refine' (gauge_le_of_mem (inv_nonneg.2 hŒµ‚ÇÅ.le) _).trans_lt this
  rw [mem_inv_smul_set_iff‚ÇÄ hŒµ‚ÇÅ.ne']
  exact
    interior_subset
      (hŒµ ‚ü®(sub_le_self _ hŒµ‚ÇÄ.le).trans ((le_add_iff_nonneg_right _).2 hŒµ‚ÇÄ.le), le_rfl‚ü©)
#align interior_subset_gauge_lt_one interior_subset_gauge_lt_one

/- warning: gauge_lt_one_eq_self_of_open -> gauge_lt_one_eq_self_of_open is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} [_inst_3 : TopologicalSpace.{u1} E] [_inst_4 : ContinuousSMul.{0, u1} Real E (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (UniformSpace.toTopologicalSpace.{0} Real (PseudoMetricSpace.toUniformSpace.{0} Real Real.pseudoMetricSpace)) _inst_3], (Convex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) (OfNat.ofNat.{u1} E 0 (OfNat.mk.{u1} E 0 (Zero.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))))) s) -> (IsOpen.{u1} E _inst_3 s) -> (Eq.{succ u1} (Set.{u1} E) (setOf.{u1} E (fun (x : E) => LT.lt.{0} Real Real.hasLt (gauge.{u1} E _inst_1 _inst_2 s x) (OfNat.ofNat.{0} Real 1 (OfNat.mk.{0} Real 1 (One.one.{0} Real Real.hasOne))))) s)
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} [_inst_3 : TopologicalSpace.{u1} E] [_inst_4 : ContinuousSMul.{0, u1} Real E (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (UniformSpace.toTopologicalSpace.{0} Real (PseudoMetricSpace.toUniformSpace.{0} Real Real.pseudoMetricSpace)) _inst_3], (Convex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))))) s) -> (IsOpen.{u1} E _inst_3 s) -> (Eq.{succ u1} (Set.{u1} E) (setOf.{u1} E (fun (x : E) => LT.lt.{0} Real Real.instLTReal (gauge.{u1} E _inst_1 _inst_2 s x) (OfNat.ofNat.{0} Real 1 (One.toOfNat1.{0} Real Real.instOneReal)))) s)
Case conversion may be inaccurate. Consider using '#align gauge_lt_one_eq_self_of_open gauge_lt_one_eq_self_of_open‚Çì'. -/
theorem gauge_lt_one_eq_self_of_open (hs‚ÇÅ : Convex ‚Ñù s) (hs‚ÇÄ : (0 : E) ‚àà s) (hs‚ÇÇ : IsOpen s) :
    { x | gauge s x < 1 } = s :=
  by
  refine' (gauge_lt_one_subset_self hs‚ÇÅ ‚Äπ_‚Ä∫ <| absorbent_nhds_zero <| hs‚ÇÇ.mem_nhds hs‚ÇÄ).antisymm _
  convert interior_subset_gauge_lt_one s
  exact hs‚ÇÇ.interior_eq.symm
#align gauge_lt_one_eq_self_of_open gauge_lt_one_eq_self_of_open

/- warning: gauge_lt_one_of_mem_of_open -> gauge_lt_one_of_mem_of_open is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} [_inst_3 : TopologicalSpace.{u1} E] [_inst_4 : ContinuousSMul.{0, u1} Real E (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (UniformSpace.toTopologicalSpace.{0} Real (PseudoMetricSpace.toUniformSpace.{0} Real Real.pseudoMetricSpace)) _inst_3], (Convex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) (OfNat.ofNat.{u1} E 0 (OfNat.mk.{u1} E 0 (Zero.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))))) s) -> (IsOpen.{u1} E _inst_3 s) -> (forall {x : E}, (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) x s) -> (LT.lt.{0} Real Real.hasLt (gauge.{u1} E _inst_1 _inst_2 s x) (OfNat.ofNat.{0} Real 1 (OfNat.mk.{0} Real 1 (One.one.{0} Real Real.hasOne)))))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} [_inst_3 : TopologicalSpace.{u1} E] [_inst_4 : ContinuousSMul.{0, u1} Real E (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (UniformSpace.toTopologicalSpace.{0} Real (PseudoMetricSpace.toUniformSpace.{0} Real Real.pseudoMetricSpace)) _inst_3], (Convex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))))) s) -> (IsOpen.{u1} E _inst_3 s) -> (forall {x : E}, (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) x s) -> (LT.lt.{0} Real Real.instLTReal (gauge.{u1} E _inst_1 _inst_2 s x) (OfNat.ofNat.{0} Real 1 (One.toOfNat1.{0} Real Real.instOneReal))))
Case conversion may be inaccurate. Consider using '#align gauge_lt_one_of_mem_of_open gauge_lt_one_of_mem_of_open‚Çì'. -/
theorem gauge_lt_one_of_mem_of_open (hs‚ÇÅ : Convex ‚Ñù s) (hs‚ÇÄ : (0 : E) ‚àà s) (hs‚ÇÇ : IsOpen s) {x : E}
    (hx : x ‚àà s) : gauge s x < 1 := by rwa [‚Üê gauge_lt_one_eq_self_of_open hs‚ÇÅ hs‚ÇÄ hs‚ÇÇ] at hx
#align gauge_lt_one_of_mem_of_open gauge_lt_one_of_mem_of_open

/- warning: gauge_lt_of_mem_smul -> gauge_lt_of_mem_smul is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} [_inst_3 : TopologicalSpace.{u1} E] [_inst_4 : ContinuousSMul.{0, u1} Real E (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (UniformSpace.toTopologicalSpace.{0} Real (PseudoMetricSpace.toUniformSpace.{0} Real Real.pseudoMetricSpace)) _inst_3] (x : E) (Œµ : Real), (LT.lt.{0} Real Real.hasLt (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))) Œµ) -> (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) (OfNat.ofNat.{u1} E 0 (OfNat.mk.{u1} E 0 (Zero.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))))) s) -> (Convex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (IsOpen.{u1} E _inst_3 s) -> (Membership.Mem.{u1, u1} E (Set.{u1} E) (Set.hasMem.{u1} E) x (SMul.smul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) Œµ s)) -> (LT.lt.{0} Real Real.hasLt (gauge.{u1} E _inst_1 _inst_2 s x) Œµ)
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E} [_inst_3 : TopologicalSpace.{u1} E] [_inst_4 : ContinuousSMul.{0, u1} Real E (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (UniformSpace.toTopologicalSpace.{0} Real (PseudoMetricSpace.toUniformSpace.{0} Real Real.pseudoMetricSpace)) _inst_3] (x : E) (Œµ : Real), (LT.lt.{0} Real Real.instLTReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)) Œµ) -> (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))))) s) -> (Convex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (IsOpen.{u1} E _inst_3 s) -> (Membership.mem.{u1, u1} E (Set.{u1} E) (Set.instMembershipSet.{u1} E) x (HSMul.hSMul.{0, u1, u1} Real (Set.{u1} E) (Set.{u1} E) (instHSMul.{0, u1} Real (Set.{u1} E) (Set.smulSet.{0, u1} Real E (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))))) Œµ s)) -> (LT.lt.{0} Real Real.instLTReal (gauge.{u1} E _inst_1 _inst_2 s x) Œµ)
Case conversion may be inaccurate. Consider using '#align gauge_lt_of_mem_smul gauge_lt_of_mem_smul‚Çì'. -/
theorem gauge_lt_of_mem_smul (x : E) (Œµ : ‚Ñù) (hŒµ : 0 < Œµ) (hs‚ÇÄ : (0 : E) ‚àà s) (hs‚ÇÅ : Convex ‚Ñù s)
    (hs‚ÇÇ : IsOpen s) (hx : x ‚àà Œµ ‚Ä¢ s) : gauge s x < Œµ :=
  by
  have : Œµ‚Åª¬π ‚Ä¢ x ‚àà s := by rwa [‚Üê mem_smul_set_iff_inv_smul_mem‚ÇÄ hŒµ.ne']
  have h_gauge_lt := gauge_lt_one_of_mem_of_open hs‚ÇÅ hs‚ÇÄ hs‚ÇÇ this
  rwa [gauge_smul_of_nonneg (inv_nonneg.2 hŒµ.le), smul_eq_mul, inv_mul_lt_iff hŒµ, mul_one] at
    h_gauge_lt
  infer_instance
#align gauge_lt_of_mem_smul gauge_lt_of_mem_smul

end TopologicalSpace

/- warning: gauge_add_le -> gauge_add_le is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, (Convex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (Absorbent.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (forall (x : E) (y : E), LE.le.{0} Real Real.hasLe (gauge.{u1} E _inst_1 _inst_2 s (HAdd.hAdd.{u1, u1, u1} E E E (instHAdd.{u1} E (AddZeroClass.toHasAdd.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))) x y)) (HAdd.hAdd.{0, 0, 0} Real Real Real (instHAdd.{0} Real Real.hasAdd) (gauge.{u1} E _inst_1 _inst_2 s x) (gauge.{u1} E _inst_1 _inst_2 s y)))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] {s : Set.{u1} E}, (Convex.{0, u1} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (Absorbent.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) s) -> (forall (x : E) (y : E), LE.le.{0} Real Real.instLEReal (gauge.{u1} E _inst_1 _inst_2 s (HAdd.hAdd.{u1, u1, u1} E E E (instHAdd.{u1} E (AddZeroClass.toAdd.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))) x y)) (HAdd.hAdd.{0, 0, 0} Real Real Real (instHAdd.{0} Real Real.instAddReal) (gauge.{u1} E _inst_1 _inst_2 s x) (gauge.{u1} E _inst_1 _inst_2 s y)))
Case conversion may be inaccurate. Consider using '#align gauge_add_le gauge_add_le‚Çì'. -/
theorem gauge_add_le (hs : Convex ‚Ñù s) (absorbs : Absorbent ‚Ñù s) (x y : E) :
    gauge s (x + y) ‚â§ gauge s x + gauge s y :=
  by
  refine' le_of_forall_pos_lt_add fun Œµ hŒµ => _
  obtain ‚ü®a, ha, ha', hx‚ü© :=
    exists_lt_of_gauge_lt Absorbs (lt_add_of_pos_right (gauge s x) (half_pos hŒµ))
  obtain ‚ü®b, hb, hb', hy‚ü© :=
    exists_lt_of_gauge_lt Absorbs (lt_add_of_pos_right (gauge s y) (half_pos hŒµ))
  rw [mem_smul_set_iff_inv_smul_mem‚ÇÄ ha.ne'] at hx
  rw [mem_smul_set_iff_inv_smul_mem‚ÇÄ hb.ne'] at hy
  suffices gauge s (x + y) ‚â§ a + b by linarith
  have hab : 0 < a + b := add_pos ha hb
  apply gauge_le_of_mem hab.le
  have := convex_iff_div.1 hs hx hy ha.le hb.le hab
  rwa [smul_smul, smul_smul, ‚Üê mul_div_right_comm, ‚Üê mul_div_right_comm, mul_inv_cancel ha.ne',
    mul_inv_cancel hb.ne', ‚Üê smul_add, one_div, ‚Üê mem_smul_set_iff_inv_smul_mem‚ÇÄ hab.ne'] at this
#align gauge_add_le gauge_add_le

section IsROrC

variable [IsROrC ùïú] [Module ùïú E] [IsScalarTower ‚Ñù ùïú E]

#print gaugeSeminorm /-
/-- `gauge s` as a seminorm when `s` is  balanced, convex and absorbent. -/
@[simps]
def gaugeSeminorm (hs‚ÇÄ : Balanced ùïú s) (hs‚ÇÅ : Convex ‚Ñù s) (hs‚ÇÇ : Absorbent ‚Ñù s) : Seminorm ùïú E :=
  Seminorm.of (gauge s) (gauge_add_le hs‚ÇÅ hs‚ÇÇ) (gauge_smul hs‚ÇÄ)
#align gauge_seminorm gaugeSeminorm
-/

variable {hs‚ÇÄ : Balanced ùïú s} {hs‚ÇÅ : Convex ‚Ñù s} {hs‚ÇÇ : Absorbent ‚Ñù s} [TopologicalSpace E]
  [ContinuousSMul ‚Ñù E]

/- warning: gauge_seminorm_lt_one_of_open -> gaugeSeminorm_lt_one_of_open is a dubious translation:
lean 3 declaration is
  forall {ùïú : Type.{u1}} {E : Type.{u2}} [_inst_1 : AddCommGroup.{u2} E] [_inst_2 : Module.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)] {s : Set.{u2} E} [_inst_3 : IsROrC.{u1} ùïú] [_inst_4 : Module.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)] [_inst_5 : IsScalarTower.{0, u1, u2} Real ùïú E (SMulZeroClass.toHasSmul.{0, u1} Real ùïú (AddZeroClass.toHasZero.{u1} ùïú (AddMonoid.toAddZeroClass.{u1} ùïú (AddCommMonoid.toAddMonoid.{u1} ùïú (AddCommGroup.toAddCommMonoid.{u1} ùïú (SeminormedAddCommGroup.toAddCommGroup.{u1} ùïú (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))))) (SMulWithZero.toSmulZeroClass.{0, u1} Real ùïú (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real (Ring.toSemiring.{0} Real (NormedRing.toRing.{0} Real (NormedCommRing.toNormedRing.{0} Real (NormedField.toNormedCommRing.{0} Real Real.normedField)))))))) (AddZeroClass.toHasZero.{u1} ùïú (AddMonoid.toAddZeroClass.{u1} ùïú (AddCommMonoid.toAddMonoid.{u1} ùïú (AddCommGroup.toAddCommMonoid.{u1} ùïú (SeminormedAddCommGroup.toAddCommGroup.{u1} ùïú (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real ùïú (Semiring.toMonoidWithZero.{0} Real (Ring.toSemiring.{0} Real (NormedRing.toRing.{0} Real (NormedCommRing.toNormedRing.{0} Real (NormedField.toNormedCommRing.{0} Real Real.normedField))))) (AddZeroClass.toHasZero.{u1} ùïú (AddMonoid.toAddZeroClass.{u1} ùïú (AddCommMonoid.toAddMonoid.{u1} ùïú (AddCommGroup.toAddCommMonoid.{u1} ùïú (SeminormedAddCommGroup.toAddCommGroup.{u1} ùïú (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))))) (Module.toMulActionWithZero.{0, u1} Real ùïú (Ring.toSemiring.{0} Real (NormedRing.toRing.{0} Real (NormedCommRing.toNormedRing.{0} Real (NormedField.toNormedCommRing.{0} Real Real.normedField)))) (AddCommGroup.toAddCommMonoid.{u1} ùïú (SeminormedAddCommGroup.toAddCommGroup.{u1} ùïú (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))))) (NormedSpace.toModule.{0, u1} Real ùïú Real.normedField (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NormedAlgebra.toNormedSpace'.{0, u1} Real Real.normedField ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))) (IsROrC.toNormedAlgebra.{u1} ùïú _inst_3))))))) (SMulZeroClass.toHasSmul.{u1, u2} ùïú E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{u1, u2} ùïú E (MulZeroClass.toHasZero.{u1} ùïú (MulZeroOneClass.toMulZeroClass.{u1} ùïú (MonoidWithZero.toMulZeroOneClass.{u1} ùïú (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) (SMulZeroClass.toHasSmul.{0, u2} Real E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u2} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2))))] {hs‚ÇÄ : Balanced.{u1, u2} ùïú E (SeminormedCommRing.toSemiNormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (SMulZeroClass.toHasSmul.{u1, u2} ùïú E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{u1, u2} ùïú E (MulZeroClass.toHasZero.{u1} ùïú (MulZeroOneClass.toMulZeroClass.{u1} ùïú (MonoidWithZero.toMulZeroOneClass.{u1} ùïú (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) s} {hs‚ÇÅ : Convex.{0, u2} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) (SMulZeroClass.toHasSmul.{0, u2} Real E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u2} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2)))) s} {hs‚ÇÇ : Absorbent.{0, u2} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toHasSmul.{0, u2} Real E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u2} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2)))) s} [_inst_6 : TopologicalSpace.{u2} E] [_inst_7 : ContinuousSMul.{0, u2} Real E (SMulZeroClass.toHasSmul.{0, u2} Real E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u2} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2)))) (UniformSpace.toTopologicalSpace.{0} Real (PseudoMetricSpace.toUniformSpace.{0} Real Real.pseudoMetricSpace)) _inst_6], (IsOpen.{u2} E _inst_6 s) -> (forall {x : E}, (Membership.Mem.{u2, u2} E (Set.{u2} E) (Set.hasMem.{u2} E) x s) -> (LT.lt.{0} Real Real.hasLt (coeFn.{succ u2, succ u2} (Seminorm.{u1, u2} ùïú E (SeminormedCommRing.toSemiNormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (AddCommGroup.toAddGroup.{u2} E _inst_1) (SMulZeroClass.toHasSmul.{u1, u2} ùïú E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{u1, u2} ùïú E (MulZeroClass.toHasZero.{u1} ùïú (MulZeroOneClass.toMulZeroClass.{u1} ùïú (MonoidWithZero.toMulZeroOneClass.{u1} ùïú (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4))))) (fun (_x : Seminorm.{u1, u2} ùïú E (SeminormedCommRing.toSemiNormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (AddCommGroup.toAddGroup.{u2} E _inst_1) (SMulZeroClass.toHasSmul.{u1, u2} ùïú E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{u1, u2} ùïú E (MulZeroClass.toHasZero.{u1} ùïú (MulZeroOneClass.toMulZeroClass.{u1} ùïú (MonoidWithZero.toMulZeroOneClass.{u1} ùïú (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4))))) => E -> Real) (Seminorm.hasCoeToFun.{u1, u2} ùïú E (SeminormedCommRing.toSemiNormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (AddCommGroup.toAddGroup.{u2} E _inst_1) (SMulZeroClass.toHasSmul.{u1, u2} ùïú E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{u1, u2} ùïú E (MulZeroClass.toHasZero.{u1} ùïú (MulZeroOneClass.toMulZeroClass.{u1} ùïú (MonoidWithZero.toMulZeroOneClass.{u1} ùïú (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4))))) (gaugeSeminorm.{u1, u2} ùïú E _inst_1 _inst_2 s _inst_3 _inst_4 _inst_5 hs‚ÇÄ hs‚ÇÅ hs‚ÇÇ) x) (OfNat.ofNat.{0} Real 1 (OfNat.mk.{0} Real 1 (One.one.{0} Real Real.hasOne)))))
but is expected to have type
  forall {ùïú : Type.{u1}} {E : Type.{u2}} [_inst_1 : AddCommGroup.{u2} E] [_inst_2 : Module.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)] {s : Set.{u2} E} [_inst_3 : IsROrC.{u1} ùïú] [_inst_4 : Module.{u1, u2} ùïú E (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)] [_inst_5 : IsScalarTower.{0, u1, u2} Real ùïú E (Algebra.toSMul.{0, u1} Real ùïú Real.instCommSemiringReal (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (NormedAlgebra.toAlgebra.{0, u1} Real ùïú Real.normedField (SeminormedCommRing.toSeminormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (IsROrC.toNormedAlgebra.{u1} ùïú _inst_3))) (SMulZeroClass.toSMul.{u1, u2} ùïú E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u1, u2} ùïú E (CommMonoidWithZero.toZero.{u1} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u1} ùïú (Semifield.toCommGroupWithZero.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{u1, u2} ùïú E (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) (SMulZeroClass.toSMul.{0, u2} Real E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u2} Real E Real.instZeroReal (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2))))] {hs‚ÇÄ : Balanced.{u1, u2} ùïú E (SeminormedCommRing.toSeminormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (SMulZeroClass.toSMul.{u1, u2} ùïú E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u1, u2} ùïú E (CommMonoidWithZero.toZero.{u1} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u1} ùïú (Semifield.toCommGroupWithZero.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{u1, u2} ùïú E (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) s} {hs‚ÇÅ : Convex.{0, u2} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) (SMulZeroClass.toSMul.{0, u2} Real E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u2} Real E Real.instZeroReal (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2)))) s} {hs‚ÇÇ : Absorbent.{0, u2} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toSMul.{0, u2} Real E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u2} Real E Real.instZeroReal (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2)))) s} [_inst_6 : TopologicalSpace.{u2} E] [_inst_7 : ContinuousSMul.{0, u2} Real E (SMulZeroClass.toSMul.{0, u2} Real E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u2} Real E Real.instZeroReal (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2)))) (UniformSpace.toTopologicalSpace.{0} Real (PseudoMetricSpace.toUniformSpace.{0} Real Real.pseudoMetricSpace)) _inst_6], (IsOpen.{u2} E _inst_6 s) -> (forall {x : E}, (Membership.mem.{u2, u2} E (Set.{u2} E) (Set.instMembershipSet.{u2} E) x s) -> (LT.lt.{0} ((fun (a._@.Mathlib.Analysis.Seminorm._hyg.840 : E) => Real) x) Real.instLTReal (FunLike.coe.{succ u2, succ u2, 1} (Seminorm.{u1, u2} ùïú E (SeminormedCommRing.toSeminormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (AddCommGroup.toAddGroup.{u2} E _inst_1) (SMulZeroClass.toSMul.{u1, u2} ùïú E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u1, u2} ùïú E (CommMonoidWithZero.toZero.{u1} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u1} ùïú (Semifield.toCommGroupWithZero.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{u1, u2} ùïú E (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4))))) E (fun (_x : E) => (fun (a._@.Mathlib.Analysis.Seminorm._hyg.840 : E) => Real) _x) (SubadditiveHomClass.toFunLike.{u2, u2, 0} (Seminorm.{u1, u2} ùïú E (SeminormedCommRing.toSeminormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (AddCommGroup.toAddGroup.{u2} E _inst_1) (SMulZeroClass.toSMul.{u1, u2} ùïú E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u1, u2} ùïú E (CommMonoidWithZero.toZero.{u1} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u1} ùïú (Semifield.toCommGroupWithZero.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{u1, u2} ùïú E (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4))))) E Real (AddZeroClass.toAdd.{u2} E (AddMonoid.toAddZeroClass.{u2} E (SubNegMonoid.toAddMonoid.{u2} E (AddGroup.toSubNegMonoid.{u2} E (AddCommGroup.toAddGroup.{u2} E _inst_1))))) (AddZeroClass.toAdd.{0} Real (AddMonoid.toAddZeroClass.{0} Real (AddCommMonoid.toAddMonoid.{0} Real (OrderedAddCommMonoid.toAddCommMonoid.{0} Real Real.orderedAddCommMonoid)))) (Preorder.toLE.{0} Real (PartialOrder.toPreorder.{0} Real (OrderedAddCommMonoid.toPartialOrder.{0} Real Real.orderedAddCommMonoid))) (AddGroupSeminormClass.toAddLEAddHomClass.{u2, u2, 0} (Seminorm.{u1, u2} ùïú E (SeminormedCommRing.toSeminormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (AddCommGroup.toAddGroup.{u2} E _inst_1) (SMulZeroClass.toSMul.{u1, u2} ùïú E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u1, u2} ùïú E (CommMonoidWithZero.toZero.{u1} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u1} ùïú (Semifield.toCommGroupWithZero.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{u1, u2} ùïú E (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4))))) E Real (AddCommGroup.toAddGroup.{u2} E _inst_1) Real.orderedAddCommMonoid (SeminormClass.toAddGroupSeminormClass.{u2, u1, u2} (Seminorm.{u1, u2} ùïú E (SeminormedCommRing.toSeminormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (AddCommGroup.toAddGroup.{u2} E _inst_1) (SMulZeroClass.toSMul.{u1, u2} ùïú E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u1, u2} ùïú E (CommMonoidWithZero.toZero.{u1} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u1} ùïú (Semifield.toCommGroupWithZero.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{u1, u2} ùïú E (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4))))) ùïú E (SeminormedCommRing.toSeminormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (AddCommGroup.toAddGroup.{u2} E _inst_1) (SMulZeroClass.toSMul.{u1, u2} ùïú E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u1, u2} ùïú E (CommMonoidWithZero.toZero.{u1} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u1} ùïú (Semifield.toCommGroupWithZero.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{u1, u2} ùïú E (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) (Seminorm.instSeminormClass.{u1, u2} ùïú E (SeminormedCommRing.toSeminormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (AddCommGroup.toAddGroup.{u2} E _inst_1) (SMulZeroClass.toSMul.{u1, u2} ùïú E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u1, u2} ùïú E (CommMonoidWithZero.toZero.{u1} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u1} ùïú (Semifield.toCommGroupWithZero.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{u1, u2} ùïú E (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))))))) (gaugeSeminorm.{u1, u2} ùïú E _inst_1 _inst_2 s _inst_3 _inst_4 _inst_5 hs‚ÇÄ hs‚ÇÅ hs‚ÇÇ) x) (OfNat.ofNat.{0} ((fun (a._@.Mathlib.Analysis.Seminorm._hyg.840 : E) => Real) x) 1 (One.toOfNat1.{0} ((fun (a._@.Mathlib.Analysis.Seminorm._hyg.840 : E) => Real) x) Real.instOneReal))))
Case conversion may be inaccurate. Consider using '#align gauge_seminorm_lt_one_of_open gaugeSeminorm_lt_one_of_open‚Çì'. -/
theorem gaugeSeminorm_lt_one_of_open (hs : IsOpen s) {x : E} (hx : x ‚àà s) :
    gaugeSeminorm hs‚ÇÄ hs‚ÇÅ hs‚ÇÇ x < 1 :=
  gauge_lt_one_of_mem_of_open hs‚ÇÅ hs‚ÇÇ.zero_mem hs hx
#align gauge_seminorm_lt_one_of_open gaugeSeminorm_lt_one_of_open

/- warning: gauge_seminorm_ball_one -> gaugeSeminorm_ball_one is a dubious translation:
lean 3 declaration is
  forall {ùïú : Type.{u1}} {E : Type.{u2}} [_inst_1 : AddCommGroup.{u2} E] [_inst_2 : Module.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)] {s : Set.{u2} E} [_inst_3 : IsROrC.{u1} ùïú] [_inst_4 : Module.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)] [_inst_5 : IsScalarTower.{0, u1, u2} Real ùïú E (SMulZeroClass.toHasSmul.{0, u1} Real ùïú (AddZeroClass.toHasZero.{u1} ùïú (AddMonoid.toAddZeroClass.{u1} ùïú (AddCommMonoid.toAddMonoid.{u1} ùïú (AddCommGroup.toAddCommMonoid.{u1} ùïú (SeminormedAddCommGroup.toAddCommGroup.{u1} ùïú (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))))) (SMulWithZero.toSmulZeroClass.{0, u1} Real ùïú (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real (Ring.toSemiring.{0} Real (NormedRing.toRing.{0} Real (NormedCommRing.toNormedRing.{0} Real (NormedField.toNormedCommRing.{0} Real Real.normedField)))))))) (AddZeroClass.toHasZero.{u1} ùïú (AddMonoid.toAddZeroClass.{u1} ùïú (AddCommMonoid.toAddMonoid.{u1} ùïú (AddCommGroup.toAddCommMonoid.{u1} ùïú (SeminormedAddCommGroup.toAddCommGroup.{u1} ùïú (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real ùïú (Semiring.toMonoidWithZero.{0} Real (Ring.toSemiring.{0} Real (NormedRing.toRing.{0} Real (NormedCommRing.toNormedRing.{0} Real (NormedField.toNormedCommRing.{0} Real Real.normedField))))) (AddZeroClass.toHasZero.{u1} ùïú (AddMonoid.toAddZeroClass.{u1} ùïú (AddCommMonoid.toAddMonoid.{u1} ùïú (AddCommGroup.toAddCommMonoid.{u1} ùïú (SeminormedAddCommGroup.toAddCommGroup.{u1} ùïú (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))))) (Module.toMulActionWithZero.{0, u1} Real ùïú (Ring.toSemiring.{0} Real (NormedRing.toRing.{0} Real (NormedCommRing.toNormedRing.{0} Real (NormedField.toNormedCommRing.{0} Real Real.normedField)))) (AddCommGroup.toAddCommMonoid.{u1} ùïú (SeminormedAddCommGroup.toAddCommGroup.{u1} ùïú (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))))) (NormedSpace.toModule.{0, u1} Real ùïú Real.normedField (NonUnitalSeminormedRing.toSeminormedAddCommGroup.{u1} ùïú (NonUnitalNormedRing.toNonUnitalSeminormedRing.{u1} ùïú (NormedRing.toNonUnitalNormedRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NormedAlgebra.toNormedSpace'.{0, u1} Real Real.normedField ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))) (IsROrC.toNormedAlgebra.{u1} ùïú _inst_3))))))) (SMulZeroClass.toHasSmul.{u1, u2} ùïú E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{u1, u2} ùïú E (MulZeroClass.toHasZero.{u1} ùïú (MulZeroOneClass.toMulZeroClass.{u1} ùïú (MonoidWithZero.toMulZeroOneClass.{u1} ùïú (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) (SMulZeroClass.toHasSmul.{0, u2} Real E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u2} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2))))] {hs‚ÇÄ : Balanced.{u1, u2} ùïú E (SeminormedCommRing.toSemiNormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (SMulZeroClass.toHasSmul.{u1, u2} ùïú E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{u1, u2} ùïú E (MulZeroClass.toHasZero.{u1} ùïú (MulZeroOneClass.toMulZeroClass.{u1} ùïú (MonoidWithZero.toMulZeroOneClass.{u1} ùïú (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) s} {hs‚ÇÅ : Convex.{0, u2} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) (SMulZeroClass.toHasSmul.{0, u2} Real E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u2} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2)))) s} {hs‚ÇÇ : Absorbent.{0, u2} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toHasSmul.{0, u2} Real E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u2} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2)))) s} [_inst_6 : TopologicalSpace.{u2} E] [_inst_7 : ContinuousSMul.{0, u2} Real E (SMulZeroClass.toHasSmul.{0, u2} Real E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u2} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2)))) (UniformSpace.toTopologicalSpace.{0} Real (PseudoMetricSpace.toUniformSpace.{0} Real Real.pseudoMetricSpace)) _inst_6], (IsOpen.{u2} E _inst_6 s) -> (Eq.{succ u2} (Set.{u2} E) (Seminorm.ball.{u1, u2} ùïú E (SeminormedCommRing.toSemiNormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) _inst_1 (SMulZeroClass.toHasSmul.{u1, u2} ùïú E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{u1, u2} ùïú E (MulZeroClass.toHasZero.{u1} ùïú (MulZeroOneClass.toMulZeroClass.{u1} ùïú (MonoidWithZero.toMulZeroOneClass.{u1} ùïú (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (AddCommMonoid.toAddMonoid.{u2} E (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)))) (Module.toMulActionWithZero.{u1, u2} ùïú E (Ring.toSemiring.{u1} ùïú (NormedRing.toRing.{u1} ùïú (NormedCommRing.toNormedRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) (gaugeSeminorm.{u1, u2} ùïú E _inst_1 _inst_2 s _inst_3 _inst_4 _inst_5 hs‚ÇÄ hs‚ÇÅ hs‚ÇÇ) (OfNat.ofNat.{u2} E 0 (OfNat.mk.{u2} E 0 (Zero.zero.{u2} E (AddZeroClass.toHasZero.{u2} E (AddMonoid.toAddZeroClass.{u2} E (SubNegMonoid.toAddMonoid.{u2} E (AddGroup.toSubNegMonoid.{u2} E (AddCommGroup.toAddGroup.{u2} E _inst_1)))))))) (OfNat.ofNat.{0} Real 1 (OfNat.mk.{0} Real 1 (One.one.{0} Real Real.hasOne)))) s)
but is expected to have type
  forall {ùïú : Type.{u1}} {E : Type.{u2}} [_inst_1 : AddCommGroup.{u2} E] [_inst_2 : Module.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)] {s : Set.{u2} E} [_inst_3 : IsROrC.{u1} ùïú] [_inst_4 : Module.{u1, u2} ùïú E (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1)] [_inst_5 : IsScalarTower.{0, u1, u2} Real ùïú E (Algebra.toSMul.{0, u1} Real ùïú Real.instCommSemiringReal (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (NormedAlgebra.toAlgebra.{0, u1} Real ùïú Real.normedField (SeminormedCommRing.toSeminormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (IsROrC.toNormedAlgebra.{u1} ùïú _inst_3))) (SMulZeroClass.toSMul.{u1, u2} ùïú E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u1, u2} ùïú E (CommMonoidWithZero.toZero.{u1} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u1} ùïú (Semifield.toCommGroupWithZero.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{u1, u2} ùïú E (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) (SMulZeroClass.toSMul.{0, u2} Real E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u2} Real E Real.instZeroReal (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2))))] {hs‚ÇÄ : Balanced.{u1, u2} ùïú E (SeminormedCommRing.toSeminormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) (SMulZeroClass.toSMul.{u1, u2} ùïú E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u1, u2} ùïú E (CommMonoidWithZero.toZero.{u1} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u1} ùïú (Semifield.toCommGroupWithZero.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{u1, u2} ùïú E (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) s} {hs‚ÇÅ : Convex.{0, u2} Real E Real.orderedSemiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) (SMulZeroClass.toSMul.{0, u2} Real E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u2} Real E Real.instZeroReal (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2)))) s} {hs‚ÇÇ : Absorbent.{0, u2} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (SMulZeroClass.toSMul.{0, u2} Real E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u2} Real E Real.instZeroReal (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2)))) s} [_inst_6 : TopologicalSpace.{u2} E] [_inst_7 : ContinuousSMul.{0, u2} Real E (SMulZeroClass.toSMul.{0, u2} Real E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u2} Real E Real.instZeroReal (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u2} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{0, u2} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_2)))) (UniformSpace.toTopologicalSpace.{0} Real (PseudoMetricSpace.toUniformSpace.{0} Real Real.pseudoMetricSpace)) _inst_6], (IsOpen.{u2} E _inst_6 s) -> (Eq.{succ u2} (Set.{u2} E) (Seminorm.ball.{u1, u2} ùïú E (SeminormedCommRing.toSeminormedRing.{u1} ùïú (NormedCommRing.toSeminormedCommRing.{u1} ùïú (NormedField.toNormedCommRing.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))) _inst_1 (SMulZeroClass.toSMul.{u1, u2} ùïú E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{u1, u2} ùïú E (CommMonoidWithZero.toZero.{u1} ùïú (CommGroupWithZero.toCommMonoidWithZero.{u1} ùïú (Semifield.toCommGroupWithZero.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{u1, u2} ùïú E (Semiring.toMonoidWithZero.{u1} ùïú (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3))))))) (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))) (Module.toMulActionWithZero.{u1, u2} ùïú E (DivisionSemiring.toSemiring.{u1} ùïú (Semifield.toDivisionSemiring.{u1} ùïú (Field.toSemifield.{u1} ùïú (NormedField.toField.{u1} ùïú (DenselyNormedField.toNormedField.{u1} ùïú (IsROrC.toDenselyNormedField.{u1} ùïú _inst_3)))))) (AddCommGroup.toAddCommMonoid.{u2} E _inst_1) _inst_4)))) (gaugeSeminorm.{u1, u2} ùïú E _inst_1 _inst_2 s _inst_3 _inst_4 _inst_5 hs‚ÇÄ hs‚ÇÅ hs‚ÇÇ) (OfNat.ofNat.{u2} E 0 (Zero.toOfNat0.{u2} E (NegZeroClass.toZero.{u2} E (SubNegZeroMonoid.toNegZeroClass.{u2} E (SubtractionMonoid.toSubNegZeroMonoid.{u2} E (SubtractionCommMonoid.toSubtractionMonoid.{u2} E (AddCommGroup.toDivisionAddCommMonoid.{u2} E _inst_1))))))) (OfNat.ofNat.{0} Real 1 (One.toOfNat1.{0} Real Real.instOneReal))) s)
Case conversion may be inaccurate. Consider using '#align gauge_seminorm_ball_one gaugeSeminorm_ball_one‚Çì'. -/
theorem gaugeSeminorm_ball_one (hs : IsOpen s) : (gaugeSeminorm hs‚ÇÄ hs‚ÇÅ hs‚ÇÇ).ball 0 1 = s :=
  by
  rw [Seminorm.ball_zero_eq]
  exact gauge_lt_one_eq_self_of_open hs‚ÇÅ hs‚ÇÇ.zero_mem hs
#align gauge_seminorm_ball_one gaugeSeminorm_ball_one

end IsROrC

/- warning: seminorm.gauge_ball -> Seminorm.gauge_ball is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] (p : Seminorm.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (AddCommGroup.toAddGroup.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))), Eq.{succ u1} (E -> Real) (gauge.{u1} E _inst_1 _inst_2 (Seminorm.ball.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) _inst_1 (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) p (OfNat.ofNat.{u1} E 0 (OfNat.mk.{u1} E 0 (Zero.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))))) (OfNat.ofNat.{0} Real 1 (OfNat.mk.{0} Real 1 (One.one.{0} Real Real.hasOne))))) (coeFn.{succ u1, succ u1} (Seminorm.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (AddCommGroup.toAddGroup.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) (fun (_x : Seminorm.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (AddCommGroup.toAddGroup.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) => E -> Real) (Seminorm.hasCoeToFun.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (AddCommGroup.toAddGroup.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) p)
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] (p : Seminorm.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (AddCommGroup.toAddGroup.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))), Eq.{succ u1} (E -> Real) (gauge.{u1} E _inst_1 _inst_2 (Seminorm.ball.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) _inst_1 (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) p (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))))) (OfNat.ofNat.{0} Real 1 (One.toOfNat1.{0} Real Real.instOneReal)))) (FunLike.coe.{succ u1, succ u1, 1} (Seminorm.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (AddCommGroup.toAddGroup.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) E (fun (_x : E) => (fun (a._@.Mathlib.Analysis.Seminorm._hyg.840 : E) => Real) _x) (SubadditiveHomClass.toFunLike.{u1, u1, 0} (Seminorm.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (AddCommGroup.toAddGroup.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) E Real (AddZeroClass.toAdd.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1))))) (AddZeroClass.toAdd.{0} Real (AddMonoid.toAddZeroClass.{0} Real (AddCommMonoid.toAddMonoid.{0} Real (OrderedAddCommMonoid.toAddCommMonoid.{0} Real Real.orderedAddCommMonoid)))) (Preorder.toLE.{0} Real (PartialOrder.toPreorder.{0} Real (OrderedAddCommMonoid.toPartialOrder.{0} Real Real.orderedAddCommMonoid))) (AddGroupSeminormClass.toAddLEAddHomClass.{u1, u1, 0} (Seminorm.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (AddCommGroup.toAddGroup.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) E Real (AddCommGroup.toAddGroup.{u1} E _inst_1) Real.orderedAddCommMonoid (SeminormClass.toAddGroupSeminormClass.{u1, 0, u1} (Seminorm.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (AddCommGroup.toAddGroup.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (AddCommGroup.toAddGroup.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) (Seminorm.instSeminormClass.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (AddCommGroup.toAddGroup.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))))))) p)
Case conversion may be inaccurate. Consider using '#align seminorm.gauge_ball Seminorm.gauge_ball‚Çì'. -/
/-- Any seminorm arises as the gauge of its unit ball. -/
@[simp]
protected theorem Seminorm.gauge_ball (p : Seminorm ‚Ñù E) : gauge (p.ball 0 1) = p :=
  by
  ext
  obtain hp | hp := { r : ‚Ñù | 0 < r ‚àß x ‚àà r ‚Ä¢ p.ball 0 1 }.eq_empty_or_nonempty
  ¬∑ rw [gauge, hp, Real.inf‚Çõ_empty]
    by_contra
    have hpx : 0 < p x := (map_nonneg _ _).lt_of_ne h
    have hpx‚ÇÇ : 0 < 2 * p x := mul_pos zero_lt_two hpx
    refine' hp.subset ‚ü®hpx‚ÇÇ, (2 * p x)‚Åª¬π ‚Ä¢ x, _, smul_inv_smul‚ÇÄ hpx‚ÇÇ.ne' _‚ü©
    rw [p.mem_ball_zero, map_smul_eq_mul, Real.norm_eq_abs, abs_of_pos (inv_pos.2 hpx‚ÇÇ),
      inv_mul_lt_iff hpx‚ÇÇ, mul_one]
    exact lt_mul_of_one_lt_left hpx one_lt_two
  refine' IsGLB.cinf‚Çõ_eq ‚ü®fun r => _, fun r hr => le_of_forall_pos_le_add fun Œµ hŒµ => _‚ü© hp
  ¬∑ rintro ‚ü®hr, y, hy, rfl‚ü©
    rw [p.mem_ball_zero] at hy
    rw [map_smul_eq_mul, Real.norm_eq_abs, abs_of_pos hr]
    exact mul_le_of_le_one_right hr.le hy.le
  ¬∑ have hpŒµ : 0 < p x + Œµ := by positivity
    refine' hr ‚ü®hpŒµ, (p x + Œµ)‚Åª¬π ‚Ä¢ x, _, smul_inv_smul‚ÇÄ hpŒµ.ne' _‚ü©
    rw [p.mem_ball_zero, map_smul_eq_mul, Real.norm_eq_abs, abs_of_pos (inv_pos.2 hpŒµ),
      inv_mul_lt_iff hpŒµ, mul_one]
    exact lt_add_of_pos_right _ hŒµ
#align seminorm.gauge_ball Seminorm.gauge_ball

/- warning: seminorm.gauge_seminorm_ball -> Seminorm.gaugeSeminorm_ball is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] (p : Seminorm.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (AddCommGroup.toAddGroup.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real Real.semiring)))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real Real.semiring) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))), Eq.{succ u1} (Seminorm.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real (NormedField.toNormedCommRing.{0} Real (DenselyNormedField.toNormedField.{0} Real (IsROrC.toDenselyNormedField.{0} Real Real.isROrC))))) (AddCommGroup.toAddGroup.{u1} E _inst_1) (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real (Ring.toSemiring.{0} Real (NormedRing.toRing.{0} Real (NormedCommRing.toNormedRing.{0} Real (NormedField.toNormedCommRing.{0} Real (DenselyNormedField.toNormedField.{0} Real (IsROrC.toDenselyNormedField.{0} Real Real.isROrC)))))))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real (Ring.toSemiring.{0} Real (NormedRing.toRing.{0} Real (NormedCommRing.toNormedRing.{0} Real (NormedField.toNormedCommRing.{0} Real (DenselyNormedField.toNormedField.{0} Real (IsROrC.toDenselyNormedField.{0} Real Real.isROrC))))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E (Ring.toSemiring.{0} Real (NormedRing.toRing.{0} Real (NormedCommRing.toNormedRing.{0} Real (NormedField.toNormedCommRing.{0} Real (DenselyNormedField.toNormedField.{0} Real (IsROrC.toDenselyNormedField.{0} Real Real.isROrC)))))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) (gaugeSeminorm.{0, u1} Real E _inst_1 _inst_2 (Seminorm.ball.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) _inst_1 (SMulZeroClass.toHasSmul.{0, u1} Real E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (SMulWithZero.toSmulZeroClass.{0, u1} Real E (MulZeroClass.toHasZero.{0} Real (MulZeroOneClass.toMulZeroClass.{0} Real (MonoidWithZero.toMulZeroOneClass.{0} Real (Semiring.toMonoidWithZero.{0} Real (Ring.toSemiring.{0} Real (SeminormedRing.toRing.{0} Real (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)))))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real (Ring.toSemiring.{0} Real (SeminormedRing.toRing.{0} Real (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing))))) (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E (Ring.toSemiring.{0} Real (SeminormedRing.toRing.{0} Real (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) p (OfNat.ofNat.{u1} E 0 (OfNat.mk.{u1} E 0 (Zero.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))))) (OfNat.ofNat.{0} Real 1 (OfNat.mk.{0} Real 1 (One.one.{0} Real Real.hasOne)))) Real.isROrC _inst_2 (IsScalarTower.left.{0, u1} Real E Real.monoid (MulActionWithZero.toMulAction.{0, u1} Real E Real.monoidWithZero (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))) (Seminorm.balanced_ball_zero.{0, u1} Real E (SeminormedCommRing.toSemiNormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) _inst_1 _inst_2 p (OfNat.ofNat.{0} Real 1 (OfNat.mk.{0} Real 1 (One.one.{0} Real Real.hasOne)))) (Seminorm.convex_ball.{0, u1} Real E Real.normedField _inst_1 (NormedField.toNormedSpace.{0} Real Real.normedField) _inst_2 _inst_2 (IsScalarTower.left.{0, u1} Real E Real.monoid (MulActionWithZero.toMulAction.{0, u1} Real E Real.monoidWithZero (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (AddCommMonoid.toAddMonoid.{u1} E (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))) p (OfNat.ofNat.{u1} E 0 (OfNat.mk.{u1} E 0 (Zero.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (AddCommGroup.toAddGroup.{u1} E _inst_1)))))))) (OfNat.ofNat.{0} Real 1 (OfNat.mk.{0} Real 1 (One.one.{0} Real Real.hasOne)))) (Seminorm.absorbent_ball_zero.{0, u1} Real E Real.normedField _inst_1 _inst_2 p (OfNat.ofNat.{0} Real 1 (OfNat.mk.{0} Real 1 (One.one.{0} Real Real.hasOne))) (zero_lt_one.{0} Real Real.hasZero Real.hasOne Real.partialOrder (OrderedSemiring.zeroLEOneClass.{0} Real Real.orderedSemiring) (NeZero.one.{0} Real (NonAssocSemiring.toMulZeroOneClass.{0} Real (NonAssocRing.toNonAssocSemiring.{0} Real (Ring.toNonAssocRing.{0} Real Real.ring))) Real.nontrivial)))) p
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : AddCommGroup.{u1} E] [_inst_2 : Module.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1)] (p : Seminorm.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) (AddCommGroup.toAddGroup.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E Real.instZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))), Eq.{succ u1} (Seminorm.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real (NormedField.toNormedCommRing.{0} Real (DenselyNormedField.toNormedField.{0} Real (IsROrC.toDenselyNormedField.{0} Real Real.isROrC))))) (AddCommGroup.toAddGroup.{u1} E _inst_1) (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E (CommMonoidWithZero.toZero.{0} Real (CommGroupWithZero.toCommMonoidWithZero.{0} Real (Semifield.toCommGroupWithZero.{0} Real (Field.toSemifield.{0} Real (NormedField.toField.{0} Real (DenselyNormedField.toNormedField.{0} Real (IsROrC.toDenselyNormedField.{0} Real Real.isROrC))))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real (DivisionSemiring.toSemiring.{0} Real (Semifield.toDivisionSemiring.{0} Real (Field.toSemifield.{0} Real (NormedField.toField.{0} Real (DenselyNormedField.toNormedField.{0} Real (IsROrC.toDenselyNormedField.{0} Real Real.isROrC))))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E (DivisionSemiring.toSemiring.{0} Real (Semifield.toDivisionSemiring.{0} Real (Field.toSemifield.{0} Real (NormedField.toField.{0} Real (DenselyNormedField.toNormedField.{0} Real (IsROrC.toDenselyNormedField.{0} Real Real.isROrC)))))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))))) (gaugeSeminorm.{0, u1} Real E _inst_1 _inst_2 (Seminorm.ball.{0, u1} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) _inst_1 (SMulZeroClass.toSMul.{0, u1} Real E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (SMulWithZero.toSMulZeroClass.{0, u1} Real E (MonoidWithZero.toZero.{0} Real (Semiring.toMonoidWithZero.{0} Real (Ring.toSemiring.{0} Real (SeminormedRing.toRing.{0} Real (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (MulActionWithZero.toSMulWithZero.{0, u1} Real E (Semiring.toMonoidWithZero.{0} Real (Ring.toSemiring.{0} Real (SeminormedRing.toRing.{0} Real (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing))))) (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E (Ring.toSemiring.{0} Real (SeminormedRing.toRing.{0} Real (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)))) (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2)))) p (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))))) (OfNat.ofNat.{0} Real 1 (One.toOfNat1.{0} Real Real.instOneReal))) Real.isROrC _inst_2 (IsScalarTower.left.{0, u1} Real E (MonoidWithZero.toMonoid.{0} Real (Semiring.toMonoidWithZero.{0} Real (DivisionSemiring.toSemiring.{0} Real (Semifield.toDivisionSemiring.{0} Real (Field.toSemifield.{0} Real (NormedField.toField.{0} Real Real.normedField)))))) (MulActionWithZero.toMulAction.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))) (Seminorm.balanced_ball_zero.{u1, 0} Real E (SeminormedCommRing.toSeminormedRing.{0} Real (NormedCommRing.toSeminormedCommRing.{0} Real Real.normedCommRing)) _inst_1 _inst_2 p (OfNat.ofNat.{0} Real 1 (One.toOfNat1.{0} Real Real.instOneReal))) (Seminorm.convex_ball.{0, u1} Real E Real.normedField _inst_1 (NormedField.toNormedSpace.{0} Real Real.normedField) _inst_2 _inst_2 (IsScalarTower.left.{0, u1} Real E (MonoidWithZero.toMonoid.{0} Real Real.instMonoidWithZeroReal) (MulActionWithZero.toMulAction.{0, u1} Real E Real.instMonoidWithZeroReal (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))) (Module.toMulActionWithZero.{0, u1} Real E Real.semiring (AddCommGroup.toAddCommMonoid.{u1} E _inst_1) _inst_2))) p (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E _inst_1))))))) (OfNat.ofNat.{0} Real 1 (One.toOfNat1.{0} Real Real.instOneReal))) (Seminorm.absorbent_ball_zero.{u1, 0} Real E Real.normedField _inst_1 _inst_2 p (OfNat.ofNat.{0} Real 1 (One.toOfNat1.{0} Real Real.instOneReal)) (zero_lt_one.{0} Real Real.instZeroReal Real.instOneReal Real.partialOrder (OrderedSemiring.zeroLEOneClass.{0} Real Real.orderedSemiring) (NeZero.one.{0} Real (NonAssocSemiring.toMulZeroOneClass.{0} Real (Semiring.toNonAssocSemiring.{0} Real Real.semiring)) Real.nontrivial)))) p
Case conversion may be inaccurate. Consider using '#align seminorm.gauge_seminorm_ball Seminorm.gaugeSeminorm_ball‚Çì'. -/
theorem Seminorm.gaugeSeminorm_ball (p : Seminorm ‚Ñù E) :
    gaugeSeminorm (p.balanced_ball_zero 1) (p.convex_ball 0 1) (p.absorbent_ball_zero zero_lt_one) =
      p :=
  FunLike.coe_injective p.gauge_ball
#align seminorm.gauge_seminorm_ball Seminorm.gaugeSeminorm_ball

end AddCommGroup

section Norm

variable [SeminormedAddCommGroup E] [NormedSpace ‚Ñù E] {s : Set E} {r : ‚Ñù} {x : E}

/- warning: gauge_unit_ball -> gauge_unit_ball is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : SeminormedAddCommGroup.{u1} E] [_inst_2 : NormedSpace.{0, u1} Real E Real.normedField _inst_1] (x : E), Eq.{1} Real (gauge.{u1} E (SeminormedAddCommGroup.toAddCommGroup.{u1} E _inst_1) (NormedSpace.toModule.{0, u1} Real E Real.normedField _inst_1 _inst_2) (Metric.ball.{u1} E (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} E _inst_1) (OfNat.ofNat.{u1} E 0 (OfNat.mk.{u1} E 0 (Zero.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (SeminormedAddGroup.toAddGroup.{u1} E (SeminormedAddCommGroup.toSeminormedAddGroup.{u1} E _inst_1))))))))) (OfNat.ofNat.{0} Real 1 (OfNat.mk.{0} Real 1 (One.one.{0} Real Real.hasOne)))) x) (Norm.norm.{u1} E (SeminormedAddCommGroup.toHasNorm.{u1} E _inst_1) x)
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : SeminormedAddCommGroup.{u1} E] [_inst_2 : NormedSpace.{0, u1} Real E Real.normedField _inst_1] (x : E), Eq.{1} Real (gauge.{u1} E (SeminormedAddCommGroup.toAddCommGroup.{u1} E _inst_1) (NormedSpace.toModule.{0, u1} Real E Real.normedField _inst_1 _inst_2) (Metric.ball.{u1} E (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} E _inst_1) (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E (SeminormedAddCommGroup.toAddCommGroup.{u1} E _inst_1)))))))) (OfNat.ofNat.{0} Real 1 (One.toOfNat1.{0} Real Real.instOneReal))) x) (Norm.norm.{u1} E (SeminormedAddCommGroup.toNorm.{u1} E _inst_1) x)
Case conversion may be inaccurate. Consider using '#align gauge_unit_ball gauge_unit_ball‚Çì'. -/
theorem gauge_unit_ball (x : E) : gauge (Metric.ball (0 : E) 1) x = ‚Äñx‚Äñ :=
  by
  obtain rfl | hx := eq_or_ne x 0
  ¬∑ rw [norm_zero, gauge_zero]
  refine' (le_of_forall_pos_le_add fun Œµ hŒµ => _).antisymm _
  ¬∑ have : 0 < ‚Äñx‚Äñ + Œµ := by positivity
    refine' gauge_le_of_mem this.le _
    rw [smul_ball this.ne', smul_zero, Real.norm_of_nonneg this.le, mul_one, mem_ball_zero_iff]
    exact lt_add_of_pos_right _ hŒµ
  refine'
    le_gauge_of_not_mem balanced_ball_zero.star_convex (absorbent_ball_zero zero_lt_one).Absorbs
      fun h => _
  obtain hx' | hx' := eq_or_ne ‚Äñx‚Äñ 0
  ¬∑ rw [hx'] at h
    exact hx (zero_smul_set_subset _ h)
  ¬∑ rw [mem_smul_set_iff_inv_smul_mem‚ÇÄ hx', mem_ball_zero_iff, norm_smul, norm_inv, norm_norm,
      inv_mul_cancel hx'] at h
    exact lt_irrefl _ h
#align gauge_unit_ball gauge_unit_ball

/- warning: gauge_ball -> gauge_ball is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : SeminormedAddCommGroup.{u1} E] [_inst_2 : NormedSpace.{0, u1} Real E Real.normedField _inst_1] {r : Real}, (LT.lt.{0} Real Real.hasLt (OfNat.ofNat.{0} Real 0 (OfNat.mk.{0} Real 0 (Zero.zero.{0} Real Real.hasZero))) r) -> (forall (x : E), Eq.{1} Real (gauge.{u1} E (SeminormedAddCommGroup.toAddCommGroup.{u1} E _inst_1) (NormedSpace.toModule.{0, u1} Real E Real.normedField _inst_1 _inst_2) (Metric.ball.{u1} E (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} E _inst_1) (OfNat.ofNat.{u1} E 0 (OfNat.mk.{u1} E 0 (Zero.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (SeminormedAddGroup.toAddGroup.{u1} E (SeminormedAddCommGroup.toSeminormedAddGroup.{u1} E _inst_1))))))))) r) x) (HDiv.hDiv.{0, 0, 0} Real Real Real (instHDiv.{0} Real (DivInvMonoid.toHasDiv.{0} Real (DivisionRing.toDivInvMonoid.{0} Real Real.divisionRing))) (Norm.norm.{u1} E (SeminormedAddCommGroup.toHasNorm.{u1} E _inst_1) x) r))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : SeminormedAddCommGroup.{u1} E] [_inst_2 : NormedSpace.{0, u1} Real E Real.normedField _inst_1] {r : Real}, (LT.lt.{0} Real Real.instLTReal (OfNat.ofNat.{0} Real 0 (Zero.toOfNat0.{0} Real Real.instZeroReal)) r) -> (forall (x : E), Eq.{1} Real (gauge.{u1} E (SeminormedAddCommGroup.toAddCommGroup.{u1} E _inst_1) (NormedSpace.toModule.{0, u1} Real E Real.normedField _inst_1 _inst_2) (Metric.ball.{u1} E (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} E _inst_1) (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E (SeminormedAddCommGroup.toAddCommGroup.{u1} E _inst_1)))))))) r) x) (HDiv.hDiv.{0, 0, 0} Real Real Real (instHDiv.{0} Real (LinearOrderedField.toDiv.{0} Real Real.instLinearOrderedFieldReal)) (Norm.norm.{u1} E (SeminormedAddCommGroup.toNorm.{u1} E _inst_1) x) r))
Case conversion may be inaccurate. Consider using '#align gauge_ball gauge_ball‚Çì'. -/
theorem gauge_ball (hr : 0 < r) (x : E) : gauge (Metric.ball (0 : E) r) x = ‚Äñx‚Äñ / r :=
  by
  rw [‚Üê smul_unitBall_of_pos hr, gauge_smul_left, Pi.smul_apply, gauge_unit_ball, smul_eq_mul,
    abs_of_nonneg hr.le, div_eq_inv_mul]
  simp_rw [mem_ball_zero_iff, norm_neg]
  exact fun _ => id
#align gauge_ball gauge_ball

/- warning: mul_gauge_le_norm -> mul_gauge_le_norm is a dubious translation:
lean 3 declaration is
  forall {E : Type.{u1}} [_inst_1 : SeminormedAddCommGroup.{u1} E] [_inst_2 : NormedSpace.{0, u1} Real E Real.normedField _inst_1] {s : Set.{u1} E} {r : Real} {x : E}, (HasSubset.Subset.{u1} (Set.{u1} E) (Set.hasSubset.{u1} E) (Metric.ball.{u1} E (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} E _inst_1) (OfNat.ofNat.{u1} E 0 (OfNat.mk.{u1} E 0 (Zero.zero.{u1} E (AddZeroClass.toHasZero.{u1} E (AddMonoid.toAddZeroClass.{u1} E (SubNegMonoid.toAddMonoid.{u1} E (AddGroup.toSubNegMonoid.{u1} E (SeminormedAddGroup.toAddGroup.{u1} E (SeminormedAddCommGroup.toSeminormedAddGroup.{u1} E _inst_1))))))))) r) s) -> (LE.le.{0} Real Real.hasLe (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.hasMul) r (gauge.{u1} E (SeminormedAddCommGroup.toAddCommGroup.{u1} E _inst_1) (NormedSpace.toModule.{0, u1} Real E Real.normedField _inst_1 _inst_2) s x)) (Norm.norm.{u1} E (SeminormedAddCommGroup.toHasNorm.{u1} E _inst_1) x))
but is expected to have type
  forall {E : Type.{u1}} [_inst_1 : SeminormedAddCommGroup.{u1} E] [_inst_2 : NormedSpace.{0, u1} Real E Real.normedField _inst_1] {s : Set.{u1} E} {r : Real} {x : E}, (HasSubset.Subset.{u1} (Set.{u1} E) (Set.instHasSubsetSet.{u1} E) (Metric.ball.{u1} E (SeminormedAddCommGroup.toPseudoMetricSpace.{u1} E _inst_1) (OfNat.ofNat.{u1} E 0 (Zero.toOfNat0.{u1} E (NegZeroClass.toZero.{u1} E (SubNegZeroMonoid.toNegZeroClass.{u1} E (SubtractionMonoid.toSubNegZeroMonoid.{u1} E (SubtractionCommMonoid.toSubtractionMonoid.{u1} E (AddCommGroup.toDivisionAddCommMonoid.{u1} E (SeminormedAddCommGroup.toAddCommGroup.{u1} E _inst_1)))))))) r) s) -> (LE.le.{0} Real Real.instLEReal (HMul.hMul.{0, 0, 0} Real Real Real (instHMul.{0} Real Real.instMulReal) r (gauge.{u1} E (SeminormedAddCommGroup.toAddCommGroup.{u1} E _inst_1) (NormedSpace.toModule.{0, u1} Real E Real.normedField _inst_1 _inst_2) s x)) (Norm.norm.{u1} E (SeminormedAddCommGroup.toNorm.{u1} E _inst_1) x))
Case conversion may be inaccurate. Consider using '#align mul_gauge_le_norm mul_gauge_le_norm‚Çì'. -/
theorem mul_gauge_le_norm (hs : Metric.ball (0 : E) r ‚äÜ s) : r * gauge s x ‚â§ ‚Äñx‚Äñ :=
  by
  obtain hr | hr := le_or_lt r 0
  ¬∑ exact (mul_nonpos_of_nonpos_of_nonneg hr <| gauge_nonneg _).trans (norm_nonneg _)
  rw [mul_comm, ‚Üê le_div_iff hr, ‚Üê gauge_ball hr]
  exact gauge_mono (absorbent_ball_zero hr) hs x
#align mul_gauge_le_norm mul_gauge_le_norm

end Norm

